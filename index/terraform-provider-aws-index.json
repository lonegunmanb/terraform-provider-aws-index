{
  "version": "v6.19.0",
  "services": [
    {
      "service_name": "account",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/account",
      "aws_sdk_resources": {
        "aws_account_alternate_contact": {
          "terraform_type": "aws_account_alternate_contact",
          "factory_function": "resourceAccountAlternateContact",
          "name": "Alternate Contact",
          "sdk_type": "sdk"
        },
        "aws_account_primary_contact": {
          "terraform_type": "aws_account_primary_contact",
          "factory_function": "resourceAccountPrimaryContact",
          "name": "Primary Contact",
          "sdk_type": "sdk"
        },
        "aws_account_region": {
          "terraform_type": "aws_account_region",
          "factory_function": "resourceAccountRegion",
          "name": "Region",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {
        "aws_account_primary_contact": {
          "terraform_type": "aws_account_primary_contact",
          "factory_function": "newAccountPrimaryContactDataSource",
          "name": "Primary Contact",
          "sdk_type": "framework",
          "struct_type": "primaryContactDataSOurce"
        }
      },
      "aws_ephemeral_resources": {},
      "data_source_terraform_types": {
        "primaryContactDataSOurce": "aws_account_primary_contact"
      },
      "resource_crud_methods": {
        "aws_account_alternate_contact": {
          "create_method": "resourceAlternateContactCreate",
          "read_method": "resourceAlternateContactRead",
          "update_method": "resourceAlternateContactUpdate",
          "delete_method": "resourceAlternateContactDelete"
        },
        "aws_account_primary_contact": {
          "create_method": "resourcePrimaryContactPut",
          "read_method": "resourcePrimaryContactRead",
          "update_method": "resourcePrimaryContactPut"
        },
        "aws_account_region": {
          "create_method": "resourceRegionUpdate",
          "read_method": "resourceRegionRead",
          "update_method": "resourceRegionUpdate"
        }
      }
    },
    {
      "service_name": "acmpca",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/acmpca",
      "aws_sdk_resources": {
        "aws_acmpca_certificate": {
          "terraform_type": "aws_acmpca_certificate",
          "factory_function": "resourceAcmpcaCertificate",
          "name": "Certificate",
          "sdk_type": "sdk"
        },
        "aws_acmpca_certificate_authority": {
          "terraform_type": "aws_acmpca_certificate_authority",
          "factory_function": "resourceAcmpcaCertificateAuthority",
          "name": "Certificate Authority",
          "sdk_type": "sdk"
        },
        "aws_acmpca_certificate_authority_certificate": {
          "terraform_type": "aws_acmpca_certificate_authority_certificate",
          "factory_function": "resourceAcmpcaCertificateAuthorityCertificate",
          "name": "Certificate Authority Certificate",
          "sdk_type": "sdk"
        },
        "aws_acmpca_permission": {
          "terraform_type": "aws_acmpca_permission",
          "factory_function": "resourceAcmpcaPermission",
          "name": "Permission",
          "sdk_type": "sdk"
        },
        "aws_acmpca_policy": {
          "terraform_type": "aws_acmpca_policy",
          "factory_function": "resourceAcmpcaPolicy",
          "name": "Policy",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_acmpca_certificate": {
          "terraform_type": "aws_acmpca_certificate",
          "factory_function": "dataSourceAcmpcaCertificate",
          "name": "Certificate",
          "sdk_type": "sdk"
        },
        "aws_acmpca_certificate_authority": {
          "terraform_type": "aws_acmpca_certificate_authority",
          "factory_function": "dataSourceAcmpcaCertificateAuthority",
          "name": "Certificate Authority",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_acmpca_certificate": {
          "create_method": "resourceCertificateCreate",
          "read_method": "resourceCertificateRead",
          "delete_method": "resourceCertificateRevoke"
        },
        "aws_acmpca_certificate_authority": {
          "create_method": "resourceCertificateAuthorityCreate",
          "read_method": "resourceCertificateAuthorityRead",
          "update_method": "resourceCertificateAuthorityUpdate",
          "delete_method": "resourceCertificateAuthorityDelete"
        },
        "aws_acmpca_certificate_authority_certificate": {
          "create_method": "resourceCertificateAuthorityCertificateCreate",
          "read_method": "resourceCertificateAuthorityCertificateRead"
        },
        "aws_acmpca_permission": {
          "create_method": "resourcePermissionCreate",
          "read_method": "resourcePermissionRead",
          "delete_method": "resourcePermissionDelete"
        },
        "aws_acmpca_policy": {
          "create_method": "resourcePolicyPut",
          "read_method": "resourcePolicyRead",
          "update_method": "resourcePolicyPut",
          "delete_method": "resourcePolicyDelete"
        }
      },
      "data_source_methods": {
        "aws_acmpca_certificate": {
          "read_method": "dataSourceCertificateRead"
        },
        "aws_acmpca_certificate_authority": {
          "read_method": "dataSourceCertificateAuthorityRead"
        }
      }
    },
    {
      "service_name": "accessanalyzer",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/accessanalyzer",
      "aws_sdk_resources": {
        "aws_accessanalyzer_analyzer": {
          "terraform_type": "aws_accessanalyzer_analyzer",
          "factory_function": "resourceAccessanalyzerAnalyzer",
          "name": "Analyzer",
          "sdk_type": "sdk"
        },
        "aws_accessanalyzer_archive_rule": {
          "terraform_type": "aws_accessanalyzer_archive_rule",
          "factory_function": "resourceAccessanalyzerArchiveRule",
          "name": "Archive Rule",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_accessanalyzer_analyzer": {
          "create_method": "resourceAnalyzerCreate",
          "read_method": "resourceAnalyzerRead",
          "update_method": "resourceAnalyzerUpdate",
          "delete_method": "resourceAnalyzerDelete"
        },
        "aws_accessanalyzer_archive_rule": {
          "create_method": "resourceArchiveRuleCreate",
          "read_method": "resourceArchiveRuleRead",
          "update_method": "resourceArchiveRuleUpdate",
          "delete_method": "resourceArchiveRuleDelete"
        }
      }
    },
    {
      "service_name": "acm",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/acm",
      "aws_sdk_resources": {
        "aws_acm_certificate": {
          "terraform_type": "aws_acm_certificate",
          "factory_function": "resourceAcmCertificate",
          "name": "Certificate",
          "sdk_type": "sdk"
        },
        "aws_acm_certificate_validation": {
          "terraform_type": "aws_acm_certificate_validation",
          "factory_function": "resourceAcmCertificateValidation",
          "name": "Certificate Validation",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_acm_certificate": {
          "terraform_type": "aws_acm_certificate",
          "factory_function": "dataSourceAcmCertificate",
          "name": "Certificate",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_acm_certificate": {
          "create_method": "resourceCertificateCreate",
          "read_method": "resourceCertificateRead",
          "update_method": "resourceCertificateUpdate",
          "delete_method": "resourceCertificateDelete"
        },
        "aws_acm_certificate_validation": {
          "create_method": "resourceCertificateValidationCreate",
          "read_method": "resourceCertificateValidationRead"
        }
      },
      "data_source_methods": {
        "aws_acm_certificate": {
          "read_method": "dataSourceCertificateRead"
        }
      }
    },
    {
      "service_name": "amplify",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/amplify",
      "aws_sdk_resources": {
        "aws_amplify_app": {
          "terraform_type": "aws_amplify_app",
          "factory_function": "resourceAmplifyApp",
          "name": "App",
          "sdk_type": "sdk"
        },
        "aws_amplify_backend_environment": {
          "terraform_type": "aws_amplify_backend_environment",
          "factory_function": "resourceAmplifyBackendEnvironment",
          "name": "Backend Environment",
          "sdk_type": "sdk"
        },
        "aws_amplify_branch": {
          "terraform_type": "aws_amplify_branch",
          "factory_function": "resourceAmplifyBranch",
          "name": "Branch",
          "sdk_type": "sdk"
        },
        "aws_amplify_domain_association": {
          "terraform_type": "aws_amplify_domain_association",
          "factory_function": "resourceAmplifyDomainAssociation",
          "name": "Domain Association",
          "sdk_type": "sdk"
        },
        "aws_amplify_webhook": {
          "terraform_type": "aws_amplify_webhook",
          "factory_function": "resourceAmplifyWebhook",
          "name": "Webhook",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_amplify_app": {
          "create_method": "resourceAppCreate",
          "read_method": "resourceAppRead",
          "update_method": "resourceAppUpdate",
          "delete_method": "resourceAppDelete"
        },
        "aws_amplify_backend_environment": {
          "create_method": "resourceBackendEnvironmentCreate",
          "read_method": "resourceBackendEnvironmentRead",
          "delete_method": "resourceBackendEnvironmentDelete"
        },
        "aws_amplify_branch": {
          "create_method": "resourceBranchCreate",
          "read_method": "resourceBranchRead",
          "update_method": "resourceBranchUpdate",
          "delete_method": "resourceBranchDelete"
        },
        "aws_amplify_domain_association": {
          "create_method": "resourceDomainAssociationCreate",
          "read_method": "resourceDomainAssociationRead",
          "update_method": "resourceDomainAssociationUpdate",
          "delete_method": "resourceDomainAssociationDelete"
        },
        "aws_amplify_webhook": {
          "create_method": "resourceWebhookCreate",
          "read_method": "resourceWebhookRead",
          "update_method": "resourceWebhookUpdate",
          "delete_method": "resourceWebhookDelete"
        }
      }
    },
    {
      "service_name": "amp",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/amp",
      "aws_sdk_resources": {
        "aws_prometheus_alert_manager_definition": {
          "terraform_type": "aws_prometheus_alert_manager_definition",
          "factory_function": "resourcePrometheusAlertManagerDefinition",
          "name": "Alert Manager Definition",
          "sdk_type": "sdk"
        },
        "aws_prometheus_rule_group_namespace": {
          "terraform_type": "aws_prometheus_rule_group_namespace",
          "factory_function": "resourcePrometheusRuleGroupNamespace",
          "name": "Rule Group Namespace",
          "sdk_type": "sdk"
        },
        "aws_prometheus_workspace": {
          "terraform_type": "aws_prometheus_workspace",
          "factory_function": "resourcePrometheusWorkspace",
          "name": "Workspace",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_prometheus_workspace": {
          "terraform_type": "aws_prometheus_workspace",
          "factory_function": "dataSourcePrometheusWorkspace",
          "name": "Workspace",
          "sdk_type": "sdk"
        },
        "aws_prometheus_workspaces": {
          "terraform_type": "aws_prometheus_workspaces",
          "factory_function": "dataSourcePrometheusWorkspaces",
          "name": "Workspaces",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_prometheus_query_logging_configuration": {
          "terraform_type": "aws_prometheus_query_logging_configuration",
          "factory_function": "newPrometheusQueryLoggingConfigurationResource",
          "name": "QueryLoggingConfiguration",
          "sdk_type": "framework",
          "struct_type": "queryLoggingConfigurationResource"
        },
        "aws_prometheus_resource_policy": {
          "terraform_type": "aws_prometheus_resource_policy",
          "factory_function": "newPrometheusResourcePolicyResource",
          "name": "Resource Policy",
          "sdk_type": "framework",
          "struct_type": "resourcePolicyResource"
        },
        "aws_prometheus_scraper": {
          "terraform_type": "aws_prometheus_scraper",
          "factory_function": "newPrometheusScraperResource",
          "name": "Scraper",
          "sdk_type": "framework",
          "struct_type": "scraperResource"
        },
        "aws_prometheus_workspace_configuration": {
          "terraform_type": "aws_prometheus_workspace_configuration",
          "factory_function": "newPrometheusWorkspaceConfigurationResource",
          "name": "WorkspaceConfiguration",
          "sdk_type": "framework",
          "struct_type": "workspaceConfigurationResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "queryLoggingConfigurationResource": "aws_prometheus_query_logging_configuration",
        "resourcePolicyResource": "aws_prometheus_resource_policy",
        "scraperResource": "aws_prometheus_scraper",
        "workspaceConfigurationResource": "aws_prometheus_workspace_configuration"
      },
      "resource_crud_methods": {
        "aws_prometheus_alert_manager_definition": {
          "create_method": "resourceAlertManagerDefinitionCreate",
          "read_method": "resourceAlertManagerDefinitionRead",
          "update_method": "resourceAlertManagerDefinitionUpdate",
          "delete_method": "resourceAlertManagerDefinitionDelete"
        },
        "aws_prometheus_rule_group_namespace": {
          "create_method": "resourceRuleGroupNamespaceCreate",
          "read_method": "resourceRuleGroupNamespaceRead",
          "update_method": "resourceRuleGroupNamespaceUpdate",
          "delete_method": "resourceRuleGroupNamespaceDelete"
        },
        "aws_prometheus_workspace": {
          "create_method": "resourceWorkspaceCreate",
          "read_method": "resourceWorkspaceRead",
          "update_method": "resourceWorkspaceUpdate",
          "delete_method": "resourceWorkspaceDelete"
        }
      },
      "data_source_methods": {
        "aws_prometheus_workspace": {
          "read_method": "dataSourceWorkspaceRead"
        },
        "aws_prometheus_workspaces": {
          "read_method": "dataSourceWorkspacesRead"
        }
      }
    },
    {
      "service_name": "apigatewayv2",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/apigatewayv2",
      "aws_sdk_resources": {
        "aws_apigatewayv2_api": {
          "terraform_type": "aws_apigatewayv2_api",
          "factory_function": "resourceApigatewayv2Api",
          "name": "API",
          "sdk_type": "sdk"
        },
        "aws_apigatewayv2_api_mapping": {
          "terraform_type": "aws_apigatewayv2_api_mapping",
          "factory_function": "resourceApigatewayv2ApiMapping",
          "name": "API Mapping",
          "sdk_type": "sdk"
        },
        "aws_apigatewayv2_authorizer": {
          "terraform_type": "aws_apigatewayv2_authorizer",
          "factory_function": "resourceApigatewayv2Authorizer",
          "name": "Authorizer",
          "sdk_type": "sdk"
        },
        "aws_apigatewayv2_deployment": {
          "terraform_type": "aws_apigatewayv2_deployment",
          "factory_function": "resourceApigatewayv2Deployment",
          "name": "Deployment",
          "sdk_type": "sdk"
        },
        "aws_apigatewayv2_domain_name": {
          "terraform_type": "aws_apigatewayv2_domain_name",
          "factory_function": "resourceApigatewayv2DomainName",
          "name": "Domain Name",
          "sdk_type": "sdk"
        },
        "aws_apigatewayv2_integration": {
          "terraform_type": "aws_apigatewayv2_integration",
          "factory_function": "resourceApigatewayv2Integration",
          "name": "Integration",
          "sdk_type": "sdk"
        },
        "aws_apigatewayv2_integration_response": {
          "terraform_type": "aws_apigatewayv2_integration_response",
          "factory_function": "resourceApigatewayv2IntegrationResponse",
          "name": "Integration Response",
          "sdk_type": "sdk"
        },
        "aws_apigatewayv2_model": {
          "terraform_type": "aws_apigatewayv2_model",
          "factory_function": "resourceApigatewayv2Model",
          "name": "Model",
          "sdk_type": "sdk"
        },
        "aws_apigatewayv2_route": {
          "terraform_type": "aws_apigatewayv2_route",
          "factory_function": "resourceApigatewayv2Route",
          "name": "Route",
          "sdk_type": "sdk"
        },
        "aws_apigatewayv2_route_response": {
          "terraform_type": "aws_apigatewayv2_route_response",
          "factory_function": "resourceApigatewayv2RouteResponse",
          "name": "Route Response",
          "sdk_type": "sdk"
        },
        "aws_apigatewayv2_stage": {
          "terraform_type": "aws_apigatewayv2_stage",
          "factory_function": "resourceApigatewayv2Stage",
          "name": "Stage",
          "sdk_type": "sdk"
        },
        "aws_apigatewayv2_vpc_link": {
          "terraform_type": "aws_apigatewayv2_vpc_link",
          "factory_function": "resourceApigatewayv2VpcLink",
          "name": "VPC Link",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_apigatewayv2_api": {
          "terraform_type": "aws_apigatewayv2_api",
          "factory_function": "dataSourceApigatewayv2Api",
          "name": "API",
          "sdk_type": "sdk"
        },
        "aws_apigatewayv2_apis": {
          "terraform_type": "aws_apigatewayv2_apis",
          "factory_function": "dataSourceApigatewayv2Apis",
          "name": "APIs",
          "sdk_type": "sdk"
        },
        "aws_apigatewayv2_export": {
          "terraform_type": "aws_apigatewayv2_export",
          "factory_function": "dataSourceApigatewayv2Export",
          "name": "Export",
          "sdk_type": "sdk"
        },
        "aws_apigatewayv2_vpc_link": {
          "terraform_type": "aws_apigatewayv2_vpc_link",
          "factory_function": "dataSourceApigatewayv2VpcLink",
          "name": "VPC Link",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_apigatewayv2_api": {
          "create_method": "resourceAPICreate",
          "read_method": "resourceAPIRead",
          "update_method": "resourceAPIUpdate",
          "delete_method": "resourceAPIDelete"
        },
        "aws_apigatewayv2_api_mapping": {
          "create_method": "resourceAPIMappingCreate",
          "read_method": "resourceAPIMappingRead",
          "update_method": "resourceAPIMappingUpdate",
          "delete_method": "resourceAPIMappingDelete"
        },
        "aws_apigatewayv2_authorizer": {
          "create_method": "resourceAuthorizerCreate",
          "read_method": "resourceAuthorizerRead",
          "update_method": "resourceAuthorizerUpdate",
          "delete_method": "resourceAuthorizerDelete"
        },
        "aws_apigatewayv2_deployment": {
          "create_method": "resourceDeploymentCreate",
          "read_method": "resourceDeploymentRead",
          "update_method": "resourceDeploymentUpdate",
          "delete_method": "resourceDeploymentDelete"
        },
        "aws_apigatewayv2_domain_name": {
          "create_method": "resourceDomainNameCreate",
          "read_method": "resourceDomainNameRead",
          "update_method": "resourceDomainNameUpdate",
          "delete_method": "resourceDomainNameDelete"
        },
        "aws_apigatewayv2_integration": {
          "create_method": "resourceIntegrationCreate",
          "read_method": "resourceIntegrationRead",
          "update_method": "resourceIntegrationUpdate",
          "delete_method": "resourceIntegrationDelete"
        },
        "aws_apigatewayv2_integration_response": {
          "create_method": "resourceIntegrationResponseCreate",
          "read_method": "resourceIntegrationResponseRead",
          "update_method": "resourceIntegrationResponseUpdate",
          "delete_method": "resourceIntegrationResponseDelete"
        },
        "aws_apigatewayv2_model": {
          "create_method": "resourceModelCreate",
          "read_method": "resourceModelRead",
          "update_method": "resourceModelUpdate",
          "delete_method": "resourceModelDelete"
        },
        "aws_apigatewayv2_route": {
          "create_method": "resourceRouteCreate",
          "read_method": "resourceRouteRead",
          "update_method": "resourceRouteUpdate",
          "delete_method": "resourceRouteDelete"
        },
        "aws_apigatewayv2_route_response": {
          "create_method": "resourceRouteResponseCreate",
          "read_method": "resourceRouteResponseRead",
          "update_method": "resourceRouteResponseUpdate",
          "delete_method": "resourceRouteResponseDelete"
        },
        "aws_apigatewayv2_stage": {
          "create_method": "resourceStageCreate",
          "read_method": "resourceStageRead",
          "update_method": "resourceStageUpdate",
          "delete_method": "resourceStageDelete"
        },
        "aws_apigatewayv2_vpc_link": {
          "create_method": "resourceVPCLinkCreate",
          "read_method": "resourceVPCLinkRead",
          "update_method": "resourceVPCLinkUpdate",
          "delete_method": "resourceVPCLinkDelete"
        }
      },
      "data_source_methods": {
        "aws_apigatewayv2_api": {
          "read_method": "dataSourceAPIRead"
        },
        "aws_apigatewayv2_apis": {
          "read_method": "dataSourceAPIsRead"
        },
        "aws_apigatewayv2_export": {
          "read_method": "dataSourceExportRead"
        },
        "aws_apigatewayv2_vpc_link": {
          "read_method": "dataSourceVPCLinkRead"
        }
      }
    },
    {
      "service_name": "apigateway",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/apigateway",
      "aws_sdk_resources": {
        "aws_api_gateway_api_key": {
          "terraform_type": "aws_api_gateway_api_key",
          "factory_function": "resourceApiGatewayApiKey",
          "name": "API Key",
          "sdk_type": "sdk"
        },
        "aws_api_gateway_authorizer": {
          "terraform_type": "aws_api_gateway_authorizer",
          "factory_function": "resourceApiGatewayAuthorizer",
          "name": "Authorizer",
          "sdk_type": "sdk"
        },
        "aws_api_gateway_base_path_mapping": {
          "terraform_type": "aws_api_gateway_base_path_mapping",
          "factory_function": "resourceApiGatewayBasePathMapping",
          "name": "Base Path Mapping",
          "sdk_type": "sdk"
        },
        "aws_api_gateway_client_certificate": {
          "terraform_type": "aws_api_gateway_client_certificate",
          "factory_function": "resourceApiGatewayClientCertificate",
          "name": "Client Certificate",
          "sdk_type": "sdk"
        },
        "aws_api_gateway_deployment": {
          "terraform_type": "aws_api_gateway_deployment",
          "factory_function": "resourceApiGatewayDeployment",
          "name": "Deployment",
          "sdk_type": "sdk"
        },
        "aws_api_gateway_documentation_part": {
          "terraform_type": "aws_api_gateway_documentation_part",
          "factory_function": "resourceApiGatewayDocumentationPart",
          "name": "Documentation Part",
          "sdk_type": "sdk"
        },
        "aws_api_gateway_documentation_version": {
          "terraform_type": "aws_api_gateway_documentation_version",
          "factory_function": "resourceApiGatewayDocumentationVersion",
          "name": "Documentation Version",
          "sdk_type": "sdk"
        },
        "aws_api_gateway_domain_name": {
          "terraform_type": "aws_api_gateway_domain_name",
          "factory_function": "resourceApiGatewayDomainName",
          "name": "Domain Name",
          "sdk_type": "sdk"
        },
        "aws_api_gateway_gateway_response": {
          "terraform_type": "aws_api_gateway_gateway_response",
          "factory_function": "resourceApiGatewayGatewayResponse",
          "name": "Gateway Response",
          "sdk_type": "sdk"
        },
        "aws_api_gateway_integration": {
          "terraform_type": "aws_api_gateway_integration",
          "factory_function": "resourceApiGatewayIntegration",
          "name": "Integration",
          "sdk_type": "sdk"
        },
        "aws_api_gateway_integration_response": {
          "terraform_type": "aws_api_gateway_integration_response",
          "factory_function": "resourceApiGatewayIntegrationResponse",
          "name": "Integration Response",
          "sdk_type": "sdk"
        },
        "aws_api_gateway_method": {
          "terraform_type": "aws_api_gateway_method",
          "factory_function": "resourceApiGatewayMethod",
          "name": "Method",
          "sdk_type": "sdk"
        },
        "aws_api_gateway_method_response": {
          "terraform_type": "aws_api_gateway_method_response",
          "factory_function": "resourceApiGatewayMethodResponse",
          "name": "Method Response",
          "sdk_type": "sdk"
        },
        "aws_api_gateway_method_settings": {
          "terraform_type": "aws_api_gateway_method_settings",
          "factory_function": "resourceApiGatewayMethodSettings",
          "name": "Method Settings",
          "sdk_type": "sdk"
        },
        "aws_api_gateway_model": {
          "terraform_type": "aws_api_gateway_model",
          "factory_function": "resourceApiGatewayModel",
          "name": "Model",
          "sdk_type": "sdk"
        },
        "aws_api_gateway_request_validator": {
          "terraform_type": "aws_api_gateway_request_validator",
          "factory_function": "resourceApiGatewayRequestValidator",
          "name": "Request Validator",
          "sdk_type": "sdk"
        },
        "aws_api_gateway_resource": {
          "terraform_type": "aws_api_gateway_resource",
          "factory_function": "resourceApiGatewayResource",
          "name": "Resource",
          "sdk_type": "sdk"
        },
        "aws_api_gateway_rest_api": {
          "terraform_type": "aws_api_gateway_rest_api",
          "factory_function": "resourceApiGatewayRestApi",
          "name": "REST API",
          "sdk_type": "sdk"
        },
        "aws_api_gateway_rest_api_policy": {
          "terraform_type": "aws_api_gateway_rest_api_policy",
          "factory_function": "resourceApiGatewayRestApiPolicy",
          "name": "REST API Policy",
          "sdk_type": "sdk"
        },
        "aws_api_gateway_stage": {
          "terraform_type": "aws_api_gateway_stage",
          "factory_function": "resourceApiGatewayStage",
          "name": "Stage",
          "sdk_type": "sdk"
        },
        "aws_api_gateway_usage_plan": {
          "terraform_type": "aws_api_gateway_usage_plan",
          "factory_function": "resourceApiGatewayUsagePlan",
          "name": "Usage Plan",
          "sdk_type": "sdk"
        },
        "aws_api_gateway_usage_plan_key": {
          "terraform_type": "aws_api_gateway_usage_plan_key",
          "factory_function": "resourceApiGatewayUsagePlanKey",
          "name": "Usage Plan Key",
          "sdk_type": "sdk"
        },
        "aws_api_gateway_vpc_link": {
          "terraform_type": "aws_api_gateway_vpc_link",
          "factory_function": "resourceApiGatewayVpcLink",
          "name": "VPC Link",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_api_gateway_api_key": {
          "terraform_type": "aws_api_gateway_api_key",
          "factory_function": "dataSourceApiGatewayApiKey",
          "name": "API Key",
          "sdk_type": "sdk"
        },
        "aws_api_gateway_authorizer": {
          "terraform_type": "aws_api_gateway_authorizer",
          "factory_function": "dataSourceApiGatewayAuthorizer",
          "name": "Authorizer",
          "sdk_type": "sdk"
        },
        "aws_api_gateway_authorizers": {
          "terraform_type": "aws_api_gateway_authorizers",
          "factory_function": "dataSourceApiGatewayAuthorizers",
          "name": "Authorizers",
          "sdk_type": "sdk"
        },
        "aws_api_gateway_domain_name": {
          "terraform_type": "aws_api_gateway_domain_name",
          "factory_function": "dataSourceApiGatewayDomainName",
          "name": "Domain Name",
          "sdk_type": "sdk"
        },
        "aws_api_gateway_export": {
          "terraform_type": "aws_api_gateway_export",
          "factory_function": "dataSourceApiGatewayExport",
          "name": "Export",
          "sdk_type": "sdk"
        },
        "aws_api_gateway_resource": {
          "terraform_type": "aws_api_gateway_resource",
          "factory_function": "dataSourceApiGatewayResource",
          "name": "Resource",
          "sdk_type": "sdk"
        },
        "aws_api_gateway_rest_api": {
          "terraform_type": "aws_api_gateway_rest_api",
          "factory_function": "dataSourceApiGatewayRestApi",
          "name": "REST API",
          "sdk_type": "sdk"
        },
        "aws_api_gateway_sdk": {
          "terraform_type": "aws_api_gateway_sdk",
          "factory_function": "dataSourceApiGatewaySdk",
          "name": "SDK",
          "sdk_type": "sdk"
        },
        "aws_api_gateway_vpc_link": {
          "terraform_type": "aws_api_gateway_vpc_link",
          "factory_function": "dataSourceApiGatewayVpcLink",
          "name": "VPC Link",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_api_gateway_account": {
          "terraform_type": "aws_api_gateway_account",
          "factory_function": "newApiGatewayAccountResource",
          "name": "Account",
          "sdk_type": "framework",
          "struct_type": "accountResource"
        },
        "aws_api_gateway_domain_name_access_association": {
          "terraform_type": "aws_api_gateway_domain_name_access_association",
          "factory_function": "newApiGatewayDomainNameAccessAssociationResource",
          "name": "Domain Name Access Association",
          "sdk_type": "framework",
          "struct_type": "domainNameAccessAssociationResource"
        },
        "aws_api_gateway_rest_api_put": {
          "terraform_type": "aws_api_gateway_rest_api_put",
          "factory_function": "newApiGatewayRestApiPutResource",
          "name": "Rest API Put",
          "sdk_type": "framework",
          "struct_type": "restAPIPutResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_api_gateway_api_keys": {
          "terraform_type": "aws_api_gateway_api_keys",
          "factory_function": "newApiGatewayApiKeysDataSource",
          "name": "API Keys",
          "sdk_type": "framework",
          "struct_type": "dataSourceAPIKeys"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "accountResource": "aws_api_gateway_account",
        "domainNameAccessAssociationResource": "aws_api_gateway_domain_name_access_association",
        "restAPIPutResource": "aws_api_gateway_rest_api_put"
      },
      "data_source_terraform_types": {
        "dataSourceAPIKeys": "aws_api_gateway_api_keys"
      },
      "resource_crud_methods": {
        "aws_api_gateway_api_key": {
          "create_method": "resourceAPIKeyCreate",
          "read_method": "resourceAPIKeyRead",
          "update_method": "resourceAPIKeyUpdate",
          "delete_method": "resourceAPIKeyDelete"
        },
        "aws_api_gateway_authorizer": {
          "create_method": "resourceAuthorizerCreate",
          "read_method": "resourceAuthorizerRead",
          "update_method": "resourceAuthorizerUpdate",
          "delete_method": "resourceAuthorizerDelete"
        },
        "aws_api_gateway_base_path_mapping": {
          "create_method": "resourceBasePathMappingCreate",
          "read_method": "resourceBasePathMappingRead",
          "update_method": "resourceBasePathMappingUpdate",
          "delete_method": "resourceBasePathMappingDelete"
        },
        "aws_api_gateway_client_certificate": {
          "create_method": "resourceClientCertificateCreate",
          "read_method": "resourceClientCertificateRead",
          "update_method": "resourceClientCertificateUpdate",
          "delete_method": "resourceClientCertificateDelete"
        },
        "aws_api_gateway_deployment": {
          "create_method": "resourceDeploymentCreate",
          "read_method": "resourceDeploymentRead",
          "update_method": "resourceDeploymentUpdate",
          "delete_method": "resourceDeploymentDelete"
        },
        "aws_api_gateway_documentation_part": {
          "create_method": "resourceDocumentationPartCreate",
          "read_method": "resourceDocumentationPartRead",
          "update_method": "resourceDocumentationPartUpdate",
          "delete_method": "resourceDocumentationPartDelete"
        },
        "aws_api_gateway_documentation_version": {
          "create_method": "resourceDocumentationVersionCreate",
          "read_method": "resourceDocumentationVersionRead",
          "update_method": "resourceDocumentationVersionUpdate",
          "delete_method": "resourceDocumentationVersionDelete"
        },
        "aws_api_gateway_domain_name": {
          "create_method": "resourceDomainNameCreate",
          "read_method": "resourceDomainNameRead",
          "update_method": "resourceDomainNameUpdate",
          "delete_method": "resourceDomainNameDelete"
        },
        "aws_api_gateway_gateway_response": {
          "create_method": "resourceGatewayResponsePut",
          "read_method": "resourceGatewayResponseRead",
          "update_method": "resourceGatewayResponsePut",
          "delete_method": "resourceGatewayResponseDelete"
        },
        "aws_api_gateway_integration": {
          "create_method": "resourceIntegrationCreate",
          "read_method": "resourceIntegrationRead",
          "update_method": "resourceIntegrationUpdate",
          "delete_method": "resourceIntegrationDelete"
        },
        "aws_api_gateway_integration_response": {
          "create_method": "resourceIntegrationResponsePut",
          "read_method": "resourceIntegrationResponseRead",
          "update_method": "resourceIntegrationResponsePut",
          "delete_method": "resourceIntegrationResponseDelete"
        },
        "aws_api_gateway_method": {
          "create_method": "resourceMethodCreate",
          "read_method": "resourceMethodRead",
          "update_method": "resourceMethodUpdate",
          "delete_method": "resourceMethodDelete"
        },
        "aws_api_gateway_method_response": {
          "create_method": "resourceMethodResponseCreate",
          "read_method": "resourceMethodResponseRead",
          "update_method": "resourceMethodResponseUpdate",
          "delete_method": "resourceMethodResponseDelete"
        },
        "aws_api_gateway_method_settings": {
          "create_method": "resourceMethodSettingsUpdate",
          "read_method": "resourceMethodSettingsRead",
          "update_method": "resourceMethodSettingsUpdate",
          "delete_method": "resourceMethodSettingsDelete"
        },
        "aws_api_gateway_model": {
          "create_method": "resourceModelCreate",
          "read_method": "resourceModelRead",
          "update_method": "resourceModelUpdate",
          "delete_method": "resourceModelDelete"
        },
        "aws_api_gateway_request_validator": {
          "create_method": "resourceRequestValidatorCreate",
          "read_method": "resourceRequestValidatorRead",
          "update_method": "resourceRequestValidatorUpdate",
          "delete_method": "resourceRequestValidatorDelete"
        },
        "aws_api_gateway_resource": {
          "create_method": "resourceResourceCreate",
          "read_method": "resourceResourceRead",
          "update_method": "resourceResourceUpdate",
          "delete_method": "resourceResourceDelete"
        },
        "aws_api_gateway_rest_api": {
          "create_method": "resourceRestAPICreate",
          "read_method": "resourceRestAPIRead",
          "update_method": "resourceRestAPIUpdate",
          "delete_method": "resourceRestAPIDelete"
        },
        "aws_api_gateway_rest_api_policy": {
          "create_method": "resourceRestAPIPolicyPut",
          "read_method": "resourceRestAPIPolicyRead",
          "update_method": "resourceRestAPIPolicyPut",
          "delete_method": "resourceRestAPIPolicyDelete"
        },
        "aws_api_gateway_stage": {
          "create_method": "resourceStageCreate",
          "read_method": "resourceStageRead",
          "update_method": "resourceStageUpdate",
          "delete_method": "resourceStageDelete"
        },
        "aws_api_gateway_usage_plan": {
          "create_method": "resourceUsagePlanCreate",
          "read_method": "resourceUsagePlanRead",
          "update_method": "resourceUsagePlanUpdate",
          "delete_method": "resourceUsagePlanDelete"
        },
        "aws_api_gateway_usage_plan_key": {
          "create_method": "resourceUsagePlanKeyCreate",
          "read_method": "resourceUsagePlanKeyRead",
          "delete_method": "resourceUsagePlanKeyDelete"
        },
        "aws_api_gateway_vpc_link": {
          "create_method": "resourceVPCLinkCreate",
          "read_method": "resourceVPCLinkRead",
          "update_method": "resourceVPCLinkUpdate",
          "delete_method": "resourceVPCLinkDelete"
        }
      },
      "data_source_methods": {
        "aws_api_gateway_api_key": {
          "read_method": "dataSourceAPIKeyRead"
        },
        "aws_api_gateway_authorizer": {
          "read_method": "dataSourceAuthorizerRead"
        },
        "aws_api_gateway_authorizers": {
          "read_method": "dataSourceAuthorizersRead"
        },
        "aws_api_gateway_domain_name": {
          "read_method": "dataSourceDomainNameRead"
        },
        "aws_api_gateway_export": {
          "read_method": "dataSourceExportRead"
        },
        "aws_api_gateway_resource": {
          "read_method": "dataSourceResourceRead"
        },
        "aws_api_gateway_rest_api": {
          "read_method": "dataSourceRestAPIRead"
        },
        "aws_api_gateway_sdk": {
          "read_method": "dataSourceSDKRead"
        },
        "aws_api_gateway_vpc_link": {
          "read_method": "dataSourceVPCLinkRead"
        }
      }
    },
    {
      "service_name": "appautoscaling",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/appautoscaling",
      "aws_sdk_resources": {
        "aws_appautoscaling_policy": {
          "terraform_type": "aws_appautoscaling_policy",
          "factory_function": "resourceAppautoscalingPolicy",
          "name": "Scaling Policy",
          "sdk_type": "sdk"
        },
        "aws_appautoscaling_scheduled_action": {
          "terraform_type": "aws_appautoscaling_scheduled_action",
          "factory_function": "resourceAppautoscalingScheduledAction",
          "name": "Scheduled Action",
          "sdk_type": "sdk"
        },
        "aws_appautoscaling_target": {
          "terraform_type": "aws_appautoscaling_target",
          "factory_function": "resourceAppautoscalingTarget",
          "name": "Target",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_appautoscaling_policy": {
          "create_method": "resourcePolicyPut",
          "read_method": "resourcePolicyRead",
          "update_method": "resourcePolicyPut",
          "delete_method": "resourcePolicyDelete"
        },
        "aws_appautoscaling_scheduled_action": {
          "create_method": "resourceScheduledActionPut",
          "read_method": "resourceScheduledActionRead",
          "update_method": "resourceScheduledActionPut",
          "delete_method": "resourceScheduledActionDelete"
        },
        "aws_appautoscaling_target": {
          "create_method": "resourceTargetCreate",
          "read_method": "resourceTargetRead",
          "update_method": "resourceTargetUpdate",
          "delete_method": "resourceTargetDelete"
        }
      }
    },
    {
      "service_name": "appfabric",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/appfabric",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_appfabric_app_authorization": {
          "terraform_type": "aws_appfabric_app_authorization",
          "factory_function": "newAppfabricAppAuthorizationResource",
          "name": "App Authorization",
          "sdk_type": "framework",
          "struct_type": "appAuthorizationResource"
        },
        "aws_appfabric_app_authorization_connection": {
          "terraform_type": "aws_appfabric_app_authorization_connection",
          "factory_function": "newAppfabricAppAuthorizationConnectionResource",
          "name": "App Authorization Connection",
          "sdk_type": "framework",
          "struct_type": "appAuthorizationConnectionResource"
        },
        "aws_appfabric_app_bundle": {
          "terraform_type": "aws_appfabric_app_bundle",
          "factory_function": "newAppfabricAppBundleResource",
          "name": "App Bundle",
          "sdk_type": "framework",
          "struct_type": "appBundleResource"
        },
        "aws_appfabric_ingestion": {
          "terraform_type": "aws_appfabric_ingestion",
          "factory_function": "newAppfabricIngestionResource",
          "name": "Ingestion",
          "sdk_type": "framework",
          "struct_type": "ingestionResource"
        },
        "aws_appfabric_ingestion_destination": {
          "terraform_type": "aws_appfabric_ingestion_destination",
          "factory_function": "newAppfabricIngestionDestinationResource",
          "name": "Ingestion Destination",
          "sdk_type": "framework",
          "struct_type": "ingestionDestinationResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "appAuthorizationConnectionResource": "aws_appfabric_app_authorization_connection",
        "appAuthorizationResource": "aws_appfabric_app_authorization",
        "appBundleResource": "aws_appfabric_app_bundle",
        "ingestionDestinationResource": "aws_appfabric_ingestion_destination",
        "ingestionResource": "aws_appfabric_ingestion"
      }
    },
    {
      "service_name": "appconfig",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/appconfig",
      "aws_sdk_resources": {
        "aws_appconfig_application": {
          "terraform_type": "aws_appconfig_application",
          "factory_function": "resourceAppconfigApplication",
          "name": "Application",
          "sdk_type": "sdk"
        },
        "aws_appconfig_configuration_profile": {
          "terraform_type": "aws_appconfig_configuration_profile",
          "factory_function": "resourceAppconfigConfigurationProfile",
          "name": "Configuration Profile",
          "sdk_type": "sdk"
        },
        "aws_appconfig_deployment": {
          "terraform_type": "aws_appconfig_deployment",
          "factory_function": "resourceAppconfigDeployment",
          "name": "Deployment",
          "sdk_type": "sdk"
        },
        "aws_appconfig_deployment_strategy": {
          "terraform_type": "aws_appconfig_deployment_strategy",
          "factory_function": "resourceAppconfigDeploymentStrategy",
          "name": "Deployment Strategy",
          "sdk_type": "sdk"
        },
        "aws_appconfig_extension": {
          "terraform_type": "aws_appconfig_extension",
          "factory_function": "resourceAppconfigExtension",
          "name": "Extension",
          "sdk_type": "sdk"
        },
        "aws_appconfig_extension_association": {
          "terraform_type": "aws_appconfig_extension_association",
          "factory_function": "resourceAppconfigExtensionAssociation",
          "name": "Extension Association",
          "sdk_type": "sdk"
        },
        "aws_appconfig_hosted_configuration_version": {
          "terraform_type": "aws_appconfig_hosted_configuration_version",
          "factory_function": "resourceAppconfigHostedConfigurationVersion",
          "name": "Hosted Configuration Version",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_appconfig_configuration_profile": {
          "terraform_type": "aws_appconfig_configuration_profile",
          "factory_function": "dataSourceAppconfigConfigurationProfile",
          "name": "Configuration Profile",
          "sdk_type": "sdk"
        },
        "aws_appconfig_configuration_profiles": {
          "terraform_type": "aws_appconfig_configuration_profiles",
          "factory_function": "dataSourceAppconfigConfigurationProfiles",
          "name": "Configuration Profiles",
          "sdk_type": "sdk"
        },
        "aws_appconfig_environment": {
          "terraform_type": "aws_appconfig_environment",
          "factory_function": "dataSourceAppconfigEnvironment",
          "name": "Environment",
          "sdk_type": "sdk"
        },
        "aws_appconfig_environments": {
          "terraform_type": "aws_appconfig_environments",
          "factory_function": "dataSourceAppconfigEnvironments",
          "name": "Environments",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_appconfig_environment": {
          "terraform_type": "aws_appconfig_environment",
          "factory_function": "newAppconfigEnvironmentResource",
          "name": "Environment",
          "sdk_type": "framework",
          "struct_type": "environmentResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_appconfig_application": {
          "terraform_type": "aws_appconfig_application",
          "factory_function": "newAppconfigApplicationDataSource",
          "name": "Application",
          "sdk_type": "framework",
          "struct_type": "dataSourceApplication"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "environmentResource": "aws_appconfig_environment"
      },
      "data_source_terraform_types": {
        "dataSourceApplication": "aws_appconfig_application"
      },
      "resource_crud_methods": {
        "aws_appconfig_application": {
          "create_method": "resourceApplicationCreate",
          "read_method": "resourceApplicationRead",
          "update_method": "resourceApplicationUpdate",
          "delete_method": "resourceApplicationDelete"
        },
        "aws_appconfig_configuration_profile": {
          "create_method": "resourceConfigurationProfileCreate",
          "read_method": "resourceConfigurationProfileRead",
          "update_method": "resourceConfigurationProfileUpdate",
          "delete_method": "resourceConfigurationProfileDelete"
        },
        "aws_appconfig_deployment": {
          "create_method": "resourceDeploymentCreate",
          "read_method": "resourceDeploymentRead",
          "update_method": "resourceDeploymentUpdate"
        },
        "aws_appconfig_deployment_strategy": {
          "create_method": "resourceDeploymentStrategyCreate",
          "read_method": "resourceDeploymentStrategyRead",
          "update_method": "resourceDeploymentStrategyUpdate",
          "delete_method": "resourceDeploymentStrategyDelete"
        },
        "aws_appconfig_extension": {
          "create_method": "resourceExtensionCreate",
          "read_method": "resourceExtensionRead",
          "update_method": "resourceExtensionUpdate",
          "delete_method": "resourceExtensionDelete"
        },
        "aws_appconfig_extension_association": {
          "create_method": "resourceExtensionAssociationCreate",
          "read_method": "resourceExtensionAssociationRead",
          "update_method": "resourceExtensionAssociationUpdate",
          "delete_method": "resourceExtensionAssociationDelete"
        },
        "aws_appconfig_hosted_configuration_version": {
          "create_method": "resourceHostedConfigurationVersionCreate",
          "read_method": "resourceHostedConfigurationVersionRead",
          "delete_method": "resourceHostedConfigurationVersionDelete"
        }
      },
      "data_source_methods": {
        "aws_appconfig_configuration_profile": {
          "read_method": "dataSourceConfigurationProfileRead"
        },
        "aws_appconfig_configuration_profiles": {
          "read_method": "dataSourceConfigurationProfilesRead"
        },
        "aws_appconfig_environment": {
          "read_method": "dataSourceEnvironmentRead"
        },
        "aws_appconfig_environments": {
          "read_method": "dataSourceEnvironmentsRead"
        }
      }
    },
    {
      "service_name": "appflow",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/appflow",
      "aws_sdk_resources": {
        "aws_appflow_connector_profile": {
          "terraform_type": "aws_appflow_connector_profile",
          "factory_function": "resourceAppflowConnectorProfile",
          "name": "Connector Profile",
          "sdk_type": "sdk"
        },
        "aws_appflow_flow": {
          "terraform_type": "aws_appflow_flow",
          "factory_function": "resourceAppflowFlow",
          "name": "Flow",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_appflow_connector_profile": {
          "create_method": "resourceConnectorProfileCreate",
          "read_method": "resourceConnectorProfileRead",
          "update_method": "resourceConnectorProfileUpdate",
          "delete_method": "resourceConnectorProfileDelete"
        },
        "aws_appflow_flow": {
          "create_method": "resourceFlowCreate",
          "read_method": "resourceFlowRead",
          "update_method": "resourceFlowUpdate",
          "delete_method": "resourceFlowDelete"
        }
      }
    },
    {
      "service_name": "appintegrations",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/appintegrations",
      "aws_sdk_resources": {
        "aws_appintegrations_data_integration": {
          "terraform_type": "aws_appintegrations_data_integration",
          "factory_function": "resourceAppintegrationsDataIntegration",
          "name": "Data Integration",
          "sdk_type": "sdk"
        },
        "aws_appintegrations_event_integration": {
          "terraform_type": "aws_appintegrations_event_integration",
          "factory_function": "resourceAppintegrationsEventIntegration",
          "name": "Event Integration",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_appintegrations_event_integration": {
          "terraform_type": "aws_appintegrations_event_integration",
          "factory_function": "dataSourceAppintegrationsEventIntegration",
          "name": "Event Integration",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_appintegrations_data_integration": {
          "create_method": "resourceDataIntegrationCreate",
          "read_method": "resourceDataIntegrationRead",
          "update_method": "resourceDataIntegrationUpdate",
          "delete_method": "resourceDataIntegrationDelete"
        },
        "aws_appintegrations_event_integration": {
          "create_method": "resourceEventIntegrationCreate",
          "read_method": "resourceEventIntegrationRead",
          "update_method": "resourceEventIntegrationUpdate",
          "delete_method": "resourceEventIntegrationDelete"
        }
      },
      "data_source_methods": {
        "aws_appintegrations_event_integration": {
          "read_method": "dataSourceEventIntegrationRead"
        }
      }
    },
    {
      "service_name": "applicationinsights",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/applicationinsights",
      "aws_sdk_resources": {
        "aws_applicationinsights_application": {
          "terraform_type": "aws_applicationinsights_application",
          "factory_function": "resourceApplicationinsightsApplication",
          "name": "Application",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_applicationinsights_application": {
          "create_method": "resourceApplicationCreate",
          "read_method": "resourceApplicationRead",
          "update_method": "resourceApplicationUpdate",
          "delete_method": "resourceApplicationDelete"
        }
      }
    },
    {
      "service_name": "appmesh",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/appmesh",
      "aws_sdk_resources": {
        "aws_appmesh_gateway_route": {
          "terraform_type": "aws_appmesh_gateway_route",
          "factory_function": "resourceAppmeshGatewayRoute",
          "name": "Gateway Route",
          "sdk_type": "sdk"
        },
        "aws_appmesh_mesh": {
          "terraform_type": "aws_appmesh_mesh",
          "factory_function": "resourceAppmeshMesh",
          "name": "Service Mesh",
          "sdk_type": "sdk"
        },
        "aws_appmesh_route": {
          "terraform_type": "aws_appmesh_route",
          "factory_function": "resourceAppmeshRoute",
          "name": "Route",
          "sdk_type": "sdk"
        },
        "aws_appmesh_virtual_gateway": {
          "terraform_type": "aws_appmesh_virtual_gateway",
          "factory_function": "resourceAppmeshVirtualGateway",
          "name": "Virtual Gateway",
          "sdk_type": "sdk"
        },
        "aws_appmesh_virtual_node": {
          "terraform_type": "aws_appmesh_virtual_node",
          "factory_function": "resourceAppmeshVirtualNode",
          "name": "Virtual Node",
          "sdk_type": "sdk"
        },
        "aws_appmesh_virtual_router": {
          "terraform_type": "aws_appmesh_virtual_router",
          "factory_function": "resourceAppmeshVirtualRouter",
          "name": "Virtual Router",
          "sdk_type": "sdk"
        },
        "aws_appmesh_virtual_service": {
          "terraform_type": "aws_appmesh_virtual_service",
          "factory_function": "resourceAppmeshVirtualService",
          "name": "Virtual Service",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_appmesh_gateway_route": {
          "terraform_type": "aws_appmesh_gateway_route",
          "factory_function": "dataSourceAppmeshGatewayRoute",
          "name": "Gateway Route",
          "sdk_type": "sdk"
        },
        "aws_appmesh_mesh": {
          "terraform_type": "aws_appmesh_mesh",
          "factory_function": "dataSourceAppmeshMesh",
          "name": "Service Mesh",
          "sdk_type": "sdk"
        },
        "aws_appmesh_route": {
          "terraform_type": "aws_appmesh_route",
          "factory_function": "dataSourceAppmeshRoute",
          "name": "Route",
          "sdk_type": "sdk"
        },
        "aws_appmesh_virtual_gateway": {
          "terraform_type": "aws_appmesh_virtual_gateway",
          "factory_function": "dataSourceAppmeshVirtualGateway",
          "name": "Virtual Gateway",
          "sdk_type": "sdk"
        },
        "aws_appmesh_virtual_node": {
          "terraform_type": "aws_appmesh_virtual_node",
          "factory_function": "dataSourceAppmeshVirtualNode",
          "name": "Virtual Node",
          "sdk_type": "sdk"
        },
        "aws_appmesh_virtual_router": {
          "terraform_type": "aws_appmesh_virtual_router",
          "factory_function": "dataSourceAppmeshVirtualRouter",
          "name": "Virtual Router",
          "sdk_type": "sdk"
        },
        "aws_appmesh_virtual_service": {
          "terraform_type": "aws_appmesh_virtual_service",
          "factory_function": "dataSourceAppmeshVirtualService",
          "name": "Virtual Service",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_appmesh_gateway_route": {
          "create_method": "resourceGatewayRouteCreate",
          "read_method": "resourceGatewayRouteRead",
          "update_method": "resourceGatewayRouteUpdate",
          "delete_method": "resourceGatewayRouteDelete"
        },
        "aws_appmesh_mesh": {
          "create_method": "resourceMeshCreate",
          "read_method": "resourceMeshRead",
          "update_method": "resourceMeshUpdate",
          "delete_method": "resourceMeshDelete"
        },
        "aws_appmesh_route": {
          "create_method": "resourceRouteCreate",
          "read_method": "resourceRouteRead",
          "update_method": "resourceRouteUpdate",
          "delete_method": "resourceRouteDelete"
        },
        "aws_appmesh_virtual_gateway": {
          "create_method": "resourceVirtualGatewayCreate",
          "read_method": "resourceVirtualGatewayRead",
          "update_method": "resourceVirtualGatewayUpdate",
          "delete_method": "resourceVirtualGatewayDelete"
        },
        "aws_appmesh_virtual_node": {
          "create_method": "resourceVirtualNodeCreate",
          "read_method": "resourceVirtualNodeRead",
          "update_method": "resourceVirtualNodeUpdate",
          "delete_method": "resourceVirtualNodeDelete"
        },
        "aws_appmesh_virtual_router": {
          "create_method": "resourceVirtualRouterCreate",
          "read_method": "resourceVirtualRouterRead",
          "update_method": "resourceVirtualRouterUpdate",
          "delete_method": "resourceVirtualRouterDelete"
        },
        "aws_appmesh_virtual_service": {
          "create_method": "resourceVirtualServiceCreate",
          "read_method": "resourceVirtualServiceRead",
          "update_method": "resourceVirtualServiceUpdate",
          "delete_method": "resourceVirtualServiceDelete"
        }
      },
      "data_source_methods": {
        "aws_appmesh_gateway_route": {
          "read_method": "dataSourceGatewayRouteRead"
        },
        "aws_appmesh_mesh": {
          "read_method": "dataSourceMeshRead"
        },
        "aws_appmesh_route": {
          "read_method": "dataSourceRouteRead"
        },
        "aws_appmesh_virtual_gateway": {
          "read_method": "dataSourceVirtualGatewayRead"
        },
        "aws_appmesh_virtual_node": {
          "read_method": "dataSourceVirtualNodeRead"
        },
        "aws_appmesh_virtual_router": {
          "read_method": "dataSourceVirtualRouterRead"
        },
        "aws_appmesh_virtual_service": {
          "read_method": "dataSourceVirtualServiceRead"
        }
      }
    },
    {
      "service_name": "apprunner",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/apprunner",
      "aws_sdk_resources": {
        "aws_apprunner_auto_scaling_configuration_version": {
          "terraform_type": "aws_apprunner_auto_scaling_configuration_version",
          "factory_function": "resourceApprunnerAutoScalingConfigurationVersion",
          "name": "AutoScaling Configuration Version",
          "sdk_type": "sdk"
        },
        "aws_apprunner_connection": {
          "terraform_type": "aws_apprunner_connection",
          "factory_function": "resourceApprunnerConnection",
          "name": "Connection",
          "sdk_type": "sdk"
        },
        "aws_apprunner_custom_domain_association": {
          "terraform_type": "aws_apprunner_custom_domain_association",
          "factory_function": "resourceApprunnerCustomDomainAssociation",
          "name": "Custom Domain Association",
          "sdk_type": "sdk"
        },
        "aws_apprunner_observability_configuration": {
          "terraform_type": "aws_apprunner_observability_configuration",
          "factory_function": "resourceApprunnerObservabilityConfiguration",
          "name": "Observability Configuration",
          "sdk_type": "sdk"
        },
        "aws_apprunner_service": {
          "terraform_type": "aws_apprunner_service",
          "factory_function": "resourceApprunnerService",
          "name": "Service",
          "sdk_type": "sdk"
        },
        "aws_apprunner_vpc_connector": {
          "terraform_type": "aws_apprunner_vpc_connector",
          "factory_function": "resourceApprunnerVpcConnector",
          "name": "VPC Connector",
          "sdk_type": "sdk"
        },
        "aws_apprunner_vpc_ingress_connection": {
          "terraform_type": "aws_apprunner_vpc_ingress_connection",
          "factory_function": "resourceApprunnerVpcIngressConnection",
          "name": "VPC Ingress Connection",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_apprunner_default_auto_scaling_configuration_version": {
          "terraform_type": "aws_apprunner_default_auto_scaling_configuration_version",
          "factory_function": "newApprunnerDefaultAutoScalingConfigurationVersionResource",
          "name": "Default AutoScaling Configuration Version",
          "sdk_type": "framework",
          "struct_type": "defaultAutoScalingConfigurationVersionResource"
        },
        "aws_apprunner_deployment": {
          "terraform_type": "aws_apprunner_deployment",
          "factory_function": "newApprunnerDeploymentResource",
          "name": "Deployment",
          "sdk_type": "framework",
          "struct_type": "deploymentResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_apprunner_hosted_zone_id": {
          "terraform_type": "aws_apprunner_hosted_zone_id",
          "factory_function": "newApprunnerHostedZoneIdDataSource",
          "name": "Hosted Zone ID",
          "sdk_type": "framework",
          "struct_type": "hostedZoneIDDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "defaultAutoScalingConfigurationVersionResource": "aws_apprunner_default_auto_scaling_configuration_version",
        "deploymentResource": "aws_apprunner_deployment"
      },
      "data_source_terraform_types": {
        "hostedZoneIDDataSource": "aws_apprunner_hosted_zone_id"
      },
      "resource_crud_methods": {
        "aws_apprunner_auto_scaling_configuration_version": {
          "create_method": "resourceAutoScalingConfigurationCreate",
          "read_method": "resourceAutoScalingConfigurationRead",
          "update_method": "resourceAutoScalingConfigurationUpdate",
          "delete_method": "resourceAutoScalingConfigurationDelete"
        },
        "aws_apprunner_connection": {
          "create_method": "resourceConnectionCreate",
          "read_method": "resourceConnectionRead",
          "update_method": "resourceConnectionUpdate",
          "delete_method": "resourceConnectionDelete"
        },
        "aws_apprunner_custom_domain_association": {
          "create_method": "resourceCustomDomainAssociationCreate",
          "read_method": "resourceCustomDomainAssociationRead",
          "delete_method": "resourceCustomDomainAssociationDelete"
        },
        "aws_apprunner_observability_configuration": {
          "create_method": "resourceObservabilityConfigurationCreate",
          "read_method": "resourceObservabilityConfigurationRead",
          "update_method": "resourceObservabilityConfigurationUpdate",
          "delete_method": "resourceObservabilityConfigurationDelete"
        },
        "aws_apprunner_service": {
          "create_method": "resourceServiceCreate",
          "read_method": "resourceServiceRead",
          "update_method": "resourceServiceUpdate",
          "delete_method": "resourceServiceDelete"
        },
        "aws_apprunner_vpc_connector": {
          "create_method": "resourceVPCConnectorCreate",
          "read_method": "resourceVPCConnectorRead",
          "update_method": "resourceVPCConnectorUpdate",
          "delete_method": "resourceVPCConnectorDelete"
        },
        "aws_apprunner_vpc_ingress_connection": {
          "create_method": "resourceVPCIngressConnectionCreate",
          "read_method": "resourceVPCIngressConnectionRead",
          "update_method": "resourceVPCIngressConnectionUpdate",
          "delete_method": "resourceVPCIngressConnectionDelete"
        }
      }
    },
    {
      "service_name": "appstream",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/appstream",
      "aws_sdk_resources": {
        "aws_appstream_directory_config": {
          "terraform_type": "aws_appstream_directory_config",
          "factory_function": "resourceAppstreamDirectoryConfig",
          "name": "Directory Config",
          "sdk_type": "sdk"
        },
        "aws_appstream_fleet": {
          "terraform_type": "aws_appstream_fleet",
          "factory_function": "resourceAppstreamFleet",
          "name": "Fleet",
          "sdk_type": "sdk"
        },
        "aws_appstream_fleet_stack_association": {
          "terraform_type": "aws_appstream_fleet_stack_association",
          "factory_function": "resourceAppstreamFleetStackAssociation",
          "name": "Fleet Stack Association",
          "sdk_type": "sdk"
        },
        "aws_appstream_image_builder": {
          "terraform_type": "aws_appstream_image_builder",
          "factory_function": "resourceAppstreamImageBuilder",
          "name": "Image Builder",
          "sdk_type": "sdk"
        },
        "aws_appstream_stack": {
          "terraform_type": "aws_appstream_stack",
          "factory_function": "resourceAppstreamStack",
          "name": "Stack",
          "sdk_type": "sdk"
        },
        "aws_appstream_user": {
          "terraform_type": "aws_appstream_user",
          "factory_function": "resourceAppstreamUser",
          "name": "User",
          "sdk_type": "sdk"
        },
        "aws_appstream_user_stack_association": {
          "terraform_type": "aws_appstream_user_stack_association",
          "factory_function": "resourceAppstreamUserStackAssociation",
          "name": "User Stack Association",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {
        "aws_appstream_image": {
          "terraform_type": "aws_appstream_image",
          "factory_function": "newAppstreamImageDataSource",
          "name": "Image",
          "sdk_type": "framework",
          "struct_type": "imageDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "data_source_terraform_types": {
        "imageDataSource": "aws_appstream_image"
      },
      "resource_crud_methods": {
        "aws_appstream_directory_config": {
          "create_method": "resourceDirectoryConfigCreate",
          "read_method": "resourceDirectoryConfigRead",
          "update_method": "resourceDirectoryConfigUpdate",
          "delete_method": "resourceDirectoryConfigDelete"
        },
        "aws_appstream_fleet": {
          "create_method": "resourceFleetCreate",
          "read_method": "resourceFleetRead",
          "update_method": "resourceFleetUpdate",
          "delete_method": "resourceFleetDelete"
        },
        "aws_appstream_fleet_stack_association": {
          "create_method": "resourceFleetStackAssociationCreate",
          "read_method": "resourceFleetStackAssociationRead",
          "delete_method": "resourceFleetStackAssociationDelete"
        },
        "aws_appstream_image_builder": {
          "create_method": "resourceImageBuilderCreate",
          "read_method": "resourceImageBuilderRead",
          "update_method": "resourceImageBuilderUpdate",
          "delete_method": "resourceImageBuilderDelete"
        },
        "aws_appstream_stack": {
          "create_method": "resourceStackCreate",
          "read_method": "resourceStackRead",
          "update_method": "resourceStackUpdate",
          "delete_method": "resourceStackDelete"
        },
        "aws_appstream_user": {
          "create_method": "resourceUserCreate",
          "read_method": "resourceUserRead",
          "update_method": "resourceUserUpdate",
          "delete_method": "resourceUserDelete"
        },
        "aws_appstream_user_stack_association": {
          "create_method": "resourceUserStackAssociationCreate",
          "read_method": "resourceUserStackAssociationRead",
          "delete_method": "resourceUserStackAssociationDelete"
        }
      }
    },
    {
      "service_name": "appsync",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/appsync",
      "aws_sdk_resources": {
        "aws_appsync_api_cache": {
          "terraform_type": "aws_appsync_api_cache",
          "factory_function": "resourceAppsyncApiCache",
          "name": "API Cache",
          "sdk_type": "sdk"
        },
        "aws_appsync_api_key": {
          "terraform_type": "aws_appsync_api_key",
          "factory_function": "resourceAppsyncApiKey",
          "name": "API Key",
          "sdk_type": "sdk"
        },
        "aws_appsync_datasource": {
          "terraform_type": "aws_appsync_datasource",
          "factory_function": "resourceAppsyncDatasource",
          "name": "Data Source",
          "sdk_type": "sdk"
        },
        "aws_appsync_domain_name": {
          "terraform_type": "aws_appsync_domain_name",
          "factory_function": "resourceAppsyncDomainName",
          "name": "Domain Name",
          "sdk_type": "sdk"
        },
        "aws_appsync_domain_name_api_association": {
          "terraform_type": "aws_appsync_domain_name_api_association",
          "factory_function": "resourceAppsyncDomainNameApiAssociation",
          "name": "Domain Name API Association",
          "sdk_type": "sdk"
        },
        "aws_appsync_function": {
          "terraform_type": "aws_appsync_function",
          "factory_function": "resourceAppsyncFunction",
          "name": "Function",
          "sdk_type": "sdk"
        },
        "aws_appsync_graphql_api": {
          "terraform_type": "aws_appsync_graphql_api",
          "factory_function": "resourceAppsyncGraphqlApi",
          "name": "GraphQL API",
          "sdk_type": "sdk"
        },
        "aws_appsync_resolver": {
          "terraform_type": "aws_appsync_resolver",
          "factory_function": "resourceAppsyncResolver",
          "name": "",
          "sdk_type": "sdk"
        },
        "aws_appsync_type": {
          "terraform_type": "aws_appsync_type",
          "factory_function": "resourceAppsyncType",
          "name": "Type",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_appsync_api": {
          "terraform_type": "aws_appsync_api",
          "factory_function": "newAppsyncApiResource",
          "name": "API",
          "sdk_type": "framework",
          "struct_type": "apiResource"
        },
        "aws_appsync_channel_namespace": {
          "terraform_type": "aws_appsync_channel_namespace",
          "factory_function": "newAppsyncChannelNamespaceResource",
          "name": "Channel Namespace",
          "sdk_type": "framework",
          "struct_type": "channelNamespaceResource"
        },
        "aws_appsync_source_api_association": {
          "terraform_type": "aws_appsync_source_api_association",
          "factory_function": "newAppsyncSourceApiAssociationResource",
          "name": "Source API Association",
          "sdk_type": "framework",
          "struct_type": "sourceAPIAssociationResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "apiResource": "aws_appsync_api",
        "channelNamespaceResource": "aws_appsync_channel_namespace",
        "sourceAPIAssociationResource": "aws_appsync_source_api_association"
      },
      "resource_crud_methods": {
        "aws_appsync_api_cache": {
          "create_method": "resourceAPICacheCreate",
          "read_method": "resourceAPICacheRead",
          "update_method": "resourceAPICacheUpdate",
          "delete_method": "resourceAPICacheDelete"
        },
        "aws_appsync_api_key": {
          "create_method": "resourceAPIKeyCreate",
          "read_method": "resourceAPIKeyRead",
          "update_method": "resourceAPIKeyUpdate",
          "delete_method": "resourceAPIKeyDelete"
        },
        "aws_appsync_datasource": {
          "create_method": "resourceDataSourceCreate",
          "read_method": "resourceDataSourceRead",
          "update_method": "resourceDataSourceUpdate",
          "delete_method": "resourceDataSourceDelete"
        },
        "aws_appsync_domain_name": {
          "create_method": "resourceDomainNameCreate",
          "read_method": "resourceDomainNameRead",
          "update_method": "resourceDomainNameUpdate",
          "delete_method": "resourceDomainNameDelete"
        },
        "aws_appsync_domain_name_api_association": {
          "create_method": "resourceDomainNameAPIAssociationCreate",
          "read_method": "resourceDomainNameAPIAssociationRead",
          "update_method": "resourceDomainNameAPIAssociationUpdate",
          "delete_method": "resourceDomainNameAPIAssociationDelete"
        },
        "aws_appsync_function": {
          "create_method": "resourceFunctionCreate",
          "read_method": "resourceFunctionRead",
          "update_method": "resourceFunctionUpdate",
          "delete_method": "resourceFunctionDelete"
        },
        "aws_appsync_graphql_api": {
          "create_method": "resourceGraphQLAPICreate",
          "read_method": "resourceGraphQLAPIRead",
          "update_method": "resourceGraphQLAPIUpdate",
          "delete_method": "resourceGraphQLAPIDelete"
        },
        "aws_appsync_resolver": {
          "create_method": "resourceResolverCreate",
          "read_method": "resourceResolverRead",
          "update_method": "resourceResolverUpdate",
          "delete_method": "resourceResolverDelete"
        },
        "aws_appsync_type": {
          "create_method": "resourceTypeCreate",
          "read_method": "resourceTypeRead",
          "update_method": "resourceTypeUpdate",
          "delete_method": "resourceTypeDelete"
        }
      }
    },
    {
      "service_name": "athena",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/athena",
      "aws_sdk_resources": {
        "aws_athena_data_catalog": {
          "terraform_type": "aws_athena_data_catalog",
          "factory_function": "resourceAthenaDataCatalog",
          "name": "Data Catalog",
          "sdk_type": "sdk"
        },
        "aws_athena_database": {
          "terraform_type": "aws_athena_database",
          "factory_function": "resourceAthenaDatabase",
          "name": "Database",
          "sdk_type": "sdk"
        },
        "aws_athena_named_query": {
          "terraform_type": "aws_athena_named_query",
          "factory_function": "resourceAthenaNamedQuery",
          "name": "Named Query",
          "sdk_type": "sdk"
        },
        "aws_athena_prepared_statement": {
          "terraform_type": "aws_athena_prepared_statement",
          "factory_function": "resourceAthenaPreparedStatement",
          "name": "Prepared Statement",
          "sdk_type": "sdk"
        },
        "aws_athena_workgroup": {
          "terraform_type": "aws_athena_workgroup",
          "factory_function": "resourceAthenaWorkgroup",
          "name": "WorkGroup",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_athena_named_query": {
          "terraform_type": "aws_athena_named_query",
          "factory_function": "dataSourceAthenaNamedQuery",
          "name": "Named Query",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_athena_capacity_reservation": {
          "terraform_type": "aws_athena_capacity_reservation",
          "factory_function": "newAthenaCapacityReservationResource",
          "name": "Capacity Reservation",
          "sdk_type": "framework",
          "struct_type": "capacityReservationResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "capacityReservationResource": "aws_athena_capacity_reservation"
      },
      "resource_crud_methods": {
        "aws_athena_data_catalog": {
          "create_method": "resourceDataCatalogCreate",
          "read_method": "resourceDataCatalogRead",
          "update_method": "resourceDataCatalogUpdate",
          "delete_method": "resourceDataCatalogDelete"
        },
        "aws_athena_database": {
          "create_method": "resourceDatabaseCreate",
          "read_method": "resourceDatabaseRead",
          "delete_method": "resourceDatabaseDelete"
        },
        "aws_athena_named_query": {
          "create_method": "resourceNamedQueryCreate",
          "read_method": "resourceNamedQueryRead",
          "delete_method": "resourceNamedQueryDelete"
        },
        "aws_athena_prepared_statement": {
          "create_method": "resourcePreparedStatementCreate",
          "read_method": "resourcePreparedStatementRead",
          "update_method": "resourcePreparedStatementUpdate",
          "delete_method": "resourcePreparedStatementDelete"
        },
        "aws_athena_workgroup": {
          "create_method": "resourceWorkGroupCreate",
          "read_method": "resourceWorkGroupRead",
          "update_method": "resourceWorkGroupUpdate",
          "delete_method": "resourceWorkGroupDelete"
        }
      },
      "data_source_methods": {
        "aws_athena_named_query": {
          "read_method": "dataSourceNamedQueryRead"
        }
      }
    },
    {
      "service_name": "auditmanager",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/auditmanager",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_auditmanager_account_registration": {
          "terraform_type": "aws_auditmanager_account_registration",
          "factory_function": "newAuditmanagerAccountRegistrationResource",
          "name": "Account Registration",
          "sdk_type": "framework",
          "struct_type": "accountRegistrationResource"
        },
        "aws_auditmanager_assessment": {
          "terraform_type": "aws_auditmanager_assessment",
          "factory_function": "newAuditmanagerAssessmentResource",
          "name": "Assessment",
          "sdk_type": "framework",
          "struct_type": "assessmentResource"
        },
        "aws_auditmanager_assessment_delegation": {
          "terraform_type": "aws_auditmanager_assessment_delegation",
          "factory_function": "newAuditmanagerAssessmentDelegationResource",
          "name": "Assessment Delegation",
          "sdk_type": "framework",
          "struct_type": "assessmentDelegationResource"
        },
        "aws_auditmanager_assessment_report": {
          "terraform_type": "aws_auditmanager_assessment_report",
          "factory_function": "newAuditmanagerAssessmentReportResource",
          "name": "Assessment Report",
          "sdk_type": "framework",
          "struct_type": "assessmentReportResource"
        },
        "aws_auditmanager_control": {
          "terraform_type": "aws_auditmanager_control",
          "factory_function": "newAuditmanagerControlResource",
          "name": "Control",
          "sdk_type": "framework",
          "struct_type": "controlResource"
        },
        "aws_auditmanager_framework": {
          "terraform_type": "aws_auditmanager_framework",
          "factory_function": "newAuditmanagerFrameworkResource",
          "name": "Framework",
          "sdk_type": "framework",
          "struct_type": "frameworkResource"
        },
        "aws_auditmanager_framework_share": {
          "terraform_type": "aws_auditmanager_framework_share",
          "factory_function": "newAuditmanagerFrameworkShareResource",
          "name": "Framework Share",
          "sdk_type": "framework",
          "struct_type": "frameworkShareResource"
        },
        "aws_auditmanager_organization_admin_account_registration": {
          "terraform_type": "aws_auditmanager_organization_admin_account_registration",
          "factory_function": "newAuditmanagerOrganizationAdminAccountRegistrationResource",
          "name": "Organization Admin Account Registration",
          "sdk_type": "framework",
          "struct_type": "organizationAdminAccountRegistrationResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_auditmanager_control": {
          "terraform_type": "aws_auditmanager_control",
          "factory_function": "newAuditmanagerControlDataSource",
          "name": "Control",
          "sdk_type": "framework",
          "struct_type": "controlDataSource"
        },
        "aws_auditmanager_framework": {
          "terraform_type": "aws_auditmanager_framework",
          "factory_function": "newAuditmanagerFrameworkDataSource",
          "name": "Framework",
          "sdk_type": "framework",
          "struct_type": "frameworkDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "accountRegistrationResource": "aws_auditmanager_account_registration",
        "assessmentDelegationResource": "aws_auditmanager_assessment_delegation",
        "assessmentReportResource": "aws_auditmanager_assessment_report",
        "assessmentResource": "aws_auditmanager_assessment",
        "controlResource": "aws_auditmanager_control",
        "frameworkResource": "aws_auditmanager_framework",
        "frameworkShareResource": "aws_auditmanager_framework_share",
        "organizationAdminAccountRegistrationResource": "aws_auditmanager_organization_admin_account_registration"
      },
      "data_source_terraform_types": {
        "controlDataSource": "aws_auditmanager_control",
        "frameworkDataSource": "aws_auditmanager_framework"
      }
    },
    {
      "service_name": "autoscaling",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/autoscaling",
      "aws_sdk_resources": {
        "aws_autoscaling_attachment": {
          "terraform_type": "aws_autoscaling_attachment",
          "factory_function": "resourceAutoscalingAttachment",
          "name": "Attachment",
          "sdk_type": "sdk"
        },
        "aws_autoscaling_group": {
          "terraform_type": "aws_autoscaling_group",
          "factory_function": "resourceAutoscalingGroup",
          "name": "Group",
          "sdk_type": "sdk"
        },
        "aws_autoscaling_group_tag": {
          "terraform_type": "aws_autoscaling_group_tag",
          "factory_function": "resourceAutoscalingGroupTag",
          "name": "Group Tag",
          "sdk_type": "sdk"
        },
        "aws_autoscaling_lifecycle_hook": {
          "terraform_type": "aws_autoscaling_lifecycle_hook",
          "factory_function": "resourceAutoscalingLifecycleHook",
          "name": "Lifecycle Hook",
          "sdk_type": "sdk"
        },
        "aws_autoscaling_notification": {
          "terraform_type": "aws_autoscaling_notification",
          "factory_function": "resourceAutoscalingNotification",
          "name": "Notification",
          "sdk_type": "sdk"
        },
        "aws_autoscaling_policy": {
          "terraform_type": "aws_autoscaling_policy",
          "factory_function": "resourceAutoscalingPolicy",
          "name": "Policy",
          "sdk_type": "sdk"
        },
        "aws_autoscaling_schedule": {
          "terraform_type": "aws_autoscaling_schedule",
          "factory_function": "resourceAutoscalingSchedule",
          "name": "Scheduled Action",
          "sdk_type": "sdk"
        },
        "aws_autoscaling_traffic_source_attachment": {
          "terraform_type": "aws_autoscaling_traffic_source_attachment",
          "factory_function": "resourceAutoscalingTrafficSourceAttachment",
          "name": "Traffic Source Attachment",
          "sdk_type": "sdk"
        },
        "aws_launch_configuration": {
          "terraform_type": "aws_launch_configuration",
          "factory_function": "resourceLaunchConfiguration",
          "name": "Launch Configuration",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_autoscaling_group": {
          "terraform_type": "aws_autoscaling_group",
          "factory_function": "dataSourceAutoscalingGroup",
          "name": "Group",
          "sdk_type": "sdk"
        },
        "aws_autoscaling_groups": {
          "terraform_type": "aws_autoscaling_groups",
          "factory_function": "dataSourceAutoscalingGroups",
          "name": "Groups",
          "sdk_type": "sdk"
        },
        "aws_launch_configuration": {
          "terraform_type": "aws_launch_configuration",
          "factory_function": "dataSourceLaunchConfiguration",
          "name": "Launch Configuration",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_autoscaling_attachment": {
          "create_method": "resourceAttachmentCreate",
          "read_method": "resourceAttachmentRead",
          "delete_method": "resourceAttachmentDelete"
        },
        "aws_autoscaling_group": {
          "create_method": "resourceGroupCreate",
          "read_method": "resourceGroupRead",
          "update_method": "resourceGroupUpdate",
          "delete_method": "resourceGroupDelete"
        },
        "aws_autoscaling_group_tag": {
          "create_method": "resourceGroupTagCreate",
          "read_method": "resourceGroupTagRead",
          "update_method": "resourceGroupTagUpdate",
          "delete_method": "resourceGroupTagDelete"
        },
        "aws_autoscaling_lifecycle_hook": {
          "create_method": "resourceLifecycleHookPut",
          "read_method": "resourceLifecycleHookRead",
          "update_method": "resourceLifecycleHookPut",
          "delete_method": "resourceLifecycleHookDelete"
        },
        "aws_autoscaling_notification": {
          "create_method": "resourceNotificationCreate",
          "read_method": "resourceNotificationRead",
          "update_method": "resourceNotificationUpdate",
          "delete_method": "resourceNotificationDelete"
        },
        "aws_autoscaling_policy": {
          "create_method": "resourcePolicyCreate",
          "read_method": "resourcePolicyRead",
          "update_method": "resourcePolicyUpdate",
          "delete_method": "resourcePolicyDelete"
        },
        "aws_autoscaling_schedule": {
          "create_method": "resourceSchedulePut",
          "read_method": "resourceScheduleRead",
          "update_method": "resourceSchedulePut",
          "delete_method": "resourceScheduleDelete"
        },
        "aws_autoscaling_traffic_source_attachment": {
          "create_method": "resourceTrafficSourceAttachmentCreate",
          "read_method": "resourceTrafficSourceAttachmentRead",
          "delete_method": "resourceTrafficSourceAttachmentDelete"
        },
        "aws_launch_configuration": {
          "create_method": "resourceLaunchConfigurationCreate",
          "read_method": "resourceLaunchConfigurationRead",
          "delete_method": "resourceLaunchConfigurationDelete"
        }
      },
      "data_source_methods": {
        "aws_autoscaling_group": {
          "read_method": "dataSourceGroupRead"
        },
        "aws_autoscaling_groups": {
          "read_method": "dataSourceGroupsRead"
        },
        "aws_launch_configuration": {
          "read_method": "dataSourceLaunchConfigurationRead"
        }
      }
    },
    {
      "service_name": "autoscalingplans",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/autoscalingplans",
      "aws_sdk_resources": {
        "aws_autoscalingplans_scaling_plan": {
          "terraform_type": "aws_autoscalingplans_scaling_plan",
          "factory_function": "resourceAutoscalingplansScalingPlan",
          "name": "Scaling Plan",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_autoscalingplans_scaling_plan": {
          "create_method": "resourceScalingPlanCreate",
          "read_method": "resourceScalingPlanRead",
          "update_method": "resourceScalingPlanUpdate",
          "delete_method": "resourceScalingPlanDelete"
        }
      }
    },
    {
      "service_name": "backup",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/backup",
      "aws_sdk_resources": {
        "aws_backup_framework": {
          "terraform_type": "aws_backup_framework",
          "factory_function": "resourceBackupFramework",
          "name": "Framework",
          "sdk_type": "sdk"
        },
        "aws_backup_global_settings": {
          "terraform_type": "aws_backup_global_settings",
          "factory_function": "resourceBackupGlobalSettings",
          "name": "Global Settings",
          "sdk_type": "sdk"
        },
        "aws_backup_plan": {
          "terraform_type": "aws_backup_plan",
          "factory_function": "resourceBackupPlan",
          "name": "Plan",
          "sdk_type": "sdk"
        },
        "aws_backup_region_settings": {
          "terraform_type": "aws_backup_region_settings",
          "factory_function": "resourceBackupRegionSettings",
          "name": "Region Settings",
          "sdk_type": "sdk"
        },
        "aws_backup_report_plan": {
          "terraform_type": "aws_backup_report_plan",
          "factory_function": "resourceBackupReportPlan",
          "name": "Report Plan",
          "sdk_type": "sdk"
        },
        "aws_backup_selection": {
          "terraform_type": "aws_backup_selection",
          "factory_function": "resourceBackupSelection",
          "name": "Selection",
          "sdk_type": "sdk"
        },
        "aws_backup_vault": {
          "terraform_type": "aws_backup_vault",
          "factory_function": "resourceBackupVault",
          "name": "Vault",
          "sdk_type": "sdk"
        },
        "aws_backup_vault_lock_configuration": {
          "terraform_type": "aws_backup_vault_lock_configuration",
          "factory_function": "resourceBackupVaultLockConfiguration",
          "name": "Vault Lock Configuration",
          "sdk_type": "sdk"
        },
        "aws_backup_vault_notifications": {
          "terraform_type": "aws_backup_vault_notifications",
          "factory_function": "resourceBackupVaultNotifications",
          "name": "Vault Notifications",
          "sdk_type": "sdk"
        },
        "aws_backup_vault_policy": {
          "terraform_type": "aws_backup_vault_policy",
          "factory_function": "resourceBackupVaultPolicy",
          "name": "Vault Policy",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_backup_framework": {
          "terraform_type": "aws_backup_framework",
          "factory_function": "dataSourceBackupFramework",
          "name": "Framework",
          "sdk_type": "sdk"
        },
        "aws_backup_plan": {
          "terraform_type": "aws_backup_plan",
          "factory_function": "dataSourceBackupPlan",
          "name": "Plan",
          "sdk_type": "sdk"
        },
        "aws_backup_report_plan": {
          "terraform_type": "aws_backup_report_plan",
          "factory_function": "dataSourceBackupReportPlan",
          "name": "Report Plan",
          "sdk_type": "sdk"
        },
        "aws_backup_selection": {
          "terraform_type": "aws_backup_selection",
          "factory_function": "dataSourceBackupSelection",
          "name": "Selection",
          "sdk_type": "sdk"
        },
        "aws_backup_vault": {
          "terraform_type": "aws_backup_vault",
          "factory_function": "dataSourceBackupVault",
          "name": "Vault",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_backup_logically_air_gapped_vault": {
          "terraform_type": "aws_backup_logically_air_gapped_vault",
          "factory_function": "newBackupLogicallyAirGappedVaultResource",
          "name": "Logically Air Gapped Vault",
          "sdk_type": "framework",
          "struct_type": "logicallyAirGappedVaultResource"
        },
        "aws_backup_restore_testing_plan": {
          "terraform_type": "aws_backup_restore_testing_plan",
          "factory_function": "newBackupRestoreTestingPlanResource",
          "name": "Restore Testing Plan",
          "sdk_type": "framework",
          "struct_type": "restoreTestingPlanResource"
        },
        "aws_backup_restore_testing_selection": {
          "terraform_type": "aws_backup_restore_testing_selection",
          "factory_function": "newBackupRestoreTestingSelectionResource",
          "name": "Restore Testing Plan Selection",
          "sdk_type": "framework",
          "struct_type": "restoreTestingSelectionResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "logicallyAirGappedVaultResource": "aws_backup_logically_air_gapped_vault",
        "restoreTestingPlanResource": "aws_backup_restore_testing_plan",
        "restoreTestingSelectionResource": "aws_backup_restore_testing_selection"
      },
      "resource_crud_methods": {
        "aws_backup_framework": {
          "create_method": "resourceFrameworkCreate",
          "read_method": "resourceFrameworkRead",
          "update_method": "resourceFrameworkUpdate",
          "delete_method": "resourceFrameworkDelete"
        },
        "aws_backup_global_settings": {
          "create_method": "resourceGlobalSettingsUpdate",
          "read_method": "resourceGlobalSettingsRead",
          "update_method": "resourceGlobalSettingsUpdate"
        },
        "aws_backup_plan": {
          "create_method": "resourcePlanCreate",
          "read_method": "resourcePlanRead",
          "update_method": "resourcePlanUpdate",
          "delete_method": "resourcePlanDelete"
        },
        "aws_backup_region_settings": {
          "create_method": "resourceRegionSettingsUpdate",
          "read_method": "resourceRegionSettingsRead",
          "update_method": "resourceRegionSettingsUpdate"
        },
        "aws_backup_report_plan": {
          "create_method": "resourceReportPlanCreate",
          "read_method": "resourceReportPlanRead",
          "update_method": "resourceReportPlanUpdate",
          "delete_method": "resourceReportPlanDelete"
        },
        "aws_backup_selection": {
          "create_method": "resourceSelectionCreate",
          "read_method": "resourceSelectionRead",
          "delete_method": "resourceSelectionDelete"
        },
        "aws_backup_vault": {
          "create_method": "resourceVaultCreate",
          "read_method": "resourceVaultRead",
          "update_method": "resourceVaultUpdate",
          "delete_method": "resourceVaultDelete"
        },
        "aws_backup_vault_lock_configuration": {
          "create_method": "resourceVaultLockConfigurationCreate",
          "read_method": "resourceVaultLockConfigurationRead",
          "delete_method": "resourceVaultLockConfigurationDelete"
        },
        "aws_backup_vault_notifications": {
          "create_method": "resourceVaultNotificationsCreate",
          "read_method": "resourceVaultNotificationsRead",
          "delete_method": "resourceVaultNotificationsDelete"
        },
        "aws_backup_vault_policy": {
          "create_method": "resourceVaultPolicyPut",
          "read_method": "resourceVaultPolicyRead",
          "update_method": "resourceVaultPolicyPut",
          "delete_method": "resourceVaultPolicyDelete"
        }
      },
      "data_source_methods": {
        "aws_backup_framework": {
          "read_method": "dataSourceFrameworkRead"
        },
        "aws_backup_plan": {
          "read_method": "dataSourcePlanRead"
        },
        "aws_backup_report_plan": {
          "read_method": "dataSourceReportPlanRead"
        },
        "aws_backup_selection": {
          "read_method": "dataSourceSelectionRead"
        },
        "aws_backup_vault": {
          "read_method": "dataSourceVaultRead"
        }
      }
    },
    {
      "service_name": "batch",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/batch",
      "aws_sdk_resources": {
        "aws_batch_compute_environment": {
          "terraform_type": "aws_batch_compute_environment",
          "factory_function": "resourceBatchComputeEnvironment",
          "name": "Compute Environment",
          "sdk_type": "sdk"
        },
        "aws_batch_job_definition": {
          "terraform_type": "aws_batch_job_definition",
          "factory_function": "resourceBatchJobDefinition",
          "name": "Job Definition",
          "sdk_type": "sdk"
        },
        "aws_batch_scheduling_policy": {
          "terraform_type": "aws_batch_scheduling_policy",
          "factory_function": "resourceBatchSchedulingPolicy",
          "name": "Scheduling Policy",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_batch_compute_environment": {
          "terraform_type": "aws_batch_compute_environment",
          "factory_function": "dataSourceBatchComputeEnvironment",
          "name": "Compute Environment",
          "sdk_type": "sdk"
        },
        "aws_batch_job_queue": {
          "terraform_type": "aws_batch_job_queue",
          "factory_function": "dataSourceBatchJobQueue",
          "name": "Job Queue",
          "sdk_type": "sdk"
        },
        "aws_batch_scheduling_policy": {
          "terraform_type": "aws_batch_scheduling_policy",
          "factory_function": "dataSourceBatchSchedulingPolicy",
          "name": "Scheduling Policy",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_batch_job_queue": {
          "terraform_type": "aws_batch_job_queue",
          "factory_function": "newBatchJobQueueResource",
          "name": "Job Queue",
          "sdk_type": "framework",
          "struct_type": "jobQueueResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_batch_job_definition": {
          "terraform_type": "aws_batch_job_definition",
          "factory_function": "newBatchJobDefinitionDataSource",
          "name": "Job Definition",
          "sdk_type": "framework",
          "struct_type": "jobDefinitionDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "jobQueueResource": "aws_batch_job_queue"
      },
      "data_source_terraform_types": {
        "jobDefinitionDataSource": "aws_batch_job_definition"
      },
      "resource_crud_methods": {
        "aws_batch_compute_environment": {
          "create_method": "resourceComputeEnvironmentCreate",
          "read_method": "resourceComputeEnvironmentRead",
          "update_method": "resourceComputeEnvironmentUpdate",
          "delete_method": "resourceComputeEnvironmentDelete"
        },
        "aws_batch_job_definition": {
          "create_method": "resourceJobDefinitionCreate",
          "read_method": "resourceJobDefinitionRead",
          "update_method": "resourceJobDefinitionUpdate",
          "delete_method": "resourceJobDefinitionDelete"
        },
        "aws_batch_scheduling_policy": {
          "create_method": "resourceSchedulingPolicyCreate",
          "read_method": "resourceSchedulingPolicyRead",
          "update_method": "resourceSchedulingPolicyUpdate",
          "delete_method": "resourceSchedulingPolicyDelete"
        }
      },
      "data_source_methods": {
        "aws_batch_compute_environment": {
          "read_method": "dataSourceComputeEnvironmentRead"
        },
        "aws_batch_job_queue": {
          "read_method": "dataSourceJobQueueRead"
        },
        "aws_batch_scheduling_policy": {
          "read_method": "dataSourceSchedulingPolicyRead"
        }
      }
    },
    {
      "service_name": "bedrock",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/bedrock",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_bedrock_custom_model": {
          "terraform_type": "aws_bedrock_custom_model",
          "factory_function": "newBedrockCustomModelResource",
          "name": "Custom Model",
          "sdk_type": "framework",
          "struct_type": "customModelResource"
        },
        "aws_bedrock_guardrail": {
          "terraform_type": "aws_bedrock_guardrail",
          "factory_function": "newBedrockGuardrailResource",
          "name": "Guardrail",
          "sdk_type": "framework",
          "struct_type": "guardrailResource"
        },
        "aws_bedrock_guardrail_version": {
          "terraform_type": "aws_bedrock_guardrail_version",
          "factory_function": "newBedrockGuardrailVersionResource",
          "name": "Guardrail Version",
          "sdk_type": "framework",
          "struct_type": "guardrailVersionResource"
        },
        "aws_bedrock_inference_profile": {
          "terraform_type": "aws_bedrock_inference_profile",
          "factory_function": "newBedrockInferenceProfileResource",
          "name": "Inference Profile",
          "sdk_type": "framework",
          "struct_type": "inferenceProfileResource"
        },
        "aws_bedrock_model_invocation_logging_configuration": {
          "terraform_type": "aws_bedrock_model_invocation_logging_configuration",
          "factory_function": "newBedrockModelInvocationLoggingConfigurationResource",
          "name": "Model Invocation Logging Configuration",
          "sdk_type": "framework",
          "struct_type": "modelInvocationLoggingConfigurationResource"
        },
        "aws_bedrock_provisioned_model_throughput": {
          "terraform_type": "aws_bedrock_provisioned_model_throughput",
          "factory_function": "newBedrockProvisionedModelThroughputResource",
          "name": "Provisioned Model Throughput",
          "sdk_type": "framework",
          "struct_type": "provisionedModelThroughputResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_bedrock_custom_model": {
          "terraform_type": "aws_bedrock_custom_model",
          "factory_function": "newBedrockCustomModelDataSource",
          "name": "Custom Model",
          "sdk_type": "framework",
          "struct_type": "customModelDataSource"
        },
        "aws_bedrock_custom_models": {
          "terraform_type": "aws_bedrock_custom_models",
          "factory_function": "newBedrockCustomModelsDataSource",
          "name": "Custom Models",
          "sdk_type": "framework",
          "struct_type": "customModelsDataSource"
        },
        "aws_bedrock_foundation_model": {
          "terraform_type": "aws_bedrock_foundation_model",
          "factory_function": "newBedrockFoundationModelDataSource",
          "name": "Foundation Model",
          "sdk_type": "framework",
          "struct_type": "foundationModelDataSource"
        },
        "aws_bedrock_foundation_models": {
          "terraform_type": "aws_bedrock_foundation_models",
          "factory_function": "newBedrockFoundationModelsDataSource",
          "name": "Foundation Models",
          "sdk_type": "framework",
          "struct_type": "foundationModelsDataSource"
        },
        "aws_bedrock_inference_profile": {
          "terraform_type": "aws_bedrock_inference_profile",
          "factory_function": "newBedrockInferenceProfileDataSource",
          "name": "Inference Profile",
          "sdk_type": "framework",
          "struct_type": "inferenceProfileDataSource"
        },
        "aws_bedrock_inference_profiles": {
          "terraform_type": "aws_bedrock_inference_profiles",
          "factory_function": "newBedrockInferenceProfilesDataSource",
          "name": "Inference Profiles",
          "sdk_type": "framework",
          "struct_type": "inferenceProfilesDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "customModelResource": "aws_bedrock_custom_model",
        "guardrailResource": "aws_bedrock_guardrail",
        "guardrailVersionResource": "aws_bedrock_guardrail_version",
        "inferenceProfileResource": "aws_bedrock_inference_profile",
        "modelInvocationLoggingConfigurationResource": "aws_bedrock_model_invocation_logging_configuration",
        "provisionedModelThroughputResource": "aws_bedrock_provisioned_model_throughput"
      },
      "data_source_terraform_types": {
        "customModelDataSource": "aws_bedrock_custom_model",
        "customModelsDataSource": "aws_bedrock_custom_models",
        "foundationModelDataSource": "aws_bedrock_foundation_model",
        "foundationModelsDataSource": "aws_bedrock_foundation_models",
        "inferenceProfileDataSource": "aws_bedrock_inference_profile",
        "inferenceProfilesDataSource": "aws_bedrock_inference_profiles"
      }
    },
    {
      "service_name": "bcmdataexports",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/bcmdataexports",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_bcmdataexports_export": {
          "terraform_type": "aws_bcmdataexports_export",
          "factory_function": "newBcmdataexportsExportResource",
          "name": "Export",
          "sdk_type": "framework",
          "struct_type": "exportResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "exportResource": "aws_bcmdataexports_export"
      }
    },
    {
      "service_name": "bedrockagent",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/bedrockagent",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_bedrockagent_agent": {
          "terraform_type": "aws_bedrockagent_agent",
          "factory_function": "newBedrockagentAgentResource",
          "name": "Agent",
          "sdk_type": "framework",
          "struct_type": "agentResource"
        },
        "aws_bedrockagent_agent_action_group": {
          "terraform_type": "aws_bedrockagent_agent_action_group",
          "factory_function": "newBedrockagentAgentActionGroupResource",
          "name": "Agent Action Group",
          "sdk_type": "framework",
          "struct_type": "agentActionGroupResource"
        },
        "aws_bedrockagent_agent_alias": {
          "terraform_type": "aws_bedrockagent_agent_alias",
          "factory_function": "newBedrockagentAgentAliasResource",
          "name": "Agent Alias",
          "sdk_type": "framework",
          "struct_type": "agentAliasResource"
        },
        "aws_bedrockagent_agent_collaborator": {
          "terraform_type": "aws_bedrockagent_agent_collaborator",
          "factory_function": "newBedrockagentAgentCollaboratorResource",
          "name": "Agent Collaborator",
          "sdk_type": "framework",
          "struct_type": "agentCollaboratorResource"
        },
        "aws_bedrockagent_agent_knowledge_base_association": {
          "terraform_type": "aws_bedrockagent_agent_knowledge_base_association",
          "factory_function": "newBedrockagentAgentKnowledgeBaseAssociationResource",
          "name": "Agent Knowledge Base Association",
          "sdk_type": "framework",
          "struct_type": "agentKnowledgeBaseAssociationResource"
        },
        "aws_bedrockagent_data_source": {
          "terraform_type": "aws_bedrockagent_data_source",
          "factory_function": "newBedrockagentDataSourceResource",
          "name": "Data Source",
          "sdk_type": "framework",
          "struct_type": "dataSourceResource"
        },
        "aws_bedrockagent_flow": {
          "terraform_type": "aws_bedrockagent_flow",
          "factory_function": "newBedrockagentFlowResource",
          "name": "Flow",
          "sdk_type": "framework",
          "struct_type": "flowResource"
        },
        "aws_bedrockagent_knowledge_base": {
          "terraform_type": "aws_bedrockagent_knowledge_base",
          "factory_function": "newBedrockagentKnowledgeBaseResource",
          "name": "Knowledge Base",
          "sdk_type": "framework",
          "struct_type": "knowledgeBaseResource"
        },
        "aws_bedrockagent_prompt": {
          "terraform_type": "aws_bedrockagent_prompt",
          "factory_function": "newBedrockagentPromptResource",
          "name": "Prompt",
          "sdk_type": "framework",
          "struct_type": "promptResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_bedrockagent_agent_versions, name=": {
          "terraform_type": "aws_bedrockagent_agent_versions, name=",
          "factory_function": "newBedrockagentAgentVersions, name=DataSource",
          "name": "",
          "sdk_type": "framework",
          "struct_type": "agentVersionsDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "agentActionGroupResource": "aws_bedrockagent_agent_action_group",
        "agentAliasResource": "aws_bedrockagent_agent_alias",
        "agentCollaboratorResource": "aws_bedrockagent_agent_collaborator",
        "agentKnowledgeBaseAssociationResource": "aws_bedrockagent_agent_knowledge_base_association",
        "agentResource": "aws_bedrockagent_agent",
        "dataSourceResource": "aws_bedrockagent_data_source",
        "flowResource": "aws_bedrockagent_flow",
        "knowledgeBaseResource": "aws_bedrockagent_knowledge_base",
        "promptResource": "aws_bedrockagent_prompt"
      },
      "data_source_terraform_types": {
        "agentVersionsDataSource": "aws_bedrockagent_agent_versions, name="
      }
    },
    {
      "service_name": "bedrockagentcore",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/bedrockagentcore",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_bedrockagentcore_agent_runtime": {
          "terraform_type": "aws_bedrockagentcore_agent_runtime",
          "factory_function": "newBedrockagentcoreAgentRuntimeResource",
          "name": "Agent Runtime",
          "sdk_type": "framework",
          "struct_type": "agentRuntimeResource"
        },
        "aws_bedrockagentcore_agent_runtime_endpoint": {
          "terraform_type": "aws_bedrockagentcore_agent_runtime_endpoint",
          "factory_function": "newBedrockagentcoreAgentRuntimeEndpointResource",
          "name": "Agent Runtime Endpoint",
          "sdk_type": "framework",
          "struct_type": "agentRuntimeEndpointResource"
        },
        "aws_bedrockagentcore_api_key_credential_provider": {
          "terraform_type": "aws_bedrockagentcore_api_key_credential_provider",
          "factory_function": "newBedrockagentcoreApiKeyCredentialProviderResource",
          "name": "Api Key Credential Provider",
          "sdk_type": "framework",
          "struct_type": "apiKeyCredentialProviderResource"
        },
        "aws_bedrockagentcore_browser": {
          "terraform_type": "aws_bedrockagentcore_browser",
          "factory_function": "newBedrockagentcoreBrowserResource",
          "name": "Browser",
          "sdk_type": "framework",
          "struct_type": "browserResource"
        },
        "aws_bedrockagentcore_code_interpreter": {
          "terraform_type": "aws_bedrockagentcore_code_interpreter",
          "factory_function": "newBedrockagentcoreCodeInterpreterResource",
          "name": "Code Interpreter",
          "sdk_type": "framework",
          "struct_type": "codeInterpreterResource"
        },
        "aws_bedrockagentcore_gateway": {
          "terraform_type": "aws_bedrockagentcore_gateway",
          "factory_function": "newBedrockagentcoreGatewayResource",
          "name": "Gateway",
          "sdk_type": "framework",
          "struct_type": "gatewayResource"
        },
        "aws_bedrockagentcore_gateway_target": {
          "terraform_type": "aws_bedrockagentcore_gateway_target",
          "factory_function": "newBedrockagentcoreGatewayTargetResource",
          "name": "Gateway Target",
          "sdk_type": "framework",
          "struct_type": "gatewayTargetResource"
        },
        "aws_bedrockagentcore_memory": {
          "terraform_type": "aws_bedrockagentcore_memory",
          "factory_function": "newBedrockagentcoreMemoryResource",
          "name": "Memory",
          "sdk_type": "framework",
          "struct_type": "memoryResource"
        },
        "aws_bedrockagentcore_memory_strategy": {
          "terraform_type": "aws_bedrockagentcore_memory_strategy",
          "factory_function": "newBedrockagentcoreMemoryStrategyResource",
          "name": "Memory Strategy",
          "sdk_type": "framework",
          "struct_type": "resourceMemoryStrategy"
        },
        "aws_bedrockagentcore_oauth2_credential_provider": {
          "terraform_type": "aws_bedrockagentcore_oauth2_credential_provider",
          "factory_function": "newBedrockagentcoreOauth2CredentialProviderResource",
          "name": "OAuth2 Credential Provider",
          "sdk_type": "framework",
          "struct_type": "oauth2CredentialProviderResource"
        },
        "aws_bedrockagentcore_token_vault_cmk": {
          "terraform_type": "aws_bedrockagentcore_token_vault_cmk",
          "factory_function": "newBedrockagentcoreTokenVaultCmkResource",
          "name": "Token Vault CMK",
          "sdk_type": "framework",
          "struct_type": "tokenVaultCMKResource"
        },
        "aws_bedrockagentcore_workload_identity": {
          "terraform_type": "aws_bedrockagentcore_workload_identity",
          "factory_function": "newBedrockagentcoreWorkloadIdentityResource",
          "name": "Workload Identity",
          "sdk_type": "framework",
          "struct_type": "workloadIdentityResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "agentRuntimeEndpointResource": "aws_bedrockagentcore_agent_runtime_endpoint",
        "agentRuntimeResource": "aws_bedrockagentcore_agent_runtime",
        "apiKeyCredentialProviderResource": "aws_bedrockagentcore_api_key_credential_provider",
        "browserResource": "aws_bedrockagentcore_browser",
        "codeInterpreterResource": "aws_bedrockagentcore_code_interpreter",
        "gatewayResource": "aws_bedrockagentcore_gateway",
        "gatewayTargetResource": "aws_bedrockagentcore_gateway_target",
        "memoryResource": "aws_bedrockagentcore_memory",
        "oauth2CredentialProviderResource": "aws_bedrockagentcore_oauth2_credential_provider",
        "resourceMemoryStrategy": "aws_bedrockagentcore_memory_strategy",
        "tokenVaultCMKResource": "aws_bedrockagentcore_token_vault_cmk",
        "workloadIdentityResource": "aws_bedrockagentcore_workload_identity"
      }
    },
    {
      "service_name": "billing",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/billing",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {
        "aws_billing_service_account": {
          "terraform_type": "aws_billing_service_account",
          "factory_function": "newBillingServiceAccountDataSource",
          "name": "Service Account",
          "sdk_type": "framework",
          "struct_type": "billingServiceAccountDataSource"
        },
        "aws_billing_views": {
          "terraform_type": "aws_billing_views",
          "factory_function": "newBillingViewsDataSource",
          "name": "Views",
          "sdk_type": "framework",
          "struct_type": "dataSourceViews"
        }
      },
      "aws_ephemeral_resources": {},
      "data_source_terraform_types": {
        "billingServiceAccountDataSource": "aws_billing_service_account",
        "dataSourceViews": "aws_billing_views"
      }
    },
    {
      "service_name": "budgets",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/budgets",
      "aws_sdk_resources": {
        "aws_budgets_budget": {
          "terraform_type": "aws_budgets_budget",
          "factory_function": "resourceBudgetsBudget",
          "name": "Budget",
          "sdk_type": "sdk"
        },
        "aws_budgets_budget_action": {
          "terraform_type": "aws_budgets_budget_action",
          "factory_function": "resourceBudgetsBudgetAction",
          "name": "Budget Action",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_budgets_budget": {
          "terraform_type": "aws_budgets_budget",
          "factory_function": "dataSourceBudgetsBudget",
          "name": "Budget",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_budgets_budget": {
          "create_method": "resourceBudgetCreate",
          "read_method": "resourceBudgetRead",
          "update_method": "resourceBudgetUpdate",
          "delete_method": "resourceBudgetDelete"
        },
        "aws_budgets_budget_action": {
          "create_method": "resourceBudgetActionCreate",
          "read_method": "resourceBudgetActionRead",
          "update_method": "resourceBudgetActionUpdate",
          "delete_method": "resourceBudgetActionDelete"
        }
      },
      "data_source_methods": {
        "aws_budgets_budget": {
          "read_method": "dataSourceBudgetRead"
        }
      }
    },
    {
      "service_name": "ce",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/ce",
      "aws_sdk_resources": {
        "aws_ce_anomaly_monitor": {
          "terraform_type": "aws_ce_anomaly_monitor",
          "factory_function": "resourceCeAnomalyMonitor",
          "name": "Anomaly Monitor",
          "sdk_type": "sdk"
        },
        "aws_ce_anomaly_subscription": {
          "terraform_type": "aws_ce_anomaly_subscription",
          "factory_function": "resourceCeAnomalySubscription",
          "name": "Anomaly Subscription",
          "sdk_type": "sdk"
        },
        "aws_ce_cost_allocation_tag": {
          "terraform_type": "aws_ce_cost_allocation_tag",
          "factory_function": "resourceCeCostAllocationTag",
          "name": "Cost Allocation Tag",
          "sdk_type": "sdk"
        },
        "aws_ce_cost_category": {
          "terraform_type": "aws_ce_cost_category",
          "factory_function": "resourceCeCostCategory",
          "name": "Cost Category",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_ce_cost_category": {
          "terraform_type": "aws_ce_cost_category",
          "factory_function": "dataSourceCeCostCategory",
          "name": "Cost Category",
          "sdk_type": "sdk"
        },
        "aws_ce_tags": {
          "terraform_type": "aws_ce_tags",
          "factory_function": "dataSourceCeTags",
          "name": "Tags",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_ce_anomaly_monitor": {
          "create_method": "resourceAnomalyMonitorCreate",
          "read_method": "resourceAnomalyMonitorRead",
          "update_method": "resourceAnomalyMonitorUpdate",
          "delete_method": "resourceAnomalyMonitorDelete"
        },
        "aws_ce_anomaly_subscription": {
          "create_method": "resourceAnomalySubscriptionCreate",
          "read_method": "resourceAnomalySubscriptionRead",
          "update_method": "resourceAnomalySubscriptionUpdate",
          "delete_method": "resourceAnomalySubscriptionDelete"
        },
        "aws_ce_cost_allocation_tag": {
          "create_method": "resourceCostAllocationTagUpdate",
          "read_method": "resourceCostAllocationTagRead",
          "update_method": "resourceCostAllocationTagUpdate",
          "delete_method": "resourceCostAllocationTagDelete"
        },
        "aws_ce_cost_category": {
          "create_method": "resourceCostCategoryCreate",
          "read_method": "resourceCostCategoryRead",
          "update_method": "resourceCostCategoryUpdate",
          "delete_method": "resourceCostCategoryDelete"
        }
      },
      "data_source_methods": {
        "aws_ce_cost_category": {
          "read_method": "dataSourceCostCategoryRead"
        },
        "aws_ce_tags": {
          "read_method": "dataSourceTagsRead"
        }
      }
    },
    {
      "service_name": "chatbot",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/chatbot",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_chatbot_slack_channel_configuration": {
          "terraform_type": "aws_chatbot_slack_channel_configuration",
          "factory_function": "newChatbotSlackChannelConfigurationResource",
          "name": "Slack Channel Configuration",
          "sdk_type": "framework",
          "struct_type": "slackChannelConfigurationResource"
        },
        "aws_chatbot_teams_channel_configuration": {
          "terraform_type": "aws_chatbot_teams_channel_configuration",
          "factory_function": "newChatbotTeamsChannelConfigurationResource",
          "name": "Teams Channel Configuration",
          "sdk_type": "framework",
          "struct_type": "teamsChannelConfigurationResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_chatbot_slack_workspace": {
          "terraform_type": "aws_chatbot_slack_workspace",
          "factory_function": "newChatbotSlackWorkspaceDataSource",
          "name": "Slack Workspace",
          "sdk_type": "framework",
          "struct_type": "slackWorkspaceDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "slackChannelConfigurationResource": "aws_chatbot_slack_channel_configuration",
        "teamsChannelConfigurationResource": "aws_chatbot_teams_channel_configuration"
      },
      "data_source_terraform_types": {
        "slackWorkspaceDataSource": "aws_chatbot_slack_workspace"
      }
    },
    {
      "service_name": "chime",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/chime",
      "aws_sdk_resources": {
        "aws_chime_voice_connector": {
          "terraform_type": "aws_chime_voice_connector",
          "factory_function": "resourceChimeVoiceConnector",
          "name": "Voice Connector",
          "sdk_type": "sdk"
        },
        "aws_chime_voice_connector_group": {
          "terraform_type": "aws_chime_voice_connector_group",
          "factory_function": "resourceChimeVoiceConnectorGroup",
          "name": "Voice Connector Group",
          "sdk_type": "sdk"
        },
        "aws_chime_voice_connector_logging": {
          "terraform_type": "aws_chime_voice_connector_logging",
          "factory_function": "resourceChimeVoiceConnectorLogging",
          "name": "Voice Connector Logging",
          "sdk_type": "sdk"
        },
        "aws_chime_voice_connector_origination": {
          "terraform_type": "aws_chime_voice_connector_origination",
          "factory_function": "resourceChimeVoiceConnectorOrigination",
          "name": "Voice Connector Origination",
          "sdk_type": "sdk"
        },
        "aws_chime_voice_connector_streaming": {
          "terraform_type": "aws_chime_voice_connector_streaming",
          "factory_function": "resourceChimeVoiceConnectorStreaming",
          "name": "Voice Connector Streaming",
          "sdk_type": "sdk"
        },
        "aws_chime_voice_connector_termination": {
          "terraform_type": "aws_chime_voice_connector_termination",
          "factory_function": "resourceChimeVoiceConnectorTermination",
          "name": "Voice Connector Termination",
          "sdk_type": "sdk"
        },
        "aws_chime_voice_connector_termination_credentials": {
          "terraform_type": "aws_chime_voice_connector_termination_credentials",
          "factory_function": "resourceChimeVoiceConnectorTerminationCredentials",
          "name": "Voice Connector Termination Credentials",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_chime_voice_connector": {
          "create_method": "resourceVoiceConnectorCreate",
          "read_method": "resourceVoiceConnectorRead",
          "update_method": "resourceVoiceConnectorUpdate",
          "delete_method": "resourceVoiceConnectorDelete"
        },
        "aws_chime_voice_connector_group": {
          "create_method": "resourceVoiceConnectorGroupCreate",
          "read_method": "resourceVoiceConnectorGroupRead",
          "update_method": "resourceVoiceConnectorGroupUpdate",
          "delete_method": "resourceVoiceConnectorGroupDelete"
        },
        "aws_chime_voice_connector_logging": {
          "create_method": "resourceVoiceConnectorLoggingCreate",
          "read_method": "resourceVoiceConnectorLoggingRead",
          "update_method": "resourceVoiceConnectorLoggingUpdate",
          "delete_method": "resourceVoiceConnectorLoggingDelete"
        },
        "aws_chime_voice_connector_origination": {
          "create_method": "resourceVoiceConnectorOriginationCreate",
          "read_method": "resourceVoiceConnectorOriginationRead",
          "update_method": "resourceVoiceConnectorOriginationUpdate",
          "delete_method": "resourceVoiceConnectorOriginationDelete"
        },
        "aws_chime_voice_connector_streaming": {
          "create_method": "resourceVoiceConnectorStreamingCreate",
          "read_method": "resourceVoiceConnectorStreamingRead",
          "update_method": "resourceVoiceConnectorStreamingUpdate",
          "delete_method": "resourceVoiceConnectorStreamingDelete"
        },
        "aws_chime_voice_connector_termination": {
          "create_method": "resourceVoiceConnectorTerminationCreate",
          "read_method": "resourceVoiceConnectorTerminationRead",
          "update_method": "resourceVoiceConnectorTerminationUpdate",
          "delete_method": "resourceVoiceConnectorTerminationDelete"
        },
        "aws_chime_voice_connector_termination_credentials": {
          "create_method": "resourceVoiceConnectorTerminationCredentialsCreate",
          "read_method": "resourceVoiceConnectorTerminationCredentialsRead",
          "update_method": "resourceVoiceConnectorTerminationCredentialsUpdate",
          "delete_method": "resourceVoiceConnectorTerminationCredentialsDelete"
        }
      }
    },
    {
      "service_name": "chimesdkmediapipelines",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/chimesdkmediapipelines",
      "aws_sdk_resources": {
        "aws_chimesdkmediapipelines_media_insights_pipeline_configuration": {
          "terraform_type": "aws_chimesdkmediapipelines_media_insights_pipeline_configuration",
          "factory_function": "resourceChimesdkmediapipelinesMediaInsightsPipelineConfiguration",
          "name": "Media Insights Pipeline Configuration",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_chimesdkmediapipelines_media_insights_pipeline_configuration": {
          "create_method": "resourceMediaInsightsPipelineConfigurationCreate",
          "read_method": "resourceMediaInsightsPipelineConfigurationRead",
          "update_method": "resourceMediaInsightsPipelineConfigurationUpdate",
          "delete_method": "resourceMediaInsightsPipelineConfigurationDelete"
        }
      }
    },
    {
      "service_name": "chimesdkvoice",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/chimesdkvoice",
      "aws_sdk_resources": {
        "aws_chimesdkvoice_global_settings": {
          "terraform_type": "aws_chimesdkvoice_global_settings",
          "factory_function": "resourceChimesdkvoiceGlobalSettings",
          "name": "Global Settings",
          "sdk_type": "sdk"
        },
        "aws_chimesdkvoice_sip_media_application": {
          "terraform_type": "aws_chimesdkvoice_sip_media_application",
          "factory_function": "resourceChimesdkvoiceSipMediaApplication",
          "name": "Sip Media Application",
          "sdk_type": "sdk"
        },
        "aws_chimesdkvoice_sip_rule": {
          "terraform_type": "aws_chimesdkvoice_sip_rule",
          "factory_function": "resourceChimesdkvoiceSipRule",
          "name": "Sip Rule",
          "sdk_type": "sdk"
        },
        "aws_chimesdkvoice_voice_profile_domain": {
          "terraform_type": "aws_chimesdkvoice_voice_profile_domain",
          "factory_function": "resourceChimesdkvoiceVoiceProfileDomain",
          "name": "Voice Profile Domain",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_chimesdkvoice_global_settings": {
          "create_method": "resourceGlobalSettingsUpdate",
          "read_method": "resourceGlobalSettingsRead",
          "update_method": "resourceGlobalSettingsUpdate",
          "delete_method": "resourceGlobalSettingsDelete"
        },
        "aws_chimesdkvoice_sip_media_application": {
          "create_method": "resourceSipMediaApplicationCreate",
          "read_method": "resourceSipMediaApplicationRead",
          "update_method": "resourceSipMediaApplicationUpdate",
          "delete_method": "resourceSipMediaApplicationDelete"
        },
        "aws_chimesdkvoice_sip_rule": {
          "create_method": "resourceSipRuleCreate",
          "read_method": "resourceSipRuleRead",
          "update_method": "resourceSipRuleUpdate",
          "delete_method": "resourceSipRuleDelete"
        },
        "aws_chimesdkvoice_voice_profile_domain": {
          "create_method": "resourceVoiceProfileDomainCreate",
          "read_method": "resourceVoiceProfileDomainRead",
          "update_method": "resourceVoiceProfileDomainUpdate",
          "delete_method": "resourceVoiceProfileDomainDelete"
        }
      }
    },
    {
      "service_name": "cleanrooms",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/cleanrooms",
      "aws_sdk_resources": {
        "aws_cleanrooms_collaboration": {
          "terraform_type": "aws_cleanrooms_collaboration",
          "factory_function": "resourceCleanroomsCollaboration",
          "name": "Collaboration",
          "sdk_type": "sdk"
        },
        "aws_cleanrooms_configured_table": {
          "terraform_type": "aws_cleanrooms_configured_table",
          "factory_function": "resourceCleanroomsConfiguredTable",
          "name": "Configured Table",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_cleanrooms_membership": {
          "terraform_type": "aws_cleanrooms_membership",
          "factory_function": "newCleanroomsMembershipResource",
          "name": "Membership",
          "sdk_type": "framework",
          "struct_type": "membershipResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "membershipResource": "aws_cleanrooms_membership"
      },
      "resource_crud_methods": {
        "aws_cleanrooms_collaboration": {
          "create_method": "resourceCollaborationCreate",
          "read_method": "resourceCollaborationRead",
          "update_method": "resourceCollaborationUpdate",
          "delete_method": "resourceCollaborationDelete"
        },
        "aws_cleanrooms_configured_table": {
          "create_method": "resourceConfiguredTableCreate",
          "read_method": "resourceConfiguredTableRead",
          "update_method": "resourceConfiguredTableUpdate",
          "delete_method": "resourceConfiguredTableDelete"
        }
      }
    },
    {
      "service_name": "cloud9",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/cloud9",
      "aws_sdk_resources": {
        "aws_cloud9_environment_ec2": {
          "terraform_type": "aws_cloud9_environment_ec2",
          "factory_function": "resourceCloud9EnvironmentEc2",
          "name": "Environment EC2",
          "sdk_type": "sdk"
        },
        "aws_cloud9_environment_membership": {
          "terraform_type": "aws_cloud9_environment_membership",
          "factory_function": "resourceCloud9EnvironmentMembership",
          "name": "Environment Membership",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_cloud9_environment_ec2": {
          "create_method": "resourceEnvironmentEC2Create",
          "read_method": "resourceEnvironmentEC2Read",
          "update_method": "resourceEnvironmentEC2Update",
          "delete_method": "resourceEnvironmentEC2Delete"
        },
        "aws_cloud9_environment_membership": {
          "create_method": "resourceEnvironmentMembershipCreate",
          "read_method": "resourceEnvironmentMembershipRead",
          "update_method": "resourceEnvironmentMembershipUpdate",
          "delete_method": "resourceEnvironmentMembershipDelete"
        }
      }
    },
    {
      "service_name": "cloudcontrol",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/cloudcontrol",
      "aws_sdk_resources": {
        "aws_cloudcontrolapi_resource": {
          "terraform_type": "aws_cloudcontrolapi_resource",
          "factory_function": "resourceCloudcontrolapiResource",
          "name": "Resource",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_cloudcontrolapi_resource": {
          "terraform_type": "aws_cloudcontrolapi_resource",
          "factory_function": "dataSourceCloudcontrolapiResource",
          "name": "Resource",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_cloudcontrolapi_resource": {
          "create_method": "resourceResourceCreate",
          "read_method": "resourceResourceRead",
          "update_method": "resourceResourceUpdate",
          "delete_method": "resourceResourceDelete"
        }
      },
      "data_source_methods": {
        "aws_cloudcontrolapi_resource": {
          "read_method": "dataSourceResourceRead"
        }
      }
    },
    {
      "service_name": "cloudformation",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/cloudformation",
      "aws_sdk_resources": {
        "aws_cloudformation_stack": {
          "terraform_type": "aws_cloudformation_stack",
          "factory_function": "resourceCloudformationStack",
          "name": "Stack",
          "sdk_type": "sdk"
        },
        "aws_cloudformation_stack_instances": {
          "terraform_type": "aws_cloudformation_stack_instances",
          "factory_function": "resourceCloudformationStackInstances",
          "name": "Stack Instances",
          "sdk_type": "sdk"
        },
        "aws_cloudformation_stack_set": {
          "terraform_type": "aws_cloudformation_stack_set",
          "factory_function": "resourceCloudformationStackSet",
          "name": "Stack Set",
          "sdk_type": "sdk"
        },
        "aws_cloudformation_stack_set_instance": {
          "terraform_type": "aws_cloudformation_stack_set_instance",
          "factory_function": "resourceCloudformationStackSetInstance",
          "name": "Stack Set Instance",
          "sdk_type": "sdk"
        },
        "aws_cloudformation_type": {
          "terraform_type": "aws_cloudformation_type",
          "factory_function": "resourceCloudformationType",
          "name": "Type",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_cloudformation_export": {
          "terraform_type": "aws_cloudformation_export",
          "factory_function": "dataSourceCloudformationExport",
          "name": "Export",
          "sdk_type": "sdk"
        },
        "aws_cloudformation_stack": {
          "terraform_type": "aws_cloudformation_stack",
          "factory_function": "dataSourceCloudformationStack",
          "name": "Stack",
          "sdk_type": "sdk"
        },
        "aws_cloudformation_type": {
          "terraform_type": "aws_cloudformation_type",
          "factory_function": "dataSourceCloudformationType",
          "name": "Type",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_cloudformation_stack": {
          "create_method": "resourceStackCreate",
          "read_method": "resourceStackRead",
          "update_method": "resourceStackUpdate",
          "delete_method": "resourceStackDelete"
        },
        "aws_cloudformation_stack_instances": {
          "create_method": "resourceStackInstancesCreate",
          "read_method": "resourceStackInstancesRead",
          "update_method": "resourceStackInstancesUpdate",
          "delete_method": "resourceStackInstancesDelete"
        },
        "aws_cloudformation_stack_set": {
          "create_method": "resourceStackSetCreate",
          "read_method": "resourceStackSetRead",
          "update_method": "resourceStackSetUpdate",
          "delete_method": "resourceStackSetDelete"
        },
        "aws_cloudformation_stack_set_instance": {
          "create_method": "resourceStackSetInstanceCreate",
          "read_method": "resourceStackSetInstanceRead",
          "update_method": "resourceStackSetInstanceUpdate",
          "delete_method": "resourceStackSetInstanceDelete"
        },
        "aws_cloudformation_type": {
          "create_method": "resourceTypeCreate",
          "read_method": "resourceTypeRead",
          "delete_method": "resourceTypeDelete"
        }
      },
      "data_source_methods": {
        "aws_cloudformation_export": {
          "read_method": "dataSourceExportRead"
        },
        "aws_cloudformation_stack": {
          "read_method": "dataSourceStackRead"
        },
        "aws_cloudformation_type": {
          "read_method": "dataSourceTypeRead"
        }
      }
    },
    {
      "service_name": "cloudfrontkeyvaluestore",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/cloudfrontkeyvaluestore",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_cloudfrontkeyvaluestore_key": {
          "terraform_type": "aws_cloudfrontkeyvaluestore_key",
          "factory_function": "newCloudfrontkeyvaluestoreKeyResource",
          "name": "Key",
          "sdk_type": "framework",
          "struct_type": "keyResource"
        },
        "aws_cloudfrontkeyvaluestore_keys_exclusive": {
          "terraform_type": "aws_cloudfrontkeyvaluestore_keys_exclusive",
          "factory_function": "newCloudfrontkeyvaluestoreKeysExclusiveResource",
          "name": "Keys  Exclusive",
          "sdk_type": "framework",
          "struct_type": "keysExclusiveResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "keyResource": "aws_cloudfrontkeyvaluestore_key",
        "keysExclusiveResource": "aws_cloudfrontkeyvaluestore_keys_exclusive"
      }
    },
    {
      "service_name": "cloudhsmv2",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/cloudhsmv2",
      "aws_sdk_resources": {
        "aws_cloudhsm_v2_cluster": {
          "terraform_type": "aws_cloudhsm_v2_cluster",
          "factory_function": "resourceCloudhsmV2Cluster",
          "name": "Cluster",
          "sdk_type": "sdk"
        },
        "aws_cloudhsm_v2_hsm": {
          "terraform_type": "aws_cloudhsm_v2_hsm",
          "factory_function": "resourceCloudhsmV2Hsm",
          "name": "HSM",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_cloudhsm_v2_cluster": {
          "terraform_type": "aws_cloudhsm_v2_cluster",
          "factory_function": "dataSourceCloudhsmV2Cluster",
          "name": "Cluster",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_cloudhsm_v2_cluster": {
          "create_method": "resourceClusterCreate",
          "read_method": "resourceClusterRead",
          "update_method": "resourceClusterUpdate",
          "delete_method": "resourceClusterDelete"
        },
        "aws_cloudhsm_v2_hsm": {
          "create_method": "resourceHSMCreate",
          "read_method": "resourceHSMRead",
          "delete_method": "resourceHSMDelete"
        }
      },
      "data_source_methods": {
        "aws_cloudhsm_v2_cluster": {
          "read_method": "dataSourceClusterRead"
        }
      }
    },
    {
      "service_name": "cloudfront",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/cloudfront",
      "aws_sdk_resources": {
        "aws_cloudfront_cache_policy": {
          "terraform_type": "aws_cloudfront_cache_policy",
          "factory_function": "resourceCloudfrontCachePolicy",
          "name": "Cache Policy",
          "sdk_type": "sdk"
        },
        "aws_cloudfront_distribution": {
          "terraform_type": "aws_cloudfront_distribution",
          "factory_function": "resourceCloudfrontDistribution",
          "name": "Distribution",
          "sdk_type": "sdk"
        },
        "aws_cloudfront_field_level_encryption_config": {
          "terraform_type": "aws_cloudfront_field_level_encryption_config",
          "factory_function": "resourceCloudfrontFieldLevelEncryptionConfig",
          "name": "Field-level Encryption Config",
          "sdk_type": "sdk"
        },
        "aws_cloudfront_field_level_encryption_profile": {
          "terraform_type": "aws_cloudfront_field_level_encryption_profile",
          "factory_function": "resourceCloudfrontFieldLevelEncryptionProfile",
          "name": "Field-level Encryption Profile",
          "sdk_type": "sdk"
        },
        "aws_cloudfront_function": {
          "terraform_type": "aws_cloudfront_function",
          "factory_function": "resourceCloudfrontFunction",
          "name": "Function",
          "sdk_type": "sdk"
        },
        "aws_cloudfront_key_group": {
          "terraform_type": "aws_cloudfront_key_group",
          "factory_function": "resourceCloudfrontKeyGroup",
          "name": "Key Group",
          "sdk_type": "sdk"
        },
        "aws_cloudfront_monitoring_subscription": {
          "terraform_type": "aws_cloudfront_monitoring_subscription",
          "factory_function": "resourceCloudfrontMonitoringSubscription",
          "name": "Monitoring Subscription",
          "sdk_type": "sdk"
        },
        "aws_cloudfront_origin_access_control": {
          "terraform_type": "aws_cloudfront_origin_access_control",
          "factory_function": "resourceCloudfrontOriginAccessControl",
          "name": "Origin Access Control",
          "sdk_type": "sdk"
        },
        "aws_cloudfront_origin_access_identity": {
          "terraform_type": "aws_cloudfront_origin_access_identity",
          "factory_function": "resourceCloudfrontOriginAccessIdentity",
          "name": "Origin Access Identity",
          "sdk_type": "sdk"
        },
        "aws_cloudfront_origin_request_policy": {
          "terraform_type": "aws_cloudfront_origin_request_policy",
          "factory_function": "resourceCloudfrontOriginRequestPolicy",
          "name": "Origin Request Policy",
          "sdk_type": "sdk"
        },
        "aws_cloudfront_public_key": {
          "terraform_type": "aws_cloudfront_public_key",
          "factory_function": "resourceCloudfrontPublicKey",
          "name": "Public Key",
          "sdk_type": "sdk"
        },
        "aws_cloudfront_realtime_log_config": {
          "terraform_type": "aws_cloudfront_realtime_log_config",
          "factory_function": "resourceCloudfrontRealtimeLogConfig",
          "name": "Real-time Log Config",
          "sdk_type": "sdk"
        },
        "aws_cloudfront_response_headers_policy": {
          "terraform_type": "aws_cloudfront_response_headers_policy",
          "factory_function": "resourceCloudfrontResponseHeadersPolicy",
          "name": "Response Headers Policy",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_cloudfront_cache_policy": {
          "terraform_type": "aws_cloudfront_cache_policy",
          "factory_function": "dataSourceCloudfrontCachePolicy",
          "name": "Cache Policy",
          "sdk_type": "sdk"
        },
        "aws_cloudfront_distribution": {
          "terraform_type": "aws_cloudfront_distribution",
          "factory_function": "dataSourceCloudfrontDistribution",
          "name": "Distribution",
          "sdk_type": "sdk"
        },
        "aws_cloudfront_function": {
          "terraform_type": "aws_cloudfront_function",
          "factory_function": "dataSourceCloudfrontFunction",
          "name": "Function",
          "sdk_type": "sdk"
        },
        "aws_cloudfront_log_delivery_canonical_user_id": {
          "terraform_type": "aws_cloudfront_log_delivery_canonical_user_id",
          "factory_function": "dataSourceCloudfrontLogDeliveryCanonicalUserId",
          "name": "Log Delivery Canonical User ID",
          "sdk_type": "sdk"
        },
        "aws_cloudfront_origin_access_identities": {
          "terraform_type": "aws_cloudfront_origin_access_identities",
          "factory_function": "dataSourceCloudfrontOriginAccessIdentities",
          "name": "Origin Access Identities",
          "sdk_type": "sdk"
        },
        "aws_cloudfront_origin_access_identity": {
          "terraform_type": "aws_cloudfront_origin_access_identity",
          "factory_function": "dataSourceCloudfrontOriginAccessIdentity",
          "name": "Origin Access Identity",
          "sdk_type": "sdk"
        },
        "aws_cloudfront_origin_request_policy": {
          "terraform_type": "aws_cloudfront_origin_request_policy",
          "factory_function": "dataSourceCloudfrontOriginRequestPolicy",
          "name": "Origin Request Policy",
          "sdk_type": "sdk"
        },
        "aws_cloudfront_realtime_log_config": {
          "terraform_type": "aws_cloudfront_realtime_log_config",
          "factory_function": "dataSourceCloudfrontRealtimeLogConfig",
          "name": "Real-time Log Config",
          "sdk_type": "sdk"
        },
        "aws_cloudfront_response_headers_policy": {
          "terraform_type": "aws_cloudfront_response_headers_policy",
          "factory_function": "dataSourceCloudfrontResponseHeadersPolicy",
          "name": "Response Headers Policy",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_cloudfront_continuous_deployment_policy": {
          "terraform_type": "aws_cloudfront_continuous_deployment_policy",
          "factory_function": "newCloudfrontContinuousDeploymentPolicyResource",
          "name": "Continuous Deployment Policy",
          "sdk_type": "framework",
          "struct_type": "continuousDeploymentPolicyResource"
        },
        "aws_cloudfront_key_value_store": {
          "terraform_type": "aws_cloudfront_key_value_store",
          "factory_function": "newCloudfrontKeyValueStoreResource",
          "name": "Key Value Store",
          "sdk_type": "framework",
          "struct_type": "keyValueStoreResource"
        },
        "aws_cloudfront_vpc_origin": {
          "terraform_type": "aws_cloudfront_vpc_origin",
          "factory_function": "newCloudfrontVpcOriginResource",
          "name": "VPC Origin",
          "sdk_type": "framework",
          "struct_type": "vpcOriginResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_cloudfront_origin_access_control": {
          "terraform_type": "aws_cloudfront_origin_access_control",
          "factory_function": "newCloudfrontOriginAccessControlDataSource",
          "name": "Origin Access Control",
          "sdk_type": "framework",
          "struct_type": "originAccessControlDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "continuousDeploymentPolicyResource": "aws_cloudfront_continuous_deployment_policy",
        "keyValueStoreResource": "aws_cloudfront_key_value_store",
        "vpcOriginResource": "aws_cloudfront_vpc_origin"
      },
      "data_source_terraform_types": {
        "originAccessControlDataSource": "aws_cloudfront_origin_access_control"
      },
      "resource_crud_methods": {
        "aws_cloudfront_cache_policy": {
          "create_method": "resourceCachePolicyCreate",
          "read_method": "resourceCachePolicyRead",
          "update_method": "resourceCachePolicyUpdate",
          "delete_method": "resourceCachePolicyDelete"
        },
        "aws_cloudfront_distribution": {
          "create_method": "resourceDistributionCreate",
          "read_method": "resourceDistributionRead",
          "update_method": "resourceDistributionUpdate",
          "delete_method": "resourceDistributionDelete"
        },
        "aws_cloudfront_field_level_encryption_config": {
          "create_method": "resourceFieldLevelEncryptionConfigCreate",
          "read_method": "resourceFieldLevelEncryptionConfigRead",
          "update_method": "resourceFieldLevelEncryptionConfigUpdate",
          "delete_method": "resourceFieldLevelEncryptionConfigDelete"
        },
        "aws_cloudfront_field_level_encryption_profile": {
          "create_method": "resourceFieldLevelEncryptionProfileCreate",
          "read_method": "resourceFieldLevelEncryptionProfileRead",
          "update_method": "resourceFieldLevelEncryptionProfileUpdate",
          "delete_method": "resourceFieldLevelEncryptionProfileDelete"
        },
        "aws_cloudfront_function": {
          "create_method": "resourceFunctionCreate",
          "read_method": "resourceFunctionRead",
          "update_method": "resourceFunctionUpdate",
          "delete_method": "resourceFunctionDelete"
        },
        "aws_cloudfront_key_group": {
          "create_method": "resourceKeyGroupCreate",
          "read_method": "resourceKeyGroupRead",
          "update_method": "resourceKeyGroupUpdate",
          "delete_method": "resourceKeyGroupDelete"
        },
        "aws_cloudfront_monitoring_subscription": {
          "create_method": "resourceMonitoringSubscriptionCreate",
          "read_method": "resourceMonitoringSubscriptionRead",
          "update_method": "resourceMonitoringSubscriptionCreate",
          "delete_method": "resourceMonitoringSubscriptionDelete"
        },
        "aws_cloudfront_origin_access_control": {
          "create_method": "resourceOriginAccessControlCreate",
          "read_method": "resourceOriginAccessControlRead",
          "update_method": "resourceOriginAccessControlUpdate",
          "delete_method": "resourceOriginAccessControlDelete"
        },
        "aws_cloudfront_origin_access_identity": {
          "create_method": "resourceOriginAccessIdentityCreate",
          "read_method": "resourceOriginAccessIdentityRead",
          "update_method": "resourceOriginAccessIdentityUpdate",
          "delete_method": "resourceOriginAccessIdentityDelete"
        },
        "aws_cloudfront_origin_request_policy": {
          "create_method": "resourceOriginRequestPolicyCreate",
          "read_method": "resourceOriginRequestPolicyRead",
          "update_method": "resourceOriginRequestPolicyUpdate",
          "delete_method": "resourceOriginRequestPolicyDelete"
        },
        "aws_cloudfront_public_key": {
          "create_method": "resourcePublicKeyCreate",
          "read_method": "resourcePublicKeyRead",
          "update_method": "resourcePublicKeyUpdate",
          "delete_method": "resourcePublicKeyDelete"
        },
        "aws_cloudfront_realtime_log_config": {
          "create_method": "resourceRealtimeLogConfigCreate",
          "read_method": "resourceRealtimeLogConfigRead",
          "update_method": "resourceRealtimeLogConfigUpdate",
          "delete_method": "resourceRealtimeLogConfigDelete"
        },
        "aws_cloudfront_response_headers_policy": {
          "create_method": "resourceResponseHeadersPolicyCreate",
          "read_method": "resourceResponseHeadersPolicyRead",
          "update_method": "resourceResponseHeadersPolicyUpdate",
          "delete_method": "resourceResponseHeadersPolicyDelete"
        }
      },
      "data_source_methods": {
        "aws_cloudfront_cache_policy": {
          "read_method": "dataSourceCachePolicyRead"
        },
        "aws_cloudfront_distribution": {
          "read_method": "dataSourceDistributionRead"
        },
        "aws_cloudfront_function": {
          "read_method": "dataSourceFunctionRead"
        },
        "aws_cloudfront_log_delivery_canonical_user_id": {
          "read_method": "dataSourceLogDeliveryCanonicalUserIDRead"
        },
        "aws_cloudfront_origin_access_identities": {
          "read_method": "dataSourceOriginAccessIdentitiesRead"
        },
        "aws_cloudfront_origin_access_identity": {
          "read_method": "dataSourceOriginAccessIdentityRead"
        },
        "aws_cloudfront_origin_request_policy": {
          "read_method": "dataSourceOriginRequestPolicyRead"
        },
        "aws_cloudfront_realtime_log_config": {
          "read_method": "dataSourceRealtimeLogConfigRead"
        },
        "aws_cloudfront_response_headers_policy": {
          "read_method": "dataSourceResponseHeadersPolicyRead"
        }
      }
    },
    {
      "service_name": "cloudsearch",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/cloudsearch",
      "aws_sdk_resources": {
        "aws_cloudsearch_domain": {
          "terraform_type": "aws_cloudsearch_domain",
          "factory_function": "resourceCloudsearchDomain",
          "name": "Domain",
          "sdk_type": "sdk"
        },
        "aws_cloudsearch_domain_service_access_policy": {
          "terraform_type": "aws_cloudsearch_domain_service_access_policy",
          "factory_function": "resourceCloudsearchDomainServiceAccessPolicy",
          "name": "Domain Service Access Policy",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_cloudsearch_domain": {
          "create_method": "resourceDomainCreate",
          "read_method": "resourceDomainRead",
          "update_method": "resourceDomainUpdate",
          "delete_method": "resourceDomainDelete"
        },
        "aws_cloudsearch_domain_service_access_policy": {
          "create_method": "resourceDomainServiceAccessPolicyPut",
          "read_method": "resourceDomainServiceAccessPolicyRead",
          "update_method": "resourceDomainServiceAccessPolicyPut",
          "delete_method": "resourceDomainServiceAccessPolicyDelete"
        }
      }
    },
    {
      "service_name": "cloudtrail",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/cloudtrail",
      "aws_sdk_resources": {
        "aws_cloudtrail": {
          "terraform_type": "aws_cloudtrail",
          "factory_function": "resourceCloudtrail",
          "name": "Trail",
          "sdk_type": "sdk"
        },
        "aws_cloudtrail_event_data_store": {
          "terraform_type": "aws_cloudtrail_event_data_store",
          "factory_function": "resourceCloudtrailEventDataStore",
          "name": "Event Data Store",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_cloudtrail_service_account": {
          "terraform_type": "aws_cloudtrail_service_account",
          "factory_function": "dataSourceCloudtrailServiceAccount",
          "name": "Service Account",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_cloudtrail_organization_delegated_admin_account": {
          "terraform_type": "aws_cloudtrail_organization_delegated_admin_account",
          "factory_function": "newCloudtrailOrganizationDelegatedAdminAccountResource",
          "name": "Organization Delegated Admin Account",
          "sdk_type": "framework",
          "struct_type": "organizationDelegatedAdminAccountResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "organizationDelegatedAdminAccountResource": "aws_cloudtrail_organization_delegated_admin_account"
      },
      "resource_crud_methods": {
        "aws_cloudtrail": {
          "create_method": "resourceTrailCreate",
          "read_method": "resourceTrailRead",
          "update_method": "resourceTrailUpdate",
          "delete_method": "resourceTrailDelete"
        },
        "aws_cloudtrail_event_data_store": {
          "create_method": "resourceEventDataStoreCreate",
          "read_method": "resourceEventDataStoreRead",
          "update_method": "resourceEventDataStoreUpdate",
          "delete_method": "resourceEventDataStoreDelete"
        }
      },
      "data_source_methods": {
        "aws_cloudtrail_service_account": {
          "read_method": "dataSourceServiceAccountRead"
        }
      }
    },
    {
      "service_name": "codeartifact",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/codeartifact",
      "aws_sdk_resources": {
        "aws_codeartifact_domain": {
          "terraform_type": "aws_codeartifact_domain",
          "factory_function": "resourceCodeartifactDomain",
          "name": "Domain",
          "sdk_type": "sdk"
        },
        "aws_codeartifact_domain_permissions_policy": {
          "terraform_type": "aws_codeartifact_domain_permissions_policy",
          "factory_function": "resourceCodeartifactDomainPermissionsPolicy",
          "name": "Domain Permissions Policy",
          "sdk_type": "sdk"
        },
        "aws_codeartifact_repository": {
          "terraform_type": "aws_codeartifact_repository",
          "factory_function": "resourceCodeartifactRepository",
          "name": "Repository",
          "sdk_type": "sdk"
        },
        "aws_codeartifact_repository_permissions_policy": {
          "terraform_type": "aws_codeartifact_repository_permissions_policy",
          "factory_function": "resourceCodeartifactRepositoryPermissionsPolicy",
          "name": "Repository Permissions Policy",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_codeartifact_authorization_token": {
          "terraform_type": "aws_codeartifact_authorization_token",
          "factory_function": "dataSourceCodeartifactAuthorizationToken",
          "name": "Authoiration Token",
          "sdk_type": "sdk"
        },
        "aws_codeartifact_repository_endpoint": {
          "terraform_type": "aws_codeartifact_repository_endpoint",
          "factory_function": "dataSourceCodeartifactRepositoryEndpoint",
          "name": "Repository Endpoint",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_codeartifact_domain": {
          "create_method": "resourceDomainCreate",
          "read_method": "resourceDomainRead",
          "update_method": "resourceDomainUpdate",
          "delete_method": "resourceDomainDelete"
        },
        "aws_codeartifact_domain_permissions_policy": {
          "create_method": "resourceDomainPermissionsPolicyPut",
          "read_method": "resourceDomainPermissionsPolicyRead",
          "update_method": "resourceDomainPermissionsPolicyPut",
          "delete_method": "resourceDomainPermissionsPolicyDelete"
        },
        "aws_codeartifact_repository": {
          "create_method": "resourceRepositoryCreate",
          "read_method": "resourceRepositoryRead",
          "update_method": "resourceRepositoryUpdate",
          "delete_method": "resourceRepositoryDelete"
        },
        "aws_codeartifact_repository_permissions_policy": {
          "create_method": "resourceRepositoryPermissionsPolicyPut",
          "read_method": "resourceRepositoryPermissionsPolicyRead",
          "update_method": "resourceRepositoryPermissionsPolicyPut",
          "delete_method": "resourceRepositoryPermissionsPolicyDelete"
        }
      },
      "data_source_methods": {
        "aws_codeartifact_authorization_token": {
          "read_method": "dataSourceAuthorizationTokenRead"
        },
        "aws_codeartifact_repository_endpoint": {
          "read_method": "dataSourceRepositoryEndpointRead"
        }
      }
    },
    {
      "service_name": "cloudwatch",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/cloudwatch",
      "aws_sdk_resources": {
        "aws_cloudwatch_composite_alarm": {
          "terraform_type": "aws_cloudwatch_composite_alarm",
          "factory_function": "resourceCloudwatchCompositeAlarm",
          "name": "Composite Alarm",
          "sdk_type": "sdk"
        },
        "aws_cloudwatch_dashboard": {
          "terraform_type": "aws_cloudwatch_dashboard",
          "factory_function": "resourceCloudwatchDashboard",
          "name": "Dashboard",
          "sdk_type": "sdk"
        },
        "aws_cloudwatch_metric_alarm": {
          "terraform_type": "aws_cloudwatch_metric_alarm",
          "factory_function": "resourceCloudwatchMetricAlarm",
          "name": "Metric Alarm",
          "sdk_type": "sdk"
        },
        "aws_cloudwatch_metric_stream": {
          "terraform_type": "aws_cloudwatch_metric_stream",
          "factory_function": "resourceCloudwatchMetricStream",
          "name": "Metric Stream",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_cloudwatch_contributor_insight_rule": {
          "terraform_type": "aws_cloudwatch_contributor_insight_rule",
          "factory_function": "newCloudwatchContributorInsightRuleResource",
          "name": "Contributor Insight Rule",
          "sdk_type": "framework",
          "struct_type": "contributorInsightRuleResource"
        },
        "aws_cloudwatch_contributor_managed_insight_rule": {
          "terraform_type": "aws_cloudwatch_contributor_managed_insight_rule",
          "factory_function": "newCloudwatchContributorManagedInsightRuleResource",
          "name": "Contributor Managed Insight Rule",
          "sdk_type": "framework",
          "struct_type": "contributorManagedInsightRuleResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_cloudwatch_contributor_managed_insight_rules": {
          "terraform_type": "aws_cloudwatch_contributor_managed_insight_rules",
          "factory_function": "newCloudwatchContributorManagedInsightRulesDataSource",
          "name": "Contributor Managed Insight Rules",
          "sdk_type": "framework",
          "struct_type": "contributorManagedInsightRulesDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "contributorInsightRuleResource": "aws_cloudwatch_contributor_insight_rule",
        "contributorManagedInsightRuleResource": "aws_cloudwatch_contributor_managed_insight_rule"
      },
      "data_source_terraform_types": {
        "contributorManagedInsightRulesDataSource": "aws_cloudwatch_contributor_managed_insight_rules"
      },
      "resource_crud_methods": {
        "aws_cloudwatch_composite_alarm": {
          "create_method": "resourceCompositeAlarmCreate",
          "read_method": "resourceCompositeAlarmRead",
          "update_method": "resourceCompositeAlarmUpdate",
          "delete_method": "resourceCompositeAlarmDelete"
        },
        "aws_cloudwatch_dashboard": {
          "create_method": "resourceDashboardPut",
          "read_method": "resourceDashboardRead",
          "update_method": "resourceDashboardPut",
          "delete_method": "resourceDashboardDelete"
        },
        "aws_cloudwatch_metric_alarm": {
          "create_method": "resourceMetricAlarmCreate",
          "read_method": "resourceMetricAlarmRead",
          "update_method": "resourceMetricAlarmUpdate",
          "delete_method": "resourceMetricAlarmDelete"
        },
        "aws_cloudwatch_metric_stream": {
          "create_method": "resourceMetricStreamCreate",
          "read_method": "resourceMetricStreamRead",
          "update_method": "resourceMetricStreamUpdate",
          "delete_method": "resourceMetricStreamDelete"
        }
      }
    },
    {
      "service_name": "codebuild",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/codebuild",
      "aws_sdk_resources": {
        "aws_codebuild_fleet": {
          "terraform_type": "aws_codebuild_fleet",
          "factory_function": "resourceCodebuildFleet",
          "name": "Fleet",
          "sdk_type": "sdk"
        },
        "aws_codebuild_project": {
          "terraform_type": "aws_codebuild_project",
          "factory_function": "resourceCodebuildProject",
          "name": "Project",
          "sdk_type": "sdk"
        },
        "aws_codebuild_report_group": {
          "terraform_type": "aws_codebuild_report_group",
          "factory_function": "resourceCodebuildReportGroup",
          "name": "Report Group",
          "sdk_type": "sdk"
        },
        "aws_codebuild_resource_policy": {
          "terraform_type": "aws_codebuild_resource_policy",
          "factory_function": "resourceCodebuildResourcePolicy",
          "name": "Resource Policy",
          "sdk_type": "sdk"
        },
        "aws_codebuild_source_credential": {
          "terraform_type": "aws_codebuild_source_credential",
          "factory_function": "resourceCodebuildSourceCredential",
          "name": "Source Credential",
          "sdk_type": "sdk"
        },
        "aws_codebuild_webhook": {
          "terraform_type": "aws_codebuild_webhook",
          "factory_function": "resourceCodebuildWebhook",
          "name": "Webhook",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_codebuild_fleet": {
          "terraform_type": "aws_codebuild_fleet",
          "factory_function": "dataSourceCodebuildFleet",
          "name": "Fleet",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_codebuild_fleet": {
          "create_method": "resourceFleetCreate",
          "read_method": "resourceFleetRead",
          "update_method": "resourceFleetUpdate",
          "delete_method": "resourceFleetDelete"
        },
        "aws_codebuild_project": {
          "create_method": "resourceProjectCreate",
          "read_method": "resourceProjectRead",
          "update_method": "resourceProjectUpdate",
          "delete_method": "resourceProjectDelete"
        },
        "aws_codebuild_report_group": {
          "create_method": "resourceReportGroupCreate",
          "read_method": "resourceReportGroupRead",
          "update_method": "resourceReportGroupUpdate",
          "delete_method": "resourceReportGroupDelete"
        },
        "aws_codebuild_resource_policy": {
          "create_method": "resourceResourcePolicyPut",
          "read_method": "resourceResourcePolicyRead",
          "update_method": "resourceResourcePolicyPut",
          "delete_method": "resourceResourcePolicyDelete"
        },
        "aws_codebuild_source_credential": {
          "create_method": "resourceSourceCredentialCreate",
          "read_method": "resourceSourceCredentialRead",
          "delete_method": "resourceSourceCredentialDelete"
        },
        "aws_codebuild_webhook": {
          "create_method": "resourceWebhookCreate",
          "read_method": "resourceWebhookRead",
          "update_method": "resourceWebhookUpdate",
          "delete_method": "resourceWebhookDelete"
        }
      },
      "data_source_methods": {
        "aws_codebuild_fleet": {
          "read_method": "dataSourceFleetRead"
        }
      }
    },
    {
      "service_name": "codecatalyst",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/codecatalyst",
      "aws_sdk_resources": {
        "aws_codecatalyst_dev_environment": {
          "terraform_type": "aws_codecatalyst_dev_environment",
          "factory_function": "resourceCodecatalystDevEnvironment",
          "name": "DevEnvironment",
          "sdk_type": "sdk"
        },
        "aws_codecatalyst_project": {
          "terraform_type": "aws_codecatalyst_project",
          "factory_function": "resourceCodecatalystProject",
          "name": "Project",
          "sdk_type": "sdk"
        },
        "aws_codecatalyst_source_repository": {
          "terraform_type": "aws_codecatalyst_source_repository",
          "factory_function": "resourceCodecatalystSourceRepository",
          "name": "Source Repository",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_codecatalyst_dev_environment": {
          "terraform_type": "aws_codecatalyst_dev_environment",
          "factory_function": "dataSourceCodecatalystDevEnvironment",
          "name": "Dev Environment",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_codecatalyst_dev_environment": {
          "create_method": "resourceDevEnvironmentCreate",
          "read_method": "resourceDevEnvironmentRead",
          "update_method": "resourceDevEnvironmentUpdate",
          "delete_method": "resourceDevEnvironmentDelete"
        },
        "aws_codecatalyst_project": {
          "create_method": "resourceProjectCreate",
          "read_method": "resourceProjectRead",
          "update_method": "resourceProjectUpdate",
          "delete_method": "resourceProjectDelete"
        },
        "aws_codecatalyst_source_repository": {
          "create_method": "resourceSourceRepositoryCreate",
          "read_method": "resourceSourceRepositoryRead",
          "update_method": "resourceSourceRepositoryCreate",
          "delete_method": "resourceSourceRepositoryDelete"
        }
      },
      "data_source_methods": {
        "aws_codecatalyst_dev_environment": {
          "read_method": "dataSourceDevEnvironmentRead"
        }
      }
    },
    {
      "service_name": "codecommit",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/codecommit",
      "aws_sdk_resources": {
        "aws_codecommit_approval_rule_template": {
          "terraform_type": "aws_codecommit_approval_rule_template",
          "factory_function": "resourceCodecommitApprovalRuleTemplate",
          "name": "Approval Rule Template",
          "sdk_type": "sdk"
        },
        "aws_codecommit_approval_rule_template_association": {
          "terraform_type": "aws_codecommit_approval_rule_template_association",
          "factory_function": "resourceCodecommitApprovalRuleTemplateAssociation",
          "name": "Approval Rule Template Association",
          "sdk_type": "sdk"
        },
        "aws_codecommit_repository": {
          "terraform_type": "aws_codecommit_repository",
          "factory_function": "resourceCodecommitRepository",
          "name": "Repository",
          "sdk_type": "sdk"
        },
        "aws_codecommit_trigger": {
          "terraform_type": "aws_codecommit_trigger",
          "factory_function": "resourceCodecommitTrigger",
          "name": "Trigger",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_codecommit_approval_rule_template": {
          "terraform_type": "aws_codecommit_approval_rule_template",
          "factory_function": "dataSourceCodecommitApprovalRuleTemplate",
          "name": "Approval Rule Template",
          "sdk_type": "sdk"
        },
        "aws_codecommit_repository": {
          "terraform_type": "aws_codecommit_repository",
          "factory_function": "dataSourceCodecommitRepository",
          "name": "Repository",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_codecommit_approval_rule_template": {
          "create_method": "resourceApprovalRuleTemplateCreate",
          "read_method": "resourceApprovalRuleTemplateRead",
          "update_method": "resourceApprovalRuleTemplateUpdate",
          "delete_method": "resourceApprovalRuleTemplateDelete"
        },
        "aws_codecommit_approval_rule_template_association": {
          "create_method": "resourceApprovalRuleTemplateAssociationCreate",
          "read_method": "resourceApprovalRuleTemplateAssociationRead",
          "delete_method": "resourceApprovalRuleTemplateAssociationDelete"
        },
        "aws_codecommit_repository": {
          "create_method": "resourceRepositoryCreate",
          "read_method": "resourceRepositoryRead",
          "update_method": "resourceRepositoryUpdate",
          "delete_method": "resourceRepositoryDelete"
        },
        "aws_codecommit_trigger": {
          "create_method": "resourceTriggerCreate",
          "read_method": "resourceTriggerRead",
          "delete_method": "resourceTriggerDelete"
        }
      },
      "data_source_methods": {
        "aws_codecommit_approval_rule_template": {
          "read_method": "dataSourceApprovalRuleTemplateRead"
        },
        "aws_codecommit_repository": {
          "read_method": "dataSourceRepositoryRead"
        }
      }
    },
    {
      "service_name": "codeconnections",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/codeconnections",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_codeconnections_connection": {
          "terraform_type": "aws_codeconnections_connection",
          "factory_function": "newCodeconnectionsConnectionResource",
          "name": "Connection",
          "sdk_type": "framework",
          "struct_type": "connectionResource"
        },
        "aws_codeconnections_host": {
          "terraform_type": "aws_codeconnections_host",
          "factory_function": "newCodeconnectionsHostResource",
          "name": "Host",
          "sdk_type": "framework",
          "struct_type": "hostResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "connectionResource": "aws_codeconnections_connection",
        "hostResource": "aws_codeconnections_host"
      }
    },
    {
      "service_name": "codeguruprofiler",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/codeguruprofiler",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_codeguruprofiler_profiling_group": {
          "terraform_type": "aws_codeguruprofiler_profiling_group",
          "factory_function": "newCodeguruprofilerProfilingGroupResource",
          "name": "Profiling Group",
          "sdk_type": "framework",
          "struct_type": "profilingGroupResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_codeguruprofiler_profiling_group": {
          "terraform_type": "aws_codeguruprofiler_profiling_group",
          "factory_function": "newCodeguruprofilerProfilingGroupDataSource",
          "name": "Profiling Group",
          "sdk_type": "framework",
          "struct_type": "profilingGroupDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "profilingGroupResource": "aws_codeguruprofiler_profiling_group"
      },
      "data_source_terraform_types": {
        "profilingGroupDataSource": "aws_codeguruprofiler_profiling_group"
      }
    },
    {
      "service_name": "codegurureviewer",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/codegurureviewer",
      "aws_sdk_resources": {
        "aws_codegurureviewer_repository_association": {
          "terraform_type": "aws_codegurureviewer_repository_association",
          "factory_function": "resourceCodegurureviewerRepositoryAssociation",
          "name": "Repository Association",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_codegurureviewer_repository_association": {
          "create_method": "resourceRepositoryAssociationCreate",
          "read_method": "resourceRepositoryAssociationRead",
          "update_method": "resourceRepositoryAssociationUpdate",
          "delete_method": "resourceRepositoryAssociationDelete"
        }
      }
    },
    {
      "service_name": "codepipeline",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/codepipeline",
      "aws_sdk_resources": {
        "aws_codepipeline": {
          "terraform_type": "aws_codepipeline",
          "factory_function": "resourceCodepipeline",
          "name": "Pipeline",
          "sdk_type": "sdk"
        },
        "aws_codepipeline_custom_action_type": {
          "terraform_type": "aws_codepipeline_custom_action_type",
          "factory_function": "resourceCodepipelineCustomActionType",
          "name": "Custom Action Type",
          "sdk_type": "sdk"
        },
        "aws_codepipeline_webhook": {
          "terraform_type": "aws_codepipeline_webhook",
          "factory_function": "resourceCodepipelineWebhook",
          "name": "Webhook",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_codepipeline": {
          "create_method": "resourcePipelineCreate",
          "read_method": "resourcePipelineRead",
          "update_method": "resourcePipelineUpdate",
          "delete_method": "resourcePipelineDelete"
        },
        "aws_codepipeline_custom_action_type": {
          "create_method": "resourceCustomActionTypeCreate",
          "read_method": "resourceCustomActionTypeRead",
          "update_method": "resourceCustomActionTypeUpdate",
          "delete_method": "resourceCustomActionTypeDelete"
        },
        "aws_codepipeline_webhook": {
          "create_method": "resourceWebhookCreate",
          "read_method": "resourceWebhookRead",
          "update_method": "resourceWebhookUpdate",
          "delete_method": "resourceWebhookDelete"
        }
      }
    },
    {
      "service_name": "codestarconnections",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/codestarconnections",
      "aws_sdk_resources": {
        "aws_codestarconnections_connection": {
          "terraform_type": "aws_codestarconnections_connection",
          "factory_function": "resourceCodestarconnectionsConnection",
          "name": "Connection",
          "sdk_type": "sdk"
        },
        "aws_codestarconnections_host": {
          "terraform_type": "aws_codestarconnections_host",
          "factory_function": "resourceCodestarconnectionsHost",
          "name": "Host",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_codestarconnections_connection": {
          "terraform_type": "aws_codestarconnections_connection",
          "factory_function": "dataSourceCodestarconnectionsConnection",
          "name": "Connection",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_codestarconnections_connection": {
          "create_method": "resourceConnectionCreate",
          "read_method": "resourceConnectionRead",
          "update_method": "resourceConnectionUpdate",
          "delete_method": "resourceConnectionDelete"
        },
        "aws_codestarconnections_host": {
          "create_method": "resourceHostCreate",
          "read_method": "resourceHostRead",
          "update_method": "resourceHostUpdate",
          "delete_method": "resourceHostDelete"
        }
      },
      "data_source_methods": {
        "aws_codestarconnections_connection": {
          "read_method": "dataSourceConnectionRead"
        }
      }
    },
    {
      "service_name": "codestarnotifications",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/codestarnotifications",
      "aws_sdk_resources": {
        "aws_codestarnotifications_notification_rule": {
          "terraform_type": "aws_codestarnotifications_notification_rule",
          "factory_function": "resourceCodestarnotificationsNotificationRule",
          "name": "Notification Rule",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_codestarnotifications_notification_rule": {
          "create_method": "resourceNotificationRuleCreate",
          "read_method": "resourceNotificationRuleRead",
          "update_method": "resourceNotificationRuleUpdate",
          "delete_method": "resourceNotificationRuleDelete"
        }
      }
    },
    {
      "service_name": "cognitoidentity",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/cognitoidentity",
      "aws_sdk_resources": {
        "aws_cognito_identity_pool": {
          "terraform_type": "aws_cognito_identity_pool",
          "factory_function": "resourceCognitoIdentityPool",
          "name": "Pool",
          "sdk_type": "sdk"
        },
        "aws_cognito_identity_pool_provider_principal_tag": {
          "terraform_type": "aws_cognito_identity_pool_provider_principal_tag",
          "factory_function": "resourceCognitoIdentityPoolProviderPrincipalTag",
          "name": "Provider Principal Tags",
          "sdk_type": "sdk"
        },
        "aws_cognito_identity_pool_roles_attachment": {
          "terraform_type": "aws_cognito_identity_pool_roles_attachment",
          "factory_function": "resourceCognitoIdentityPoolRolesAttachment",
          "name": "Pool Roles Association",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_cognito_identity_pool": {
          "terraform_type": "aws_cognito_identity_pool",
          "factory_function": "dataSourceCognitoIdentityPool",
          "name": "Pool",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {
        "aws_cognito_identity_openid_token_for_developer_identity": {
          "terraform_type": "aws_cognito_identity_openid_token_for_developer_identity",
          "factory_function": "newCognitoIdentityOpenidTokenForDeveloperIdentityEphemeralResource",
          "name": "Open ID Connect Token For Developer Identity",
          "sdk_type": "framework",
          "struct_type": "openIDTokenForDeveloperIdentityEphemeralResource"
        }
      },
      "ephemeral_terraform_types": {
        "openIDTokenForDeveloperIdentityEphemeralResource": "aws_cognito_identity_openid_token_for_developer_identity"
      },
      "resource_crud_methods": {
        "aws_cognito_identity_pool": {
          "create_method": "resourcePoolCreate",
          "read_method": "resourcePoolRead",
          "update_method": "resourcePoolUpdate",
          "delete_method": "resourcePoolDelete"
        },
        "aws_cognito_identity_pool_provider_principal_tag": {
          "create_method": "resourcePoolProviderPrincipalTagCreate",
          "read_method": "resourcePoolProviderPrincipalTagRead",
          "update_method": "resourcePoolProviderPrincipalTagUpdate",
          "delete_method": "resourcePoolProviderPrincipalTagDelete"
        },
        "aws_cognito_identity_pool_roles_attachment": {
          "create_method": "resourcePoolRolesAttachmentCreate",
          "read_method": "resourcePoolRolesAttachmentRead",
          "update_method": "resourcePoolRolesAttachmentUpdate",
          "delete_method": "resourcePoolRolesAttachmentDelete"
        }
      },
      "data_source_methods": {
        "aws_cognito_identity_pool": {
          "read_method": "dataSourcePoolRead"
        }
      }
    },
    {
      "service_name": "cognitoidp",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/cognitoidp",
      "aws_sdk_resources": {
        "aws_cognito_identity_provider": {
          "terraform_type": "aws_cognito_identity_provider",
          "factory_function": "resourceCognitoIdentityProvider",
          "name": "Identity Provider",
          "sdk_type": "sdk"
        },
        "aws_cognito_resource_server": {
          "terraform_type": "aws_cognito_resource_server",
          "factory_function": "resourceCognitoResourceServer",
          "name": "Resource Server",
          "sdk_type": "sdk"
        },
        "aws_cognito_risk_configuration": {
          "terraform_type": "aws_cognito_risk_configuration",
          "factory_function": "resourceCognitoRiskConfiguration",
          "name": "Risk Configuration",
          "sdk_type": "sdk"
        },
        "aws_cognito_user": {
          "terraform_type": "aws_cognito_user",
          "factory_function": "resourceCognitoUser",
          "name": "User",
          "sdk_type": "sdk"
        },
        "aws_cognito_user_group": {
          "terraform_type": "aws_cognito_user_group",
          "factory_function": "resourceCognitoUserGroup",
          "name": "User Group",
          "sdk_type": "sdk"
        },
        "aws_cognito_user_in_group": {
          "terraform_type": "aws_cognito_user_in_group",
          "factory_function": "resourceCognitoUserInGroup",
          "name": "Group User",
          "sdk_type": "sdk"
        },
        "aws_cognito_user_pool": {
          "terraform_type": "aws_cognito_user_pool",
          "factory_function": "resourceCognitoUserPool",
          "name": "User Pool",
          "sdk_type": "sdk"
        },
        "aws_cognito_user_pool_domain": {
          "terraform_type": "aws_cognito_user_pool_domain",
          "factory_function": "resourceCognitoUserPoolDomain",
          "name": "User Pool Domain",
          "sdk_type": "sdk"
        },
        "aws_cognito_user_pool_ui_customization": {
          "terraform_type": "aws_cognito_user_pool_ui_customization",
          "factory_function": "resourceCognitoUserPoolUiCustomization",
          "name": "User Pool UI Customization",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_cognito_user_pool_client": {
          "terraform_type": "aws_cognito_user_pool_client",
          "factory_function": "dataSourceCognitoUserPoolClient",
          "name": "User Pool Client",
          "sdk_type": "sdk"
        },
        "aws_cognito_user_pool_clients": {
          "terraform_type": "aws_cognito_user_pool_clients",
          "factory_function": "dataSourceCognitoUserPoolClients",
          "name": "User Pool Clients",
          "sdk_type": "sdk"
        },
        "aws_cognito_user_pool_signing_certificate": {
          "terraform_type": "aws_cognito_user_pool_signing_certificate",
          "factory_function": "dataSourceCognitoUserPoolSigningCertificate",
          "name": "User Pool Signing Certificate",
          "sdk_type": "sdk"
        },
        "aws_cognito_user_pools": {
          "terraform_type": "aws_cognito_user_pools",
          "factory_function": "dataSourceCognitoUserPools",
          "name": "User Pools",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_cognito_log_delivery_configuration": {
          "terraform_type": "aws_cognito_log_delivery_configuration",
          "factory_function": "newCognitoLogDeliveryConfigurationResource",
          "name": "Log Delivery Configuration",
          "sdk_type": "framework",
          "struct_type": "logDeliveryConfigurationResource"
        },
        "aws_cognito_managed_login_branding": {
          "terraform_type": "aws_cognito_managed_login_branding",
          "factory_function": "newCognitoManagedLoginBrandingResource",
          "name": "Managed Login Branding",
          "sdk_type": "framework",
          "struct_type": "managedLoginBrandingResource"
        },
        "aws_cognito_managed_user_pool_client": {
          "terraform_type": "aws_cognito_managed_user_pool_client",
          "factory_function": "newCognitoManagedUserPoolClientResource",
          "name": "Managed User Pool Client",
          "sdk_type": "framework",
          "struct_type": "managedUserPoolClientResource"
        },
        "aws_cognito_user_pool_client": {
          "terraform_type": "aws_cognito_user_pool_client",
          "factory_function": "newCognitoUserPoolClientResource",
          "name": "User Pool Client",
          "sdk_type": "framework",
          "struct_type": "userPoolClientResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_cognito_user_group": {
          "terraform_type": "aws_cognito_user_group",
          "factory_function": "newCognitoUserGroupDataSource",
          "name": "User Group",
          "sdk_type": "framework",
          "struct_type": "userGroupDataSource"
        },
        "aws_cognito_user_groups": {
          "terraform_type": "aws_cognito_user_groups",
          "factory_function": "newCognitoUserGroupsDataSource",
          "name": "User Groups",
          "sdk_type": "framework",
          "struct_type": "userGroupsDataSource"
        },
        "aws_cognito_user_pool": {
          "terraform_type": "aws_cognito_user_pool",
          "factory_function": "newCognitoUserPoolDataSource",
          "name": "User Pool",
          "sdk_type": "framework",
          "struct_type": "userPoolDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "logDeliveryConfigurationResource": "aws_cognito_log_delivery_configuration",
        "managedLoginBrandingResource": "aws_cognito_managed_login_branding",
        "managedUserPoolClientResource": "aws_cognito_managed_user_pool_client",
        "userPoolClientResource": "aws_cognito_user_pool_client"
      },
      "data_source_terraform_types": {
        "userGroupDataSource": "aws_cognito_user_group",
        "userGroupsDataSource": "aws_cognito_user_groups",
        "userPoolDataSource": "aws_cognito_user_pool"
      },
      "resource_crud_methods": {
        "aws_cognito_identity_provider": {
          "create_method": "resourceIdentityProviderCreate",
          "read_method": "resourceIdentityProviderRead",
          "update_method": "resourceIdentityProviderUpdate",
          "delete_method": "resourceIdentityProviderDelete"
        },
        "aws_cognito_resource_server": {
          "create_method": "resourceResourceServerCreate",
          "read_method": "resourceResourceServerRead",
          "update_method": "resourceResourceServerUpdate",
          "delete_method": "resourceResourceServerDelete"
        },
        "aws_cognito_risk_configuration": {
          "create_method": "resourceRiskConfigurationPut",
          "read_method": "resourceRiskConfigurationRead",
          "update_method": "resourceRiskConfigurationPut",
          "delete_method": "resourceRiskConfigurationDelete"
        },
        "aws_cognito_user": {
          "create_method": "resourceUserCreate",
          "read_method": "resourceUserRead",
          "update_method": "resourceUserUpdate",
          "delete_method": "resourceUserDelete"
        },
        "aws_cognito_user_group": {
          "create_method": "resourceUserGroupCreate",
          "read_method": "resourceUserGroupRead",
          "update_method": "resourceUserGroupUpdate",
          "delete_method": "resourceUserGroupDelete"
        },
        "aws_cognito_user_in_group": {
          "create_method": "resourceUserInGroupCreate",
          "read_method": "resourceUserInGroupRead",
          "delete_method": "resourceUserInGroupDelete"
        },
        "aws_cognito_user_pool": {
          "create_method": "resourceUserPoolCreate",
          "read_method": "resourceUserPoolRead",
          "update_method": "resourceUserPoolUpdate",
          "delete_method": "resourceUserPoolDelete"
        },
        "aws_cognito_user_pool_domain": {
          "create_method": "resourceUserPoolDomainCreate",
          "read_method": "resourceUserPoolDomainRead",
          "update_method": "resourceUserPoolDomainUpdate",
          "delete_method": "resourceUserPoolDomainDelete"
        },
        "aws_cognito_user_pool_ui_customization": {
          "create_method": "resourceUserPoolUICustomizationPut",
          "read_method": "resourceUserPoolUICustomizationRead",
          "update_method": "resourceUserPoolUICustomizationPut",
          "delete_method": "resourceUserPoolUICustomizationDelete"
        }
      },
      "data_source_methods": {
        "aws_cognito_user_pool_client": {
          "read_method": "dataSourceUserPoolClientRead"
        },
        "aws_cognito_user_pool_clients": {
          "read_method": "dataSourceuserPoolClientsRead"
        },
        "aws_cognito_user_pool_signing_certificate": {
          "read_method": "dataSourceUserPoolSigningCertificateRead"
        },
        "aws_cognito_user_pools": {
          "read_method": "dataSourceUserPoolsRead"
        }
      }
    },
    {
      "service_name": "comprehend",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/comprehend",
      "aws_sdk_resources": {
        "aws_comprehend_document_classifier": {
          "terraform_type": "aws_comprehend_document_classifier",
          "factory_function": "resourceComprehendDocumentClassifier",
          "name": "Document Classifier",
          "sdk_type": "sdk"
        },
        "aws_comprehend_entity_recognizer": {
          "terraform_type": "aws_comprehend_entity_recognizer",
          "factory_function": "resourceComprehendEntityRecognizer",
          "name": "Entity Recognizer",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_comprehend_document_classifier": {
          "create_method": "resourceDocumentClassifierCreate",
          "read_method": "resourceDocumentClassifierRead",
          "update_method": "resourceDocumentClassifierUpdate",
          "delete_method": "resourceDocumentClassifierDelete"
        },
        "aws_comprehend_entity_recognizer": {
          "create_method": "resourceEntityRecognizerCreate",
          "read_method": "resourceEntityRecognizerRead",
          "update_method": "resourceEntityRecognizerUpdate",
          "delete_method": "resourceEntityRecognizerDelete"
        }
      }
    },
    {
      "service_name": "computeoptimizer",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/computeoptimizer",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_computeoptimizer_enrollment_status": {
          "terraform_type": "aws_computeoptimizer_enrollment_status",
          "factory_function": "newComputeoptimizerEnrollmentStatusResource",
          "name": "Enrollment Status",
          "sdk_type": "framework",
          "struct_type": "enrollmentStatusResource"
        },
        "aws_computeoptimizer_recommendation_preferences": {
          "terraform_type": "aws_computeoptimizer_recommendation_preferences",
          "factory_function": "newComputeoptimizerRecommendationPreferencesResource",
          "name": "Recommendation Preferences",
          "sdk_type": "framework",
          "struct_type": "recommendationPreferencesResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "enrollmentStatusResource": "aws_computeoptimizer_enrollment_status",
        "recommendationPreferencesResource": "aws_computeoptimizer_recommendation_preferences"
      }
    },
    {
      "service_name": "connect",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/connect",
      "aws_sdk_resources": {
        "aws_connect_bot_association": {
          "terraform_type": "aws_connect_bot_association",
          "factory_function": "resourceConnectBotAssociation",
          "name": "Bot Association",
          "sdk_type": "sdk"
        },
        "aws_connect_contact_flow": {
          "terraform_type": "aws_connect_contact_flow",
          "factory_function": "resourceConnectContactFlow",
          "name": "Contact Flow",
          "sdk_type": "sdk"
        },
        "aws_connect_contact_flow_module": {
          "terraform_type": "aws_connect_contact_flow_module",
          "factory_function": "resourceConnectContactFlowModule",
          "name": "Contact Flow Module",
          "sdk_type": "sdk"
        },
        "aws_connect_hours_of_operation": {
          "terraform_type": "aws_connect_hours_of_operation",
          "factory_function": "resourceConnectHoursOfOperation",
          "name": "Hours Of Operation",
          "sdk_type": "sdk"
        },
        "aws_connect_instance": {
          "terraform_type": "aws_connect_instance",
          "factory_function": "resourceConnectInstance",
          "name": "Instance",
          "sdk_type": "sdk"
        },
        "aws_connect_instance_storage_config": {
          "terraform_type": "aws_connect_instance_storage_config",
          "factory_function": "resourceConnectInstanceStorageConfig",
          "name": "Instance Storage Config",
          "sdk_type": "sdk"
        },
        "aws_connect_lambda_function_association": {
          "terraform_type": "aws_connect_lambda_function_association",
          "factory_function": "resourceConnectLambdaFunctionAssociation",
          "name": "Lambda Function Association",
          "sdk_type": "sdk"
        },
        "aws_connect_phone_number": {
          "terraform_type": "aws_connect_phone_number",
          "factory_function": "resourceConnectPhoneNumber",
          "name": "Phone Number",
          "sdk_type": "sdk"
        },
        "aws_connect_queue": {
          "terraform_type": "aws_connect_queue",
          "factory_function": "resourceConnectQueue",
          "name": "Queue",
          "sdk_type": "sdk"
        },
        "aws_connect_quick_connect": {
          "terraform_type": "aws_connect_quick_connect",
          "factory_function": "resourceConnectQuickConnect",
          "name": "Quick Connect",
          "sdk_type": "sdk"
        },
        "aws_connect_routing_profile": {
          "terraform_type": "aws_connect_routing_profile",
          "factory_function": "resourceConnectRoutingProfile",
          "name": "Routing Profile",
          "sdk_type": "sdk"
        },
        "aws_connect_security_profile": {
          "terraform_type": "aws_connect_security_profile",
          "factory_function": "resourceConnectSecurityProfile",
          "name": "Security Profile",
          "sdk_type": "sdk"
        },
        "aws_connect_user": {
          "terraform_type": "aws_connect_user",
          "factory_function": "resourceConnectUser",
          "name": "User",
          "sdk_type": "sdk"
        },
        "aws_connect_user_hierarchy_group": {
          "terraform_type": "aws_connect_user_hierarchy_group",
          "factory_function": "resourceConnectUserHierarchyGroup",
          "name": "User Hierarchy Group",
          "sdk_type": "sdk"
        },
        "aws_connect_user_hierarchy_structure": {
          "terraform_type": "aws_connect_user_hierarchy_structure",
          "factory_function": "resourceConnectUserHierarchyStructure",
          "name": "User Hierarchy Structure",
          "sdk_type": "sdk"
        },
        "aws_connect_vocabulary": {
          "terraform_type": "aws_connect_vocabulary",
          "factory_function": "resourceConnectVocabulary",
          "name": "Vocabulary",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_connect_bot_association": {
          "terraform_type": "aws_connect_bot_association",
          "factory_function": "dataSourceConnectBotAssociation",
          "name": "Bot Association",
          "sdk_type": "sdk"
        },
        "aws_connect_contact_flow": {
          "terraform_type": "aws_connect_contact_flow",
          "factory_function": "dataSourceConnectContactFlow",
          "name": "Contact Flow",
          "sdk_type": "sdk"
        },
        "aws_connect_contact_flow_module": {
          "terraform_type": "aws_connect_contact_flow_module",
          "factory_function": "dataSourceConnectContactFlowModule",
          "name": "Contact Flow Module",
          "sdk_type": "sdk"
        },
        "aws_connect_hours_of_operation": {
          "terraform_type": "aws_connect_hours_of_operation",
          "factory_function": "dataSourceConnectHoursOfOperation",
          "name": "Hours Of Operation",
          "sdk_type": "sdk"
        },
        "aws_connect_instance": {
          "terraform_type": "aws_connect_instance",
          "factory_function": "dataSourceConnectInstance",
          "name": "Instance",
          "sdk_type": "sdk"
        },
        "aws_connect_instance_storage_config": {
          "terraform_type": "aws_connect_instance_storage_config",
          "factory_function": "dataSourceConnectInstanceStorageConfig",
          "name": "Instance Storage Config",
          "sdk_type": "sdk"
        },
        "aws_connect_lambda_function_association": {
          "terraform_type": "aws_connect_lambda_function_association",
          "factory_function": "dataSourceConnectLambdaFunctionAssociation",
          "name": "Lambda Function Association",
          "sdk_type": "sdk"
        },
        "aws_connect_prompt": {
          "terraform_type": "aws_connect_prompt",
          "factory_function": "dataSourceConnectPrompt",
          "name": "Prompt",
          "sdk_type": "sdk"
        },
        "aws_connect_queue": {
          "terraform_type": "aws_connect_queue",
          "factory_function": "dataSourceConnectQueue",
          "name": "Queue",
          "sdk_type": "sdk"
        },
        "aws_connect_quick_connect": {
          "terraform_type": "aws_connect_quick_connect",
          "factory_function": "dataSourceConnectQuickConnect",
          "name": "Quick Connect",
          "sdk_type": "sdk"
        },
        "aws_connect_routing_profile": {
          "terraform_type": "aws_connect_routing_profile",
          "factory_function": "dataSourceConnectRoutingProfile",
          "name": "Routing Profile",
          "sdk_type": "sdk"
        },
        "aws_connect_security_profile": {
          "terraform_type": "aws_connect_security_profile",
          "factory_function": "dataSourceConnectSecurityProfile",
          "name": "Security Profile",
          "sdk_type": "sdk"
        },
        "aws_connect_user": {
          "terraform_type": "aws_connect_user",
          "factory_function": "dataSourceConnectUser",
          "name": "User",
          "sdk_type": "sdk"
        },
        "aws_connect_user_hierarchy_group": {
          "terraform_type": "aws_connect_user_hierarchy_group",
          "factory_function": "dataSourceConnectUserHierarchyGroup",
          "name": "User Hierarchy Group",
          "sdk_type": "sdk"
        },
        "aws_connect_user_hierarchy_structure": {
          "terraform_type": "aws_connect_user_hierarchy_structure",
          "factory_function": "dataSourceConnectUserHierarchyStructure",
          "name": "User Hierarchy Structure",
          "sdk_type": "sdk"
        },
        "aws_connect_vocabulary": {
          "terraform_type": "aws_connect_vocabulary",
          "factory_function": "dataSourceConnectVocabulary",
          "name": "Vocabulary",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_connect_phone_number_contact_flow_association": {
          "terraform_type": "aws_connect_phone_number_contact_flow_association",
          "factory_function": "newConnectPhoneNumberContactFlowAssociationResource",
          "name": "Phone Number Contact Flow Association",
          "sdk_type": "framework",
          "struct_type": "phoneNumberContactFlowAssociationResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "phoneNumberContactFlowAssociationResource": "aws_connect_phone_number_contact_flow_association"
      },
      "resource_crud_methods": {
        "aws_connect_bot_association": {
          "create_method": "resourceBotAssociationCreate",
          "read_method": "resourceBotAssociationRead",
          "delete_method": "resourceBotAssociationDelete"
        },
        "aws_connect_contact_flow": {
          "create_method": "resourceContactFlowCreate",
          "read_method": "resourceContactFlowRead",
          "update_method": "resourceContactFlowUpdate",
          "delete_method": "resourceContactFlowDelete"
        },
        "aws_connect_contact_flow_module": {
          "create_method": "resourceContactFlowModuleCreate",
          "read_method": "resourceContactFlowModuleRead",
          "update_method": "resourceContactFlowModuleUpdate",
          "delete_method": "resourceContactFlowModuleDelete"
        },
        "aws_connect_hours_of_operation": {
          "create_method": "resourceHoursOfOperationCreate",
          "read_method": "resourceHoursOfOperationRead",
          "update_method": "resourceHoursOfOperationUpdate",
          "delete_method": "resourceHoursOfOperationDelete"
        },
        "aws_connect_instance": {
          "create_method": "resourceInstanceCreate",
          "read_method": "resourceInstanceRead",
          "update_method": "resourceInstanceUpdate",
          "delete_method": "resourceInstanceDelete"
        },
        "aws_connect_instance_storage_config": {
          "create_method": "resourceInstanceStorageConfigCreate",
          "read_method": "resourceInstanceStorageConfigRead",
          "update_method": "resourceInstanceStorageConfigUpdate",
          "delete_method": "resourceInstanceStorageConfigDelete"
        },
        "aws_connect_lambda_function_association": {
          "create_method": "resourceLambdaFunctionAssociationCreate",
          "read_method": "resourceLambdaFunctionAssociationRead",
          "delete_method": "resourceLambdaFunctionAssociationDelete"
        },
        "aws_connect_phone_number": {
          "create_method": "resourcePhoneNumberCreate",
          "read_method": "resourcePhoneNumberRead",
          "update_method": "resourcePhoneNumberUpdate",
          "delete_method": "resourcePhoneNumberDelete"
        },
        "aws_connect_queue": {
          "create_method": "resourceQueueCreate",
          "read_method": "resourceQueueRead",
          "update_method": "resourceQueueUpdate",
          "delete_method": "resourceQueueDelete"
        },
        "aws_connect_quick_connect": {
          "create_method": "resourceQuickConnectCreate",
          "read_method": "resourceQuickConnectRead",
          "update_method": "resourceQuickConnectUpdate",
          "delete_method": "resourceQuickConnectDelete"
        },
        "aws_connect_routing_profile": {
          "create_method": "resourceRoutingProfileCreate",
          "read_method": "resourceRoutingProfileRead",
          "update_method": "resourceRoutingProfileUpdate",
          "delete_method": "resourceRoutingProfileDelete"
        },
        "aws_connect_security_profile": {
          "create_method": "resourceSecurityProfileCreate",
          "read_method": "resourceSecurityProfileRead",
          "update_method": "resourceSecurityProfileUpdate",
          "delete_method": "resourceSecurityProfileDelete"
        },
        "aws_connect_user": {
          "create_method": "resourceUserCreate",
          "read_method": "resourceUserRead",
          "update_method": "resourceUserUpdate",
          "delete_method": "resourceUserDelete"
        },
        "aws_connect_user_hierarchy_group": {
          "create_method": "resourceUserHierarchyGroupCreate",
          "read_method": "resourceUserHierarchyGroupRead",
          "update_method": "resourceUserHierarchyGroupUpdate",
          "delete_method": "resourceUserHierarchyGroupDelete"
        },
        "aws_connect_user_hierarchy_structure": {
          "create_method": "resourceUserHierarchyStructureCreate",
          "read_method": "resourceUserHierarchyStructureRead",
          "update_method": "resourceUserHierarchyStructureUpdate",
          "delete_method": "resourceUserHierarchyStructureDelete"
        },
        "aws_connect_vocabulary": {
          "create_method": "resourceVocabularyCreate",
          "read_method": "resourceVocabularyRead",
          "update_method": "resourceVocabularyUpdate",
          "delete_method": "resourceVocabularyDelete"
        }
      },
      "data_source_methods": {
        "aws_connect_bot_association": {
          "read_method": "dataSourceBotAssociationRead"
        },
        "aws_connect_contact_flow": {
          "read_method": "dataSourceContactFlowRead"
        },
        "aws_connect_contact_flow_module": {
          "read_method": "dataSourceContactFlowModuleRead"
        },
        "aws_connect_hours_of_operation": {
          "read_method": "dataSourceHoursOfOperationRead"
        },
        "aws_connect_instance": {
          "read_method": "dataSourceInstanceRead"
        },
        "aws_connect_instance_storage_config": {
          "read_method": "dataSourceInstanceStorageConfigRead"
        },
        "aws_connect_lambda_function_association": {
          "read_method": "dataSourceLambdaFunctionAssociationRead"
        },
        "aws_connect_prompt": {
          "read_method": "dataSourcePromptRead"
        },
        "aws_connect_queue": {
          "read_method": "dataSourceQueueRead"
        },
        "aws_connect_quick_connect": {
          "read_method": "dataSourceQuickConnectRead"
        },
        "aws_connect_routing_profile": {
          "read_method": "dataSourceRoutingProfileRead"
        },
        "aws_connect_security_profile": {
          "read_method": "dataSourceSecurityProfileRead"
        },
        "aws_connect_user": {
          "read_method": "dataSourceUserRead"
        },
        "aws_connect_user_hierarchy_group": {
          "read_method": "dataSourceUserHierarchyGroupRead"
        },
        "aws_connect_user_hierarchy_structure": {
          "read_method": "dataSourceUserHierarchyStructureRead"
        },
        "aws_connect_vocabulary": {
          "read_method": "dataSourceVocabularyRead"
        }
      }
    },
    {
      "service_name": "configservice",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/configservice",
      "aws_sdk_resources": {
        "aws_config_aggregate_authorization": {
          "terraform_type": "aws_config_aggregate_authorization",
          "factory_function": "resourceConfigAggregateAuthorization",
          "name": "Aggregate Authorization",
          "sdk_type": "sdk"
        },
        "aws_config_config_rule": {
          "terraform_type": "aws_config_config_rule",
          "factory_function": "resourceConfigConfigRule",
          "name": "Config Rule",
          "sdk_type": "sdk"
        },
        "aws_config_configuration_aggregator": {
          "terraform_type": "aws_config_configuration_aggregator",
          "factory_function": "resourceConfigConfigurationAggregator",
          "name": "Configuration Aggregator",
          "sdk_type": "sdk"
        },
        "aws_config_configuration_recorder": {
          "terraform_type": "aws_config_configuration_recorder",
          "factory_function": "resourceConfigConfigurationRecorder",
          "name": "Configuration Recorder",
          "sdk_type": "sdk"
        },
        "aws_config_configuration_recorder_status": {
          "terraform_type": "aws_config_configuration_recorder_status",
          "factory_function": "resourceConfigConfigurationRecorderStatus",
          "name": "Configuration Recorder Status",
          "sdk_type": "sdk"
        },
        "aws_config_conformance_pack": {
          "terraform_type": "aws_config_conformance_pack",
          "factory_function": "resourceConfigConformancePack",
          "name": "Conformance Pack",
          "sdk_type": "sdk"
        },
        "aws_config_delivery_channel": {
          "terraform_type": "aws_config_delivery_channel",
          "factory_function": "resourceConfigDeliveryChannel",
          "name": "Delivery Channel",
          "sdk_type": "sdk"
        },
        "aws_config_organization_conformance_pack": {
          "terraform_type": "aws_config_organization_conformance_pack",
          "factory_function": "resourceConfigOrganizationConformancePack",
          "name": "Organization Conformance Pack",
          "sdk_type": "sdk"
        },
        "aws_config_organization_custom_policy_rule": {
          "terraform_type": "aws_config_organization_custom_policy_rule",
          "factory_function": "resourceConfigOrganizationCustomPolicyRule",
          "name": "Organization Custom Policy Rule",
          "sdk_type": "sdk"
        },
        "aws_config_organization_custom_rule": {
          "terraform_type": "aws_config_organization_custom_rule",
          "factory_function": "resourceConfigOrganizationCustomRule",
          "name": "Organization Custom Rule",
          "sdk_type": "sdk"
        },
        "aws_config_organization_managed_rule": {
          "terraform_type": "aws_config_organization_managed_rule",
          "factory_function": "resourceConfigOrganizationManagedRule",
          "name": "Organization Managed Rule",
          "sdk_type": "sdk"
        },
        "aws_config_remediation_configuration": {
          "terraform_type": "aws_config_remediation_configuration",
          "factory_function": "resourceConfigRemediationConfiguration",
          "name": "Remediation Configuration",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_config_retention_configuration": {
          "terraform_type": "aws_config_retention_configuration",
          "factory_function": "newConfigRetentionConfigurationResource",
          "name": "Retention Configuration",
          "sdk_type": "framework",
          "struct_type": "retentionConfigurationResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "retentionConfigurationResource": "aws_config_retention_configuration"
      },
      "resource_crud_methods": {
        "aws_config_aggregate_authorization": {
          "create_method": "resourceAggregateAuthorizationCreate",
          "read_method": "resourceAggregateAuthorizationRead",
          "update_method": "resourceAggregateAuthorizationUpdate",
          "delete_method": "resourceAggregateAuthorizationDelete"
        },
        "aws_config_config_rule": {
          "create_method": "resourceConfigRulePut",
          "read_method": "resourceConfigRuleRead",
          "update_method": "resourceConfigRulePut",
          "delete_method": "resourceConfigRuleDelete"
        },
        "aws_config_configuration_aggregator": {
          "create_method": "resourceConfigurationAggregatorPut",
          "read_method": "resourceConfigurationAggregatorRead",
          "update_method": "resourceConfigurationAggregatorPut",
          "delete_method": "resourceConfigurationAggregatorDelete"
        },
        "aws_config_configuration_recorder": {
          "create_method": "resourceConfigurationRecorderPut",
          "read_method": "resourceConfigurationRecorderRead",
          "update_method": "resourceConfigurationRecorderPut",
          "delete_method": "resourceConfigurationRecorderDelete"
        },
        "aws_config_configuration_recorder_status": {
          "create_method": "resourceConfigurationRecorderStatusPut",
          "read_method": "resourceConfigurationRecorderStatusRead",
          "update_method": "resourceConfigurationRecorderStatusPut",
          "delete_method": "resourceConfigurationRecorderStatusDelete"
        },
        "aws_config_conformance_pack": {
          "create_method": "resourceConformancePackPut",
          "read_method": "resourceConformancePackRead",
          "update_method": "resourceConformancePackPut",
          "delete_method": "resourceConformancePackDelete"
        },
        "aws_config_delivery_channel": {
          "create_method": "resourceDeliveryChannelPut",
          "read_method": "resourceDeliveryChannelRead",
          "update_method": "resourceDeliveryChannelPut",
          "delete_method": "resourceDeliveryChannelDelete"
        },
        "aws_config_organization_conformance_pack": {
          "create_method": "resourceOrganizationConformancePackCreate",
          "read_method": "resourceOrganizationConformancePackRead",
          "update_method": "resourceOrganizationConformancePackUpdate",
          "delete_method": "resourceOrganizationConformancePackDelete"
        },
        "aws_config_organization_custom_policy_rule": {
          "create_method": "resourceOrganizationCustomPolicyRuleCreate",
          "read_method": "resourceOrganizationCustomPolicyRuleRead",
          "update_method": "resourceOrganizationCustomPolicyRuleUpdate",
          "delete_method": "resourceOrganizationCustomPolicyRuleDelete"
        },
        "aws_config_organization_custom_rule": {
          "create_method": "resourceOrganizationCustomRuleCreate",
          "read_method": "resourceOrganizationCustomRuleRead",
          "update_method": "resourceOrganizationCustomRuleUpdate",
          "delete_method": "resourceOrganizationCustomRuleDelete"
        },
        "aws_config_organization_managed_rule": {
          "create_method": "resourceOrganizationManagedRuleCreate",
          "read_method": "resourceOrganizationManagedRuleRead",
          "update_method": "resourceOrganizationManagedRuleUpdate",
          "delete_method": "resourceOrganizationManagedRuleDelete"
        },
        "aws_config_remediation_configuration": {
          "create_method": "resourceRemediationConfigurationPut",
          "read_method": "resourceRemediationConfigurationRead",
          "update_method": "resourceRemediationConfigurationPut",
          "delete_method": "resourceRemediationConfigurationDelete"
        }
      }
    },
    {
      "service_name": "controltower",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/controltower",
      "aws_sdk_resources": {
        "aws_controltower_control": {
          "terraform_type": "aws_controltower_control",
          "factory_function": "resourceControltowerControl",
          "name": "Control",
          "sdk_type": "sdk"
        },
        "aws_controltower_landing_zone": {
          "terraform_type": "aws_controltower_landing_zone",
          "factory_function": "resourceControltowerLandingZone",
          "name": "Landing Zone",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_controltower_controls": {
          "terraform_type": "aws_controltower_controls",
          "factory_function": "dataSourceControltowerControls",
          "name": "Control",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_controltower_baseline": {
          "terraform_type": "aws_controltower_baseline",
          "factory_function": "newControltowerBaselineResource",
          "name": "Baseline",
          "sdk_type": "framework",
          "struct_type": "resourceBaseline"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "resourceBaseline": "aws_controltower_baseline"
      },
      "resource_crud_methods": {
        "aws_controltower_control": {
          "create_method": "resourceControlCreate",
          "read_method": "resourceControlRead",
          "update_method": "resourceControlUpdate",
          "delete_method": "resourceControlDelete"
        },
        "aws_controltower_landing_zone": {
          "create_method": "resourceLandingZoneCreate",
          "read_method": "resourceLandingZoneRead",
          "update_method": "resourceLandingZoneUpdate",
          "delete_method": "resourceLandingZoneDelete"
        }
      },
      "data_source_methods": {
        "aws_controltower_controls": {
          "read_method": "dataSourceControlsRead"
        }
      }
    },
    {
      "service_name": "costoptimizationhub",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/costoptimizationhub",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_costoptimizationhub_enrollment_status": {
          "terraform_type": "aws_costoptimizationhub_enrollment_status",
          "factory_function": "newCostoptimizationhubEnrollmentStatusResource",
          "name": "Enrollment Status",
          "sdk_type": "framework",
          "struct_type": "enrollmentStatusResource"
        },
        "aws_costoptimizationhub_preferences": {
          "terraform_type": "aws_costoptimizationhub_preferences",
          "factory_function": "newCostoptimizationhubPreferencesResource",
          "name": "Preferences",
          "sdk_type": "framework",
          "struct_type": "preferencesResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "enrollmentStatusResource": "aws_costoptimizationhub_enrollment_status",
        "preferencesResource": "aws_costoptimizationhub_preferences"
      }
    },
    {
      "service_name": "cur",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/cur",
      "aws_sdk_resources": {
        "aws_cur_report_definition": {
          "terraform_type": "aws_cur_report_definition",
          "factory_function": "resourceCurReportDefinition",
          "name": "Report Definition",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_cur_report_definition": {
          "terraform_type": "aws_cur_report_definition",
          "factory_function": "dataSourceCurReportDefinition",
          "name": "Report Definition",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_cur_report_definition": {
          "create_method": "resourceReportDefinitionCreate",
          "read_method": "resourceReportDefinitionRead",
          "update_method": "resourceReportDefinitionUpdate",
          "delete_method": "resourceReportDefinitionDelete"
        }
      },
      "data_source_methods": {
        "aws_cur_report_definition": {
          "read_method": "dataSourceReportDefinitionRead"
        }
      }
    },
    {
      "service_name": "customerprofiles",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/customerprofiles",
      "aws_sdk_resources": {
        "aws_customerprofiles_domain": {
          "terraform_type": "aws_customerprofiles_domain",
          "factory_function": "resourceCustomerprofilesDomain",
          "name": "Domain",
          "sdk_type": "sdk"
        },
        "aws_customerprofiles_profile": {
          "terraform_type": "aws_customerprofiles_profile",
          "factory_function": "resourceCustomerprofilesProfile",
          "name": "Profile",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_customerprofiles_domain": {
          "create_method": "resourceDomainCreate",
          "read_method": "resourceDomainRead",
          "update_method": "resourceDomainUpdate",
          "delete_method": "resourceDomainDelete"
        },
        "aws_customerprofiles_profile": {
          "create_method": "resourceProfileCreate",
          "read_method": "resourceProfileRead",
          "update_method": "resourceProfileUpdate",
          "delete_method": "resourceProfileDelete"
        }
      }
    },
    {
      "service_name": "datapipeline",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/datapipeline",
      "aws_sdk_resources": {
        "aws_datapipeline_pipeline": {
          "terraform_type": "aws_datapipeline_pipeline",
          "factory_function": "resourceDatapipelinePipeline",
          "name": "Pipeline",
          "sdk_type": "sdk"
        },
        "aws_datapipeline_pipeline_definition": {
          "terraform_type": "aws_datapipeline_pipeline_definition",
          "factory_function": "resourceDatapipelinePipelineDefinition",
          "name": "Pipeline Definition",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_datapipeline_pipeline": {
          "terraform_type": "aws_datapipeline_pipeline",
          "factory_function": "dataSourceDatapipelinePipeline",
          "name": "Pipeline",
          "sdk_type": "sdk"
        },
        "aws_datapipeline_pipeline_definition": {
          "terraform_type": "aws_datapipeline_pipeline_definition",
          "factory_function": "dataSourceDatapipelinePipelineDefinition",
          "name": "Pipeline Definition",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_datapipeline_pipeline": {
          "create_method": "resourcePipelineCreate",
          "read_method": "resourcePipelineRead",
          "update_method": "resourcePipelineUpdate",
          "delete_method": "resourcePipelineDelete"
        },
        "aws_datapipeline_pipeline_definition": {
          "create_method": "resourcePipelineDefinitionPut",
          "read_method": "resourcePipelineDefinitionRead",
          "update_method": "resourcePipelineDefinitionPut"
        }
      },
      "data_source_methods": {
        "aws_datapipeline_pipeline": {
          "read_method": "dataSourcePipelineRead"
        },
        "aws_datapipeline_pipeline_definition": {
          "read_method": "dataSourcePipelineDefinitionRead"
        }
      }
    },
    {
      "service_name": "dataexchange",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/dataexchange",
      "aws_sdk_resources": {
        "aws_dataexchange_data_set": {
          "terraform_type": "aws_dataexchange_data_set",
          "factory_function": "resourceDataexchangeDataSet",
          "name": "Data Set",
          "sdk_type": "sdk"
        },
        "aws_dataexchange_revision": {
          "terraform_type": "aws_dataexchange_revision",
          "factory_function": "resourceDataexchangeRevision",
          "name": "Revision",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_dataexchange_event_action": {
          "terraform_type": "aws_dataexchange_event_action",
          "factory_function": "newDataexchangeEventActionResource",
          "name": "Event Action",
          "sdk_type": "framework",
          "struct_type": "eventActionResource"
        },
        "aws_dataexchange_revision_assets": {
          "terraform_type": "aws_dataexchange_revision_assets",
          "factory_function": "newDataexchangeRevisionAssetsResource",
          "name": "Revision Assets",
          "sdk_type": "framework",
          "struct_type": "revisionAssetsResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "eventActionResource": "aws_dataexchange_event_action",
        "revisionAssetsResource": "aws_dataexchange_revision_assets"
      },
      "resource_crud_methods": {
        "aws_dataexchange_data_set": {
          "create_method": "resourceDataSetCreate",
          "read_method": "resourceDataSetRead",
          "update_method": "resourceDataSetUpdate",
          "delete_method": "resourceDataSetDelete"
        },
        "aws_dataexchange_revision": {
          "create_method": "resourceRevisionCreate",
          "read_method": "resourceRevisionRead",
          "update_method": "resourceRevisionUpdate",
          "delete_method": "resourceRevisionDelete"
        }
      }
    },
    {
      "service_name": "datasync",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/datasync",
      "aws_sdk_resources": {
        "aws_datasync_agent": {
          "terraform_type": "aws_datasync_agent",
          "factory_function": "resourceDatasyncAgent",
          "name": "Agent",
          "sdk_type": "sdk"
        },
        "aws_datasync_location_azure_blob": {
          "terraform_type": "aws_datasync_location_azure_blob",
          "factory_function": "resourceDatasyncLocationAzureBlob",
          "name": "Location Microsoft Azure Blob Storage",
          "sdk_type": "sdk"
        },
        "aws_datasync_location_efs": {
          "terraform_type": "aws_datasync_location_efs",
          "factory_function": "resourceDatasyncLocationEfs",
          "name": "Location EFS",
          "sdk_type": "sdk"
        },
        "aws_datasync_location_fsx_lustre_file_system": {
          "terraform_type": "aws_datasync_location_fsx_lustre_file_system",
          "factory_function": "resourceDatasyncLocationFsxLustreFileSystem",
          "name": "Location FSx for Lustre File System",
          "sdk_type": "sdk"
        },
        "aws_datasync_location_fsx_ontap_file_system": {
          "terraform_type": "aws_datasync_location_fsx_ontap_file_system",
          "factory_function": "resourceDatasyncLocationFsxOntapFileSystem",
          "name": "Location FSx for NetApp ONTAP File System",
          "sdk_type": "sdk"
        },
        "aws_datasync_location_fsx_openzfs_file_system": {
          "terraform_type": "aws_datasync_location_fsx_openzfs_file_system",
          "factory_function": "resourceDatasyncLocationFsxOpenzfsFileSystem",
          "name": "Location FSx for OpenZFS File System",
          "sdk_type": "sdk"
        },
        "aws_datasync_location_fsx_windows_file_system": {
          "terraform_type": "aws_datasync_location_fsx_windows_file_system",
          "factory_function": "resourceDatasyncLocationFsxWindowsFileSystem",
          "name": "Location FSx for Windows File Server File System",
          "sdk_type": "sdk"
        },
        "aws_datasync_location_hdfs": {
          "terraform_type": "aws_datasync_location_hdfs",
          "factory_function": "resourceDatasyncLocationHdfs",
          "name": "Location HDFS",
          "sdk_type": "sdk"
        },
        "aws_datasync_location_nfs": {
          "terraform_type": "aws_datasync_location_nfs",
          "factory_function": "resourceDatasyncLocationNfs",
          "name": "Location NFS",
          "sdk_type": "sdk"
        },
        "aws_datasync_location_object_storage": {
          "terraform_type": "aws_datasync_location_object_storage",
          "factory_function": "resourceDatasyncLocationObjectStorage",
          "name": "Location Object Storage",
          "sdk_type": "sdk"
        },
        "aws_datasync_location_s3": {
          "terraform_type": "aws_datasync_location_s3",
          "factory_function": "resourceDatasyncLocationS3",
          "name": "Location S3",
          "sdk_type": "sdk"
        },
        "aws_datasync_location_smb": {
          "terraform_type": "aws_datasync_location_smb",
          "factory_function": "resourceDatasyncLocationSmb",
          "name": "Location SMB",
          "sdk_type": "sdk"
        },
        "aws_datasync_task": {
          "terraform_type": "aws_datasync_task",
          "factory_function": "resourceDatasyncTask",
          "name": "Task",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_datasync_agent": {
          "create_method": "resourceAgentCreate",
          "read_method": "resourceAgentRead",
          "update_method": "resourceAgentUpdate",
          "delete_method": "resourceAgentDelete"
        },
        "aws_datasync_location_azure_blob": {
          "create_method": "resourceLocationAzureBlobCreate",
          "read_method": "resourceLocationAzureBlobRead",
          "update_method": "resourceLocationAzureBlobUpdate",
          "delete_method": "resourceLocationAzureBlobDelete"
        },
        "aws_datasync_location_efs": {
          "create_method": "resourceLocationEFSCreate",
          "read_method": "resourceLocationEFSRead",
          "update_method": "resourceLocationEFSUpdate",
          "delete_method": "resourceLocationEFSDelete"
        },
        "aws_datasync_location_fsx_lustre_file_system": {
          "create_method": "resourceLocationFSxLustreFileSystemCreate",
          "read_method": "resourceLocationFSxLustreFileSystemRead",
          "update_method": "resourceLocationFSxLustreFileSystemUpdate",
          "delete_method": "resourceLocationFSxLustreFileSystemDelete"
        },
        "aws_datasync_location_fsx_ontap_file_system": {
          "create_method": "resourceLocationFSxONTAPFileSystemCreate",
          "read_method": "resourceLocationFSxONTAPFileSystemRead",
          "update_method": "resourceLocationFSxONTAPFileSystemUpdate",
          "delete_method": "resourceLocationFSxONTAPFileSystemDelete"
        },
        "aws_datasync_location_fsx_openzfs_file_system": {
          "create_method": "resourceLocationFSxOpenZFSFileSystemCreate",
          "read_method": "resourceLocationFSxOpenZFSFileSystemRead",
          "update_method": "resourceLocationFSxOpenZFSFileSystemUpdate",
          "delete_method": "resourceLocationFSxOpenZFSFileSystemDelete"
        },
        "aws_datasync_location_fsx_windows_file_system": {
          "create_method": "resourceLocationFSxWindowsFileSystemCreate",
          "read_method": "resourceLocationFSxWindowsFileSystemRead",
          "update_method": "resourceLocationFSxWindowsFileSystemUpdate",
          "delete_method": "resourceLocationFSxWindowsFileSystemDelete"
        },
        "aws_datasync_location_hdfs": {
          "create_method": "resourceLocationHDFSCreate",
          "read_method": "resourceLocationHDFSRead",
          "update_method": "resourceLocationHDFSUpdate",
          "delete_method": "resourceLocationHDFSDelete"
        },
        "aws_datasync_location_nfs": {
          "create_method": "resourceLocationNFSCreate",
          "read_method": "resourceLocationNFSRead",
          "update_method": "resourceLocationNFSUpdate",
          "delete_method": "resourceLocationNFSDelete"
        },
        "aws_datasync_location_object_storage": {
          "create_method": "resourceLocationObjectStorageCreate",
          "read_method": "resourceLocationObjectStorageRead",
          "update_method": "resourceLocationObjectStorageUpdate",
          "delete_method": "resourceLocationObjectStorageDelete"
        },
        "aws_datasync_location_s3": {
          "create_method": "resourceLocationS3Create",
          "read_method": "resourceLocationS3Read",
          "update_method": "resourceLocationS3Update",
          "delete_method": "resourceLocationS3Delete"
        },
        "aws_datasync_location_smb": {
          "create_method": "resourceLocationSMBCreate",
          "read_method": "resourceLocationSMBRead",
          "update_method": "resourceLocationSMBUpdate",
          "delete_method": "resourceLocationSMBDelete"
        },
        "aws_datasync_task": {
          "create_method": "resourceTaskCreate",
          "read_method": "resourceTaskRead",
          "update_method": "resourceTaskUpdate",
          "delete_method": "resourceTaskDelete"
        }
      }
    },
    {
      "service_name": "datazone",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/datazone",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_datazone_asset_type": {
          "terraform_type": "aws_datazone_asset_type",
          "factory_function": "newDatazoneAssetTypeResource",
          "name": "Asset Type",
          "sdk_type": "framework",
          "struct_type": "assetTypeResource"
        },
        "aws_datazone_domain": {
          "terraform_type": "aws_datazone_domain",
          "factory_function": "newDatazoneDomainResource",
          "name": "Domain",
          "sdk_type": "framework",
          "struct_type": "domainResource"
        },
        "aws_datazone_environment": {
          "terraform_type": "aws_datazone_environment",
          "factory_function": "newDatazoneEnvironmentResource",
          "name": "Environment",
          "sdk_type": "framework",
          "struct_type": "environmentResource"
        },
        "aws_datazone_environment_blueprint_configuration": {
          "terraform_type": "aws_datazone_environment_blueprint_configuration",
          "factory_function": "newDatazoneEnvironmentBlueprintConfigurationResource",
          "name": "Environment Blueprint Configuration",
          "sdk_type": "framework",
          "struct_type": "environmentBlueprintConfigurationResource"
        },
        "aws_datazone_environment_profile": {
          "terraform_type": "aws_datazone_environment_profile",
          "factory_function": "newDatazoneEnvironmentProfileResource",
          "name": "Environment Profile",
          "sdk_type": "framework",
          "struct_type": "environmentProfileResource"
        },
        "aws_datazone_form_type": {
          "terraform_type": "aws_datazone_form_type",
          "factory_function": "newDatazoneFormTypeResource",
          "name": "Form Type",
          "sdk_type": "framework",
          "struct_type": "formTypeResource"
        },
        "aws_datazone_glossary": {
          "terraform_type": "aws_datazone_glossary",
          "factory_function": "newDatazoneGlossaryResource",
          "name": "Glossary",
          "sdk_type": "framework",
          "struct_type": "glossaryResource"
        },
        "aws_datazone_glossary_term": {
          "terraform_type": "aws_datazone_glossary_term",
          "factory_function": "newDatazoneGlossaryTermResource",
          "name": "Glossary Term",
          "sdk_type": "framework",
          "struct_type": "glossaryTermResource"
        },
        "aws_datazone_project": {
          "terraform_type": "aws_datazone_project",
          "factory_function": "newDatazoneProjectResource",
          "name": "Project",
          "sdk_type": "framework",
          "struct_type": "projectResource"
        },
        "aws_datazone_user_profile": {
          "terraform_type": "aws_datazone_user_profile",
          "factory_function": "newDatazoneUserProfileResource",
          "name": "User Profile",
          "sdk_type": "framework",
          "struct_type": "userProfileResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_datazone_domain": {
          "terraform_type": "aws_datazone_domain",
          "factory_function": "newDatazoneDomainDataSource",
          "name": "Domain",
          "sdk_type": "framework",
          "struct_type": "domainDataSource"
        },
        "aws_datazone_environment_blueprint": {
          "terraform_type": "aws_datazone_environment_blueprint",
          "factory_function": "newDatazoneEnvironmentBlueprintDataSource",
          "name": "Environment Blueprint",
          "sdk_type": "framework",
          "struct_type": "environmentBlueprintDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "assetTypeResource": "aws_datazone_asset_type",
        "domainResource": "aws_datazone_domain",
        "environmentBlueprintConfigurationResource": "aws_datazone_environment_blueprint_configuration",
        "environmentProfileResource": "aws_datazone_environment_profile",
        "environmentResource": "aws_datazone_environment",
        "formTypeResource": "aws_datazone_form_type",
        "glossaryResource": "aws_datazone_glossary",
        "glossaryTermResource": "aws_datazone_glossary_term",
        "projectResource": "aws_datazone_project",
        "userProfileResource": "aws_datazone_user_profile"
      },
      "data_source_terraform_types": {
        "domainDataSource": "aws_datazone_domain",
        "environmentBlueprintDataSource": "aws_datazone_environment_blueprint"
      }
    },
    {
      "service_name": "dax",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/dax",
      "aws_sdk_resources": {
        "aws_dax_cluster": {
          "terraform_type": "aws_dax_cluster",
          "factory_function": "resourceDaxCluster",
          "name": "Cluster",
          "sdk_type": "sdk"
        },
        "aws_dax_parameter_group": {
          "terraform_type": "aws_dax_parameter_group",
          "factory_function": "resourceDaxParameterGroup",
          "name": "Parameter Group",
          "sdk_type": "sdk"
        },
        "aws_dax_subnet_group": {
          "terraform_type": "aws_dax_subnet_group",
          "factory_function": "resourceDaxSubnetGroup",
          "name": "Subnet Group",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_dax_cluster": {
          "create_method": "resourceClusterCreate",
          "read_method": "resourceClusterRead",
          "update_method": "resourceClusterUpdate",
          "delete_method": "resourceClusterDelete"
        },
        "aws_dax_parameter_group": {
          "create_method": "resourceParameterGroupCreate",
          "read_method": "resourceParameterGroupRead",
          "update_method": "resourceParameterGroupUpdate",
          "delete_method": "resourceParameterGroupDelete"
        },
        "aws_dax_subnet_group": {
          "create_method": "resourceSubnetGroupCreate",
          "read_method": "resourceSubnetGroupRead",
          "update_method": "resourceSubnetGroupUpdate",
          "delete_method": "resourceSubnetGroupDelete"
        }
      }
    },
    {
      "service_name": "detective",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/detective",
      "aws_sdk_resources": {
        "aws_detective_graph": {
          "terraform_type": "aws_detective_graph",
          "factory_function": "resourceDetectiveGraph",
          "name": "Graph",
          "sdk_type": "sdk"
        },
        "aws_detective_invitation_accepter": {
          "terraform_type": "aws_detective_invitation_accepter",
          "factory_function": "resourceDetectiveInvitationAccepter",
          "name": "Invitation Accepter",
          "sdk_type": "sdk"
        },
        "aws_detective_member": {
          "terraform_type": "aws_detective_member",
          "factory_function": "resourceDetectiveMember",
          "name": "Member",
          "sdk_type": "sdk"
        },
        "aws_detective_organization_admin_account": {
          "terraform_type": "aws_detective_organization_admin_account",
          "factory_function": "resourceDetectiveOrganizationAdminAccount",
          "name": "Organization Admin Account",
          "sdk_type": "sdk"
        },
        "aws_detective_organization_configuration": {
          "terraform_type": "aws_detective_organization_configuration",
          "factory_function": "resourceDetectiveOrganizationConfiguration",
          "name": "Organization Configuration",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_detective_graph": {
          "create_method": "resourceGraphCreate",
          "read_method": "resourceGraphRead",
          "update_method": "resourceGraphUpdate",
          "delete_method": "resourceGraphDelete"
        },
        "aws_detective_invitation_accepter": {
          "create_method": "resourceInvitationAccepterCreate",
          "read_method": "resourceInvitationAccepterRead",
          "delete_method": "resourceInvitationAccepterDelete"
        },
        "aws_detective_member": {
          "create_method": "resourceMemberCreate",
          "read_method": "resourceMemberRead",
          "delete_method": "resourceMemberDelete"
        },
        "aws_detective_organization_admin_account": {
          "create_method": "resourceOrganizationAdminAccountCreate",
          "read_method": "resourceOrganizationAdminAccountRead",
          "delete_method": "resourceOrganizationAdminAccountDelete"
        },
        "aws_detective_organization_configuration": {
          "create_method": "resourceOrganizationConfigurationUpdate",
          "read_method": "resourceOrganizationConfigurationRead",
          "update_method": "resourceOrganizationConfigurationUpdate"
        }
      }
    },
    {
      "service_name": "deploy",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/deploy",
      "aws_sdk_resources": {
        "aws_codedeploy_app": {
          "terraform_type": "aws_codedeploy_app",
          "factory_function": "resourceCodedeployApp",
          "name": "App",
          "sdk_type": "sdk"
        },
        "aws_codedeploy_deployment_config": {
          "terraform_type": "aws_codedeploy_deployment_config",
          "factory_function": "resourceCodedeployDeploymentConfig",
          "name": "Deployment Config",
          "sdk_type": "sdk"
        },
        "aws_codedeploy_deployment_group": {
          "terraform_type": "aws_codedeploy_deployment_group",
          "factory_function": "resourceCodedeployDeploymentGroup",
          "name": "Deployment Group",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_codedeploy_app": {
          "create_method": "resourceAppCreate",
          "read_method": "resourceAppRead",
          "update_method": "resourceUpdate",
          "delete_method": "resourceAppDelete"
        },
        "aws_codedeploy_deployment_config": {
          "create_method": "resourceDeploymentConfigCreate",
          "read_method": "resourceDeploymentConfigRead",
          "delete_method": "resourceDeploymentConfigDelete"
        },
        "aws_codedeploy_deployment_group": {
          "create_method": "resourceDeploymentGroupCreate",
          "read_method": "resourceDeploymentGroupRead",
          "update_method": "resourceDeploymentGroupUpdate",
          "delete_method": "resourceDeploymentGroupDelete"
        }
      }
    },
    {
      "service_name": "devicefarm",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/devicefarm",
      "aws_sdk_resources": {
        "aws_devicefarm_device_pool": {
          "terraform_type": "aws_devicefarm_device_pool",
          "factory_function": "resourceDevicefarmDevicePool",
          "name": "Device Pool",
          "sdk_type": "sdk"
        },
        "aws_devicefarm_instance_profile": {
          "terraform_type": "aws_devicefarm_instance_profile",
          "factory_function": "resourceDevicefarmInstanceProfile",
          "name": "Instance Profile",
          "sdk_type": "sdk"
        },
        "aws_devicefarm_network_profile": {
          "terraform_type": "aws_devicefarm_network_profile",
          "factory_function": "resourceDevicefarmNetworkProfile",
          "name": "Network Profile",
          "sdk_type": "sdk"
        },
        "aws_devicefarm_project": {
          "terraform_type": "aws_devicefarm_project",
          "factory_function": "resourceDevicefarmProject",
          "name": "Project",
          "sdk_type": "sdk"
        },
        "aws_devicefarm_test_grid_project": {
          "terraform_type": "aws_devicefarm_test_grid_project",
          "factory_function": "resourceDevicefarmTestGridProject",
          "name": "Test Grid Project",
          "sdk_type": "sdk"
        },
        "aws_devicefarm_upload": {
          "terraform_type": "aws_devicefarm_upload",
          "factory_function": "resourceDevicefarmUpload",
          "name": "Upload",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_devicefarm_device_pool": {
          "create_method": "resourceDevicePoolCreate",
          "read_method": "resourceDevicePoolRead",
          "update_method": "resourceDevicePoolUpdate",
          "delete_method": "resourceDevicePoolDelete"
        },
        "aws_devicefarm_instance_profile": {
          "create_method": "resourceInstanceProfileCreate",
          "read_method": "resourceInstanceProfileRead",
          "update_method": "resourceInstanceProfileUpdate",
          "delete_method": "resourceInstanceProfileDelete"
        },
        "aws_devicefarm_network_profile": {
          "create_method": "resourceNetworkProfileCreate",
          "read_method": "resourceNetworkProfileRead",
          "update_method": "resourceNetworkProfileUpdate",
          "delete_method": "resourceNetworkProfileDelete"
        },
        "aws_devicefarm_project": {
          "create_method": "resourceProjectCreate",
          "read_method": "resourceProjectRead",
          "update_method": "resourceProjectUpdate",
          "delete_method": "resourceProjectDelete"
        },
        "aws_devicefarm_test_grid_project": {
          "create_method": "resourceTestGridProjectCreate",
          "read_method": "resourceTestGridProjectRead",
          "update_method": "resourceTestGridProjectUpdate",
          "delete_method": "resourceTestGridProjectDelete"
        },
        "aws_devicefarm_upload": {
          "create_method": "resourceUploadCreate",
          "read_method": "resourceUploadRead",
          "update_method": "resourceUploadUpdate",
          "delete_method": "resourceUploadDelete"
        }
      }
    },
    {
      "service_name": "devopsguru",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/devopsguru",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_devopsguru_event_sources_config": {
          "terraform_type": "aws_devopsguru_event_sources_config",
          "factory_function": "newDevopsguruEventSourcesConfigResource",
          "name": "Event Sources Config",
          "sdk_type": "framework",
          "struct_type": "eventSourcesConfigResource"
        },
        "aws_devopsguru_notification_channel": {
          "terraform_type": "aws_devopsguru_notification_channel",
          "factory_function": "newDevopsguruNotificationChannelResource",
          "name": "Notification Channel",
          "sdk_type": "framework",
          "struct_type": "notificationChannelResource"
        },
        "aws_devopsguru_resource_collection": {
          "terraform_type": "aws_devopsguru_resource_collection",
          "factory_function": "newDevopsguruResourceCollectionResource",
          "name": "Resource Collection",
          "sdk_type": "framework",
          "struct_type": "resourceCollectionResource"
        },
        "aws_devopsguru_service_integration": {
          "terraform_type": "aws_devopsguru_service_integration",
          "factory_function": "newDevopsguruServiceIntegrationResource",
          "name": "Service Integration",
          "sdk_type": "framework",
          "struct_type": "serviceIntegrationResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_devopsguru_notification_channel": {
          "terraform_type": "aws_devopsguru_notification_channel",
          "factory_function": "newDevopsguruNotificationChannelDataSource",
          "name": "Notification Channel",
          "sdk_type": "framework",
          "struct_type": "notificationChannelDataSource"
        },
        "aws_devopsguru_resource_collection": {
          "terraform_type": "aws_devopsguru_resource_collection",
          "factory_function": "newDevopsguruResourceCollectionDataSource",
          "name": "Resource Collection",
          "sdk_type": "framework",
          "struct_type": "resourceCollectionDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "eventSourcesConfigResource": "aws_devopsguru_event_sources_config",
        "notificationChannelResource": "aws_devopsguru_notification_channel",
        "resourceCollectionResource": "aws_devopsguru_resource_collection",
        "serviceIntegrationResource": "aws_devopsguru_service_integration"
      },
      "data_source_terraform_types": {
        "notificationChannelDataSource": "aws_devopsguru_notification_channel",
        "resourceCollectionDataSource": "aws_devopsguru_resource_collection"
      }
    },
    {
      "service_name": "directconnect",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/directconnect",
      "aws_sdk_resources": {
        "aws_dx_bgp_peer": {
          "terraform_type": "aws_dx_bgp_peer",
          "factory_function": "resourceDxBgpPeer",
          "name": "BGP Peer",
          "sdk_type": "sdk"
        },
        "aws_dx_connection": {
          "terraform_type": "aws_dx_connection",
          "factory_function": "resourceDxConnection",
          "name": "Connection",
          "sdk_type": "sdk"
        },
        "aws_dx_connection_association": {
          "terraform_type": "aws_dx_connection_association",
          "factory_function": "resourceDxConnectionAssociation",
          "name": "Connection LAG Association",
          "sdk_type": "sdk"
        },
        "aws_dx_connection_confirmation": {
          "terraform_type": "aws_dx_connection_confirmation",
          "factory_function": "resourceDxConnectionConfirmation",
          "name": "Connection Confirmation",
          "sdk_type": "sdk"
        },
        "aws_dx_gateway": {
          "terraform_type": "aws_dx_gateway",
          "factory_function": "resourceDxGateway",
          "name": "Gateway",
          "sdk_type": "sdk"
        },
        "aws_dx_gateway_association": {
          "terraform_type": "aws_dx_gateway_association",
          "factory_function": "resourceDxGatewayAssociation",
          "name": "Gateway Association",
          "sdk_type": "sdk"
        },
        "aws_dx_gateway_association_proposal": {
          "terraform_type": "aws_dx_gateway_association_proposal",
          "factory_function": "resourceDxGatewayAssociationProposal",
          "name": "Gateway Association Proposal",
          "sdk_type": "sdk"
        },
        "aws_dx_hosted_connection": {
          "terraform_type": "aws_dx_hosted_connection",
          "factory_function": "resourceDxHostedConnection",
          "name": "Hosted Connection",
          "sdk_type": "sdk"
        },
        "aws_dx_hosted_private_virtual_interface": {
          "terraform_type": "aws_dx_hosted_private_virtual_interface",
          "factory_function": "resourceDxHostedPrivateVirtualInterface",
          "name": "Hosted Private Virtual Interface",
          "sdk_type": "sdk"
        },
        "aws_dx_hosted_private_virtual_interface_accepter": {
          "terraform_type": "aws_dx_hosted_private_virtual_interface_accepter",
          "factory_function": "resourceDxHostedPrivateVirtualInterfaceAccepter",
          "name": "Hosted Private Virtual Interface Accepter",
          "sdk_type": "sdk"
        },
        "aws_dx_hosted_public_virtual_interface": {
          "terraform_type": "aws_dx_hosted_public_virtual_interface",
          "factory_function": "resourceDxHostedPublicVirtualInterface",
          "name": "Hosted Public Virtual Interface",
          "sdk_type": "sdk"
        },
        "aws_dx_hosted_public_virtual_interface_accepter": {
          "terraform_type": "aws_dx_hosted_public_virtual_interface_accepter",
          "factory_function": "resourceDxHostedPublicVirtualInterfaceAccepter",
          "name": "Hosted Public Virtual Interface Accepter",
          "sdk_type": "sdk"
        },
        "aws_dx_hosted_transit_virtual_interface": {
          "terraform_type": "aws_dx_hosted_transit_virtual_interface",
          "factory_function": "resourceDxHostedTransitVirtualInterface",
          "name": "Hosted Transit Virtual Interface",
          "sdk_type": "sdk"
        },
        "aws_dx_hosted_transit_virtual_interface_accepter": {
          "terraform_type": "aws_dx_hosted_transit_virtual_interface_accepter",
          "factory_function": "resourceDxHostedTransitVirtualInterfaceAccepter",
          "name": "Hosted Transit Virtual Interface Accepter",
          "sdk_type": "sdk"
        },
        "aws_dx_lag": {
          "terraform_type": "aws_dx_lag",
          "factory_function": "resourceDxLag",
          "name": "LAG",
          "sdk_type": "sdk"
        },
        "aws_dx_macsec_key_association": {
          "terraform_type": "aws_dx_macsec_key_association",
          "factory_function": "resourceDxMacsecKeyAssociation",
          "name": "MACSec Key Association",
          "sdk_type": "sdk"
        },
        "aws_dx_private_virtual_interface": {
          "terraform_type": "aws_dx_private_virtual_interface",
          "factory_function": "resourceDxPrivateVirtualInterface",
          "name": "Private Virtual Interface",
          "sdk_type": "sdk"
        },
        "aws_dx_public_virtual_interface": {
          "terraform_type": "aws_dx_public_virtual_interface",
          "factory_function": "resourceDxPublicVirtualInterface",
          "name": "Public Virtual Interface",
          "sdk_type": "sdk"
        },
        "aws_dx_transit_virtual_interface": {
          "terraform_type": "aws_dx_transit_virtual_interface",
          "factory_function": "resourceDxTransitVirtualInterface",
          "name": "Transit Virtual Interface",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_dx_connection": {
          "terraform_type": "aws_dx_connection",
          "factory_function": "dataSourceDxConnection",
          "name": "Connection",
          "sdk_type": "sdk"
        },
        "aws_dx_gateway": {
          "terraform_type": "aws_dx_gateway",
          "factory_function": "dataSourceDxGateway",
          "name": "Gateway",
          "sdk_type": "sdk"
        },
        "aws_dx_location": {
          "terraform_type": "aws_dx_location",
          "factory_function": "dataSourceDxLocation",
          "name": "Location",
          "sdk_type": "sdk"
        },
        "aws_dx_locations": {
          "terraform_type": "aws_dx_locations",
          "factory_function": "dataSourceDxLocations",
          "name": "Locations",
          "sdk_type": "sdk"
        },
        "aws_dx_router_configuration": {
          "terraform_type": "aws_dx_router_configuration",
          "factory_function": "dataSourceDxRouterConfiguration",
          "name": "Router Configuration",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_dx_bgp_peer": {
          "create_method": "resourceBGPPeerCreate",
          "read_method": "resourceBGPPeerRead",
          "delete_method": "resourceBGPPeerDelete"
        },
        "aws_dx_connection": {
          "create_method": "resourceConnectionCreate",
          "read_method": "resourceConnectionRead",
          "update_method": "resourceConnectionUpdate",
          "delete_method": "resourceConnectionDelete"
        },
        "aws_dx_connection_association": {
          "create_method": "resourceConnectionAssociationCreate",
          "read_method": "resourceConnectionAssociationRead",
          "delete_method": "resourceConnectionAssociationDelete"
        },
        "aws_dx_connection_confirmation": {
          "create_method": "resourceConnectionConfirmationCreate",
          "read_method": "resourceConnectionConfirmationRead"
        },
        "aws_dx_gateway": {
          "create_method": "resourceGatewayCreate",
          "read_method": "resourceGatewayRead",
          "update_method": "resourceGatewayUpdate",
          "delete_method": "resourceGatewayDelete"
        },
        "aws_dx_gateway_association": {
          "create_method": "resourceGatewayAssociationCreate",
          "read_method": "resourceGatewayAssociationRead",
          "update_method": "resourceGatewayAssociationUpdate",
          "delete_method": "resourceGatewayAssociationDelete"
        },
        "aws_dx_gateway_association_proposal": {
          "create_method": "resourceGatewayAssociationProposalCreate",
          "read_method": "resourceGatewayAssociationProposalRead",
          "delete_method": "resourceGatewayAssociationProposalDelete"
        },
        "aws_dx_hosted_connection": {
          "create_method": "resourceHostedConnectionCreate",
          "read_method": "resourceHostedConnectionRead",
          "delete_method": "resourceHostedConnectionDelete"
        },
        "aws_dx_hosted_private_virtual_interface": {
          "create_method": "resourceHostedPrivateVirtualInterfaceCreate",
          "read_method": "resourceHostedPrivateVirtualInterfaceRead",
          "delete_method": "resourceHostedPrivateVirtualInterfaceDelete"
        },
        "aws_dx_hosted_private_virtual_interface_accepter": {
          "create_method": "resourceHostedPrivateVirtualInterfaceAccepterCreate",
          "read_method": "resourceHostedPrivateVirtualInterfaceAccepterRead",
          "update_method": "resourceHostedPrivateVirtualInterfaceAccepterUpdate"
        },
        "aws_dx_hosted_public_virtual_interface": {
          "create_method": "resourceHostedPublicVirtualInterfaceCreate",
          "read_method": "resourceHostedPublicVirtualInterfaceRead",
          "delete_method": "resourceHostedPublicVirtualInterfaceDelete"
        },
        "aws_dx_hosted_public_virtual_interface_accepter": {
          "create_method": "resourceHostedPublicVirtualInterfaceAccepterCreate",
          "read_method": "resourceHostedPublicVirtualInterfaceAccepterRead",
          "update_method": "resourceHostedPublicVirtualInterfaceAccepterUpdate"
        },
        "aws_dx_hosted_transit_virtual_interface": {
          "create_method": "resourceHostedTransitVirtualInterfaceCreate",
          "read_method": "resourceHostedTransitVirtualInterfaceRead",
          "delete_method": "resourceHostedTransitVirtualInterfaceDelete"
        },
        "aws_dx_hosted_transit_virtual_interface_accepter": {
          "create_method": "resourceHostedTransitVirtualInterfaceAccepterCreate",
          "read_method": "resourceHostedTransitVirtualInterfaceAccepterRead",
          "update_method": "resourceHostedTransitVirtualInterfaceAccepterUpdate"
        },
        "aws_dx_lag": {
          "create_method": "resourceLagCreate",
          "read_method": "resourceLagRead",
          "update_method": "resourceLagUpdate",
          "delete_method": "resourceLagDelete"
        },
        "aws_dx_macsec_key_association": {
          "create_method": "resourceMacSecKeyAssociatioCreate",
          "read_method": "resourceMacSecKeyAssociationRead",
          "delete_method": "resourceMacSecKeyAssociationDelete"
        },
        "aws_dx_private_virtual_interface": {
          "create_method": "resourcePrivateVirtualInterfaceCreate",
          "read_method": "resourcePrivateVirtualInterfaceRead",
          "update_method": "resourcePrivateVirtualInterfaceUpdate",
          "delete_method": "resourcePrivateVirtualInterfaceDelete"
        },
        "aws_dx_public_virtual_interface": {
          "create_method": "resourcePublicVirtualInterfaceCreate",
          "read_method": "resourcePublicVirtualInterfaceRead",
          "update_method": "resourcePublicVirtualInterfaceUpdate",
          "delete_method": "resourcePublicVirtualInterfaceDelete"
        },
        "aws_dx_transit_virtual_interface": {
          "create_method": "resourceTransitVirtualInterfaceCreate",
          "read_method": "resourceTransitVirtualInterfaceRead",
          "update_method": "resourceTransitVirtualInterfaceUpdate",
          "delete_method": "resourceTransitVirtualInterfaceDelete"
        }
      },
      "data_source_methods": {
        "aws_dx_connection": {
          "read_method": "dataSourceConnectionRead"
        },
        "aws_dx_gateway": {
          "read_method": "dataSourceGatewayRead"
        },
        "aws_dx_location": {
          "read_method": "dataSourceLocationRead"
        },
        "aws_dx_locations": {
          "read_method": "dataSourceLocationsRead"
        },
        "aws_dx_router_configuration": {
          "read_method": "dataSourceRouterConfigurationRead"
        }
      }
    },
    {
      "service_name": "dlm",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/dlm",
      "aws_sdk_resources": {
        "aws_dlm_lifecycle_policy": {
          "terraform_type": "aws_dlm_lifecycle_policy",
          "factory_function": "resourceDlmLifecyclePolicy",
          "name": "Lifecycle Policy",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_dlm_lifecycle_policy": {
          "create_method": "resourceLifecyclePolicyCreate",
          "read_method": "resourceLifecyclePolicyRead",
          "update_method": "resourceLifecyclePolicyUpdate",
          "delete_method": "resourceLifecyclePolicyDelete"
        }
      }
    },
    {
      "service_name": "dms",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/dms",
      "aws_sdk_resources": {
        "aws_dms_certificate": {
          "terraform_type": "aws_dms_certificate",
          "factory_function": "resourceDmsCertificate",
          "name": "Certificate",
          "sdk_type": "sdk"
        },
        "aws_dms_endpoint": {
          "terraform_type": "aws_dms_endpoint",
          "factory_function": "resourceDmsEndpoint",
          "name": "Endpoint",
          "sdk_type": "sdk"
        },
        "aws_dms_event_subscription": {
          "terraform_type": "aws_dms_event_subscription",
          "factory_function": "resourceDmsEventSubscription",
          "name": "Event Subscription",
          "sdk_type": "sdk"
        },
        "aws_dms_replication_config": {
          "terraform_type": "aws_dms_replication_config",
          "factory_function": "resourceDmsReplicationConfig",
          "name": "Replication Config",
          "sdk_type": "sdk"
        },
        "aws_dms_replication_instance": {
          "terraform_type": "aws_dms_replication_instance",
          "factory_function": "resourceDmsReplicationInstance",
          "name": "Replication Instance",
          "sdk_type": "sdk"
        },
        "aws_dms_replication_subnet_group": {
          "terraform_type": "aws_dms_replication_subnet_group",
          "factory_function": "resourceDmsReplicationSubnetGroup",
          "name": "Replication Subnet Group",
          "sdk_type": "sdk"
        },
        "aws_dms_replication_task": {
          "terraform_type": "aws_dms_replication_task",
          "factory_function": "resourceDmsReplicationTask",
          "name": "Replication Task",
          "sdk_type": "sdk"
        },
        "aws_dms_s3_endpoint": {
          "terraform_type": "aws_dms_s3_endpoint",
          "factory_function": "resourceDmsS3Endpoint",
          "name": "S3 Endpoint",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_dms_certificate": {
          "terraform_type": "aws_dms_certificate",
          "factory_function": "dataSourceDmsCertificate",
          "name": "Certificate",
          "sdk_type": "sdk"
        },
        "aws_dms_endpoint": {
          "terraform_type": "aws_dms_endpoint",
          "factory_function": "dataSourceDmsEndpoint",
          "name": "Endpoint",
          "sdk_type": "sdk"
        },
        "aws_dms_replication_instance": {
          "terraform_type": "aws_dms_replication_instance",
          "factory_function": "dataSourceDmsReplicationInstance",
          "name": "Replication Instance",
          "sdk_type": "sdk"
        },
        "aws_dms_replication_subnet_group": {
          "terraform_type": "aws_dms_replication_subnet_group",
          "factory_function": "dataSourceDmsReplicationSubnetGroup",
          "name": "Replication Subnet Group",
          "sdk_type": "sdk"
        },
        "aws_dms_replication_task": {
          "terraform_type": "aws_dms_replication_task",
          "factory_function": "dataSourceDmsReplicationTask",
          "name": "Replication Task",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_dms_certificate": {
          "create_method": "resourceCertificateCreate",
          "read_method": "resourceCertificateRead",
          "update_method": "resourceCertificateUpdate",
          "delete_method": "resourceCertificateDelete"
        },
        "aws_dms_endpoint": {
          "create_method": "resourceEndpointCreate",
          "read_method": "resourceEndpointRead",
          "update_method": "resourceEndpointUpdate",
          "delete_method": "resourceEndpointDelete"
        },
        "aws_dms_event_subscription": {
          "create_method": "resourceEventSubscriptionCreate",
          "read_method": "resourceEventSubscriptionRead",
          "update_method": "resourceEventSubscriptionUpdate",
          "delete_method": "resourceEventSubscriptionDelete"
        },
        "aws_dms_replication_config": {
          "create_method": "resourceReplicationConfigCreate",
          "read_method": "resourceReplicationConfigRead",
          "update_method": "resourceReplicationConfigUpdate",
          "delete_method": "resourceReplicationConfigDelete"
        },
        "aws_dms_replication_instance": {
          "create_method": "resourceReplicationInstanceCreate",
          "read_method": "resourceReplicationInstanceRead",
          "update_method": "resourceReplicationInstanceUpdate",
          "delete_method": "resourceReplicationInstanceDelete"
        },
        "aws_dms_replication_subnet_group": {
          "create_method": "resourceReplicationSubnetGroupCreate",
          "read_method": "resourceReplicationSubnetGroupRead",
          "update_method": "resourceReplicationSubnetGroupUpdate",
          "delete_method": "resourceReplicationSubnetGroupDelete"
        },
        "aws_dms_replication_task": {
          "create_method": "resourceReplicationTaskCreate",
          "read_method": "resourceReplicationTaskRead",
          "update_method": "resourceReplicationTaskUpdate",
          "delete_method": "resourceReplicationTaskDelete"
        },
        "aws_dms_s3_endpoint": {
          "create_method": "resourceS3EndpointCreate",
          "read_method": "resourceS3EndpointRead",
          "update_method": "resourceS3EndpointUpdate",
          "delete_method": "resourceS3EndpointDelete"
        }
      },
      "data_source_methods": {
        "aws_dms_certificate": {
          "read_method": "dataSourceCertificateRead"
        },
        "aws_dms_endpoint": {
          "read_method": "dataSourceEndpointRead"
        },
        "aws_dms_replication_instance": {
          "read_method": "dataSourceReplicationInstanceRead"
        },
        "aws_dms_replication_subnet_group": {
          "read_method": "dataSourceReplicationSubnetGroupRead"
        },
        "aws_dms_replication_task": {
          "read_method": "dataSourceReplicationTaskRead"
        }
      }
    },
    {
      "service_name": "docdb",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/docdb",
      "aws_sdk_resources": {
        "aws_docdb_cluster": {
          "terraform_type": "aws_docdb_cluster",
          "factory_function": "resourceDocdbCluster",
          "name": "Cluster",
          "sdk_type": "sdk"
        },
        "aws_docdb_cluster_instance": {
          "terraform_type": "aws_docdb_cluster_instance",
          "factory_function": "resourceDocdbClusterInstance",
          "name": "Cluster Instance",
          "sdk_type": "sdk"
        },
        "aws_docdb_cluster_parameter_group": {
          "terraform_type": "aws_docdb_cluster_parameter_group",
          "factory_function": "resourceDocdbClusterParameterGroup",
          "name": "Cluster Parameter Group",
          "sdk_type": "sdk"
        },
        "aws_docdb_cluster_snapshot": {
          "terraform_type": "aws_docdb_cluster_snapshot",
          "factory_function": "resourceDocdbClusterSnapshot",
          "name": "Cluster Snapshot",
          "sdk_type": "sdk"
        },
        "aws_docdb_event_subscription": {
          "terraform_type": "aws_docdb_event_subscription",
          "factory_function": "resourceDocdbEventSubscription",
          "name": "Event Subscription",
          "sdk_type": "sdk"
        },
        "aws_docdb_global_cluster": {
          "terraform_type": "aws_docdb_global_cluster",
          "factory_function": "resourceDocdbGlobalCluster",
          "name": "Global Cluster",
          "sdk_type": "sdk"
        },
        "aws_docdb_subnet_group": {
          "terraform_type": "aws_docdb_subnet_group",
          "factory_function": "resourceDocdbSubnetGroup",
          "name": "Subnet Group",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_docdb_engine_version": {
          "terraform_type": "aws_docdb_engine_version",
          "factory_function": "dataSourceDocdbEngineVersion",
          "name": "Engine Version",
          "sdk_type": "sdk"
        },
        "aws_docdb_orderable_db_instance": {
          "terraform_type": "aws_docdb_orderable_db_instance",
          "factory_function": "dataSourceDocdbOrderableDbInstance",
          "name": "Orderable DB Instance",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_docdb_cluster": {
          "create_method": "resourceClusterCreate",
          "read_method": "resourceClusterRead",
          "update_method": "resourceClusterUpdate",
          "delete_method": "resourceClusterDelete"
        },
        "aws_docdb_cluster_instance": {
          "create_method": "resourceClusterInstanceCreate",
          "read_method": "resourceClusterInstanceRead",
          "update_method": "resourceClusterInstanceUpdate",
          "delete_method": "resourceClusterInstanceDelete"
        },
        "aws_docdb_cluster_parameter_group": {
          "create_method": "resourceClusterParameterGroupCreate",
          "read_method": "resourceClusterParameterGroupRead",
          "update_method": "resourceClusterParameterGroupUpdate",
          "delete_method": "resourceClusterParameterGroupDelete"
        },
        "aws_docdb_cluster_snapshot": {
          "create_method": "resourceClusterSnapshotCreate",
          "read_method": "resourceClusterSnapshotRead",
          "delete_method": "resourceClusterSnapshotDelete"
        },
        "aws_docdb_event_subscription": {
          "create_method": "resourceEventSubscriptionCreate",
          "read_method": "resourceEventSubscriptionRead",
          "update_method": "resourceEventSubscriptionUpdate",
          "delete_method": "resourceEventSubscriptionDelete"
        },
        "aws_docdb_global_cluster": {
          "create_method": "resourceGlobalClusterCreate",
          "read_method": "resourceGlobalClusterRead",
          "update_method": "resourceGlobalClusterUpdate",
          "delete_method": "resourceGlobalClusterDelete"
        },
        "aws_docdb_subnet_group": {
          "create_method": "resourceSubnetGroupCreate",
          "read_method": "resourceSubnetGroupRead",
          "update_method": "resourceSubnetGroupUpdate",
          "delete_method": "resourceSubnetGroupDelete"
        }
      },
      "data_source_methods": {
        "aws_docdb_engine_version": {
          "read_method": "dataSourceEngineVersionRead"
        },
        "aws_docdb_orderable_db_instance": {
          "read_method": "dataSourceOrderableDBInstanceRead"
        }
      }
    },
    {
      "service_name": "drs",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/drs",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_drs_replication_configuration_template": {
          "terraform_type": "aws_drs_replication_configuration_template",
          "factory_function": "newDrsReplicationConfigurationTemplateResource",
          "name": "Replication Configuration Template",
          "sdk_type": "framework",
          "struct_type": "replicationConfigurationTemplateResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "replicationConfigurationTemplateResource": "aws_drs_replication_configuration_template"
      }
    },
    {
      "service_name": "docdbelastic",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/docdbelastic",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_docdbelastic_cluster": {
          "terraform_type": "aws_docdbelastic_cluster",
          "factory_function": "newDocdbelasticClusterResource",
          "name": "Cluster",
          "sdk_type": "framework",
          "struct_type": "clusterResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "clusterResource": "aws_docdbelastic_cluster"
      }
    },
    {
      "service_name": "ds",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/ds",
      "aws_sdk_resources": {
        "aws_directory_service_conditional_forwarder": {
          "terraform_type": "aws_directory_service_conditional_forwarder",
          "factory_function": "resourceDirectoryServiceConditionalForwarder",
          "name": "Conditional Forwarder",
          "sdk_type": "sdk"
        },
        "aws_directory_service_directory": {
          "terraform_type": "aws_directory_service_directory",
          "factory_function": "resourceDirectoryServiceDirectory",
          "name": "Directory",
          "sdk_type": "sdk"
        },
        "aws_directory_service_log_subscription": {
          "terraform_type": "aws_directory_service_log_subscription",
          "factory_function": "resourceDirectoryServiceLogSubscription",
          "name": "Log Subscription",
          "sdk_type": "sdk"
        },
        "aws_directory_service_radius_settings": {
          "terraform_type": "aws_directory_service_radius_settings",
          "factory_function": "resourceDirectoryServiceRadiusSettings",
          "name": "RADIUS Settings",
          "sdk_type": "sdk"
        },
        "aws_directory_service_region": {
          "terraform_type": "aws_directory_service_region",
          "factory_function": "resourceDirectoryServiceRegion",
          "name": "Region",
          "sdk_type": "sdk"
        },
        "aws_directory_service_shared_directory": {
          "terraform_type": "aws_directory_service_shared_directory",
          "factory_function": "resourceDirectoryServiceSharedDirectory",
          "name": "Shared Directory",
          "sdk_type": "sdk"
        },
        "aws_directory_service_shared_directory_accepter": {
          "terraform_type": "aws_directory_service_shared_directory_accepter",
          "factory_function": "resourceDirectoryServiceSharedDirectoryAccepter",
          "name": "Shared Directory Accepter",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_directory_service_directory": {
          "terraform_type": "aws_directory_service_directory",
          "factory_function": "dataSourceDirectoryServiceDirectory",
          "name": "Directory",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_directory_service_trust": {
          "terraform_type": "aws_directory_service_trust",
          "factory_function": "newDirectoryServiceTrustResource",
          "name": "Trust",
          "sdk_type": "framework",
          "struct_type": "trustResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "trustResource": "aws_directory_service_trust"
      },
      "resource_crud_methods": {
        "aws_directory_service_conditional_forwarder": {
          "create_method": "resourceConditionalForwarderCreate",
          "read_method": "resourceConditionalForwarderRead",
          "update_method": "resourceConditionalForwarderUpdate",
          "delete_method": "resourceConditionalForwarderDelete"
        },
        "aws_directory_service_directory": {
          "create_method": "resourceDirectoryCreate",
          "read_method": "resourceDirectoryRead",
          "update_method": "resourceDirectoryUpdate",
          "delete_method": "resourceDirectoryDelete"
        },
        "aws_directory_service_log_subscription": {
          "create_method": "resourceLogSubscriptionCreate",
          "read_method": "resourceLogSubscriptionRead",
          "delete_method": "resourceLogSubscriptionDelete"
        },
        "aws_directory_service_radius_settings": {
          "create_method": "resourceRadiusSettingsCreate",
          "read_method": "resourceRadiusSettingsRead",
          "update_method": "resourceRadiusSettingsUpdate",
          "delete_method": "resourceRadiusSettingsDelete"
        },
        "aws_directory_service_region": {
          "create_method": "resourceRegionCreate",
          "read_method": "resourceRegionRead",
          "update_method": "resourceRegionUpdate",
          "delete_method": "resourceRegionDelete"
        },
        "aws_directory_service_shared_directory": {
          "create_method": "resourceSharedDirectoryCreate",
          "read_method": "resourceSharedDirectoryRead",
          "delete_method": "resourceSharedDirectoryDelete"
        },
        "aws_directory_service_shared_directory_accepter": {
          "create_method": "resourceSharedDirectoryAccepterCreate",
          "read_method": "resourceSharedDirectoryAccepterRead",
          "delete_method": "resourceSharedDirectoryAccepterDelete"
        }
      },
      "data_source_methods": {
        "aws_directory_service_directory": {
          "read_method": "dataSourceDirectoryRead"
        }
      }
    },
    {
      "service_name": "dsql",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/dsql",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_dsql_cluster": {
          "terraform_type": "aws_dsql_cluster",
          "factory_function": "newDsqlClusterResource",
          "name": "Cluster",
          "sdk_type": "framework",
          "struct_type": "clusterResource"
        },
        "aws_dsql_cluster_peering": {
          "terraform_type": "aws_dsql_cluster_peering",
          "factory_function": "newDsqlClusterPeeringResource",
          "name": "Cluster Peering",
          "sdk_type": "framework",
          "struct_type": "clusterPeeringResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "clusterPeeringResource": "aws_dsql_cluster_peering",
        "clusterResource": "aws_dsql_cluster"
      }
    },
    {
      "service_name": "dynamodb",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/dynamodb",
      "aws_sdk_resources": {
        "aws_dynamodb_contributor_insights": {
          "terraform_type": "aws_dynamodb_contributor_insights",
          "factory_function": "resourceDynamodbContributorInsights",
          "name": "Contributor Insights",
          "sdk_type": "sdk"
        },
        "aws_dynamodb_global_table": {
          "terraform_type": "aws_dynamodb_global_table",
          "factory_function": "resourceDynamodbGlobalTable",
          "name": "Global Table",
          "sdk_type": "sdk"
        },
        "aws_dynamodb_kinesis_streaming_destination": {
          "terraform_type": "aws_dynamodb_kinesis_streaming_destination",
          "factory_function": "resourceDynamodbKinesisStreamingDestination",
          "name": "Kinesis Streaming Destination",
          "sdk_type": "sdk"
        },
        "aws_dynamodb_table": {
          "terraform_type": "aws_dynamodb_table",
          "factory_function": "resourceDynamodbTable",
          "name": "Table",
          "sdk_type": "sdk"
        },
        "aws_dynamodb_table_export": {
          "terraform_type": "aws_dynamodb_table_export",
          "factory_function": "resourceDynamodbTableExport",
          "name": "Table Export",
          "sdk_type": "sdk"
        },
        "aws_dynamodb_table_item": {
          "terraform_type": "aws_dynamodb_table_item",
          "factory_function": "resourceDynamodbTableItem",
          "name": "Table Item",
          "sdk_type": "sdk"
        },
        "aws_dynamodb_table_replica": {
          "terraform_type": "aws_dynamodb_table_replica",
          "factory_function": "resourceDynamodbTableReplica",
          "name": "Table Replica",
          "sdk_type": "sdk"
        },
        "aws_dynamodb_tag": {
          "terraform_type": "aws_dynamodb_tag",
          "factory_function": "resourceDynamodbTag",
          "name": "DynamoDB Resource Tag",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_dynamodb_table": {
          "terraform_type": "aws_dynamodb_table",
          "factory_function": "dataSourceDynamodbTable",
          "name": "Table",
          "sdk_type": "sdk"
        },
        "aws_dynamodb_table_item": {
          "terraform_type": "aws_dynamodb_table_item",
          "factory_function": "dataSourceDynamodbTableItem",
          "name": "Table Item",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_dynamodb_resource_policy": {
          "terraform_type": "aws_dynamodb_resource_policy",
          "factory_function": "newDynamodbResourcePolicyResource",
          "name": "Resource Policy",
          "sdk_type": "framework",
          "struct_type": "resourcePolicyResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_dynamodb_tables": {
          "terraform_type": "aws_dynamodb_tables",
          "factory_function": "newDynamodbTablesDataSource",
          "name": "Tables",
          "sdk_type": "framework",
          "struct_type": "tablesDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "resourcePolicyResource": "aws_dynamodb_resource_policy"
      },
      "data_source_terraform_types": {
        "tablesDataSource": "aws_dynamodb_tables"
      },
      "resource_crud_methods": {
        "aws_dynamodb_contributor_insights": {
          "create_method": "resourceContributorInsightsCreate",
          "read_method": "resourceContributorInsightsRead",
          "delete_method": "resourceContributorInsightsDelete"
        },
        "aws_dynamodb_global_table": {
          "create_method": "resourceGlobalTableCreate",
          "read_method": "resourceGlobalTableRead",
          "update_method": "resourceGlobalTableUpdate",
          "delete_method": "resourceGlobalTableDelete"
        },
        "aws_dynamodb_kinesis_streaming_destination": {
          "create_method": "resourceKinesisStreamingDestinationCreate",
          "read_method": "resourceKinesisStreamingDestinationRead",
          "delete_method": "resourceKinesisStreamingDestinationDelete"
        },
        "aws_dynamodb_table": {
          "create_method": "resourceTableCreate",
          "read_method": "resourceTableRead",
          "update_method": "resourceTableUpdate",
          "delete_method": "resourceTableDelete"
        },
        "aws_dynamodb_table_export": {
          "create_method": "resourceTableExportCreate",
          "read_method": "resourceTableExportRead"
        },
        "aws_dynamodb_table_item": {
          "create_method": "resourceTableItemCreate",
          "read_method": "resourceTableItemRead",
          "update_method": "resourceTableItemUpdate",
          "delete_method": "resourceTableItemDelete"
        },
        "aws_dynamodb_table_replica": {
          "create_method": "resourceTableReplicaCreate",
          "read_method": "resourceTableReplicaRead",
          "update_method": "resourceTableReplicaUpdate",
          "delete_method": "resourceTableReplicaDelete"
        },
        "aws_dynamodb_tag": {
          "create_method": "resourceTagCreate",
          "read_method": "resourceTagRead",
          "update_method": "resourceTagUpdate",
          "delete_method": "resourceTagDelete"
        }
      },
      "data_source_methods": {
        "aws_dynamodb_table": {
          "read_method": "dataSourceTableRead"
        },
        "aws_dynamodb_table_item": {
          "read_method": "dataSourceTableItemRead"
        }
      }
    },
    {
      "service_name": "ec2",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/ec2",
      "aws_sdk_resources": {
        "aws_ami": {
          "terraform_type": "aws_ami",
          "factory_function": "resourceAmi",
          "name": "AMI",
          "sdk_type": "sdk"
        },
        "aws_ami_copy": {
          "terraform_type": "aws_ami_copy",
          "factory_function": "resourceAmiCopy",
          "name": "AMI",
          "sdk_type": "sdk"
        },
        "aws_ami_from_instance": {
          "terraform_type": "aws_ami_from_instance",
          "factory_function": "resourceAmiFromInstance",
          "name": "AMI",
          "sdk_type": "sdk"
        },
        "aws_ami_launch_permission": {
          "terraform_type": "aws_ami_launch_permission",
          "factory_function": "resourceAmiLaunchPermission",
          "name": "AMI Launch Permission",
          "sdk_type": "sdk"
        },
        "aws_customer_gateway": {
          "terraform_type": "aws_customer_gateway",
          "factory_function": "resourceCustomerGateway",
          "name": "Customer Gateway",
          "sdk_type": "sdk"
        },
        "aws_default_network_acl": {
          "terraform_type": "aws_default_network_acl",
          "factory_function": "resourceDefaultNetworkAcl",
          "name": "Network ACL",
          "sdk_type": "sdk"
        },
        "aws_default_route_table": {
          "terraform_type": "aws_default_route_table",
          "factory_function": "resourceDefaultRouteTable",
          "name": "Route Table",
          "sdk_type": "sdk"
        },
        "aws_default_security_group": {
          "terraform_type": "aws_default_security_group",
          "factory_function": "resourceDefaultSecurityGroup",
          "name": "Security Group",
          "sdk_type": "sdk"
        },
        "aws_default_subnet": {
          "terraform_type": "aws_default_subnet",
          "factory_function": "resourceDefaultSubnet",
          "name": "Subnet",
          "sdk_type": "sdk"
        },
        "aws_default_vpc": {
          "terraform_type": "aws_default_vpc",
          "factory_function": "resourceDefaultVpc",
          "name": "Default VPC",
          "sdk_type": "sdk"
        },
        "aws_default_vpc_dhcp_options": {
          "terraform_type": "aws_default_vpc_dhcp_options",
          "factory_function": "resourceDefaultVpcDhcpOptions",
          "name": "DHCP Options",
          "sdk_type": "sdk"
        },
        "aws_ebs_default_kms_key": {
          "terraform_type": "aws_ebs_default_kms_key",
          "factory_function": "resourceEbsDefaultKmsKey",
          "name": "EBS Default KMS Key",
          "sdk_type": "sdk"
        },
        "aws_ebs_encryption_by_default": {
          "terraform_type": "aws_ebs_encryption_by_default",
          "factory_function": "resourceEbsEncryptionByDefault",
          "name": "EBS Encryption By Default",
          "sdk_type": "sdk"
        },
        "aws_ebs_snapshot": {
          "terraform_type": "aws_ebs_snapshot",
          "factory_function": "resourceEbsSnapshot",
          "name": "EBS Snapshot",
          "sdk_type": "sdk"
        },
        "aws_ebs_snapshot_block_public_access": {
          "terraform_type": "aws_ebs_snapshot_block_public_access",
          "factory_function": "resourceEbsSnapshotBlockPublicAccess",
          "name": "EBS Snapshot Block Public Access",
          "sdk_type": "sdk"
        },
        "aws_ebs_snapshot_copy": {
          "terraform_type": "aws_ebs_snapshot_copy",
          "factory_function": "resourceEbsSnapshotCopy",
          "name": "EBS Snapshot Copy",
          "sdk_type": "sdk"
        },
        "aws_ebs_snapshot_import": {
          "terraform_type": "aws_ebs_snapshot_import",
          "factory_function": "resourceEbsSnapshotImport",
          "name": "EBS Snapshot Import",
          "sdk_type": "sdk"
        },
        "aws_ebs_volume": {
          "terraform_type": "aws_ebs_volume",
          "factory_function": "resourceEbsVolume",
          "name": "EBS Volume",
          "sdk_type": "sdk"
        },
        "aws_ec2_availability_zone_group": {
          "terraform_type": "aws_ec2_availability_zone_group",
          "factory_function": "resourceEc2AvailabilityZoneGroup",
          "name": "Availability Zone Group",
          "sdk_type": "sdk"
        },
        "aws_ec2_capacity_reservation": {
          "terraform_type": "aws_ec2_capacity_reservation",
          "factory_function": "resourceEc2CapacityReservation",
          "name": "Capacity Reservation",
          "sdk_type": "sdk"
        },
        "aws_ec2_carrier_gateway, name=": {
          "terraform_type": "aws_ec2_carrier_gateway, name=",
          "factory_function": "resourceEc2CarrierGateway, name=",
          "name": "",
          "sdk_type": "sdk"
        },
        "aws_ec2_client_vpn_authorization_rule": {
          "terraform_type": "aws_ec2_client_vpn_authorization_rule",
          "factory_function": "resourceEc2ClientVpnAuthorizationRule",
          "name": "Client VPN Authorization Rule",
          "sdk_type": "sdk"
        },
        "aws_ec2_client_vpn_endpoint": {
          "terraform_type": "aws_ec2_client_vpn_endpoint",
          "factory_function": "resourceEc2ClientVpnEndpoint",
          "name": "Client VPN Endpoint",
          "sdk_type": "sdk"
        },
        "aws_ec2_client_vpn_network_association": {
          "terraform_type": "aws_ec2_client_vpn_network_association",
          "factory_function": "resourceEc2ClientVpnNetworkAssociation",
          "name": "Client VPN Network Association",
          "sdk_type": "sdk"
        },
        "aws_ec2_client_vpn_route": {
          "terraform_type": "aws_ec2_client_vpn_route",
          "factory_function": "resourceEc2ClientVpnRoute",
          "name": "Client VPN Route",
          "sdk_type": "sdk"
        },
        "aws_ec2_fleet": {
          "terraform_type": "aws_ec2_fleet",
          "factory_function": "resourceEc2Fleet",
          "name": "Fleet",
          "sdk_type": "sdk"
        },
        "aws_ec2_host": {
          "terraform_type": "aws_ec2_host",
          "factory_function": "resourceEc2Host",
          "name": "Host",
          "sdk_type": "sdk"
        },
        "aws_ec2_image_block_public_access": {
          "terraform_type": "aws_ec2_image_block_public_access",
          "factory_function": "resourceEc2ImageBlockPublicAccess",
          "name": "Image Block Public Access",
          "sdk_type": "sdk"
        },
        "aws_ec2_instance_state": {
          "terraform_type": "aws_ec2_instance_state",
          "factory_function": "resourceEc2InstanceState",
          "name": "Instance State",
          "sdk_type": "sdk"
        },
        "aws_ec2_local_gateway_route": {
          "terraform_type": "aws_ec2_local_gateway_route",
          "factory_function": "resourceEc2LocalGatewayRoute",
          "name": "Local Gateway Route",
          "sdk_type": "sdk"
        },
        "aws_ec2_local_gateway_route_table_vpc_association": {
          "terraform_type": "aws_ec2_local_gateway_route_table_vpc_association",
          "factory_function": "resourceEc2LocalGatewayRouteTableVpcAssociation",
          "name": "Local Gateway Route Table VPC Association",
          "sdk_type": "sdk"
        },
        "aws_ec2_managed_prefix_list": {
          "terraform_type": "aws_ec2_managed_prefix_list",
          "factory_function": "resourceEc2ManagedPrefixList",
          "name": "Managed Prefix List",
          "sdk_type": "sdk"
        },
        "aws_ec2_managed_prefix_list_entry": {
          "terraform_type": "aws_ec2_managed_prefix_list_entry",
          "factory_function": "resourceEc2ManagedPrefixListEntry",
          "name": "Managed Prefix List Entry",
          "sdk_type": "sdk"
        },
        "aws_ec2_network_insights_analysis": {
          "terraform_type": "aws_ec2_network_insights_analysis",
          "factory_function": "resourceEc2NetworkInsightsAnalysis",
          "name": "Network Insights Analysis",
          "sdk_type": "sdk"
        },
        "aws_ec2_network_insights_path": {
          "terraform_type": "aws_ec2_network_insights_path",
          "factory_function": "resourceEc2NetworkInsightsPath",
          "name": "Network Insights Path",
          "sdk_type": "sdk"
        },
        "aws_ec2_serial_console_access": {
          "terraform_type": "aws_ec2_serial_console_access",
          "factory_function": "resourceEc2SerialConsoleAccess",
          "name": "Serial Console Access",
          "sdk_type": "sdk"
        },
        "aws_ec2_subnet_cidr_reservation": {
          "terraform_type": "aws_ec2_subnet_cidr_reservation",
          "factory_function": "resourceEc2SubnetCidrReservation",
          "name": "Subnet CIDR Reservation",
          "sdk_type": "sdk"
        },
        "aws_ec2_tag": {
          "terraform_type": "aws_ec2_tag",
          "factory_function": "resourceEc2Tag",
          "name": "EC2 Resource Tag",
          "sdk_type": "sdk"
        },
        "aws_ec2_traffic_mirror_filter": {
          "terraform_type": "aws_ec2_traffic_mirror_filter",
          "factory_function": "resourceEc2TrafficMirrorFilter",
          "name": "Traffic Mirror Filter",
          "sdk_type": "sdk"
        },
        "aws_ec2_traffic_mirror_filter_rule": {
          "terraform_type": "aws_ec2_traffic_mirror_filter_rule",
          "factory_function": "resourceEc2TrafficMirrorFilterRule",
          "name": "Traffic Mirror Filter Rule",
          "sdk_type": "sdk"
        },
        "aws_ec2_traffic_mirror_session": {
          "terraform_type": "aws_ec2_traffic_mirror_session",
          "factory_function": "resourceEc2TrafficMirrorSession",
          "name": "Traffic Mirror Session",
          "sdk_type": "sdk"
        },
        "aws_ec2_traffic_mirror_target": {
          "terraform_type": "aws_ec2_traffic_mirror_target",
          "factory_function": "resourceEc2TrafficMirrorTarget",
          "name": "Traffic Mirror Target",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway": {
          "terraform_type": "aws_ec2_transit_gateway",
          "factory_function": "resourceEc2TransitGateway",
          "name": "Transit Gateway",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway_connect": {
          "terraform_type": "aws_ec2_transit_gateway_connect",
          "factory_function": "resourceEc2TransitGatewayConnect",
          "name": "Transit Gateway Connect",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway_connect_peer": {
          "terraform_type": "aws_ec2_transit_gateway_connect_peer",
          "factory_function": "resourceEc2TransitGatewayConnectPeer",
          "name": "Transit Gateway Connect Peer",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway_multicast_domain": {
          "terraform_type": "aws_ec2_transit_gateway_multicast_domain",
          "factory_function": "resourceEc2TransitGatewayMulticastDomain",
          "name": "Transit Gateway Multicast Domain",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway_multicast_domain_association": {
          "terraform_type": "aws_ec2_transit_gateway_multicast_domain_association",
          "factory_function": "resourceEc2TransitGatewayMulticastDomainAssociation",
          "name": "Transit Gateway Multicast Domain Association",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway_multicast_group_member": {
          "terraform_type": "aws_ec2_transit_gateway_multicast_group_member",
          "factory_function": "resourceEc2TransitGatewayMulticastGroupMember",
          "name": "Transit Gateway Multicast Group Member",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway_multicast_group_source": {
          "terraform_type": "aws_ec2_transit_gateway_multicast_group_source",
          "factory_function": "resourceEc2TransitGatewayMulticastGroupSource",
          "name": "Transit Gateway Multicast Group Source",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway_peering_attachment": {
          "terraform_type": "aws_ec2_transit_gateway_peering_attachment",
          "factory_function": "resourceEc2TransitGatewayPeeringAttachment",
          "name": "Transit Gateway Peering Attachment",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway_peering_attachment_accepter": {
          "terraform_type": "aws_ec2_transit_gateway_peering_attachment_accepter",
          "factory_function": "resourceEc2TransitGatewayPeeringAttachmentAccepter",
          "name": "Transit Gateway Peering Attachment Accepter",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway_policy_table": {
          "terraform_type": "aws_ec2_transit_gateway_policy_table",
          "factory_function": "resourceEc2TransitGatewayPolicyTable",
          "name": "Transit Gateway Policy Table",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway_policy_table_association": {
          "terraform_type": "aws_ec2_transit_gateway_policy_table_association",
          "factory_function": "resourceEc2TransitGatewayPolicyTableAssociation",
          "name": "Transit Gateway Policy Table Association",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway_prefix_list_reference": {
          "terraform_type": "aws_ec2_transit_gateway_prefix_list_reference",
          "factory_function": "resourceEc2TransitGatewayPrefixListReference",
          "name": "Transit Gateway Prefix List Reference",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway_route": {
          "terraform_type": "aws_ec2_transit_gateway_route",
          "factory_function": "resourceEc2TransitGatewayRoute",
          "name": "Transit Gateway Route",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway_route_table": {
          "terraform_type": "aws_ec2_transit_gateway_route_table",
          "factory_function": "resourceEc2TransitGatewayRouteTable",
          "name": "Transit Gateway Route Table",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway_route_table_association": {
          "terraform_type": "aws_ec2_transit_gateway_route_table_association",
          "factory_function": "resourceEc2TransitGatewayRouteTableAssociation",
          "name": "Transit Gateway Route Table Association",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway_route_table_propagation": {
          "terraform_type": "aws_ec2_transit_gateway_route_table_propagation",
          "factory_function": "resourceEc2TransitGatewayRouteTablePropagation",
          "name": "Transit Gateway Route Table Propagation",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway_vpc_attachment": {
          "terraform_type": "aws_ec2_transit_gateway_vpc_attachment",
          "factory_function": "resourceEc2TransitGatewayVpcAttachment",
          "name": "Transit Gateway VPC Attachment",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway_vpc_attachment_accepter": {
          "terraform_type": "aws_ec2_transit_gateway_vpc_attachment_accepter",
          "factory_function": "resourceEc2TransitGatewayVpcAttachmentAccepter",
          "name": "Transit Gateway VPC Attachment Accepter",
          "sdk_type": "sdk"
        },
        "aws_egress_only_internet_gateway": {
          "terraform_type": "aws_egress_only_internet_gateway",
          "factory_function": "resourceEgressOnlyInternetGateway",
          "name": "Egress-Only Internet Gateway",
          "sdk_type": "sdk"
        },
        "aws_eip": {
          "terraform_type": "aws_eip",
          "factory_function": "resourceEip",
          "name": "EIP",
          "sdk_type": "sdk"
        },
        "aws_eip_association": {
          "terraform_type": "aws_eip_association",
          "factory_function": "resourceEipAssociation",
          "name": "EIP Association",
          "sdk_type": "sdk"
        },
        "aws_flow_log": {
          "terraform_type": "aws_flow_log",
          "factory_function": "resourceFlowLog",
          "name": "Flow Log",
          "sdk_type": "sdk"
        },
        "aws_instance": {
          "terraform_type": "aws_instance",
          "factory_function": "resourceInstance",
          "name": "Instance",
          "sdk_type": "sdk"
        },
        "aws_internet_gateway": {
          "terraform_type": "aws_internet_gateway",
          "factory_function": "resourceInternetGateway",
          "name": "Internet Gateway",
          "sdk_type": "sdk"
        },
        "aws_internet_gateway_attachment": {
          "terraform_type": "aws_internet_gateway_attachment",
          "factory_function": "resourceInternetGatewayAttachment",
          "name": "Internet Gateway Attachment",
          "sdk_type": "sdk"
        },
        "aws_key_pair": {
          "terraform_type": "aws_key_pair",
          "factory_function": "resourceKeyPair",
          "name": "Key Pair",
          "sdk_type": "sdk"
        },
        "aws_launch_template": {
          "terraform_type": "aws_launch_template",
          "factory_function": "resourceLaunchTemplate",
          "name": "Launch Template",
          "sdk_type": "sdk"
        },
        "aws_main_route_table_association": {
          "terraform_type": "aws_main_route_table_association",
          "factory_function": "resourceMainRouteTableAssociation",
          "name": "Main Route Table Association",
          "sdk_type": "sdk"
        },
        "aws_nat_gateway": {
          "terraform_type": "aws_nat_gateway",
          "factory_function": "resourceNatGateway",
          "name": "NAT Gateway",
          "sdk_type": "sdk"
        },
        "aws_network_acl": {
          "terraform_type": "aws_network_acl",
          "factory_function": "resourceNetworkAcl",
          "name": "Network ACL",
          "sdk_type": "sdk"
        },
        "aws_network_acl_association": {
          "terraform_type": "aws_network_acl_association",
          "factory_function": "resourceNetworkAclAssociation",
          "name": "Network ACL Association",
          "sdk_type": "sdk"
        },
        "aws_network_acl_rule": {
          "terraform_type": "aws_network_acl_rule",
          "factory_function": "resourceNetworkAclRule",
          "name": "Network ACL Rule",
          "sdk_type": "sdk"
        },
        "aws_network_interface": {
          "terraform_type": "aws_network_interface",
          "factory_function": "resourceNetworkInterface",
          "name": "Network Interface",
          "sdk_type": "sdk"
        },
        "aws_network_interface_attachment": {
          "terraform_type": "aws_network_interface_attachment",
          "factory_function": "resourceNetworkInterfaceAttachment",
          "name": "Network Interface Attachment",
          "sdk_type": "sdk"
        },
        "aws_network_interface_sg_attachment": {
          "terraform_type": "aws_network_interface_sg_attachment",
          "factory_function": "resourceNetworkInterfaceSgAttachment",
          "name": "Network Interface SG Attachement",
          "sdk_type": "sdk"
        },
        "aws_placement_group": {
          "terraform_type": "aws_placement_group",
          "factory_function": "resourcePlacementGroup",
          "name": "Placement Group",
          "sdk_type": "sdk"
        },
        "aws_route": {
          "terraform_type": "aws_route",
          "factory_function": "resourceRoute",
          "name": "Route",
          "sdk_type": "sdk"
        },
        "aws_route_table": {
          "terraform_type": "aws_route_table",
          "factory_function": "resourceRouteTable",
          "name": "Route Table",
          "sdk_type": "sdk"
        },
        "aws_route_table_association": {
          "terraform_type": "aws_route_table_association",
          "factory_function": "resourceRouteTableAssociation",
          "name": "Route Table Association",
          "sdk_type": "sdk"
        },
        "aws_security_group": {
          "terraform_type": "aws_security_group",
          "factory_function": "resourceSecurityGroup",
          "name": "Security Group",
          "sdk_type": "sdk"
        },
        "aws_security_group_rule": {
          "terraform_type": "aws_security_group_rule",
          "factory_function": "resourceSecurityGroupRule",
          "name": "Security Group Rule",
          "sdk_type": "sdk"
        },
        "aws_snapshot_create_volume_permission": {
          "terraform_type": "aws_snapshot_create_volume_permission",
          "factory_function": "resourceSnapshotCreateVolumePermission",
          "name": "EBS Snapshot CreateVolume Permission",
          "sdk_type": "sdk"
        },
        "aws_spot_datafeed_subscription": {
          "terraform_type": "aws_spot_datafeed_subscription",
          "factory_function": "resourceSpotDatafeedSubscription",
          "name": "Spot Datafeed Subscription",
          "sdk_type": "sdk"
        },
        "aws_spot_fleet_request": {
          "terraform_type": "aws_spot_fleet_request",
          "factory_function": "resourceSpotFleetRequest",
          "name": "Spot Fleet Request",
          "sdk_type": "sdk"
        },
        "aws_spot_instance_request": {
          "terraform_type": "aws_spot_instance_request",
          "factory_function": "resourceSpotInstanceRequest",
          "name": "Spot Instance Request",
          "sdk_type": "sdk"
        },
        "aws_subnet": {
          "terraform_type": "aws_subnet",
          "factory_function": "resourceSubnet",
          "name": "Subnet",
          "sdk_type": "sdk"
        },
        "aws_verifiedaccess_endpoint": {
          "terraform_type": "aws_verifiedaccess_endpoint",
          "factory_function": "resourceVerifiedaccessEndpoint",
          "name": "Verified Access Endpoint",
          "sdk_type": "sdk"
        },
        "aws_verifiedaccess_group": {
          "terraform_type": "aws_verifiedaccess_group",
          "factory_function": "resourceVerifiedaccessGroup",
          "name": "Verified Access Group",
          "sdk_type": "sdk"
        },
        "aws_verifiedaccess_instance": {
          "terraform_type": "aws_verifiedaccess_instance",
          "factory_function": "resourceVerifiedaccessInstance",
          "name": "Verified Access Instance",
          "sdk_type": "sdk"
        },
        "aws_verifiedaccess_instance_logging_configuration": {
          "terraform_type": "aws_verifiedaccess_instance_logging_configuration",
          "factory_function": "resourceVerifiedaccessInstanceLoggingConfiguration",
          "name": "Verified Access Instance Logging Configuration",
          "sdk_type": "sdk"
        },
        "aws_verifiedaccess_instance_trust_provider_attachment": {
          "terraform_type": "aws_verifiedaccess_instance_trust_provider_attachment",
          "factory_function": "resourceVerifiedaccessInstanceTrustProviderAttachment",
          "name": "Verified Access Instance Trust Provider Attachment",
          "sdk_type": "sdk"
        },
        "aws_verifiedaccess_trust_provider": {
          "terraform_type": "aws_verifiedaccess_trust_provider",
          "factory_function": "resourceVerifiedaccessTrustProvider",
          "name": "Verified Access Trust Provider",
          "sdk_type": "sdk"
        },
        "aws_volume_attachment": {
          "terraform_type": "aws_volume_attachment",
          "factory_function": "resourceVolumeAttachment",
          "name": "EBS Volume Attachment",
          "sdk_type": "sdk"
        },
        "aws_vpc": {
          "terraform_type": "aws_vpc",
          "factory_function": "resourceVpc",
          "name": "VPC",
          "sdk_type": "sdk"
        },
        "aws_vpc_dhcp_options": {
          "terraform_type": "aws_vpc_dhcp_options",
          "factory_function": "resourceVpcDhcpOptions",
          "name": "DHCP Options",
          "sdk_type": "sdk"
        },
        "aws_vpc_dhcp_options_association": {
          "terraform_type": "aws_vpc_dhcp_options_association",
          "factory_function": "resourceVpcDhcpOptionsAssociation",
          "name": "VPC DHCP Options Association",
          "sdk_type": "sdk"
        },
        "aws_vpc_endpoint": {
          "terraform_type": "aws_vpc_endpoint",
          "factory_function": "resourceVpcEndpoint",
          "name": "VPC Endpoint",
          "sdk_type": "sdk"
        },
        "aws_vpc_endpoint_connection_accepter": {
          "terraform_type": "aws_vpc_endpoint_connection_accepter",
          "factory_function": "resourceVpcEndpointConnectionAccepter",
          "name": "VPC Endpoint Connection Accepter",
          "sdk_type": "sdk"
        },
        "aws_vpc_endpoint_connection_notification": {
          "terraform_type": "aws_vpc_endpoint_connection_notification",
          "factory_function": "resourceVpcEndpointConnectionNotification",
          "name": "VPC Endpoint Connection Notification",
          "sdk_type": "sdk"
        },
        "aws_vpc_endpoint_policy": {
          "terraform_type": "aws_vpc_endpoint_policy",
          "factory_function": "resourceVpcEndpointPolicy",
          "name": "VPC Endpoint Policy",
          "sdk_type": "sdk"
        },
        "aws_vpc_endpoint_route_table_association": {
          "terraform_type": "aws_vpc_endpoint_route_table_association",
          "factory_function": "resourceVpcEndpointRouteTableAssociation",
          "name": "VPC Endpoint Route Table Association",
          "sdk_type": "sdk"
        },
        "aws_vpc_endpoint_security_group_association": {
          "terraform_type": "aws_vpc_endpoint_security_group_association",
          "factory_function": "resourceVpcEndpointSecurityGroupAssociation",
          "name": "VPC Endpoint Security Group Association",
          "sdk_type": "sdk"
        },
        "aws_vpc_endpoint_service": {
          "terraform_type": "aws_vpc_endpoint_service",
          "factory_function": "resourceVpcEndpointService",
          "name": "VPC Endpoint Service",
          "sdk_type": "sdk"
        },
        "aws_vpc_endpoint_service_allowed_principal": {
          "terraform_type": "aws_vpc_endpoint_service_allowed_principal",
          "factory_function": "resourceVpcEndpointServiceAllowedPrincipal",
          "name": "Endpoint Service Allowed Principal",
          "sdk_type": "sdk"
        },
        "aws_vpc_endpoint_subnet_association": {
          "terraform_type": "aws_vpc_endpoint_subnet_association",
          "factory_function": "resourceVpcEndpointSubnetAssociation",
          "name": "VPC Endpoint Subnet Association",
          "sdk_type": "sdk"
        },
        "aws_vpc_ipam": {
          "terraform_type": "aws_vpc_ipam",
          "factory_function": "resourceVpcIpam",
          "name": "IPAM",
          "sdk_type": "sdk"
        },
        "aws_vpc_ipam_organization_admin_account": {
          "terraform_type": "aws_vpc_ipam_organization_admin_account",
          "factory_function": "resourceVpcIpamOrganizationAdminAccount",
          "name": "IPAM Organization Admin Account",
          "sdk_type": "sdk"
        },
        "aws_vpc_ipam_pool": {
          "terraform_type": "aws_vpc_ipam_pool",
          "factory_function": "resourceVpcIpamPool",
          "name": "IPAM Pool",
          "sdk_type": "sdk"
        },
        "aws_vpc_ipam_pool_cidr": {
          "terraform_type": "aws_vpc_ipam_pool_cidr",
          "factory_function": "resourceVpcIpamPoolCidr",
          "name": "IPAM Pool CIDR",
          "sdk_type": "sdk"
        },
        "aws_vpc_ipam_pool_cidr_allocation": {
          "terraform_type": "aws_vpc_ipam_pool_cidr_allocation",
          "factory_function": "resourceVpcIpamPoolCidrAllocation",
          "name": "IPAM Pool CIDR Allocation",
          "sdk_type": "sdk"
        },
        "aws_vpc_ipam_preview_next_cidr, name=": {
          "terraform_type": "aws_vpc_ipam_preview_next_cidr, name=",
          "factory_function": "resourceVpcIpamPreviewNextCidr, name=",
          "name": "",
          "sdk_type": "sdk"
        },
        "aws_vpc_ipam_resource_discovery": {
          "terraform_type": "aws_vpc_ipam_resource_discovery",
          "factory_function": "resourceVpcIpamResourceDiscovery",
          "name": "IPAM Resource Discovery",
          "sdk_type": "sdk"
        },
        "aws_vpc_ipam_resource_discovery_association": {
          "terraform_type": "aws_vpc_ipam_resource_discovery_association",
          "factory_function": "resourceVpcIpamResourceDiscoveryAssociation",
          "name": "IPAM Resource Discovery Association",
          "sdk_type": "sdk"
        },
        "aws_vpc_ipam_scope": {
          "terraform_type": "aws_vpc_ipam_scope",
          "factory_function": "resourceVpcIpamScope",
          "name": "IPAM Scope",
          "sdk_type": "sdk"
        },
        "aws_vpc_ipv4_cidr_block_association": {
          "terraform_type": "aws_vpc_ipv4_cidr_block_association",
          "factory_function": "resourceVpcIpv4CidrBlockAssociation",
          "name": "VPC IPV4 CIDR Block Association",
          "sdk_type": "sdk"
        },
        "aws_vpc_ipv6_cidr_block_association": {
          "terraform_type": "aws_vpc_ipv6_cidr_block_association",
          "factory_function": "resourceVpcIpv6CidrBlockAssociation",
          "name": "VPC IPV6 CIDR Block Association",
          "sdk_type": "sdk"
        },
        "aws_vpc_network_performance_metric_subscription": {
          "terraform_type": "aws_vpc_network_performance_metric_subscription",
          "factory_function": "resourceVpcNetworkPerformanceMetricSubscription",
          "name": "VPC Network Performance Metric Subscription",
          "sdk_type": "sdk"
        },
        "aws_vpc_peering_connection": {
          "terraform_type": "aws_vpc_peering_connection",
          "factory_function": "resourceVpcPeeringConnection",
          "name": "VPC Peering Connection",
          "sdk_type": "sdk"
        },
        "aws_vpc_peering_connection_accepter": {
          "terraform_type": "aws_vpc_peering_connection_accepter",
          "factory_function": "resourceVpcPeeringConnectionAccepter",
          "name": "VPC Peering Connection",
          "sdk_type": "sdk"
        },
        "aws_vpc_peering_connection_options": {
          "terraform_type": "aws_vpc_peering_connection_options",
          "factory_function": "resourceVpcPeeringConnectionOptions",
          "name": "VPC Peering Connection Options",
          "sdk_type": "sdk"
        },
        "aws_vpn_connection": {
          "terraform_type": "aws_vpn_connection",
          "factory_function": "resourceVpnConnection",
          "name": "VPN Connection",
          "sdk_type": "sdk"
        },
        "aws_vpn_connection_route": {
          "terraform_type": "aws_vpn_connection_route",
          "factory_function": "resourceVpnConnectionRoute",
          "name": "VPN Connection Route",
          "sdk_type": "sdk"
        },
        "aws_vpn_gateway": {
          "terraform_type": "aws_vpn_gateway",
          "factory_function": "resourceVpnGateway",
          "name": "VPN Gateway",
          "sdk_type": "sdk"
        },
        "aws_vpn_gateway_attachment": {
          "terraform_type": "aws_vpn_gateway_attachment",
          "factory_function": "resourceVpnGatewayAttachment",
          "name": "VPN Gateway Attachment",
          "sdk_type": "sdk"
        },
        "aws_vpn_gateway_route_propagation": {
          "terraform_type": "aws_vpn_gateway_route_propagation",
          "factory_function": "resourceVpnGatewayRoutePropagation",
          "name": "VPN Gateway Route Propagation",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_ami": {
          "terraform_type": "aws_ami",
          "factory_function": "dataSourceAmi",
          "name": "AMI",
          "sdk_type": "sdk"
        },
        "aws_ami_ids": {
          "terraform_type": "aws_ami_ids",
          "factory_function": "dataSourceAmiIds",
          "name": "AMI IDs",
          "sdk_type": "sdk"
        },
        "aws_availability_zone": {
          "terraform_type": "aws_availability_zone",
          "factory_function": "dataSourceAvailabilityZone",
          "name": "Availability Zone",
          "sdk_type": "sdk"
        },
        "aws_availability_zones": {
          "terraform_type": "aws_availability_zones",
          "factory_function": "dataSourceAvailabilityZones",
          "name": "Availability Zones",
          "sdk_type": "sdk"
        },
        "aws_customer_gateway": {
          "terraform_type": "aws_customer_gateway",
          "factory_function": "dataSourceCustomerGateway",
          "name": "Customer Gateway",
          "sdk_type": "sdk"
        },
        "aws_ebs_default_kms_key": {
          "terraform_type": "aws_ebs_default_kms_key",
          "factory_function": "dataSourceEbsDefaultKmsKey",
          "name": "EBS Default KMS Key",
          "sdk_type": "sdk"
        },
        "aws_ebs_encryption_by_default": {
          "terraform_type": "aws_ebs_encryption_by_default",
          "factory_function": "dataSourceEbsEncryptionByDefault",
          "name": "EBS Encryption By Default",
          "sdk_type": "sdk"
        },
        "aws_ebs_snapshot": {
          "terraform_type": "aws_ebs_snapshot",
          "factory_function": "dataSourceEbsSnapshot",
          "name": "EBS Snapshot",
          "sdk_type": "sdk"
        },
        "aws_ebs_snapshot_ids": {
          "terraform_type": "aws_ebs_snapshot_ids",
          "factory_function": "dataSourceEbsSnapshotIds",
          "name": "EBS Snapshot IDs",
          "sdk_type": "sdk"
        },
        "aws_ebs_volume": {
          "terraform_type": "aws_ebs_volume",
          "factory_function": "dataSourceEbsVolume",
          "name": "EBS Volume",
          "sdk_type": "sdk"
        },
        "aws_ebs_volumes": {
          "terraform_type": "aws_ebs_volumes",
          "factory_function": "dataSourceEbsVolumes",
          "name": "EBS Volumes",
          "sdk_type": "sdk"
        },
        "aws_ec2_client_vpn_endpoint": {
          "terraform_type": "aws_ec2_client_vpn_endpoint",
          "factory_function": "dataSourceEc2ClientVpnEndpoint",
          "name": "Client VPN Endpoint",
          "sdk_type": "sdk"
        },
        "aws_ec2_coip_pool": {
          "terraform_type": "aws_ec2_coip_pool",
          "factory_function": "dataSourceEc2CoipPool",
          "name": "COIP Pool",
          "sdk_type": "sdk"
        },
        "aws_ec2_coip_pools": {
          "terraform_type": "aws_ec2_coip_pools",
          "factory_function": "dataSourceEc2CoipPools",
          "name": "COIP Pools",
          "sdk_type": "sdk"
        },
        "aws_ec2_host": {
          "terraform_type": "aws_ec2_host",
          "factory_function": "dataSourceEc2Host",
          "name": "Host",
          "sdk_type": "sdk"
        },
        "aws_ec2_instance_type": {
          "terraform_type": "aws_ec2_instance_type",
          "factory_function": "dataSourceEc2InstanceType",
          "name": "Instance Type",
          "sdk_type": "sdk"
        },
        "aws_ec2_instance_type_offering": {
          "terraform_type": "aws_ec2_instance_type_offering",
          "factory_function": "dataSourceEc2InstanceTypeOffering",
          "name": "Instance Type Offering",
          "sdk_type": "sdk"
        },
        "aws_ec2_instance_type_offerings": {
          "terraform_type": "aws_ec2_instance_type_offerings",
          "factory_function": "dataSourceEc2InstanceTypeOfferings",
          "name": "Instance Type Offering",
          "sdk_type": "sdk"
        },
        "aws_ec2_instance_types": {
          "terraform_type": "aws_ec2_instance_types",
          "factory_function": "dataSourceEc2InstanceTypes",
          "name": "Instance Types",
          "sdk_type": "sdk"
        },
        "aws_ec2_local_gateway": {
          "terraform_type": "aws_ec2_local_gateway",
          "factory_function": "dataSourceEc2LocalGateway",
          "name": "Local Gateway",
          "sdk_type": "sdk"
        },
        "aws_ec2_local_gateway_route_table": {
          "terraform_type": "aws_ec2_local_gateway_route_table",
          "factory_function": "dataSourceEc2LocalGatewayRouteTable",
          "name": "Local Gateway Route Table",
          "sdk_type": "sdk"
        },
        "aws_ec2_local_gateway_route_tables": {
          "terraform_type": "aws_ec2_local_gateway_route_tables",
          "factory_function": "dataSourceEc2LocalGatewayRouteTables",
          "name": "Local Gateway Route Table",
          "sdk_type": "sdk"
        },
        "aws_ec2_local_gateway_virtual_interface": {
          "terraform_type": "aws_ec2_local_gateway_virtual_interface",
          "factory_function": "dataSourceEc2LocalGatewayVirtualInterface",
          "name": "Local Gateway Virtual Interface",
          "sdk_type": "sdk"
        },
        "aws_ec2_local_gateway_virtual_interface_group": {
          "terraform_type": "aws_ec2_local_gateway_virtual_interface_group",
          "factory_function": "dataSourceEc2LocalGatewayVirtualInterfaceGroup",
          "name": "Local Gateway Virtual Interface Group",
          "sdk_type": "sdk"
        },
        "aws_ec2_local_gateway_virtual_interface_groups": {
          "terraform_type": "aws_ec2_local_gateway_virtual_interface_groups",
          "factory_function": "dataSourceEc2LocalGatewayVirtualInterfaceGroups",
          "name": "Local Gateway Virtual Interface Groups",
          "sdk_type": "sdk"
        },
        "aws_ec2_local_gateways": {
          "terraform_type": "aws_ec2_local_gateways",
          "factory_function": "dataSourceEc2LocalGateways",
          "name": "Local Gateways",
          "sdk_type": "sdk"
        },
        "aws_ec2_managed_prefix_list": {
          "terraform_type": "aws_ec2_managed_prefix_list",
          "factory_function": "dataSourceEc2ManagedPrefixList",
          "name": "Managed Prefix List",
          "sdk_type": "sdk"
        },
        "aws_ec2_managed_prefix_lists": {
          "terraform_type": "aws_ec2_managed_prefix_lists",
          "factory_function": "dataSourceEc2ManagedPrefixLists",
          "name": "Managed Prefix Lists",
          "sdk_type": "sdk"
        },
        "aws_ec2_network_insights_analysis": {
          "terraform_type": "aws_ec2_network_insights_analysis",
          "factory_function": "dataSourceEc2NetworkInsightsAnalysis",
          "name": "Network Insights Analysis",
          "sdk_type": "sdk"
        },
        "aws_ec2_network_insights_path": {
          "terraform_type": "aws_ec2_network_insights_path",
          "factory_function": "dataSourceEc2NetworkInsightsPath",
          "name": "Network Insights Path",
          "sdk_type": "sdk"
        },
        "aws_ec2_public_ipv4_pool": {
          "terraform_type": "aws_ec2_public_ipv4_pool",
          "factory_function": "dataSourceEc2PublicIpv4Pool",
          "name": "Public IPv4 Pool",
          "sdk_type": "sdk"
        },
        "aws_ec2_public_ipv4_pools, name=": {
          "terraform_type": "aws_ec2_public_ipv4_pools, name=",
          "factory_function": "dataSourceEc2PublicIpv4Pools, name=",
          "name": "",
          "sdk_type": "sdk"
        },
        "aws_ec2_serial_console_access": {
          "terraform_type": "aws_ec2_serial_console_access",
          "factory_function": "dataSourceEc2SerialConsoleAccess",
          "name": "Serial Console Access",
          "sdk_type": "sdk"
        },
        "aws_ec2_spot_price": {
          "terraform_type": "aws_ec2_spot_price",
          "factory_function": "dataSourceEc2SpotPrice",
          "name": "Spot Price",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway": {
          "terraform_type": "aws_ec2_transit_gateway",
          "factory_function": "dataSourceEc2TransitGateway",
          "name": "Transit Gateway",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway_attachment": {
          "terraform_type": "aws_ec2_transit_gateway_attachment",
          "factory_function": "dataSourceEc2TransitGatewayAttachment",
          "name": "Transit Gateway Attachment",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway_attachments": {
          "terraform_type": "aws_ec2_transit_gateway_attachments",
          "factory_function": "dataSourceEc2TransitGatewayAttachments",
          "name": "Transit Gateway Attachments",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway_connect": {
          "terraform_type": "aws_ec2_transit_gateway_connect",
          "factory_function": "dataSourceEc2TransitGatewayConnect",
          "name": "Transit Gateway Connect",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway_connect_peer": {
          "terraform_type": "aws_ec2_transit_gateway_connect_peer",
          "factory_function": "dataSourceEc2TransitGatewayConnectPeer",
          "name": "Transit Gateway Connect Peer",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway_dx_gateway_attachment": {
          "terraform_type": "aws_ec2_transit_gateway_dx_gateway_attachment",
          "factory_function": "dataSourceEc2TransitGatewayDxGatewayAttachment",
          "name": "Transit Gateway Direct Connect Gateway Attachment",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway_multicast_domain": {
          "terraform_type": "aws_ec2_transit_gateway_multicast_domain",
          "factory_function": "dataSourceEc2TransitGatewayMulticastDomain",
          "name": "Transit Gateway Multicast Domain",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway_peering_attachment": {
          "terraform_type": "aws_ec2_transit_gateway_peering_attachment",
          "factory_function": "dataSourceEc2TransitGatewayPeeringAttachment",
          "name": "Transit Gateway Peering Attachment",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway_peering_attachments": {
          "terraform_type": "aws_ec2_transit_gateway_peering_attachments",
          "factory_function": "dataSourceEc2TransitGatewayPeeringAttachments",
          "name": "Transit Gateway Peering Attachments",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway_route_table": {
          "terraform_type": "aws_ec2_transit_gateway_route_table",
          "factory_function": "dataSourceEc2TransitGatewayRouteTable",
          "name": "Transit Gateway Route Table",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway_route_table_associations": {
          "terraform_type": "aws_ec2_transit_gateway_route_table_associations",
          "factory_function": "dataSourceEc2TransitGatewayRouteTableAssociations",
          "name": "Transit Gateway Route Table Associations",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway_route_table_propagations": {
          "terraform_type": "aws_ec2_transit_gateway_route_table_propagations",
          "factory_function": "dataSourceEc2TransitGatewayRouteTablePropagations",
          "name": "Transit Gateway Route Table Propagations",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway_route_table_routes": {
          "terraform_type": "aws_ec2_transit_gateway_route_table_routes",
          "factory_function": "dataSourceEc2TransitGatewayRouteTableRoutes",
          "name": "Transit Gateway Route Table Routes",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway_route_tables": {
          "terraform_type": "aws_ec2_transit_gateway_route_tables",
          "factory_function": "dataSourceEc2TransitGatewayRouteTables",
          "name": "Transit Gateway Route Tables",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway_vpc_attachment": {
          "terraform_type": "aws_ec2_transit_gateway_vpc_attachment",
          "factory_function": "dataSourceEc2TransitGatewayVpcAttachment",
          "name": "Transit Gateway VPC Attachment",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway_vpc_attachments": {
          "terraform_type": "aws_ec2_transit_gateway_vpc_attachments",
          "factory_function": "dataSourceEc2TransitGatewayVpcAttachments",
          "name": "Transit Gateway VPC Attachments",
          "sdk_type": "sdk"
        },
        "aws_ec2_transit_gateway_vpn_attachment": {
          "terraform_type": "aws_ec2_transit_gateway_vpn_attachment",
          "factory_function": "dataSourceEc2TransitGatewayVpnAttachment",
          "name": "Transit Gateway VPN Attachment",
          "sdk_type": "sdk"
        },
        "aws_eip": {
          "terraform_type": "aws_eip",
          "factory_function": "dataSourceEip",
          "name": "",
          "sdk_type": "sdk"
        },
        "aws_eips": {
          "terraform_type": "aws_eips",
          "factory_function": "dataSourceEips",
          "name": "EIPs",
          "sdk_type": "sdk"
        },
        "aws_instance": {
          "terraform_type": "aws_instance",
          "factory_function": "dataSourceInstance",
          "name": "Instance",
          "sdk_type": "sdk"
        },
        "aws_instances": {
          "terraform_type": "aws_instances",
          "factory_function": "dataSourceInstances",
          "name": "Instances",
          "sdk_type": "sdk"
        },
        "aws_internet_gateway": {
          "terraform_type": "aws_internet_gateway",
          "factory_function": "dataSourceInternetGateway",
          "name": "Internet Gateway",
          "sdk_type": "sdk"
        },
        "aws_key_pair": {
          "terraform_type": "aws_key_pair",
          "factory_function": "dataSourceKeyPair",
          "name": "Key Pair",
          "sdk_type": "sdk"
        },
        "aws_launch_template": {
          "terraform_type": "aws_launch_template",
          "factory_function": "dataSourceLaunchTemplate",
          "name": "Launch Template",
          "sdk_type": "sdk"
        },
        "aws_nat_gateway": {
          "terraform_type": "aws_nat_gateway",
          "factory_function": "dataSourceNatGateway",
          "name": "NAT Gateway",
          "sdk_type": "sdk"
        },
        "aws_nat_gateways": {
          "terraform_type": "aws_nat_gateways",
          "factory_function": "dataSourceNatGateways",
          "name": "NAT Gateways",
          "sdk_type": "sdk"
        },
        "aws_network_acls": {
          "terraform_type": "aws_network_acls",
          "factory_function": "dataSourceNetworkAcls",
          "name": "Network ACLs",
          "sdk_type": "sdk"
        },
        "aws_network_interface": {
          "terraform_type": "aws_network_interface",
          "factory_function": "dataSourceNetworkInterface",
          "name": "Network Interface",
          "sdk_type": "sdk"
        },
        "aws_network_interfaces": {
          "terraform_type": "aws_network_interfaces",
          "factory_function": "dataSourceNetworkInterfaces",
          "name": "Network Interfaces",
          "sdk_type": "sdk"
        },
        "aws_prefix_list": {
          "terraform_type": "aws_prefix_list",
          "factory_function": "dataSourcePrefixList",
          "name": "Prefix List",
          "sdk_type": "sdk"
        },
        "aws_route": {
          "terraform_type": "aws_route",
          "factory_function": "dataSourceRoute",
          "name": "Route",
          "sdk_type": "sdk"
        },
        "aws_route_table": {
          "terraform_type": "aws_route_table",
          "factory_function": "dataSourceRouteTable",
          "name": "Route Table",
          "sdk_type": "sdk"
        },
        "aws_route_tables": {
          "terraform_type": "aws_route_tables",
          "factory_function": "dataSourceRouteTables",
          "name": "Route Tables",
          "sdk_type": "sdk"
        },
        "aws_security_group": {
          "terraform_type": "aws_security_group",
          "factory_function": "dataSourceSecurityGroup",
          "name": "Security Group",
          "sdk_type": "sdk"
        },
        "aws_security_groups": {
          "terraform_type": "aws_security_groups",
          "factory_function": "dataSourceSecurityGroups",
          "name": "Security Groups",
          "sdk_type": "sdk"
        },
        "aws_subnet": {
          "terraform_type": "aws_subnet",
          "factory_function": "dataSourceSubnet",
          "name": "Subnet",
          "sdk_type": "sdk"
        },
        "aws_subnets": {
          "terraform_type": "aws_subnets",
          "factory_function": "dataSourceSubnets",
          "name": "Subnets",
          "sdk_type": "sdk"
        },
        "aws_vpc": {
          "terraform_type": "aws_vpc",
          "factory_function": "dataSourceVpc",
          "name": "VPC",
          "sdk_type": "sdk"
        },
        "aws_vpc_dhcp_options": {
          "terraform_type": "aws_vpc_dhcp_options",
          "factory_function": "dataSourceVpcDhcpOptions",
          "name": "DHCP Options",
          "sdk_type": "sdk"
        },
        "aws_vpc_endpoint": {
          "terraform_type": "aws_vpc_endpoint",
          "factory_function": "dataSourceVpcEndpoint",
          "name": "Endpoint",
          "sdk_type": "sdk"
        },
        "aws_vpc_endpoint_service": {
          "terraform_type": "aws_vpc_endpoint_service",
          "factory_function": "dataSourceVpcEndpointService",
          "name": "Endpoint Service",
          "sdk_type": "sdk"
        },
        "aws_vpc_ipam_pool": {
          "terraform_type": "aws_vpc_ipam_pool",
          "factory_function": "dataSourceVpcIpamPool",
          "name": "IPAM Pool",
          "sdk_type": "sdk"
        },
        "aws_vpc_ipam_pool_cidrs": {
          "terraform_type": "aws_vpc_ipam_pool_cidrs",
          "factory_function": "dataSourceVpcIpamPoolCidrs",
          "name": "IPAM Pool CIDRs",
          "sdk_type": "sdk"
        },
        "aws_vpc_ipam_pools": {
          "terraform_type": "aws_vpc_ipam_pools",
          "factory_function": "dataSourceVpcIpamPools",
          "name": "IPAM Pools",
          "sdk_type": "sdk"
        },
        "aws_vpc_ipam_preview_next_cidr": {
          "terraform_type": "aws_vpc_ipam_preview_next_cidr",
          "factory_function": "dataSourceVpcIpamPreviewNextCidr",
          "name": "IPAM Preview Next CIDR",
          "sdk_type": "sdk"
        },
        "aws_vpc_peering_connection": {
          "terraform_type": "aws_vpc_peering_connection",
          "factory_function": "dataSourceVpcPeeringConnection",
          "name": "VPC Peering Connection",
          "sdk_type": "sdk"
        },
        "aws_vpc_peering_connections": {
          "terraform_type": "aws_vpc_peering_connections",
          "factory_function": "dataSourceVpcPeeringConnections",
          "name": "VPC Peering Connections",
          "sdk_type": "sdk"
        },
        "aws_vpcs": {
          "terraform_type": "aws_vpcs",
          "factory_function": "dataSourceVpcs",
          "name": "VPCs",
          "sdk_type": "sdk"
        },
        "aws_vpn_gateway": {
          "terraform_type": "aws_vpn_gateway",
          "factory_function": "dataSourceVpnGateway",
          "name": "VPN Gateway",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_ebs_fast_snapshot_restore": {
          "terraform_type": "aws_ebs_fast_snapshot_restore",
          "factory_function": "newEbsFastSnapshotRestoreResource",
          "name": "EBS Fast Snapshot Restore",
          "sdk_type": "framework",
          "struct_type": "ebsFastSnapshotRestoreResource"
        },
        "aws_ec2_capacity_block_reservation": {
          "terraform_type": "aws_ec2_capacity_block_reservation",
          "factory_function": "newEc2CapacityBlockReservationResource",
          "name": "Capacity Block Reservation",
          "sdk_type": "framework",
          "struct_type": "capacityBlockReservationResource"
        },
        "aws_ec2_default_credit_specification": {
          "terraform_type": "aws_ec2_default_credit_specification",
          "factory_function": "newEc2DefaultCreditSpecificationResource",
          "name": "Default Credit Specification",
          "sdk_type": "framework",
          "struct_type": "defaultCreditSpecificationResource"
        },
        "aws_ec2_instance_connect_endpoint": {
          "terraform_type": "aws_ec2_instance_connect_endpoint",
          "factory_function": "newEc2InstanceConnectEndpointResource",
          "name": "Instance Connect Endpoint",
          "sdk_type": "framework",
          "struct_type": "instanceConnectEndpointResource"
        },
        "aws_ec2_instance_metadata_defaults": {
          "terraform_type": "aws_ec2_instance_metadata_defaults",
          "factory_function": "newEc2InstanceMetadataDefaultsResource",
          "name": "Instance Metadata Defaults",
          "sdk_type": "framework",
          "struct_type": "instanceMetadataDefaultsResource"
        },
        "aws_ec2_transit_gateway_default_route_table_association": {
          "terraform_type": "aws_ec2_transit_gateway_default_route_table_association",
          "factory_function": "newEc2TransitGatewayDefaultRouteTableAssociationResource",
          "name": "Transit Gateway Default Route Table Association",
          "sdk_type": "framework",
          "struct_type": "transitGatewayDefaultRouteTableAssociationResource"
        },
        "aws_ec2_transit_gateway_default_route_table_propagation": {
          "terraform_type": "aws_ec2_transit_gateway_default_route_table_propagation",
          "factory_function": "newEc2TransitGatewayDefaultRouteTablePropagationResource",
          "name": "Transit Gateway Default Route Table Propagation",
          "sdk_type": "framework",
          "struct_type": "transitGatewayDefaultRouteTablePropagationResource"
        },
        "aws_eip_domain_name": {
          "terraform_type": "aws_eip_domain_name",
          "factory_function": "newEipDomainNameResource",
          "name": "EIP Domain Name",
          "sdk_type": "framework",
          "struct_type": "eipDomainNameResource"
        },
        "aws_nat_gateway_eip_association": {
          "terraform_type": "aws_nat_gateway_eip_association",
          "factory_function": "newNatGatewayEipAssociationResource",
          "name": "VPC NAT Gateway EIP Association",
          "sdk_type": "framework",
          "struct_type": "natGatewayEIPAssociationResource"
        },
        "aws_network_interface_permission": {
          "terraform_type": "aws_network_interface_permission",
          "factory_function": "newNetworkInterfacePermissionResource",
          "name": "Network Interface Permission",
          "sdk_type": "framework",
          "struct_type": "networkInterfacePermissionResource"
        },
        "aws_vpc_block_public_access_exclusion": {
          "terraform_type": "aws_vpc_block_public_access_exclusion",
          "factory_function": "newVpcBlockPublicAccessExclusionResource",
          "name": "VPC Block Public Access Exclusion",
          "sdk_type": "framework",
          "struct_type": "vpcBlockPublicAccessExclusionResource"
        },
        "aws_vpc_block_public_access_options": {
          "terraform_type": "aws_vpc_block_public_access_options",
          "factory_function": "newVpcBlockPublicAccessOptionsResource",
          "name": "VPC Block Public Access Options",
          "sdk_type": "framework",
          "struct_type": "vpcBlockPublicAccessOptionsResource"
        },
        "aws_vpc_endpoint_private_dns": {
          "terraform_type": "aws_vpc_endpoint_private_dns",
          "factory_function": "newVpcEndpointPrivateDnsResource",
          "name": "VPC Endpoint Private DNS",
          "sdk_type": "framework",
          "struct_type": "vpcEndpointPrivateDNSResource"
        },
        "aws_vpc_endpoint_service_private_dns_verification": {
          "terraform_type": "aws_vpc_endpoint_service_private_dns_verification",
          "factory_function": "newVpcEndpointServicePrivateDnsVerificationResource",
          "name": "VPC Endpoint Service Private DNS Verification",
          "sdk_type": "framework",
          "struct_type": "vpcEndpointServicePrivateDNSVerificationResource"
        },
        "aws_vpc_route_server": {
          "terraform_type": "aws_vpc_route_server",
          "factory_function": "newVpcRouteServerResource",
          "name": "VPC Route Server",
          "sdk_type": "framework",
          "struct_type": "vpcRouteServerResource"
        },
        "aws_vpc_route_server_endpoint": {
          "terraform_type": "aws_vpc_route_server_endpoint",
          "factory_function": "newVpcRouteServerEndpointResource",
          "name": "VPC Route Server Endpoint",
          "sdk_type": "framework",
          "struct_type": "vpcRouteServerEndpointResource"
        },
        "aws_vpc_route_server_peer": {
          "terraform_type": "aws_vpc_route_server_peer",
          "factory_function": "newVpcRouteServerPeerResource",
          "name": "VPC Route Server Peer",
          "sdk_type": "framework",
          "struct_type": "vpcRouteServerPeerResource"
        },
        "aws_vpc_route_server_propagation": {
          "terraform_type": "aws_vpc_route_server_propagation",
          "factory_function": "newVpcRouteServerPropagationResource",
          "name": "VPC Route Server Propagation",
          "sdk_type": "framework",
          "struct_type": "vpcRouteServerPropagationResource"
        },
        "aws_vpc_route_server_vpc_association": {
          "terraform_type": "aws_vpc_route_server_vpc_association",
          "factory_function": "newVpcRouteServerVpcAssociationResource",
          "name": "VPC Route Server VPC Association",
          "sdk_type": "framework",
          "struct_type": "vpcRouteServerVPCAssociationResource"
        },
        "aws_vpc_security_group_egress_rule": {
          "terraform_type": "aws_vpc_security_group_egress_rule",
          "factory_function": "newVpcSecurityGroupEgressRuleResource",
          "name": "Security Group Egress Rule",
          "sdk_type": "framework"
        },
        "aws_vpc_security_group_ingress_rule": {
          "terraform_type": "aws_vpc_security_group_ingress_rule",
          "factory_function": "newVpcSecurityGroupIngressRuleResource",
          "name": "Security Group Ingress Rule",
          "sdk_type": "framework",
          "struct_type": "securityGroupRuleResource"
        },
        "aws_vpc_security_group_vpc_association": {
          "terraform_type": "aws_vpc_security_group_vpc_association",
          "factory_function": "newVpcSecurityGroupVpcAssociationResource",
          "name": "Security Group VPC Association",
          "sdk_type": "framework",
          "struct_type": "securityGroupVPCAssociationResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_ec2_capacity_block_offering": {
          "terraform_type": "aws_ec2_capacity_block_offering",
          "factory_function": "newEc2CapacityBlockOfferingDataSource",
          "name": "Capacity Block Offering",
          "sdk_type": "framework",
          "struct_type": "capacityBlockOfferingDataSource"
        },
        "aws_spot_datafeed_subscription": {
          "terraform_type": "aws_spot_datafeed_subscription",
          "factory_function": "newSpotDatafeedSubscriptionDataSource",
          "name": "Spot Data Feed Subscription Data Source",
          "sdk_type": "framework",
          "struct_type": "spotDataFeedSubscriptionDataSource"
        },
        "aws_vpc_endpoint_associations": {
          "terraform_type": "aws_vpc_endpoint_associations",
          "factory_function": "newVpcEndpointAssociationsDataSource",
          "name": "VPC Endpoint Associations",
          "sdk_type": "framework",
          "struct_type": "vpcEndpointAssociationsDataSource"
        },
        "aws_vpc_ipam": {
          "terraform_type": "aws_vpc_ipam",
          "factory_function": "newVpcIpamDataSource",
          "name": "IPAM",
          "sdk_type": "framework",
          "struct_type": "ipamDataSource"
        },
        "aws_vpc_ipams": {
          "terraform_type": "aws_vpc_ipams",
          "factory_function": "newVpcIpamsDataSource",
          "name": "IPAMs",
          "sdk_type": "framework",
          "struct_type": "ipamsDataSource"
        },
        "aws_vpc_security_group_rule": {
          "terraform_type": "aws_vpc_security_group_rule",
          "factory_function": "newVpcSecurityGroupRuleDataSource",
          "name": "Security Group Rule",
          "sdk_type": "framework",
          "struct_type": "securityGroupRuleDataSource"
        },
        "aws_vpc_security_group_rules": {
          "terraform_type": "aws_vpc_security_group_rules",
          "factory_function": "newVpcSecurityGroupRulesDataSource",
          "name": "Security Group Rules",
          "sdk_type": "framework",
          "struct_type": "securityGroupRulesDataSource"
        },
        "aws_vpn_connection": {
          "terraform_type": "aws_vpn_connection",
          "factory_function": "newVpnConnectionDataSource",
          "name": "VPN Connection",
          "sdk_type": "framework",
          "struct_type": "dataSourceVPNConnection"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "capacityBlockReservationResource": "aws_ec2_capacity_block_reservation",
        "defaultCreditSpecificationResource": "aws_ec2_default_credit_specification",
        "ebsFastSnapshotRestoreResource": "aws_ebs_fast_snapshot_restore",
        "eipDomainNameResource": "aws_eip_domain_name",
        "instanceConnectEndpointResource": "aws_ec2_instance_connect_endpoint",
        "instanceMetadataDefaultsResource": "aws_ec2_instance_metadata_defaults",
        "natGatewayEIPAssociationResource": "aws_nat_gateway_eip_association",
        "networkInterfacePermissionResource": "aws_network_interface_permission",
        "securityGroupRuleResource": "aws_vpc_security_group_ingress_rule",
        "securityGroupVPCAssociationResource": "aws_vpc_security_group_vpc_association",
        "transitGatewayDefaultRouteTableAssociationResource": "aws_ec2_transit_gateway_default_route_table_association",
        "transitGatewayDefaultRouteTablePropagationResource": "aws_ec2_transit_gateway_default_route_table_propagation",
        "vpcBlockPublicAccessExclusionResource": "aws_vpc_block_public_access_exclusion",
        "vpcBlockPublicAccessOptionsResource": "aws_vpc_block_public_access_options",
        "vpcEndpointPrivateDNSResource": "aws_vpc_endpoint_private_dns",
        "vpcEndpointServicePrivateDNSVerificationResource": "aws_vpc_endpoint_service_private_dns_verification",
        "vpcRouteServerEndpointResource": "aws_vpc_route_server_endpoint",
        "vpcRouteServerPeerResource": "aws_vpc_route_server_peer",
        "vpcRouteServerPropagationResource": "aws_vpc_route_server_propagation",
        "vpcRouteServerResource": "aws_vpc_route_server",
        "vpcRouteServerVPCAssociationResource": "aws_vpc_route_server_vpc_association"
      },
      "data_source_terraform_types": {
        "capacityBlockOfferingDataSource": "aws_ec2_capacity_block_offering",
        "dataSourceVPNConnection": "aws_vpn_connection",
        "ipamDataSource": "aws_vpc_ipam",
        "ipamsDataSource": "aws_vpc_ipams",
        "securityGroupRuleDataSource": "aws_vpc_security_group_rule",
        "securityGroupRulesDataSource": "aws_vpc_security_group_rules",
        "spotDataFeedSubscriptionDataSource": "aws_spot_datafeed_subscription",
        "vpcEndpointAssociationsDataSource": "aws_vpc_endpoint_associations"
      },
      "resource_crud_methods": {
        "aws_ami": {
          "create_method": "resourceAMICreate",
          "read_method": "resourceAMIRead",
          "update_method": "resourceAMIUpdate",
          "delete_method": "resourceAMIDelete"
        },
        "aws_ami_copy": {
          "create_method": "resourceAMICopyCreate",
          "read_method": "resourceAMIRead",
          "update_method": "resourceAMIUpdate",
          "delete_method": "resourceAMIDelete"
        },
        "aws_ami_from_instance": {
          "create_method": "resourceAMIFromInstanceCreate",
          "read_method": "resourceAMIRead",
          "update_method": "resourceAMIUpdate",
          "delete_method": "resourceAMIDelete"
        },
        "aws_ami_launch_permission": {
          "create_method": "resourceAMILaunchPermissionCreate",
          "read_method": "resourceAMILaunchPermissionRead",
          "delete_method": "resourceAMILaunchPermissionDelete"
        },
        "aws_customer_gateway": {
          "create_method": "resourceCustomerGatewayCreate",
          "read_method": "resourceCustomerGatewayRead",
          "update_method": "resourceCustomerGatewayUpdate",
          "delete_method": "resourceCustomerGatewayDelete"
        },
        "aws_default_network_acl": {
          "create_method": "resourceDefaultNetworkACLCreate",
          "read_method": "resourceNetworkACLRead",
          "update_method": "resourceDefaultNetworkACLUpdate"
        },
        "aws_default_route_table": {
          "create_method": "resourceDefaultRouteTableCreate",
          "read_method": "resourceDefaultRouteTableRead",
          "update_method": "resourceRouteTableUpdate"
        },
        "aws_default_security_group": {
          "create_method": "resourceDefaultSecurityGroupCreate",
          "read_method": "resourceSecurityGroupRead",
          "update_method": "resourceSecurityGroupUpdate"
        },
        "aws_default_subnet": {
          "create_method": "resourceDefaultSubnetCreate",
          "read_method": "resourceSubnetRead",
          "update_method": "resourceSubnetUpdate",
          "delete_method": "resourceDefaultSubnetDelete"
        },
        "aws_default_vpc": {
          "create_method": "resourceDefaultVPCCreate",
          "read_method": "resourceVPCRead",
          "update_method": "resourceVPCUpdate",
          "delete_method": "resourceDefaultVPCDelete"
        },
        "aws_default_vpc_dhcp_options": {
          "create_method": "resourceDefaultVPCDHCPOptionsCreate",
          "read_method": "resourceVPCDHCPOptionsRead",
          "update_method": "resourceVPCDHCPOptionsUpdate"
        },
        "aws_ebs_default_kms_key": {
          "create_method": "resourceEBSDefaultKMSKeyCreate",
          "read_method": "resourceEBSDefaultKMSKeyRead",
          "delete_method": "resourceEBSDefaultKMSKeyDelete"
        },
        "aws_ebs_encryption_by_default": {
          "create_method": "resourceEBSEncryptionByDefaultCreate",
          "read_method": "resourceEBSEncryptionByDefaultRead",
          "update_method": "resourceEBSEncryptionByDefaultUpdate",
          "delete_method": "resourceEBSEncryptionByDefaultDelete"
        },
        "aws_ebs_snapshot": {
          "create_method": "resourceEBSSnapshotCreate",
          "read_method": "resourceEBSSnapshotRead",
          "update_method": "resourceEBSSnapshotUpdate",
          "delete_method": "resourceEBSSnapshotDelete"
        },
        "aws_ebs_snapshot_block_public_access": {
          "create_method": "resourceEBSSnapshotBlockPublicAccessPut",
          "read_method": "resourceEBSSnapshotBlockPublicAccessRead",
          "update_method": "resourceEBSSnapshotBlockPublicAccessPut",
          "delete_method": "resourceEBSSnapshotBlockPublicAccessDelete"
        },
        "aws_ebs_snapshot_copy": {
          "create_method": "resourceEBSSnapshotCopyCreate",
          "read_method": "resourceEBSSnapshotRead",
          "update_method": "resourceEBSSnapshotUpdate",
          "delete_method": "resourceEBSSnapshotDelete"
        },
        "aws_ebs_snapshot_import": {
          "create_method": "resourceEBSSnapshotImportCreate",
          "read_method": "resourceEBSSnapshotImportRead",
          "update_method": "resourceEBSSnapshotUpdate",
          "delete_method": "resourceEBSSnapshotDelete"
        },
        "aws_ebs_volume": {
          "create_method": "resourceEBSVolumeCreate",
          "read_method": "resourceEBSVolumeRead",
          "update_method": "resourceEBSVolumeUpdate",
          "delete_method": "resourceEBSVolumeDelete"
        },
        "aws_ec2_availability_zone_group": {
          "create_method": "resourceAvailabilityZoneGroupCreate",
          "read_method": "resourceAvailabilityZoneGroupRead",
          "update_method": "resourceAvailabilityZoneGroupUpdate"
        },
        "aws_ec2_capacity_reservation": {
          "create_method": "resourceCapacityReservationCreate",
          "read_method": "resourceCapacityReservationRead",
          "update_method": "resourceCapacityReservationUpdate",
          "delete_method": "resourceCapacityReservationDelete"
        },
        "aws_ec2_carrier_gateway, name=": {
          "create_method": "resourceCarrierGatewayCreate",
          "read_method": "resourceCarrierGatewayRead",
          "update_method": "resourceCarrierGatewayUpdate",
          "delete_method": "resourceCarrierGatewayDelete"
        },
        "aws_ec2_client_vpn_authorization_rule": {
          "create_method": "resourceClientVPNAuthorizationRuleCreate",
          "read_method": "resourceClientVPNAuthorizationRuleRead",
          "delete_method": "resourceClientVPNAuthorizationRuleDelete"
        },
        "aws_ec2_client_vpn_endpoint": {
          "create_method": "resourceClientVPNEndpointCreate",
          "read_method": "resourceClientVPNEndpointRead",
          "update_method": "resourceClientVPNEndpointUpdate",
          "delete_method": "resourceClientVPNEndpointDelete"
        },
        "aws_ec2_client_vpn_network_association": {
          "create_method": "resourceClientVPNNetworkAssociationCreate",
          "read_method": "resourceClientVPNNetworkAssociationRead",
          "delete_method": "resourceClientVPNNetworkAssociationDelete"
        },
        "aws_ec2_client_vpn_route": {
          "create_method": "resourceClientVPNRouteCreate",
          "read_method": "resourceClientVPNRouteRead",
          "delete_method": "resourceClientVPNRouteDelete"
        },
        "aws_ec2_fleet": {
          "create_method": "resourceFleetCreate",
          "read_method": "resourceFleetRead",
          "update_method": "resourceFleetUpdate",
          "delete_method": "resourceFleetDelete"
        },
        "aws_ec2_host": {
          "create_method": "resourceHostCreate",
          "read_method": "resourceHostRead",
          "update_method": "resourceHostUpdate",
          "delete_method": "resourceHostDelete"
        },
        "aws_ec2_image_block_public_access": {
          "create_method": "resourceImageBlockPublicAccessPut",
          "read_method": "resourceImageBlockPublicAccessRead",
          "update_method": "resourceImageBlockPublicAccessPut"
        },
        "aws_ec2_instance_state": {
          "create_method": "resourceInstanceStateCreate",
          "read_method": "resourceInstanceStateRead",
          "update_method": "resourceInstanceStateUpdate"
        },
        "aws_ec2_local_gateway_route": {
          "create_method": "resourceLocalGatewayRouteCreate",
          "read_method": "resourceLocalGatewayRouteRead",
          "delete_method": "resourceLocalGatewayRouteDelete"
        },
        "aws_ec2_local_gateway_route_table_vpc_association": {
          "create_method": "resourceLocalGatewayRouteTableVPCAssociationCreate",
          "read_method": "resourceLocalGatewayRouteTableVPCAssociationRead",
          "update_method": "resourceLocalGatewayRouteTableVPCAssociationUpdate",
          "delete_method": "resourceLocalGatewayRouteTableVPCAssociationDelete"
        },
        "aws_ec2_managed_prefix_list": {
          "create_method": "resourceManagedPrefixListCreate",
          "read_method": "resourceManagedPrefixListRead",
          "update_method": "resourceManagedPrefixListUpdate",
          "delete_method": "resourceManagedPrefixListDelete"
        },
        "aws_ec2_managed_prefix_list_entry": {
          "create_method": "resourceManagedPrefixListEntryCreate",
          "read_method": "resourceManagedPrefixListEntryRead",
          "delete_method": "resourceManagedPrefixListEntryDelete"
        },
        "aws_ec2_network_insights_analysis": {
          "create_method": "resourceNetworkInsightsAnalysisCreate",
          "read_method": "resourceNetworkInsightsAnalysisRead",
          "update_method": "resourceNetworkInsightsAnalysisUpdate",
          "delete_method": "resourceNetworkInsightsAnalysisDelete"
        },
        "aws_ec2_network_insights_path": {
          "create_method": "resourceNetworkInsightsPathCreate",
          "read_method": "resourceNetworkInsightsPathRead",
          "update_method": "resourceNetworkInsightsPathUpdate",
          "delete_method": "resourceNetworkInsightsPathDelete"
        },
        "aws_ec2_serial_console_access": {
          "create_method": "resourceSerialConsoleAccessCreate",
          "read_method": "resourceSerialConsoleAccessRead",
          "update_method": "resourceSerialConsoleAccessUpdate",
          "delete_method": "resourceSerialConsoleAccessDelete"
        },
        "aws_ec2_subnet_cidr_reservation": {
          "create_method": "resourceSubnetCIDRReservationCreate",
          "read_method": "resourceSubnetCIDRReservationRead",
          "delete_method": "resourceSubnetCIDRReservationDelete"
        },
        "aws_ec2_tag": {
          "create_method": "resourceTagCreate",
          "read_method": "resourceTagRead",
          "update_method": "resourceTagUpdate",
          "delete_method": "resourceTagDelete"
        },
        "aws_ec2_traffic_mirror_filter": {
          "create_method": "resourceTrafficMirrorFilterCreate",
          "read_method": "resourceTrafficMirrorFilterRead",
          "update_method": "resourceTrafficMirrorFilterUpdate",
          "delete_method": "resourceTrafficMirrorFilterDelete"
        },
        "aws_ec2_traffic_mirror_filter_rule": {
          "create_method": "resourceTrafficMirrorFilterRuleCreate",
          "read_method": "resourceTrafficMirrorFilterRuleRead",
          "update_method": "resourceTrafficMirrorFilterRuleUpdate",
          "delete_method": "resourceTrafficMirrorFilterRuleDelete"
        },
        "aws_ec2_traffic_mirror_session": {
          "create_method": "resourceTrafficMirrorSessionCreate",
          "read_method": "resourceTrafficMirrorSessionRead",
          "update_method": "resourceTrafficMirrorSessionUpdate",
          "delete_method": "resourceTrafficMirrorSessionDelete"
        },
        "aws_ec2_traffic_mirror_target": {
          "create_method": "resourceTrafficMirrorTargetCreate",
          "read_method": "resourceTrafficMirrorTargetRead",
          "update_method": "resourceTrafficMirrorTargetUpdate",
          "delete_method": "resourceTrafficMirrorTargetDelete"
        },
        "aws_ec2_transit_gateway": {
          "create_method": "resourceTransitGatewayCreate",
          "read_method": "resourceTransitGatewayRead",
          "update_method": "resourceTransitGatewayUpdate",
          "delete_method": "resourceTransitGatewayDelete"
        },
        "aws_ec2_transit_gateway_connect": {
          "create_method": "resourceTransitGatewayConnectCreate",
          "read_method": "resourceTransitGatewayConnectRead",
          "update_method": "resourceTransitGatewayConnectUpdate",
          "delete_method": "resourceTransitGatewayConnectDelete"
        },
        "aws_ec2_transit_gateway_connect_peer": {
          "create_method": "resourceTransitGatewayConnectPeerCreate",
          "read_method": "resourceTransitGatewayConnectPeerRead",
          "update_method": "resourceTransitGatewayConnectPeerUpdate",
          "delete_method": "resourceTransitGatewayConnectPeerDelete"
        },
        "aws_ec2_transit_gateway_multicast_domain": {
          "create_method": "resourceTransitGatewayMulticastDomainCreate",
          "read_method": "resourceTransitGatewayMulticastDomainRead",
          "update_method": "resourceTransitGatewayMulticastDomainUpdate",
          "delete_method": "resourceTransitGatewayMulticastDomainDelete"
        },
        "aws_ec2_transit_gateway_multicast_domain_association": {
          "create_method": "resourceTransitGatewayMulticastDomainAssociationCreate",
          "read_method": "resourceTransitGatewayMulticastDomainAssociationRead",
          "delete_method": "resourceTransitGatewayMulticastDomainAssociationDelete"
        },
        "aws_ec2_transit_gateway_multicast_group_member": {
          "create_method": "resourceTransitGatewayMulticastGroupMemberCreate",
          "read_method": "resourceTransitGatewayMulticastGroupMemberRead",
          "delete_method": "resourceTransitGatewayMulticastGroupMemberDelete"
        },
        "aws_ec2_transit_gateway_multicast_group_source": {
          "create_method": "resourceTransitGatewayMulticastGroupSourceCreate",
          "read_method": "resourceTransitGatewayMulticastGroupSourceRead",
          "delete_method": "resourceTransitGatewayMulticastGroupSourceDelete"
        },
        "aws_ec2_transit_gateway_peering_attachment": {
          "create_method": "resourceTransitGatewayPeeringAttachmentCreate",
          "read_method": "resourceTransitGatewayPeeringAttachmentRead",
          "update_method": "resourceTransitGatewayPeeringAttachmentUpdate",
          "delete_method": "resourceTransitGatewayPeeringAttachmentDelete"
        },
        "aws_ec2_transit_gateway_peering_attachment_accepter": {
          "create_method": "resourceTransitGatewayPeeringAttachmentAccepterCreate",
          "read_method": "resourceTransitGatewayPeeringAttachmentAccepterRead",
          "update_method": "resourceTransitGatewayPeeringAttachmentAccepterUpdate",
          "delete_method": "resourceTransitGatewayPeeringAttachmentAccepterDelete"
        },
        "aws_ec2_transit_gateway_policy_table": {
          "create_method": "resourceTransitGatewayPolicyTableCreate",
          "read_method": "resourceTransitGatewayPolicyTableRead",
          "update_method": "resourceTransitGatewayPolicyTableUpdate",
          "delete_method": "resourceTransitGatewayPolicyTableDelete"
        },
        "aws_ec2_transit_gateway_policy_table_association": {
          "create_method": "resourceTransitGatewayPolicyTableAssociationCreate",
          "read_method": "resourceTransitGatewayPolicyTableAssociationRead",
          "delete_method": "resourceTransitGatewayPolicyTableAssociationDelete"
        },
        "aws_ec2_transit_gateway_prefix_list_reference": {
          "create_method": "resourceTransitGatewayPrefixListReferenceCreate",
          "read_method": "resourceTransitGatewayPrefixListReferenceRead",
          "update_method": "resourceTransitGatewayPrefixListReferenceUpdate",
          "delete_method": "resourceTransitGatewayPrefixListReferenceDelete"
        },
        "aws_ec2_transit_gateway_route": {
          "create_method": "resourceTransitGatewayRouteCreate",
          "read_method": "resourceTransitGatewayRouteRead",
          "delete_method": "resourceTransitGatewayRouteDelete"
        },
        "aws_ec2_transit_gateway_route_table": {
          "create_method": "resourceTransitGatewayRouteTableCreate",
          "read_method": "resourceTransitGatewayRouteTableRead",
          "update_method": "resourceTransitGatewayRouteTableUpdate",
          "delete_method": "resourceTransitGatewayRouteTableDelete"
        },
        "aws_ec2_transit_gateway_route_table_association": {
          "create_method": "resourceTransitGatewayRouteTableAssociationCreate",
          "read_method": "resourceTransitGatewayRouteTableAssociationRead",
          "delete_method": "resourceTransitGatewayRouteTableAssociationDelete"
        },
        "aws_ec2_transit_gateway_route_table_propagation": {
          "create_method": "resourceTransitGatewayRouteTablePropagationCreate",
          "read_method": "resourceTransitGatewayRouteTablePropagationRead",
          "delete_method": "resourceTransitGatewayRouteTablePropagationDelete"
        },
        "aws_ec2_transit_gateway_vpc_attachment": {
          "create_method": "resourceTransitGatewayVPCAttachmentCreate",
          "read_method": "resourceTransitGatewayVPCAttachmentRead",
          "update_method": "resourceTransitGatewayVPCAttachmentUpdate",
          "delete_method": "resourceTransitGatewayVPCAttachmentDelete"
        },
        "aws_ec2_transit_gateway_vpc_attachment_accepter": {
          "create_method": "resourceTransitGatewayVPCAttachmentAccepterCreate",
          "read_method": "resourceTransitGatewayVPCAttachmentAccepterRead",
          "update_method": "resourceTransitGatewayVPCAttachmentAccepterUpdate",
          "delete_method": "resourceTransitGatewayVPCAttachmentAccepterDelete"
        },
        "aws_egress_only_internet_gateway": {
          "create_method": "resourceEgressOnlyInternetGatewayCreate",
          "read_method": "resourceEgressOnlyInternetGatewayRead",
          "update_method": "resourceEgressOnlyInternetGatewayUpdate",
          "delete_method": "resourceEgressOnlyInternetGatewayDelete"
        },
        "aws_eip": {
          "create_method": "resourceEIPCreate",
          "read_method": "resourceEIPRead",
          "update_method": "resourceEIPUpdate",
          "delete_method": "resourceEIPDelete"
        },
        "aws_eip_association": {
          "create_method": "resourceEIPAssociationCreate",
          "read_method": "resourceEIPAssociationRead",
          "delete_method": "resourceEIPAssociationDelete"
        },
        "aws_flow_log": {
          "create_method": "resourceLogFlowCreate",
          "read_method": "resourceLogFlowRead",
          "update_method": "resourceLogFlowUpdate",
          "delete_method": "resourceLogFlowDelete"
        },
        "aws_instance": {
          "create_method": "resourceInstanceCreate",
          "read_method": "resourceInstanceRead",
          "update_method": "resourceInstanceUpdate",
          "delete_method": "resourceInstanceDelete"
        },
        "aws_internet_gateway": {
          "create_method": "resourceInternetGatewayCreate",
          "read_method": "resourceInternetGatewayRead",
          "update_method": "resourceInternetGatewayUpdate",
          "delete_method": "resourceInternetGatewayDelete"
        },
        "aws_internet_gateway_attachment": {
          "create_method": "resourceInternetGatewayAttachmentCreate",
          "read_method": "resourceInternetGatewayAttachmentRead",
          "delete_method": "resourceInternetGatewayAttachmentDelete"
        },
        "aws_key_pair": {
          "create_method": "resourceKeyPairCreate",
          "read_method": "resourceKeyPairRead",
          "update_method": "resourceKeyPairUpdate",
          "delete_method": "resourceKeyPairDelete"
        },
        "aws_launch_template": {
          "create_method": "resourceLaunchTemplateCreate",
          "read_method": "resourceLaunchTemplateRead",
          "update_method": "resourceLaunchTemplateUpdate",
          "delete_method": "resourceLaunchTemplateDelete"
        },
        "aws_main_route_table_association": {
          "create_method": "resourceMainRouteTableAssociationCreate",
          "read_method": "resourceMainRouteTableAssociationRead",
          "update_method": "resourceMainRouteTableAssociationUpdate",
          "delete_method": "resourceMainRouteTableAssociationDelete"
        },
        "aws_nat_gateway": {
          "create_method": "resourceNATGatewayCreate",
          "read_method": "resourceNATGatewayRead",
          "update_method": "resourceNATGatewayUpdate",
          "delete_method": "resourceNATGatewayDelete"
        },
        "aws_network_acl": {
          "create_method": "resourceNetworkACLCreate",
          "read_method": "resourceNetworkACLRead",
          "update_method": "resourceNetworkACLUpdate",
          "delete_method": "resourceNetworkACLDelete"
        },
        "aws_network_acl_association": {
          "create_method": "resourceNetworkACLAssociationCreate",
          "read_method": "resourceNetworkACLAssociationRead",
          "delete_method": "resourceNetworkACLAssociationDelete"
        },
        "aws_network_acl_rule": {
          "create_method": "resourceNetworkACLRuleCreate",
          "read_method": "resourceNetworkACLRuleRead",
          "delete_method": "resourceNetworkACLRuleDelete"
        },
        "aws_network_interface": {
          "create_method": "resourceNetworkInterfaceCreate",
          "read_method": "resourceNetworkInterfaceRead",
          "update_method": "resourceNetworkInterfaceUpdate",
          "delete_method": "resourceNetworkInterfaceDelete"
        },
        "aws_network_interface_attachment": {
          "create_method": "resourceNetworkInterfaceAttachmentCreate",
          "read_method": "resourceNetworkInterfaceAttachmentRead",
          "delete_method": "resourceNetworkInterfaceAttachmentDelete"
        },
        "aws_network_interface_sg_attachment": {
          "create_method": "resourceNetworkInterfaceSGAttachmentCreate",
          "read_method": "resourceNetworkInterfaceSGAttachmentRead",
          "delete_method": "resourceNetworkInterfaceSGAttachmentDelete"
        },
        "aws_placement_group": {
          "create_method": "resourcePlacementGroupCreate",
          "read_method": "resourcePlacementGroupRead",
          "update_method": "resourcePlacementGroupUpdate",
          "delete_method": "resourcePlacementGroupDelete"
        },
        "aws_route": {
          "create_method": "resourceRouteCreate",
          "read_method": "resourceRouteRead",
          "update_method": "resourceRouteUpdate",
          "delete_method": "resourceRouteDelete"
        },
        "aws_route_table": {
          "create_method": "resourceRouteTableCreate",
          "read_method": "resourceRouteTableRead",
          "update_method": "resourceRouteTableUpdate",
          "delete_method": "resourceRouteTableDelete"
        },
        "aws_route_table_association": {
          "create_method": "resourceRouteTableAssociationCreate",
          "read_method": "resourceRouteTableAssociationRead",
          "update_method": "resourceRouteTableAssociationUpdate",
          "delete_method": "resourceRouteTableAssociationDelete"
        },
        "aws_security_group": {
          "create_method": "resourceSecurityGroupCreate",
          "read_method": "resourceSecurityGroupRead",
          "update_method": "resourceSecurityGroupUpdate",
          "delete_method": "resourceSecurityGroupDelete"
        },
        "aws_security_group_rule": {
          "create_method": "resourceSecurityGroupRuleCreate",
          "read_method": "resourceSecurityGroupRuleRead",
          "update_method": "resourceSecurityGroupRuleUpdate",
          "delete_method": "resourceSecurityGroupRuleDelete"
        },
        "aws_snapshot_create_volume_permission": {
          "create_method": "resourceSnapshotCreateVolumePermissionCreate",
          "read_method": "resourceSnapshotCreateVolumePermissionRead",
          "delete_method": "resourceSnapshotCreateVolumePermissionDelete"
        },
        "aws_spot_datafeed_subscription": {
          "create_method": "resourceSpotDataFeedSubscriptionCreate",
          "read_method": "resourceSpotDataFeedSubscriptionRead",
          "delete_method": "resourceSpotDataFeedSubscriptionDelete"
        },
        "aws_spot_fleet_request": {
          "create_method": "resourceSpotFleetRequestCreate",
          "read_method": "resourceSpotFleetRequestRead",
          "update_method": "resourceSpotFleetRequestUpdate",
          "delete_method": "resourceSpotFleetRequestDelete"
        },
        "aws_spot_instance_request": {
          "create_method": "resourceSpotInstanceRequestCreate",
          "read_method": "resourceSpotInstanceRequestRead",
          "update_method": "resourceSpotInstanceRequestUpdate",
          "delete_method": "resourceSpotInstanceRequestDelete"
        },
        "aws_subnet": {
          "create_method": "resourceSubnetCreate",
          "read_method": "resourceSubnetRead",
          "update_method": "resourceSubnetUpdate",
          "delete_method": "resourceSubnetDelete"
        },
        "aws_verifiedaccess_endpoint": {
          "create_method": "resourceVerifiedAccessEndpointCreate",
          "read_method": "resourceVerifiedAccessEndpointRead",
          "update_method": "resourceVerifiedAccessEndpointUpdate",
          "delete_method": "resourceVerifiedAccessEndpointDelete"
        },
        "aws_verifiedaccess_group": {
          "create_method": "resourceVerifiedAccessGroupCreate",
          "read_method": "resourceVerifiedAccessGroupRead",
          "update_method": "resourceVerifiedAccessGroupUpdate",
          "delete_method": "resourceVerifiedAccessGroupDelete"
        },
        "aws_verifiedaccess_instance": {
          "create_method": "resourceVerifiedAccessInstanceCreate",
          "read_method": "resourceVerifiedAccessInstanceRead",
          "update_method": "resourceVerifiedAccessInstanceUpdate",
          "delete_method": "resourceVerifiedAccessInstanceDelete"
        },
        "aws_verifiedaccess_instance_logging_configuration": {
          "create_method": "resourceVerifiedAccessInstanceLoggingConfigurationCreate",
          "read_method": "resourceVerifiedAccessInstanceLoggingConfigurationRead",
          "update_method": "resourceVerifiedAccessInstanceLoggingConfigurationUpdate",
          "delete_method": "resourceVerifiedAccessInstanceLoggingConfigurationDelete"
        },
        "aws_verifiedaccess_instance_trust_provider_attachment": {
          "create_method": "resourceVerifiedAccessInstanceTrustProviderAttachmentCreate",
          "read_method": "resourceVerifiedAccessInstanceTrustProviderAttachmentRead",
          "delete_method": "resourceVerifiedAccessInstanceTrustProviderAttachmentDelete"
        },
        "aws_verifiedaccess_trust_provider": {
          "create_method": "resourceVerifiedAccessTrustProviderCreate",
          "read_method": "resourceVerifiedAccessTrustProviderRead",
          "update_method": "resourceVerifiedAccessTrustProviderUpdate",
          "delete_method": "resourceVerifiedAccessTrustProviderDelete"
        },
        "aws_volume_attachment": {
          "create_method": "resourceVolumeAttachmentCreate",
          "read_method": "resourceVolumeAttachmentRead",
          "delete_method": "resourceVolumeAttachmentDelete"
        },
        "aws_vpc": {
          "create_method": "resourceVPCCreate",
          "read_method": "resourceVPCRead",
          "update_method": "resourceVPCUpdate",
          "delete_method": "resourceVPCDelete"
        },
        "aws_vpc_dhcp_options": {
          "create_method": "resourceVPCDHCPOptionsCreate",
          "read_method": "resourceVPCDHCPOptionsRead",
          "update_method": "resourceVPCDHCPOptionsUpdate",
          "delete_method": "resourceVPCDHCPOptionsDelete"
        },
        "aws_vpc_dhcp_options_association": {
          "create_method": "resourceVPCDHCPOptionsAssociationPut",
          "read_method": "resourceVPCDHCPOptionsAssociationRead",
          "update_method": "resourceVPCDHCPOptionsAssociationPut",
          "delete_method": "resourceVPCDHCPOptionsAssociationDelete"
        },
        "aws_vpc_endpoint": {
          "create_method": "resourceVPCEndpointCreate",
          "read_method": "resourceVPCEndpointRead",
          "update_method": "resourceVPCEndpointUpdate",
          "delete_method": "resourceVPCEndpointDelete"
        },
        "aws_vpc_endpoint_connection_accepter": {
          "create_method": "resourceVPCEndpointConnectionAccepterCreate",
          "read_method": "resourceVPCEndpointConnectionAccepterRead",
          "delete_method": "resourceVPCEndpointConnectionAccepterDelete"
        },
        "aws_vpc_endpoint_connection_notification": {
          "create_method": "resourceVPCEndpointConnectionNotificationCreate",
          "read_method": "resourceVPCEndpointConnectionNotificationRead",
          "update_method": "resourceVPCEndpointConnectionNotificationUpdate",
          "delete_method": "resourceVPCEndpointConnectionNotificationDelete"
        },
        "aws_vpc_endpoint_policy": {
          "create_method": "resourceVPCEndpointPolicyPut",
          "read_method": "resourceVPCEndpointPolicyRead",
          "update_method": "resourceVPCEndpointPolicyPut",
          "delete_method": "resourceVPCEndpointPolicyDelete"
        },
        "aws_vpc_endpoint_route_table_association": {
          "create_method": "resourceVPCEndpointRouteTableAssociationCreate",
          "read_method": "resourceVPCEndpointRouteTableAssociationRead",
          "delete_method": "resourceVPCEndpointRouteTableAssociationDelete"
        },
        "aws_vpc_endpoint_security_group_association": {
          "create_method": "resourceVPCEndpointSecurityGroupAssociationCreate",
          "read_method": "resourceVPCEndpointSecurityGroupAssociationRead",
          "delete_method": "resourceVPCEndpointSecurityGroupAssociationDelete"
        },
        "aws_vpc_endpoint_service": {
          "create_method": "resourceVPCEndpointServiceCreate",
          "read_method": "resourceVPCEndpointServiceRead",
          "update_method": "resourceVPCEndpointServiceUpdate",
          "delete_method": "resourceVPCEndpointServiceDelete"
        },
        "aws_vpc_endpoint_service_allowed_principal": {
          "create_method": "resourceVPCEndpointServiceAllowedPrincipalCreate",
          "read_method": "resourceVPCEndpointServiceAllowedPrincipalRead",
          "delete_method": "resourceVPCEndpointServiceAllowedPrincipalDelete"
        },
        "aws_vpc_endpoint_subnet_association": {
          "create_method": "resourceVPCEndpointSubnetAssociationCreate",
          "read_method": "resourceVPCEndpointSubnetAssociationRead",
          "delete_method": "resourceVPCEndpointSubnetAssociationDelete"
        },
        "aws_vpc_ipam": {
          "create_method": "resourceIPAMCreate",
          "read_method": "resourceIPAMRead",
          "update_method": "resourceIPAMUpdate",
          "delete_method": "resourceIPAMDelete"
        },
        "aws_vpc_ipam_organization_admin_account": {
          "create_method": "resourceIPAMOrganizationAdminAccountCreate",
          "read_method": "resourceIPAMOrganizationAdminAccountRead",
          "delete_method": "resourceIPAMOrganizationAdminAccountDelete"
        },
        "aws_vpc_ipam_pool": {
          "create_method": "resourceIPAMPoolCreate",
          "read_method": "resourceIPAMPoolRead",
          "update_method": "resourceIPAMPoolUpdate",
          "delete_method": "resourceIPAMPoolDelete"
        },
        "aws_vpc_ipam_pool_cidr": {
          "create_method": "resourceIPAMPoolCIDRCreate",
          "read_method": "resourceIPAMPoolCIDRRead",
          "delete_method": "resourceIPAMPoolCIDRDelete"
        },
        "aws_vpc_ipam_pool_cidr_allocation": {
          "create_method": "resourceIPAMPoolCIDRAllocationCreate",
          "read_method": "resourceIPAMPoolCIDRAllocationRead",
          "delete_method": "resourceIPAMPoolCIDRAllocationDelete"
        },
        "aws_vpc_ipam_preview_next_cidr, name=": {
          "create_method": "resourceIPAMPreviewNextCIDRCreate",
          "read_method": "resourceIPAMPreviewNextCIDRRead"
        },
        "aws_vpc_ipam_resource_discovery": {
          "create_method": "resourceIPAMResourceDiscoveryCreate",
          "read_method": "resourceIPAMResourceDiscoveryRead",
          "update_method": "resourceIPAMResourceDiscoveryUpdate",
          "delete_method": "resourceIPAMResourceDiscoveryDelete"
        },
        "aws_vpc_ipam_resource_discovery_association": {
          "create_method": "resourceIPAMResourceDiscoveryAssociationCreate",
          "read_method": "resourceIPAMResourceDiscoveryAssociationRead",
          "update_method": "resourceIPAMResourceDiscoveryAssociationUpdate",
          "delete_method": "resourceIPAMResourceDiscoveryAssociationDelete"
        },
        "aws_vpc_ipam_scope": {
          "create_method": "resourceIPAMScopeCreate",
          "read_method": "resourceIPAMScopeRead",
          "update_method": "resourceIPAMScopeUpdate",
          "delete_method": "resourceIPAMScopeDelete"
        },
        "aws_vpc_ipv4_cidr_block_association": {
          "create_method": "resourceVPCIPv4CIDRBlockAssociationCreate",
          "read_method": "resourceVPCIPv4CIDRBlockAssociationRead",
          "delete_method": "resourceVPCIPv4CIDRBlockAssociationDelete"
        },
        "aws_vpc_ipv6_cidr_block_association": {
          "create_method": "resourceVPCIPv6CIDRBlockAssociationCreate",
          "read_method": "resourceVPCIPv6CIDRBlockAssociationRead",
          "delete_method": "resourceVPCIPv6CIDRBlockAssociationDelete"
        },
        "aws_vpc_network_performance_metric_subscription": {
          "create_method": "resourceNetworkPerformanceMetricSubscriptionCreate",
          "read_method": "resourceNetworkPerformanceMetricSubscriptionRead",
          "delete_method": "resourceNetworkPerformanceMetricSubscriptionDelete"
        },
        "aws_vpc_peering_connection": {
          "create_method": "resourceVPCPeeringConnectionCreate",
          "read_method": "resourceVPCPeeringConnectionRead",
          "update_method": "resourceVPCPeeringConnectionUpdate",
          "delete_method": "resourceVPCPeeringConnectionDelete"
        },
        "aws_vpc_peering_connection_accepter": {
          "create_method": "resourceVPCPeeringAccepterCreate",
          "read_method": "resourceVPCPeeringConnectionRead",
          "update_method": "resourceVPCPeeringConnectionUpdate"
        },
        "aws_vpc_peering_connection_options": {
          "create_method": "resourceVPCPeeringConnectionOptionsCreate",
          "read_method": "resourceVPCPeeringConnectionOptionsRead",
          "update_method": "resourceVPCPeeringConnectionOptionsUpdate",
          "delete_method": "resourceVPCPeeringConnectionOptionsDelete"
        },
        "aws_vpn_connection": {
          "create_method": "resourceVPNConnectionCreate",
          "read_method": "resourceVPNConnectionRead",
          "update_method": "resourceVPNConnectionUpdate",
          "delete_method": "resourceVPNConnectionDelete"
        },
        "aws_vpn_connection_route": {
          "create_method": "resourceVPNConnectionRouteCreate",
          "read_method": "resourceVPNConnectionRouteRead",
          "delete_method": "resourceVPNConnectionRouteDelete"
        },
        "aws_vpn_gateway": {
          "create_method": "resourceVPNGatewayCreate",
          "read_method": "resourceVPNGatewayRead",
          "update_method": "resourceVPNGatewayUpdate",
          "delete_method": "resourceVPNGatewayDelete"
        },
        "aws_vpn_gateway_attachment": {
          "create_method": "resourceVPNGatewayAttachmentCreate",
          "read_method": "resourceVPNGatewayAttachmentRead",
          "delete_method": "resourceVPNGatewayAttachmentDelete"
        },
        "aws_vpn_gateway_route_propagation": {
          "create_method": "resourceVPNGatewayRoutePropagationEnable",
          "read_method": "resourceVPNGatewayRoutePropagationRead",
          "delete_method": "resourceVPNGatewayRoutePropagationDisable"
        }
      },
      "data_source_methods": {
        "aws_ami": {
          "read_method": "dataSourceAMIRead"
        },
        "aws_ami_ids": {
          "read_method": "dataSourceAMIIDsRead"
        },
        "aws_availability_zone": {
          "read_method": "dataSourceAvailabilityZoneRead"
        },
        "aws_availability_zones": {
          "read_method": "dataSourceAvailabilityZonesRead"
        },
        "aws_customer_gateway": {
          "read_method": "dataSourceCustomerGatewayRead"
        },
        "aws_ebs_default_kms_key": {
          "read_method": "dataSourceEBSDefaultKMSKeyRead"
        },
        "aws_ebs_encryption_by_default": {
          "read_method": "dataSourceEBSEncryptionByDefaultRead"
        },
        "aws_ebs_snapshot": {
          "read_method": "dataSourceEBSSnapshotRead"
        },
        "aws_ebs_snapshot_ids": {
          "read_method": "dataSourceEBSSnapshotIDsRead"
        },
        "aws_ebs_volume": {
          "read_method": "dataSourceEBSVolumeRead"
        },
        "aws_ebs_volumes": {
          "read_method": "dataSourceEBSVolumesRead"
        },
        "aws_ec2_client_vpn_endpoint": {
          "read_method": "dataSourceClientVPNEndpointRead"
        },
        "aws_ec2_coip_pool": {
          "read_method": "dataSourceCoIPPoolRead"
        },
        "aws_ec2_coip_pools": {
          "read_method": "dataSourceCoIPPoolsRead"
        },
        "aws_ec2_host": {
          "read_method": "dataSourceHostRead"
        },
        "aws_ec2_instance_type": {
          "read_method": "dataSourceInstanceTypeRead"
        },
        "aws_ec2_instance_type_offering": {
          "read_method": "dataSourceInstanceTypeOfferingRead"
        },
        "aws_ec2_instance_type_offerings": {
          "read_method": "dataSourceInstanceTypeOfferingsRead"
        },
        "aws_ec2_instance_types": {
          "read_method": "dataSourceInstanceTypesRead"
        },
        "aws_ec2_local_gateway": {
          "read_method": "dataSourceLocalGatewayRead"
        },
        "aws_ec2_local_gateway_route_table": {
          "read_method": "dataSourceLocalGatewayRouteTableRead"
        },
        "aws_ec2_local_gateway_route_tables": {
          "read_method": "dataSourceLocalGatewayRouteTablesRead"
        },
        "aws_ec2_local_gateway_virtual_interface": {
          "read_method": "dataSourceLocalGatewayVirtualInterfaceRead"
        },
        "aws_ec2_local_gateway_virtual_interface_group": {
          "read_method": "dataSourceLocalGatewayVirtualInterfaceGroupRead"
        },
        "aws_ec2_local_gateway_virtual_interface_groups": {
          "read_method": "dataSourceLocalGatewayVirtualInterfaceGroupsRead"
        },
        "aws_ec2_local_gateways": {
          "read_method": "dataSourceLocalGatewaysRead"
        },
        "aws_ec2_managed_prefix_list": {
          "read_method": "dataSourceManagedPrefixListRead"
        },
        "aws_ec2_managed_prefix_lists": {
          "read_method": "dataSourceManagedPrefixListsRead"
        },
        "aws_ec2_network_insights_analysis": {
          "read_method": "dataSourceNetworkInsightsAnalysisRead"
        },
        "aws_ec2_network_insights_path": {
          "read_method": "dataSourceNetworkInsightsPathRead"
        },
        "aws_ec2_public_ipv4_pool": {
          "read_method": "dataSourcePublicIPv4PoolRead"
        },
        "aws_ec2_public_ipv4_pools, name=": {
          "read_method": "dataSourcePublicIPv4PoolsRead"
        },
        "aws_ec2_serial_console_access": {
          "read_method": "dataSourceSerialConsoleAccessRead"
        },
        "aws_ec2_spot_price": {
          "read_method": "dataSourceSpotPriceRead"
        },
        "aws_ec2_transit_gateway": {
          "read_method": "dataSourceTransitGatewayRead"
        },
        "aws_ec2_transit_gateway_attachment": {
          "read_method": "dataSourceTransitGatewayAttachmentRead"
        },
        "aws_ec2_transit_gateway_attachments": {
          "read_method": "dataSourceTransitGatewayAttachmentsRead"
        },
        "aws_ec2_transit_gateway_connect": {
          "read_method": "dataSourceTransitGatewayConnectRead"
        },
        "aws_ec2_transit_gateway_connect_peer": {
          "read_method": "dataSourceTransitGatewayConnectPeerRead"
        },
        "aws_ec2_transit_gateway_dx_gateway_attachment": {
          "read_method": "dataSourceTransitGatewayDxGatewayAttachmentRead"
        },
        "aws_ec2_transit_gateway_multicast_domain": {
          "read_method": "dataSourceTransitGatewayMulticastDomainRead"
        },
        "aws_ec2_transit_gateway_peering_attachment": {
          "read_method": "dataSourceTransitGatewayPeeringAttachmentRead"
        },
        "aws_ec2_transit_gateway_peering_attachments": {
          "read_method": "dataSourceTransitGatewayPeeringAttachmentsRead"
        },
        "aws_ec2_transit_gateway_route_table": {
          "read_method": "dataSourceTransitGatewayRouteTableRead"
        },
        "aws_ec2_transit_gateway_route_table_associations": {
          "read_method": "dataSourceTransitGatewayRouteTableAssociationsRead"
        },
        "aws_ec2_transit_gateway_route_table_propagations": {
          "read_method": "dataSourceTransitGatewayRouteTablePropagationsRead"
        },
        "aws_ec2_transit_gateway_route_table_routes": {
          "read_method": "dataSourceTransitGatewayRouteTableRoutesRead"
        },
        "aws_ec2_transit_gateway_route_tables": {
          "read_method": "dataSourceTransitGatewayRouteTablesRead"
        },
        "aws_ec2_transit_gateway_vpc_attachment": {
          "read_method": "dataSourceTransitGatewayVPCAttachmentRead"
        },
        "aws_ec2_transit_gateway_vpc_attachments": {
          "read_method": "dataSourceTransitGatewayVPCAttachmentsRead"
        },
        "aws_ec2_transit_gateway_vpn_attachment": {
          "read_method": "dataSourceTransitGatewayVPNAttachmentRead"
        },
        "aws_eip": {
          "read_method": "dataSourceEIPRead"
        },
        "aws_eips": {
          "read_method": "dataSourceEIPsRead"
        },
        "aws_instance": {
          "read_method": "dataSourceInstanceRead"
        },
        "aws_instances": {
          "read_method": "dataSourceInstancesRead"
        },
        "aws_internet_gateway": {
          "read_method": "dataSourceInternetGatewayRead"
        },
        "aws_key_pair": {
          "read_method": "dataSourceKeyPairRead"
        },
        "aws_launch_template": {
          "read_method": "dataSourceLaunchTemplateRead"
        },
        "aws_nat_gateway": {
          "read_method": "dataSourceNATGatewayRead"
        },
        "aws_nat_gateways": {
          "read_method": "dataSourceNATGatewaysRead"
        },
        "aws_network_acls": {
          "read_method": "dataSourceNetworkACLsRead"
        },
        "aws_network_interface": {
          "read_method": "dataSourceNetworkInterfaceRead"
        },
        "aws_network_interfaces": {
          "read_method": "dataSourceNetworkInterfacesRead"
        },
        "aws_prefix_list": {
          "read_method": "dataSourcePrefixListRead"
        },
        "aws_route": {
          "read_method": "dataSourceRouteRead"
        },
        "aws_route_table": {
          "read_method": "dataSourceRouteTableRead"
        },
        "aws_route_tables": {
          "read_method": "dataSourceRouteTablesRead"
        },
        "aws_security_group": {
          "read_method": "dataSourceSecurityGroupRead"
        },
        "aws_security_groups": {
          "read_method": "dataSourceSecurityGroupsRead"
        },
        "aws_subnet": {
          "read_method": "dataSourceSubnetRead"
        },
        "aws_subnets": {
          "read_method": "dataSourceSubnetsRead"
        },
        "aws_vpc": {
          "read_method": "dataSourceVPCRead"
        },
        "aws_vpc_dhcp_options": {
          "read_method": "dataSourceVPCDHCPOptionsRead"
        },
        "aws_vpc_endpoint": {
          "read_method": "dataSourceVPCEndpointRead"
        },
        "aws_vpc_endpoint_service": {
          "read_method": "dataSourceVPCEndpointServiceRead"
        },
        "aws_vpc_ipam_pool": {
          "read_method": "dataSourceIPAMPoolRead"
        },
        "aws_vpc_ipam_pool_cidrs": {
          "read_method": "dataSourceIPAMPoolCIDRsRead"
        },
        "aws_vpc_ipam_pools": {
          "read_method": "dataSourceIPAMPoolsRead"
        },
        "aws_vpc_ipam_preview_next_cidr": {
          "read_method": "dataSourceIPAMPreviewNextCIDRRead"
        },
        "aws_vpc_peering_connection": {
          "read_method": "dataSourceVPCPeeringConnectionRead"
        },
        "aws_vpc_peering_connections": {
          "read_method": "dataSourceVPCPeeringConnectionsRead"
        },
        "aws_vpcs": {
          "read_method": "dataSourceVPCsRead"
        },
        "aws_vpn_gateway": {
          "read_method": "dataSourceVPNGatewayRead"
        }
      }
    },
    {
      "service_name": "ecr",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/ecr",
      "aws_sdk_resources": {
        "aws_ecr_lifecycle_policy": {
          "terraform_type": "aws_ecr_lifecycle_policy",
          "factory_function": "resourceEcrLifecyclePolicy",
          "name": "Lifecycle Policy",
          "sdk_type": "sdk"
        },
        "aws_ecr_pull_through_cache_rule": {
          "terraform_type": "aws_ecr_pull_through_cache_rule",
          "factory_function": "resourceEcrPullThroughCacheRule",
          "name": "Pull Through Cache Rule",
          "sdk_type": "sdk"
        },
        "aws_ecr_registry_policy": {
          "terraform_type": "aws_ecr_registry_policy",
          "factory_function": "resourceEcrRegistryPolicy",
          "name": "Registry Policy",
          "sdk_type": "sdk"
        },
        "aws_ecr_registry_scanning_configuration": {
          "terraform_type": "aws_ecr_registry_scanning_configuration",
          "factory_function": "resourceEcrRegistryScanningConfiguration",
          "name": "Registry Scanning Configuration",
          "sdk_type": "sdk"
        },
        "aws_ecr_replication_configuration": {
          "terraform_type": "aws_ecr_replication_configuration",
          "factory_function": "resourceEcrReplicationConfiguration",
          "name": "Replication Configuration",
          "sdk_type": "sdk"
        },
        "aws_ecr_repository": {
          "terraform_type": "aws_ecr_repository",
          "factory_function": "resourceEcrRepository",
          "name": "Repository",
          "sdk_type": "sdk"
        },
        "aws_ecr_repository_creation_template": {
          "terraform_type": "aws_ecr_repository_creation_template",
          "factory_function": "resourceEcrRepositoryCreationTemplate",
          "name": "Repository Creation Template",
          "sdk_type": "sdk"
        },
        "aws_ecr_repository_policy": {
          "terraform_type": "aws_ecr_repository_policy",
          "factory_function": "resourceEcrRepositoryPolicy",
          "name": "Repository Policy",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_ecr_authorization_token": {
          "terraform_type": "aws_ecr_authorization_token",
          "factory_function": "dataSourceEcrAuthorizationToken",
          "name": "Authorization Token",
          "sdk_type": "sdk"
        },
        "aws_ecr_image": {
          "terraform_type": "aws_ecr_image",
          "factory_function": "dataSourceEcrImage",
          "name": "Image",
          "sdk_type": "sdk"
        },
        "aws_ecr_pull_through_cache_rule": {
          "terraform_type": "aws_ecr_pull_through_cache_rule",
          "factory_function": "dataSourceEcrPullThroughCacheRule",
          "name": "Pull Through Cache Rule",
          "sdk_type": "sdk"
        },
        "aws_ecr_repository": {
          "terraform_type": "aws_ecr_repository",
          "factory_function": "dataSourceEcrRepository",
          "name": "Repository",
          "sdk_type": "sdk"
        },
        "aws_ecr_repository_creation_template": {
          "terraform_type": "aws_ecr_repository_creation_template",
          "factory_function": "dataSourceEcrRepositoryCreationTemplate",
          "name": "Repository Creation Template",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_ecr_account_setting": {
          "terraform_type": "aws_ecr_account_setting",
          "factory_function": "newEcrAccountSettingResource",
          "name": "Account Setting",
          "sdk_type": "framework",
          "struct_type": "accountSettingResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_ecr_images": {
          "terraform_type": "aws_ecr_images",
          "factory_function": "newEcrImagesDataSource",
          "name": "Images",
          "sdk_type": "framework",
          "struct_type": "imagesDataSource"
        },
        "aws_ecr_lifecycle_policy_document": {
          "terraform_type": "aws_ecr_lifecycle_policy_document",
          "factory_function": "newEcrLifecyclePolicyDocumentDataSource",
          "name": "Lifecycle Policy Document",
          "sdk_type": "framework",
          "struct_type": "lifecyclePolicyDocumentDataSource"
        },
        "aws_ecr_repositories": {
          "terraform_type": "aws_ecr_repositories",
          "factory_function": "newEcrRepositoriesDataSource",
          "name": "Repositories",
          "sdk_type": "framework",
          "struct_type": "repositoriesDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "accountSettingResource": "aws_ecr_account_setting"
      },
      "data_source_terraform_types": {
        "imagesDataSource": "aws_ecr_images",
        "lifecyclePolicyDocumentDataSource": "aws_ecr_lifecycle_policy_document",
        "repositoriesDataSource": "aws_ecr_repositories"
      },
      "resource_crud_methods": {
        "aws_ecr_lifecycle_policy": {
          "create_method": "resourceLifecyclePolicyCreate",
          "read_method": "resourceLifecyclePolicyRead",
          "delete_method": "resourceLifecyclePolicyDelete"
        },
        "aws_ecr_pull_through_cache_rule": {
          "create_method": "resourcePullThroughCacheRuleCreate",
          "read_method": "resourcePullThroughCacheRuleRead",
          "update_method": "resourcePullThroughCacheRuleUpdate",
          "delete_method": "resourcePullThroughCacheRuleDelete"
        },
        "aws_ecr_registry_policy": {
          "create_method": "resourceRegistryPolicyPut",
          "read_method": "resourceRegistryPolicyRead",
          "update_method": "resourceRegistryPolicyPut",
          "delete_method": "resourceRegistryPolicyDelete"
        },
        "aws_ecr_registry_scanning_configuration": {
          "create_method": "resourceRegistryScanningConfigurationPut",
          "read_method": "resourceRegistryScanningConfigurationRead",
          "update_method": "resourceRegistryScanningConfigurationPut",
          "delete_method": "resourceRegistryScanningConfigurationDelete"
        },
        "aws_ecr_replication_configuration": {
          "create_method": "resourceReplicationConfigurationPut",
          "read_method": "resourceReplicationConfigurationRead",
          "update_method": "resourceReplicationConfigurationPut",
          "delete_method": "resourceReplicationConfigurationDelete"
        },
        "aws_ecr_repository": {
          "create_method": "resourceRepositoryCreate",
          "read_method": "resourceRepositoryRead",
          "update_method": "resourceRepositoryUpdate",
          "delete_method": "resourceRepositoryDelete"
        },
        "aws_ecr_repository_creation_template": {
          "create_method": "resourceRepositoryCreationTemplateCreate",
          "read_method": "resourceRepositoryCreationTemplateRead",
          "update_method": "resourceRepositoryCreationTemplateUpdate",
          "delete_method": "resourceRepositoryCreationTemplateDelete"
        },
        "aws_ecr_repository_policy": {
          "create_method": "resourceRepositoryPolicyPut",
          "read_method": "resourceRepositoryPolicyRead",
          "update_method": "resourceRepositoryPolicyPut",
          "delete_method": "resourceRepositoryPolicyDelete"
        }
      },
      "data_source_methods": {
        "aws_ecr_authorization_token": {
          "read_method": "dataSourceAuthorizationTokenRead"
        },
        "aws_ecr_image": {
          "read_method": "dataSourceImageRead"
        },
        "aws_ecr_pull_through_cache_rule": {
          "read_method": "dataSourcePullThroughCacheRuleRead"
        },
        "aws_ecr_repository": {
          "read_method": "dataSourceRepositoryRead"
        },
        "aws_ecr_repository_creation_template": {
          "read_method": "dataSourceRepositoryCreationTemplateRead"
        }
      }
    },
    {
      "service_name": "ecrpublic",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/ecrpublic",
      "aws_sdk_resources": {
        "aws_ecrpublic_repository": {
          "terraform_type": "aws_ecrpublic_repository",
          "factory_function": "resourceEcrpublicRepository",
          "name": "Repository",
          "sdk_type": "sdk"
        },
        "aws_ecrpublic_repository_policy": {
          "terraform_type": "aws_ecrpublic_repository_policy",
          "factory_function": "resourceEcrpublicRepositoryPolicy",
          "name": "Repository Policy",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_ecrpublic_authorization_token": {
          "terraform_type": "aws_ecrpublic_authorization_token",
          "factory_function": "dataSourceEcrpublicAuthorizationToken",
          "name": "Authorization Token",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {
        "aws_ecrpublic_images": {
          "terraform_type": "aws_ecrpublic_images",
          "factory_function": "newEcrpublicImagesDataSource",
          "name": "Images",
          "sdk_type": "framework",
          "struct_type": "dataSourceImages"
        }
      },
      "aws_ephemeral_resources": {},
      "data_source_terraform_types": {
        "dataSourceImages": "aws_ecrpublic_images"
      },
      "resource_crud_methods": {
        "aws_ecrpublic_repository": {
          "create_method": "resourceRepositoryCreate",
          "read_method": "resourceRepositoryRead",
          "update_method": "resourceRepositoryUpdate",
          "delete_method": "resourceRepositoryDelete"
        },
        "aws_ecrpublic_repository_policy": {
          "create_method": "resourceRepositoryPolicyPut",
          "read_method": "resourceRepositoryPolicyRead",
          "update_method": "resourceRepositoryPolicyPut",
          "delete_method": "resourceRepositoryPolicyDelete"
        }
      },
      "data_source_methods": {
        "aws_ecrpublic_authorization_token": {
          "read_method": "dataSourceAuthorizationTokenRead"
        }
      }
    },
    {
      "service_name": "ecs",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/ecs",
      "aws_sdk_resources": {
        "aws_ecs_account_setting_default": {
          "terraform_type": "aws_ecs_account_setting_default",
          "factory_function": "resourceEcsAccountSettingDefault",
          "name": "Account Setting Default",
          "sdk_type": "sdk"
        },
        "aws_ecs_capacity_provider": {
          "terraform_type": "aws_ecs_capacity_provider",
          "factory_function": "resourceEcsCapacityProvider",
          "name": "Capacity Provider",
          "sdk_type": "sdk"
        },
        "aws_ecs_cluster": {
          "terraform_type": "aws_ecs_cluster",
          "factory_function": "resourceEcsCluster",
          "name": "Cluster",
          "sdk_type": "sdk"
        },
        "aws_ecs_cluster_capacity_providers": {
          "terraform_type": "aws_ecs_cluster_capacity_providers",
          "factory_function": "resourceEcsClusterCapacityProviders",
          "name": "Cluster Capacity Providers",
          "sdk_type": "sdk"
        },
        "aws_ecs_service": {
          "terraform_type": "aws_ecs_service",
          "factory_function": "resourceEcsService",
          "name": "Service",
          "sdk_type": "sdk"
        },
        "aws_ecs_tag": {
          "terraform_type": "aws_ecs_tag",
          "factory_function": "resourceEcsTag",
          "name": "ECS Resource Tag",
          "sdk_type": "sdk"
        },
        "aws_ecs_task_definition": {
          "terraform_type": "aws_ecs_task_definition",
          "factory_function": "resourceEcsTaskDefinition",
          "name": "Task Definition",
          "sdk_type": "sdk"
        },
        "aws_ecs_task_set": {
          "terraform_type": "aws_ecs_task_set",
          "factory_function": "resourceEcsTaskSet",
          "name": "Task Set",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_ecs_cluster": {
          "terraform_type": "aws_ecs_cluster",
          "factory_function": "dataSourceEcsCluster",
          "name": "Cluster",
          "sdk_type": "sdk"
        },
        "aws_ecs_container_definition": {
          "terraform_type": "aws_ecs_container_definition",
          "factory_function": "dataSourceEcsContainerDefinition",
          "name": "Container Definition",
          "sdk_type": "sdk"
        },
        "aws_ecs_service": {
          "terraform_type": "aws_ecs_service",
          "factory_function": "dataSourceEcsService",
          "name": "Service",
          "sdk_type": "sdk"
        },
        "aws_ecs_task_definition": {
          "terraform_type": "aws_ecs_task_definition",
          "factory_function": "dataSourceEcsTaskDefinition",
          "name": "Task Definition",
          "sdk_type": "sdk"
        },
        "aws_ecs_task_execution": {
          "terraform_type": "aws_ecs_task_execution",
          "factory_function": "dataSourceEcsTaskExecution",
          "name": "Task Execution",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {
        "aws_ecs_clusters": {
          "terraform_type": "aws_ecs_clusters",
          "factory_function": "newEcsClustersDataSource",
          "name": "Clusters",
          "sdk_type": "framework",
          "struct_type": "clustersDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "data_source_terraform_types": {
        "clustersDataSource": "aws_ecs_clusters"
      },
      "resource_crud_methods": {
        "aws_ecs_account_setting_default": {
          "create_method": "resourceAccountSettingDefaultPut",
          "read_method": "resourceAccountSettingDefaultRead",
          "update_method": "resourceAccountSettingDefaultPut",
          "delete_method": "resourceAccountSettingDefaultDelete"
        },
        "aws_ecs_capacity_provider": {
          "create_method": "resourceCapacityProviderCreate",
          "read_method": "resourceCapacityProviderRead",
          "update_method": "resourceCapacityProviderUpdate",
          "delete_method": "resourceCapacityProviderDelete"
        },
        "aws_ecs_cluster": {
          "create_method": "resourceClusterCreate",
          "read_method": "resourceClusterRead",
          "update_method": "resourceClusterUpdate",
          "delete_method": "resourceClusterDelete"
        },
        "aws_ecs_cluster_capacity_providers": {
          "create_method": "resourceClusterCapacityProvidersPut",
          "read_method": "resourceClusterCapacityProvidersRead",
          "update_method": "resourceClusterCapacityProvidersPut",
          "delete_method": "resourceClusterCapacityProvidersDelete"
        },
        "aws_ecs_service": {
          "create_method": "resourceServiceCreate",
          "read_method": "resourceServiceRead",
          "update_method": "resourceServiceUpdate",
          "delete_method": "resourceServiceDelete"
        },
        "aws_ecs_tag": {
          "create_method": "resourceTagCreate",
          "read_method": "resourceTagRead",
          "update_method": "resourceTagUpdate",
          "delete_method": "resourceTagDelete"
        },
        "aws_ecs_task_definition": {
          "create_method": "resourceTaskDefinitionCreate",
          "read_method": "resourceTaskDefinitionRead",
          "update_method": "resourceTaskDefinitionUpdate",
          "delete_method": "resourceTaskDefinitionDelete"
        },
        "aws_ecs_task_set": {
          "create_method": "resourceTaskSetCreate",
          "read_method": "resourceTaskSetRead",
          "update_method": "resourceTaskSetUpdate",
          "delete_method": "resourceTaskSetDelete"
        }
      },
      "data_source_methods": {
        "aws_ecs_cluster": {
          "read_method": "dataSourceClusterRead"
        },
        "aws_ecs_container_definition": {
          "read_method": "dataSourceContainerDefinitionRead"
        },
        "aws_ecs_service": {
          "read_method": "dataSourceServiceRead"
        },
        "aws_ecs_task_definition": {
          "read_method": "dataSourceTaskDefinitionRead"
        },
        "aws_ecs_task_execution": {
          "read_method": "dataSourceTaskExecutionRead"
        }
      }
    },
    {
      "service_name": "efs",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/efs",
      "aws_sdk_resources": {
        "aws_efs_access_point": {
          "terraform_type": "aws_efs_access_point",
          "factory_function": "resourceEfsAccessPoint",
          "name": "Access Point",
          "sdk_type": "sdk"
        },
        "aws_efs_backup_policy": {
          "terraform_type": "aws_efs_backup_policy",
          "factory_function": "resourceEfsBackupPolicy",
          "name": "Backup Policy",
          "sdk_type": "sdk"
        },
        "aws_efs_file_system": {
          "terraform_type": "aws_efs_file_system",
          "factory_function": "resourceEfsFileSystem",
          "name": "File System",
          "sdk_type": "sdk"
        },
        "aws_efs_file_system_policy": {
          "terraform_type": "aws_efs_file_system_policy",
          "factory_function": "resourceEfsFileSystemPolicy",
          "name": "File System Policy",
          "sdk_type": "sdk"
        },
        "aws_efs_mount_target": {
          "terraform_type": "aws_efs_mount_target",
          "factory_function": "resourceEfsMountTarget",
          "name": "Mount Target",
          "sdk_type": "sdk"
        },
        "aws_efs_replication_configuration": {
          "terraform_type": "aws_efs_replication_configuration",
          "factory_function": "resourceEfsReplicationConfiguration",
          "name": "Replication Configuration",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_efs_access_point": {
          "terraform_type": "aws_efs_access_point",
          "factory_function": "dataSourceEfsAccessPoint",
          "name": "Access Point",
          "sdk_type": "sdk"
        },
        "aws_efs_access_points": {
          "terraform_type": "aws_efs_access_points",
          "factory_function": "dataSourceEfsAccessPoints",
          "name": "Access Point",
          "sdk_type": "sdk"
        },
        "aws_efs_file_system": {
          "terraform_type": "aws_efs_file_system",
          "factory_function": "dataSourceEfsFileSystem",
          "name": "File System",
          "sdk_type": "sdk"
        },
        "aws_efs_mount_target": {
          "terraform_type": "aws_efs_mount_target",
          "factory_function": "dataSourceEfsMountTarget",
          "name": "Mount Target",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_efs_access_point": {
          "create_method": "resourceAccessPointCreate",
          "read_method": "resourceAccessPointRead",
          "update_method": "resourceAccessPointUpdate",
          "delete_method": "resourceAccessPointDelete"
        },
        "aws_efs_backup_policy": {
          "create_method": "resourceBackupPolicyCreate",
          "read_method": "resourceBackupPolicyRead",
          "update_method": "resourceBackupPolicyUpdate",
          "delete_method": "resourceBackupPolicyDelete"
        },
        "aws_efs_file_system": {
          "create_method": "resourceFileSystemCreate",
          "read_method": "resourceFileSystemRead",
          "update_method": "resourceFileSystemUpdate",
          "delete_method": "resourceFileSystemDelete"
        },
        "aws_efs_file_system_policy": {
          "create_method": "resourceFileSystemPolicyPut",
          "read_method": "resourceFileSystemPolicyRead",
          "update_method": "resourceFileSystemPolicyPut",
          "delete_method": "resourceFileSystemPolicyDelete"
        },
        "aws_efs_mount_target": {
          "create_method": "resourceMountTargetCreate",
          "read_method": "resourceMountTargetRead",
          "update_method": "resourceMountTargetUpdate",
          "delete_method": "resourceMountTargetDelete"
        },
        "aws_efs_replication_configuration": {
          "create_method": "resourceReplicationConfigurationCreate",
          "read_method": "resourceReplicationConfigurationRead",
          "delete_method": "resourceReplicationConfigurationDelete"
        }
      },
      "data_source_methods": {
        "aws_efs_access_point": {
          "read_method": "dataSourceAccessPointRead"
        },
        "aws_efs_access_points": {
          "read_method": "dataSourceAccessPointsRead"
        },
        "aws_efs_file_system": {
          "read_method": "dataSourceFileSystemRead"
        },
        "aws_efs_mount_target": {
          "read_method": "dataSourceMountTargetRead"
        }
      }
    },
    {
      "service_name": "eks",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/eks",
      "aws_sdk_resources": {
        "aws_eks_access_entry": {
          "terraform_type": "aws_eks_access_entry",
          "factory_function": "resourceEksAccessEntry",
          "name": "Access Entry",
          "sdk_type": "sdk"
        },
        "aws_eks_access_policy_association": {
          "terraform_type": "aws_eks_access_policy_association",
          "factory_function": "resourceEksAccessPolicyAssociation",
          "name": "Access Policy Association",
          "sdk_type": "sdk"
        },
        "aws_eks_addon": {
          "terraform_type": "aws_eks_addon",
          "factory_function": "resourceEksAddon",
          "name": "Add-On",
          "sdk_type": "sdk"
        },
        "aws_eks_cluster": {
          "terraform_type": "aws_eks_cluster",
          "factory_function": "resourceEksCluster",
          "name": "Cluster",
          "sdk_type": "sdk"
        },
        "aws_eks_fargate_profile": {
          "terraform_type": "aws_eks_fargate_profile",
          "factory_function": "resourceEksFargateProfile",
          "name": "Fargate Profile",
          "sdk_type": "sdk"
        },
        "aws_eks_identity_provider_config": {
          "terraform_type": "aws_eks_identity_provider_config",
          "factory_function": "resourceEksIdentityProviderConfig",
          "name": "Identity Provider Config",
          "sdk_type": "sdk"
        },
        "aws_eks_node_group": {
          "terraform_type": "aws_eks_node_group",
          "factory_function": "resourceEksNodeGroup",
          "name": "Node Group",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_eks_access_entry": {
          "terraform_type": "aws_eks_access_entry",
          "factory_function": "dataSourceEksAccessEntry",
          "name": "Access Entry",
          "sdk_type": "sdk"
        },
        "aws_eks_addon": {
          "terraform_type": "aws_eks_addon",
          "factory_function": "dataSourceEksAddon",
          "name": "Add-On",
          "sdk_type": "sdk"
        },
        "aws_eks_addon_version": {
          "terraform_type": "aws_eks_addon_version",
          "factory_function": "dataSourceEksAddonVersion",
          "name": "Add-On Version",
          "sdk_type": "sdk"
        },
        "aws_eks_cluster": {
          "terraform_type": "aws_eks_cluster",
          "factory_function": "dataSourceEksCluster",
          "name": "Cluster",
          "sdk_type": "sdk"
        },
        "aws_eks_cluster_auth": {
          "terraform_type": "aws_eks_cluster_auth",
          "factory_function": "dataSourceEksClusterAuth",
          "name": "Cluster Authentication Token",
          "sdk_type": "sdk"
        },
        "aws_eks_clusters": {
          "terraform_type": "aws_eks_clusters",
          "factory_function": "dataSourceEksClusters",
          "name": "Clusters",
          "sdk_type": "sdk"
        },
        "aws_eks_node_group": {
          "terraform_type": "aws_eks_node_group",
          "factory_function": "dataSourceEksNodeGroup",
          "name": "Node Group",
          "sdk_type": "sdk"
        },
        "aws_eks_node_groups": {
          "terraform_type": "aws_eks_node_groups",
          "factory_function": "dataSourceEksNodeGroups",
          "name": "Node Groups",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_eks_pod_identity_association": {
          "terraform_type": "aws_eks_pod_identity_association",
          "factory_function": "newEksPodIdentityAssociationResource",
          "name": "Pod Identity Association",
          "sdk_type": "framework",
          "struct_type": "podIdentityAssociationResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_eks_cluster_versions": {
          "terraform_type": "aws_eks_cluster_versions",
          "factory_function": "newEksClusterVersionsDataSource",
          "name": "Cluster Versions",
          "sdk_type": "framework",
          "struct_type": "clusterVersionsDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "podIdentityAssociationResource": "aws_eks_pod_identity_association"
      },
      "data_source_terraform_types": {
        "clusterVersionsDataSource": "aws_eks_cluster_versions"
      },
      "resource_crud_methods": {
        "aws_eks_access_entry": {
          "create_method": "resourceAccessEntryCreate",
          "read_method": "resourceAccessEntryRead",
          "update_method": "resourceAccessEntryUpdate",
          "delete_method": "resourceAccessEntryDelete"
        },
        "aws_eks_access_policy_association": {
          "create_method": "resourceAccessPolicyAssociationCreate",
          "read_method": "resourceAccessPolicyAssociationRead",
          "delete_method": "resourceAccessPolicyAssociationDelete"
        },
        "aws_eks_addon": {
          "create_method": "resourceAddonCreate",
          "read_method": "resourceAddonRead",
          "update_method": "resourceAddonUpdate",
          "delete_method": "resourceAddonDelete"
        },
        "aws_eks_cluster": {
          "create_method": "resourceClusterCreate",
          "read_method": "resourceClusterRead",
          "update_method": "resourceClusterUpdate",
          "delete_method": "resourceClusterDelete"
        },
        "aws_eks_fargate_profile": {
          "create_method": "resourceFargateProfileCreate",
          "read_method": "resourceFargateProfileRead",
          "update_method": "resourceFargateProfileUpdate",
          "delete_method": "resourceFargateProfileDelete"
        },
        "aws_eks_identity_provider_config": {
          "create_method": "resourceIdentityProviderConfigCreate",
          "read_method": "resourceIdentityProviderConfigRead",
          "update_method": "resourceIdentityProviderConfigUpdate",
          "delete_method": "resourceIdentityProviderConfigDelete"
        },
        "aws_eks_node_group": {
          "create_method": "resourceNodeGroupCreate",
          "read_method": "resourceNodeGroupRead",
          "update_method": "resourceNodeGroupUpdate",
          "delete_method": "resourceNodeGroupDelete"
        }
      },
      "data_source_methods": {
        "aws_eks_access_entry": {
          "read_method": "dataSourceAccessEntryRead"
        },
        "aws_eks_addon": {
          "read_method": "dataSourceAddonRead"
        },
        "aws_eks_addon_version": {
          "read_method": "dataSourceAddonVersionRead"
        },
        "aws_eks_cluster": {
          "read_method": "dataSourceClusterRead"
        },
        "aws_eks_cluster_auth": {
          "read_method": "dataSourceClusterAuthRead"
        },
        "aws_eks_clusters": {
          "read_method": "dataSourceClustersRead"
        },
        "aws_eks_node_group": {
          "read_method": "dataSourceNodeGroupRead"
        },
        "aws_eks_node_groups": {
          "read_method": "dataSourceNodeGroupsRead"
        }
      }
    },
    {
      "service_name": "elasticache",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/elasticache",
      "aws_sdk_resources": {
        "aws_elasticache_cluster": {
          "terraform_type": "aws_elasticache_cluster",
          "factory_function": "resourceElasticacheCluster",
          "name": "Cluster",
          "sdk_type": "sdk"
        },
        "aws_elasticache_global_replication_group": {
          "terraform_type": "aws_elasticache_global_replication_group",
          "factory_function": "resourceElasticacheGlobalReplicationGroup",
          "name": "Global Replication Group",
          "sdk_type": "sdk"
        },
        "aws_elasticache_parameter_group": {
          "terraform_type": "aws_elasticache_parameter_group",
          "factory_function": "resourceElasticacheParameterGroup",
          "name": "Parameter Group",
          "sdk_type": "sdk"
        },
        "aws_elasticache_replication_group": {
          "terraform_type": "aws_elasticache_replication_group",
          "factory_function": "resourceElasticacheReplicationGroup",
          "name": "Replication Group",
          "sdk_type": "sdk"
        },
        "aws_elasticache_subnet_group": {
          "terraform_type": "aws_elasticache_subnet_group",
          "factory_function": "resourceElasticacheSubnetGroup",
          "name": "Subnet Group",
          "sdk_type": "sdk"
        },
        "aws_elasticache_user": {
          "terraform_type": "aws_elasticache_user",
          "factory_function": "resourceElasticacheUser",
          "name": "User",
          "sdk_type": "sdk"
        },
        "aws_elasticache_user_group": {
          "terraform_type": "aws_elasticache_user_group",
          "factory_function": "resourceElasticacheUserGroup",
          "name": "User Group",
          "sdk_type": "sdk"
        },
        "aws_elasticache_user_group_association": {
          "terraform_type": "aws_elasticache_user_group_association",
          "factory_function": "resourceElasticacheUserGroupAssociation",
          "name": "User Group Association",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_elasticache_cluster": {
          "terraform_type": "aws_elasticache_cluster",
          "factory_function": "dataSourceElasticacheCluster",
          "name": "Cluster",
          "sdk_type": "sdk"
        },
        "aws_elasticache_replication_group": {
          "terraform_type": "aws_elasticache_replication_group",
          "factory_function": "dataSourceElasticacheReplicationGroup",
          "name": "Replication Group",
          "sdk_type": "sdk"
        },
        "aws_elasticache_subnet_group": {
          "terraform_type": "aws_elasticache_subnet_group",
          "factory_function": "dataSourceElasticacheSubnetGroup",
          "name": "Subnet Group",
          "sdk_type": "sdk"
        },
        "aws_elasticache_user": {
          "terraform_type": "aws_elasticache_user",
          "factory_function": "dataSourceElasticacheUser",
          "name": "User",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_elasticache_reserved_cache_node": {
          "terraform_type": "aws_elasticache_reserved_cache_node",
          "factory_function": "newElasticacheReservedCacheNodeResource",
          "name": "Reserved Cache Node",
          "sdk_type": "framework",
          "struct_type": "reservedCacheNodeResource"
        },
        "aws_elasticache_serverless_cache": {
          "terraform_type": "aws_elasticache_serverless_cache",
          "factory_function": "newElasticacheServerlessCacheResource",
          "name": "Serverless Cache",
          "sdk_type": "framework",
          "struct_type": "serverlessCacheResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_elasticache_reserved_cache_node_offering": {
          "terraform_type": "aws_elasticache_reserved_cache_node_offering",
          "factory_function": "newElasticacheReservedCacheNodeOfferingDataSource",
          "name": "Reserved Cache Node Offering",
          "sdk_type": "framework",
          "struct_type": "reservedCacheNodeOfferingDataSource"
        },
        "aws_elasticache_serverless_cache": {
          "terraform_type": "aws_elasticache_serverless_cache",
          "factory_function": "newElasticacheServerlessCacheDataSource",
          "name": "Serverless Cache",
          "sdk_type": "framework",
          "struct_type": "serverlessCacheDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "reservedCacheNodeResource": "aws_elasticache_reserved_cache_node",
        "serverlessCacheResource": "aws_elasticache_serverless_cache"
      },
      "data_source_terraform_types": {
        "reservedCacheNodeOfferingDataSource": "aws_elasticache_reserved_cache_node_offering",
        "serverlessCacheDataSource": "aws_elasticache_serverless_cache"
      },
      "resource_crud_methods": {
        "aws_elasticache_cluster": {
          "create_method": "resourceClusterCreate",
          "read_method": "resourceClusterRead",
          "update_method": "resourceClusterUpdate",
          "delete_method": "resourceClusterDelete"
        },
        "aws_elasticache_global_replication_group": {
          "create_method": "resourceGlobalReplicationGroupCreate",
          "read_method": "resourceGlobalReplicationGroupRead",
          "update_method": "resourceGlobalReplicationGroupUpdate",
          "delete_method": "resourceGlobalReplicationGroupDelete"
        },
        "aws_elasticache_parameter_group": {
          "create_method": "resourceParameterGroupCreate",
          "read_method": "resourceParameterGroupRead",
          "update_method": "resourceParameterGroupUpdate",
          "delete_method": "resourceParameterGroupDelete"
        },
        "aws_elasticache_replication_group": {
          "create_method": "resourceReplicationGroupCreate",
          "read_method": "resourceReplicationGroupRead",
          "update_method": "resourceReplicationGroupUpdate",
          "delete_method": "resourceReplicationGroupDelete"
        },
        "aws_elasticache_subnet_group": {
          "create_method": "resourceSubnetGroupCreate",
          "read_method": "resourceSubnetGroupRead",
          "update_method": "resourceSubnetGroupUpdate",
          "delete_method": "resourceSubnetGroupDelete"
        },
        "aws_elasticache_user": {
          "create_method": "resourceUserCreate",
          "read_method": "resourceUserRead",
          "update_method": "resourceUserUpdate",
          "delete_method": "resourceUserDelete"
        },
        "aws_elasticache_user_group": {
          "create_method": "resourceUserGroupCreate",
          "read_method": "resourceUserGroupRead",
          "update_method": "resourceUserGroupUpdate",
          "delete_method": "resourceUserGroupDelete"
        },
        "aws_elasticache_user_group_association": {
          "create_method": "resourceUserGroupAssociationCreate",
          "read_method": "resourceUserGroupAssociationRead",
          "delete_method": "resourceUserGroupAssociationDelete"
        }
      },
      "data_source_methods": {
        "aws_elasticache_cluster": {
          "read_method": "dataSourceClusterRead"
        },
        "aws_elasticache_replication_group": {
          "read_method": "dataSourceReplicationGroupRead"
        },
        "aws_elasticache_subnet_group": {
          "read_method": "dataSourceSubnetGroupRead"
        },
        "aws_elasticache_user": {
          "read_method": "dataSourceUserRead"
        }
      }
    },
    {
      "service_name": "elastictranscoder",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/elastictranscoder",
      "aws_sdk_resources": {
        "aws_elastictranscoder_pipeline": {
          "terraform_type": "aws_elastictranscoder_pipeline",
          "factory_function": "resourceElastictranscoderPipeline",
          "name": "Pipeline",
          "sdk_type": "sdk"
        },
        "aws_elastictranscoder_preset": {
          "terraform_type": "aws_elastictranscoder_preset",
          "factory_function": "resourceElastictranscoderPreset",
          "name": "Preset",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_elastictranscoder_pipeline": {
          "create_method": "resourcePipelineCreate",
          "read_method": "resourcePipelineRead",
          "update_method": "resourcePipelineUpdate",
          "delete_method": "resourcePipelineDelete"
        },
        "aws_elastictranscoder_preset": {
          "create_method": "resourcePresetCreate",
          "read_method": "resourcePresetRead",
          "delete_method": "resourcePresetDelete"
        }
      }
    },
    {
      "service_name": "elasticbeanstalk",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/elasticbeanstalk",
      "aws_sdk_resources": {
        "aws_elastic_beanstalk_application": {
          "terraform_type": "aws_elastic_beanstalk_application",
          "factory_function": "resourceElasticBeanstalkApplication",
          "name": "Application",
          "sdk_type": "sdk"
        },
        "aws_elastic_beanstalk_application_version": {
          "terraform_type": "aws_elastic_beanstalk_application_version",
          "factory_function": "resourceElasticBeanstalkApplicationVersion",
          "name": "Application Version",
          "sdk_type": "sdk"
        },
        "aws_elastic_beanstalk_configuration_template": {
          "terraform_type": "aws_elastic_beanstalk_configuration_template",
          "factory_function": "resourceElasticBeanstalkConfigurationTemplate",
          "name": "Configuration Template",
          "sdk_type": "sdk"
        },
        "aws_elastic_beanstalk_environment": {
          "terraform_type": "aws_elastic_beanstalk_environment",
          "factory_function": "resourceElasticBeanstalkEnvironment",
          "name": "Environment",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_elastic_beanstalk_application": {
          "terraform_type": "aws_elastic_beanstalk_application",
          "factory_function": "dataSourceElasticBeanstalkApplication",
          "name": "Application",
          "sdk_type": "sdk"
        },
        "aws_elastic_beanstalk_hosted_zone": {
          "terraform_type": "aws_elastic_beanstalk_hosted_zone",
          "factory_function": "dataSourceElasticBeanstalkHostedZone",
          "name": "Hosted Zone",
          "sdk_type": "sdk"
        },
        "aws_elastic_beanstalk_solution_stack": {
          "terraform_type": "aws_elastic_beanstalk_solution_stack",
          "factory_function": "dataSourceElasticBeanstalkSolutionStack",
          "name": "Solution Stack",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_elastic_beanstalk_application": {
          "create_method": "resourceApplicationCreate",
          "read_method": "resourceApplicationRead",
          "update_method": "resourceApplicationUpdate",
          "delete_method": "resourceApplicationDelete"
        },
        "aws_elastic_beanstalk_application_version": {
          "create_method": "resourceApplicationVersionCreate",
          "read_method": "resourceApplicationVersionRead",
          "update_method": "resourceApplicationVersionUpdate",
          "delete_method": "resourceApplicationVersionDelete"
        },
        "aws_elastic_beanstalk_configuration_template": {
          "create_method": "resourceConfigurationTemplateCreate",
          "read_method": "resourceConfigurationTemplateRead",
          "update_method": "resourceConfigurationTemplateUpdate",
          "delete_method": "resourceConfigurationTemplateDelete"
        },
        "aws_elastic_beanstalk_environment": {
          "create_method": "resourceEnvironmentCreate",
          "read_method": "resourceEnvironmentRead",
          "update_method": "resourceEnvironmentUpdate",
          "delete_method": "resourceEnvironmentDelete"
        }
      },
      "data_source_methods": {
        "aws_elastic_beanstalk_application": {
          "read_method": "dataSourceApplicationRead"
        },
        "aws_elastic_beanstalk_hosted_zone": {
          "read_method": "dataSourceHostedZoneRead"
        },
        "aws_elastic_beanstalk_solution_stack": {
          "read_method": "dataSourceSolutionStackRead"
        }
      }
    },
    {
      "service_name": "elasticsearch",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/elasticsearch",
      "aws_sdk_resources": {
        "aws_elasticsearch_domain": {
          "terraform_type": "aws_elasticsearch_domain",
          "factory_function": "resourceElasticsearchDomain",
          "name": "Domain",
          "sdk_type": "sdk"
        },
        "aws_elasticsearch_domain_policy": {
          "terraform_type": "aws_elasticsearch_domain_policy",
          "factory_function": "resourceElasticsearchDomainPolicy",
          "name": "Domain Policy",
          "sdk_type": "sdk"
        },
        "aws_elasticsearch_domain_saml_options": {
          "terraform_type": "aws_elasticsearch_domain_saml_options",
          "factory_function": "resourceElasticsearchDomainSamlOptions",
          "name": "Domain SAML Options",
          "sdk_type": "sdk"
        },
        "aws_elasticsearch_vpc_endpoint": {
          "terraform_type": "aws_elasticsearch_vpc_endpoint",
          "factory_function": "resourceElasticsearchVpcEndpoint",
          "name": "VPC Endpoint",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_elasticsearch_domain": {
          "terraform_type": "aws_elasticsearch_domain",
          "factory_function": "dataSourceElasticsearchDomain",
          "name": "Domain",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_elasticsearch_domain": {
          "create_method": "resourceDomainCreate",
          "read_method": "resourceDomainRead",
          "update_method": "resourceDomainUpdate",
          "delete_method": "resourceDomainDelete"
        },
        "aws_elasticsearch_domain_policy": {
          "create_method": "resourceDomainPolicyUpsert",
          "read_method": "resourceDomainPolicyRead",
          "update_method": "resourceDomainPolicyUpsert",
          "delete_method": "resourceDomainPolicyDelete"
        },
        "aws_elasticsearch_domain_saml_options": {
          "create_method": "resourceDomainSAMLOptionsPut",
          "read_method": "resourceDomainSAMLOptionsRead",
          "update_method": "resourceDomainSAMLOptionsPut",
          "delete_method": "resourceDomainSAMLOptionsDelete"
        },
        "aws_elasticsearch_vpc_endpoint": {
          "create_method": "resourceVPCEndpointCreate",
          "read_method": "resourceVPCEndpointRead",
          "update_method": "resourceVPCEndpointUpdate",
          "delete_method": "resourceVPCEndpointDelete"
        }
      },
      "data_source_methods": {
        "aws_elasticsearch_domain": {
          "read_method": "dataSourceDomainRead"
        }
      }
    },
    {
      "service_name": "elb",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/elb",
      "aws_sdk_resources": {
        "aws_app_cookie_stickiness_policy": {
          "terraform_type": "aws_app_cookie_stickiness_policy",
          "factory_function": "resourceAppCookieStickinessPolicy",
          "name": "App Cookie Stickiness Policy",
          "sdk_type": "sdk"
        },
        "aws_elb": {
          "terraform_type": "aws_elb",
          "factory_function": "resourceElb",
          "name": "Classic Load Balancer",
          "sdk_type": "sdk"
        },
        "aws_elb_attachment": {
          "terraform_type": "aws_elb_attachment",
          "factory_function": "resourceElbAttachment",
          "name": "Attachment",
          "sdk_type": "sdk"
        },
        "aws_lb_cookie_stickiness_policy": {
          "terraform_type": "aws_lb_cookie_stickiness_policy",
          "factory_function": "resourceLbCookieStickinessPolicy",
          "name": "LB Cookie Stickiness Policy",
          "sdk_type": "sdk"
        },
        "aws_lb_ssl_negotiation_policy": {
          "terraform_type": "aws_lb_ssl_negotiation_policy",
          "factory_function": "resourceLbSslNegotiationPolicy",
          "name": "SSL Negotiation Policy",
          "sdk_type": "sdk"
        },
        "aws_load_balancer_backend_server_policy": {
          "terraform_type": "aws_load_balancer_backend_server_policy",
          "factory_function": "resourceLoadBalancerBackendServerPolicy",
          "name": "Backend Server Policy",
          "sdk_type": "sdk"
        },
        "aws_load_balancer_listener_policy": {
          "terraform_type": "aws_load_balancer_listener_policy",
          "factory_function": "resourceLoadBalancerListenerPolicy",
          "name": "Listener Policy",
          "sdk_type": "sdk"
        },
        "aws_load_balancer_policy": {
          "terraform_type": "aws_load_balancer_policy",
          "factory_function": "resourceLoadBalancerPolicy",
          "name": "Load Balancer Policy",
          "sdk_type": "sdk"
        },
        "aws_proxy_protocol_policy": {
          "terraform_type": "aws_proxy_protocol_policy",
          "factory_function": "resourceProxyProtocolPolicy",
          "name": "Proxy Protocol Policy",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_elb": {
          "terraform_type": "aws_elb",
          "factory_function": "dataSourceElb",
          "name": "Classic Load Balancer",
          "sdk_type": "sdk"
        },
        "aws_elb_hosted_zone_id": {
          "terraform_type": "aws_elb_hosted_zone_id",
          "factory_function": "dataSourceElbHostedZoneId",
          "name": "Hosted Zone ID",
          "sdk_type": "sdk"
        },
        "aws_elb_service_account": {
          "terraform_type": "aws_elb_service_account",
          "factory_function": "dataSourceElbServiceAccount",
          "name": "Service Account",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_app_cookie_stickiness_policy": {
          "create_method": "resourceAppCookieStickinessPolicyCreate",
          "read_method": "resourceAppCookieStickinessPolicyRead",
          "delete_method": "resourceAppCookieStickinessPolicyDelete"
        },
        "aws_elb": {
          "create_method": "resourceLoadBalancerCreate",
          "read_method": "resourceLoadBalancerRead",
          "update_method": "resourceLoadBalancerUpdate",
          "delete_method": "resourceLoadBalancerDelete"
        },
        "aws_elb_attachment": {
          "create_method": "resourceAttachmentCreate",
          "read_method": "resourceAttachmentRead",
          "delete_method": "resourceAttachmentDelete"
        },
        "aws_lb_cookie_stickiness_policy": {
          "create_method": "resourceCookieStickinessPolicyCreate",
          "read_method": "resourceCookieStickinessPolicyRead",
          "delete_method": "resourceCookieStickinessPolicyDelete"
        },
        "aws_lb_ssl_negotiation_policy": {
          "create_method": "resourceSSLNegotiationPolicyCreate",
          "read_method": "resourceSSLNegotiationPolicyRead",
          "delete_method": "resourceSSLNegotiationPolicyDelete"
        },
        "aws_load_balancer_backend_server_policy": {
          "create_method": "resourceBackendServerPolicySet",
          "read_method": "resourceBackendServerPolicyRead",
          "update_method": "resourceBackendServerPolicySet",
          "delete_method": "resourceBackendServerPolicyDelete"
        },
        "aws_load_balancer_listener_policy": {
          "create_method": "resourceListenerPolicySet",
          "read_method": "resourceListenerPolicyRead",
          "update_method": "resourceListenerPolicySet",
          "delete_method": "resourceListenerPolicyDelete"
        },
        "aws_load_balancer_policy": {
          "create_method": "resourcePolicyCreate",
          "read_method": "resourcePolicyRead",
          "update_method": "resourcePolicyUpdate",
          "delete_method": "resourcePolicyDelete"
        },
        "aws_proxy_protocol_policy": {
          "create_method": "resourceProxyProtocolPolicyCreate",
          "read_method": "resourceProxyProtocolPolicyRead",
          "update_method": "resourceProxyProtocolPolicyUpdate",
          "delete_method": "resourceProxyProtocolPolicyDelete"
        }
      },
      "data_source_methods": {
        "aws_elb": {
          "read_method": "dataSourceLoadBalancerRead"
        },
        "aws_elb_hosted_zone_id": {
          "read_method": "dataSourceHostedZoneIDRead"
        },
        "aws_elb_service_account": {
          "read_method": "dataSourceServiceAccountRead"
        }
      }
    },
    {
      "service_name": "emr",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/emr",
      "aws_sdk_resources": {
        "aws_emr_block_public_access_configuration": {
          "terraform_type": "aws_emr_block_public_access_configuration",
          "factory_function": "resourceEmrBlockPublicAccessConfiguration",
          "name": "Block Public Access Configuration",
          "sdk_type": "sdk"
        },
        "aws_emr_cluster": {
          "terraform_type": "aws_emr_cluster",
          "factory_function": "resourceEmrCluster",
          "name": "Cluster",
          "sdk_type": "sdk"
        },
        "aws_emr_instance_fleet": {
          "terraform_type": "aws_emr_instance_fleet",
          "factory_function": "resourceEmrInstanceFleet",
          "name": "Instance Fleet",
          "sdk_type": "sdk"
        },
        "aws_emr_instance_group": {
          "terraform_type": "aws_emr_instance_group",
          "factory_function": "resourceEmrInstanceGroup",
          "name": "Instance Group",
          "sdk_type": "sdk"
        },
        "aws_emr_managed_scaling_policy": {
          "terraform_type": "aws_emr_managed_scaling_policy",
          "factory_function": "resourceEmrManagedScalingPolicy",
          "name": "Managed Scaling Policy",
          "sdk_type": "sdk"
        },
        "aws_emr_security_configuration": {
          "terraform_type": "aws_emr_security_configuration",
          "factory_function": "resourceEmrSecurityConfiguration",
          "name": "Security Configuration",
          "sdk_type": "sdk"
        },
        "aws_emr_studio": {
          "terraform_type": "aws_emr_studio",
          "factory_function": "resourceEmrStudio",
          "name": "Studio",
          "sdk_type": "sdk"
        },
        "aws_emr_studio_session_mapping": {
          "terraform_type": "aws_emr_studio_session_mapping",
          "factory_function": "resourceEmrStudioSessionMapping",
          "name": "Studio Session Mapping",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_emr_release_labels": {
          "terraform_type": "aws_emr_release_labels",
          "factory_function": "dataSourceEmrReleaseLabels",
          "name": "Release Labels",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {
        "aws_emr_supported_instance_types": {
          "terraform_type": "aws_emr_supported_instance_types",
          "factory_function": "newEmrSupportedInstanceTypesDataSource",
          "name": "Supported Instance Types",
          "sdk_type": "framework",
          "struct_type": "supportedInstanceTypesDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "data_source_terraform_types": {
        "supportedInstanceTypesDataSource": "aws_emr_supported_instance_types"
      },
      "resource_crud_methods": {
        "aws_emr_block_public_access_configuration": {
          "create_method": "resourceBlockPublicAccessConfigurationCreate",
          "read_method": "resourceBlockPublicAccessConfigurationRead",
          "delete_method": "resourceBlockPublicAccessConfigurationDelete"
        },
        "aws_emr_cluster": {
          "create_method": "resourceClusterCreate",
          "read_method": "resourceClusterRead",
          "update_method": "resourceClusterUpdate",
          "delete_method": "resourceClusterDelete"
        },
        "aws_emr_instance_fleet": {
          "create_method": "resourceInstanceFleetCreate",
          "read_method": "resourceInstanceFleetRead",
          "update_method": "resourceInstanceFleetUpdate",
          "delete_method": "resourceInstanceFleetDelete"
        },
        "aws_emr_instance_group": {
          "create_method": "resourceInstanceGroupCreate",
          "read_method": "resourceInstanceGroupRead",
          "update_method": "resourceInstanceGroupUpdate",
          "delete_method": "resourceInstanceGroupDelete"
        },
        "aws_emr_managed_scaling_policy": {
          "create_method": "resourceManagedScalingPolicyCreate",
          "read_method": "resourceManagedScalingPolicyRead",
          "delete_method": "resourceManagedScalingPolicyDelete"
        },
        "aws_emr_security_configuration": {
          "create_method": "resourceSecurityConfigurationCreate",
          "read_method": "resourceSecurityConfigurationRead",
          "delete_method": "resourceSecurityConfigurationDelete"
        },
        "aws_emr_studio": {
          "create_method": "resourceStudioCreate",
          "read_method": "resourceStudioRead",
          "update_method": "resourceStudioUpdate",
          "delete_method": "resourceStudioDelete"
        },
        "aws_emr_studio_session_mapping": {
          "create_method": "resourceStudioSessionMappingCreate",
          "read_method": "resourceStudioSessionMappingRead",
          "update_method": "resourceStudioSessionMappingUpdate",
          "delete_method": "resourceStudioSessionMappingDelete"
        }
      },
      "data_source_methods": {
        "aws_emr_release_labels": {
          "read_method": "dataSourceReleaseLabelsRead"
        }
      }
    },
    {
      "service_name": "elbv2",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/elbv2",
      "aws_sdk_resources": {
        "aws_alb": {
          "terraform_type": "aws_alb",
          "factory_function": "resourceAlb",
          "name": "Load Balancer",
          "sdk_type": "sdk"
        },
        "aws_alb_listener": {
          "terraform_type": "aws_alb_listener",
          "factory_function": "resourceAlbListener",
          "name": "Listener",
          "sdk_type": "sdk"
        },
        "aws_alb_listener_certificate": {
          "terraform_type": "aws_alb_listener_certificate",
          "factory_function": "resourceAlbListenerCertificate",
          "name": "Listener Certificate",
          "sdk_type": "sdk"
        },
        "aws_alb_listener_rule": {
          "terraform_type": "aws_alb_listener_rule",
          "factory_function": "resourceAlbListenerRule",
          "name": "Listener Rule",
          "sdk_type": "sdk"
        },
        "aws_alb_target_group": {
          "terraform_type": "aws_alb_target_group",
          "factory_function": "resourceAlbTargetGroup",
          "name": "Target Group",
          "sdk_type": "sdk"
        },
        "aws_alb_target_group_attachment": {
          "terraform_type": "aws_alb_target_group_attachment",
          "factory_function": "resourceAlbTargetGroupAttachment",
          "name": "Target Group Attachment",
          "sdk_type": "sdk"
        },
        "aws_lb_trust_store": {
          "terraform_type": "aws_lb_trust_store",
          "factory_function": "resourceLbTrustStore",
          "name": "Trust Store",
          "sdk_type": "sdk"
        },
        "aws_lb_trust_store_revocation": {
          "terraform_type": "aws_lb_trust_store_revocation",
          "factory_function": "resourceLbTrustStoreRevocation",
          "name": "Trust Store Revocation",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_alb": {
          "terraform_type": "aws_alb",
          "factory_function": "dataSourceAlb",
          "name": "Load Balancer",
          "sdk_type": "sdk"
        },
        "aws_alb_listener": {
          "terraform_type": "aws_alb_listener",
          "factory_function": "dataSourceAlbListener",
          "name": "Listener",
          "sdk_type": "sdk"
        },
        "aws_alb_target_group": {
          "terraform_type": "aws_alb_target_group",
          "factory_function": "dataSourceAlbTargetGroup",
          "name": "Target Group",
          "sdk_type": "sdk"
        },
        "aws_lb_hosted_zone_id": {
          "terraform_type": "aws_lb_hosted_zone_id",
          "factory_function": "dataSourceLbHostedZoneId",
          "name": "Hosted Zone ID",
          "sdk_type": "sdk"
        },
        "aws_lb_trust_store": {
          "terraform_type": "aws_lb_trust_store",
          "factory_function": "dataSourceLbTrustStore",
          "name": "Trust Store",
          "sdk_type": "sdk"
        },
        "aws_lbs": {
          "terraform_type": "aws_lbs",
          "factory_function": "dataSourceLbs",
          "name": "Load Balancers",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {
        "aws_lb_listener_rule": {
          "terraform_type": "aws_lb_listener_rule",
          "factory_function": "newLbListenerRuleDataSource",
          "name": "Listener Rule",
          "sdk_type": "framework",
          "struct_type": "listenerRuleDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "data_source_terraform_types": {
        "listenerRuleDataSource": "aws_lb_listener_rule"
      },
      "resource_crud_methods": {
        "aws_alb": {
          "create_method": "resourceLoadBalancerCreate",
          "read_method": "resourceLoadBalancerRead",
          "update_method": "resourceLoadBalancerUpdate",
          "delete_method": "resourceLoadBalancerDelete"
        },
        "aws_alb_listener": {
          "create_method": "resourceListenerCreate",
          "read_method": "resourceListenerRead",
          "update_method": "resourceListenerUpdate",
          "delete_method": "resourceListenerDelete"
        },
        "aws_alb_listener_certificate": {
          "create_method": "resourceListenerCertificateCreate",
          "read_method": "resourceListenerCertificateRead",
          "delete_method": "resourceListenerCertificateDelete"
        },
        "aws_alb_listener_rule": {
          "create_method": "resourceListenerRuleCreate",
          "read_method": "resourceListenerRuleRead",
          "update_method": "resourceListenerRuleUpdate",
          "delete_method": "resourceListenerRuleDelete"
        },
        "aws_alb_target_group": {
          "create_method": "resourceTargetGroupCreate",
          "read_method": "resourceTargetGroupRead",
          "update_method": "resourceTargetGroupUpdate",
          "delete_method": "resourceTargetGroupDelete"
        },
        "aws_alb_target_group_attachment": {
          "create_method": "resourceAttachmentCreate",
          "read_method": "resourceAttachmentRead",
          "delete_method": "resourceAttachmentDelete"
        },
        "aws_lb_trust_store": {
          "create_method": "resourceTrustStoreCreate",
          "read_method": "resourceTrustStoreRead",
          "update_method": "resourceTrustStoreUpdate",
          "delete_method": "resourceTrustStoreDelete"
        },
        "aws_lb_trust_store_revocation": {
          "create_method": "resourceTrustStoreRevocationCreate",
          "read_method": "resourceTrustStoreRevocationRead",
          "delete_method": "resourceTrustStoreRevocationDelete"
        }
      },
      "data_source_methods": {
        "aws_alb": {
          "read_method": "dataSourceLoadBalancerRead"
        },
        "aws_alb_listener": {
          "read_method": "dataSourceListenerRead"
        },
        "aws_alb_target_group": {
          "read_method": "dataSourceTargetGroupRead"
        },
        "aws_lb_hosted_zone_id": {
          "read_method": "dataSourceHostedZoneIDRead"
        },
        "aws_lb_trust_store": {
          "read_method": "dataSourceTrustStoreRead"
        },
        "aws_lbs": {
          "read_method": "dataSourceLoadBalancersRead"
        }
      }
    },
    {
      "service_name": "emrcontainers",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/emrcontainers",
      "aws_sdk_resources": {
        "aws_emrcontainers_job_template": {
          "terraform_type": "aws_emrcontainers_job_template",
          "factory_function": "resourceEmrcontainersJobTemplate",
          "name": "Job Template",
          "sdk_type": "sdk"
        },
        "aws_emrcontainers_virtual_cluster": {
          "terraform_type": "aws_emrcontainers_virtual_cluster",
          "factory_function": "resourceEmrcontainersVirtualCluster",
          "name": "Virtual Cluster",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_emrcontainers_virtual_cluster": {
          "terraform_type": "aws_emrcontainers_virtual_cluster",
          "factory_function": "dataSourceEmrcontainersVirtualCluster",
          "name": "Virtual Cluster",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_emrcontainers_job_template": {
          "create_method": "resourceJobTemplateCreate",
          "read_method": "resourceJobTemplateRead",
          "delete_method": "resourceJobTemplateDelete"
        },
        "aws_emrcontainers_virtual_cluster": {
          "create_method": "resourceVirtualClusterCreate",
          "read_method": "resourceVirtualClusterRead",
          "update_method": "resourceVirtualClusterUpdate",
          "delete_method": "resourceVirtualClusterDelete"
        }
      },
      "data_source_methods": {
        "aws_emrcontainers_virtual_cluster": {
          "read_method": "dataSourceVirtualClusterRead"
        }
      }
    },
    {
      "service_name": "emrserverless",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/emrserverless",
      "aws_sdk_resources": {
        "aws_emrserverless_application": {
          "terraform_type": "aws_emrserverless_application",
          "factory_function": "resourceEmrserverlessApplication",
          "name": "Application",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_emrserverless_application": {
          "create_method": "resourceApplicationCreate",
          "read_method": "resourceApplicationRead",
          "update_method": "resourceApplicationUpdate",
          "delete_method": "resourceApplicationDelete"
        }
      }
    },
    {
      "service_name": "evidently",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/evidently",
      "aws_sdk_resources": {
        "aws_evidently_feature": {
          "terraform_type": "aws_evidently_feature",
          "factory_function": "resourceEvidentlyFeature",
          "name": "Feature",
          "sdk_type": "sdk"
        },
        "aws_evidently_launch": {
          "terraform_type": "aws_evidently_launch",
          "factory_function": "resourceEvidentlyLaunch",
          "name": "Launch",
          "sdk_type": "sdk"
        },
        "aws_evidently_project": {
          "terraform_type": "aws_evidently_project",
          "factory_function": "resourceEvidentlyProject",
          "name": "Project",
          "sdk_type": "sdk"
        },
        "aws_evidently_segment": {
          "terraform_type": "aws_evidently_segment",
          "factory_function": "resourceEvidentlySegment",
          "name": "Segment",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_evidently_feature": {
          "create_method": "resourceFeatureCreate",
          "read_method": "resourceFeatureRead",
          "update_method": "resourceFeatureUpdate",
          "delete_method": "resourceFeatureDelete"
        },
        "aws_evidently_launch": {
          "create_method": "resourceLaunchCreate",
          "read_method": "resourceLaunchRead",
          "update_method": "resourceLaunchUpdate",
          "delete_method": "resourceLaunchDelete"
        },
        "aws_evidently_project": {
          "create_method": "resourceProjectCreate",
          "read_method": "resourceProjectRead",
          "update_method": "resourceProjectUpdate",
          "delete_method": "resourceProjectDelete"
        },
        "aws_evidently_segment": {
          "create_method": "resourceSegmentCreate",
          "read_method": "resourceSegmentRead",
          "update_method": "resourceSegmentUpdate",
          "delete_method": "resourceSegmentDelete"
        }
      }
    },
    {
      "service_name": "events",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/events",
      "aws_sdk_resources": {
        "aws_cloudwatch_event_api_destination": {
          "terraform_type": "aws_cloudwatch_event_api_destination",
          "factory_function": "resourceCloudwatchEventApiDestination",
          "name": "API Destination",
          "sdk_type": "sdk"
        },
        "aws_cloudwatch_event_archive": {
          "terraform_type": "aws_cloudwatch_event_archive",
          "factory_function": "resourceCloudwatchEventArchive",
          "name": "Archive",
          "sdk_type": "sdk"
        },
        "aws_cloudwatch_event_bus": {
          "terraform_type": "aws_cloudwatch_event_bus",
          "factory_function": "resourceCloudwatchEventBus",
          "name": "Event Bus",
          "sdk_type": "sdk"
        },
        "aws_cloudwatch_event_bus_policy": {
          "terraform_type": "aws_cloudwatch_event_bus_policy",
          "factory_function": "resourceCloudwatchEventBusPolicy",
          "name": "Event Bus Policy",
          "sdk_type": "sdk"
        },
        "aws_cloudwatch_event_connection": {
          "terraform_type": "aws_cloudwatch_event_connection",
          "factory_function": "resourceCloudwatchEventConnection",
          "name": "Connection",
          "sdk_type": "sdk"
        },
        "aws_cloudwatch_event_endpoint": {
          "terraform_type": "aws_cloudwatch_event_endpoint",
          "factory_function": "resourceCloudwatchEventEndpoint",
          "name": "Global Endpoint",
          "sdk_type": "sdk"
        },
        "aws_cloudwatch_event_permission": {
          "terraform_type": "aws_cloudwatch_event_permission",
          "factory_function": "resourceCloudwatchEventPermission",
          "name": "Permission",
          "sdk_type": "sdk"
        },
        "aws_cloudwatch_event_rule": {
          "terraform_type": "aws_cloudwatch_event_rule",
          "factory_function": "resourceCloudwatchEventRule",
          "name": "Rule",
          "sdk_type": "sdk"
        },
        "aws_cloudwatch_event_target": {
          "terraform_type": "aws_cloudwatch_event_target",
          "factory_function": "resourceCloudwatchEventTarget",
          "name": "Target",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_cloudwatch_event_bus": {
          "terraform_type": "aws_cloudwatch_event_bus",
          "factory_function": "dataSourceCloudwatchEventBus",
          "name": "Event Bus",
          "sdk_type": "sdk"
        },
        "aws_cloudwatch_event_connection": {
          "terraform_type": "aws_cloudwatch_event_connection",
          "factory_function": "dataSourceCloudwatchEventConnection",
          "name": "",
          "sdk_type": "sdk"
        },
        "aws_cloudwatch_event_source": {
          "terraform_type": "aws_cloudwatch_event_source",
          "factory_function": "dataSourceCloudwatchEventSource",
          "name": "Source",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {
        "aws_cloudwatch_event_buses": {
          "terraform_type": "aws_cloudwatch_event_buses",
          "factory_function": "newCloudwatchEventBusesDataSource",
          "name": "Event Buses",
          "sdk_type": "framework",
          "struct_type": "eventBusesDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "data_source_terraform_types": {
        "eventBusesDataSource": "aws_cloudwatch_event_buses"
      },
      "resource_crud_methods": {
        "aws_cloudwatch_event_api_destination": {
          "create_method": "resourceAPIDestinationCreate",
          "read_method": "resourceAPIDestinationRead",
          "update_method": "resourceAPIDestinationUpdate",
          "delete_method": "resourceAPIDestinationDelete"
        },
        "aws_cloudwatch_event_archive": {
          "create_method": "resourceArchiveCreate",
          "read_method": "resourceArchiveRead",
          "update_method": "resourceArchiveUpdate",
          "delete_method": "resourceArchiveDelete"
        },
        "aws_cloudwatch_event_bus": {
          "create_method": "resourceBusCreate",
          "read_method": "resourceBusRead",
          "update_method": "resourceBusUpdate",
          "delete_method": "resourceBusDelete"
        },
        "aws_cloudwatch_event_bus_policy": {
          "create_method": "resourceBusPolicyPut",
          "read_method": "resourceBusPolicyRead",
          "update_method": "resourceBusPolicyPut",
          "delete_method": "resourceBusPolicyDelete"
        },
        "aws_cloudwatch_event_connection": {
          "create_method": "resourceConnectionCreate",
          "read_method": "resourceConnectionRead",
          "update_method": "resourceConnectionUpdate",
          "delete_method": "resourceConnectionDelete"
        },
        "aws_cloudwatch_event_endpoint": {
          "create_method": "resourceEndpointCreate",
          "read_method": "resourceEndpointRead",
          "update_method": "resourceEndpointUpdate",
          "delete_method": "resourceEndpointDelete"
        },
        "aws_cloudwatch_event_permission": {
          "create_method": "resourcePermissionCreate",
          "read_method": "resourcePermissionRead",
          "update_method": "resourcePermissionUpdate",
          "delete_method": "resourcePermissionDelete"
        },
        "aws_cloudwatch_event_rule": {
          "create_method": "resourceRuleCreate",
          "read_method": "resourceRuleRead",
          "update_method": "resourceRuleUpdate",
          "delete_method": "resourceRuleDelete"
        },
        "aws_cloudwatch_event_target": {
          "create_method": "resourceTargetCreate",
          "read_method": "resourceTargetRead",
          "update_method": "resourceTargetUpdate",
          "delete_method": "resourceTargetDelete"
        }
      },
      "data_source_methods": {
        "aws_cloudwatch_event_bus": {
          "read_method": "dataSourceBusRead"
        },
        "aws_cloudwatch_event_connection": {
          "read_method": "dataSourceConnectionRead"
        },
        "aws_cloudwatch_event_source": {
          "read_method": "dataSourceSourceRead"
        }
      }
    },
    {
      "service_name": "finspace",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/finspace",
      "aws_sdk_resources": {
        "aws_finspace_kx_cluster": {
          "terraform_type": "aws_finspace_kx_cluster",
          "factory_function": "resourceFinspaceKxCluster",
          "name": "Kx Cluster",
          "sdk_type": "sdk"
        },
        "aws_finspace_kx_database": {
          "terraform_type": "aws_finspace_kx_database",
          "factory_function": "resourceFinspaceKxDatabase",
          "name": "Kx Database",
          "sdk_type": "sdk"
        },
        "aws_finspace_kx_dataview": {
          "terraform_type": "aws_finspace_kx_dataview",
          "factory_function": "resourceFinspaceKxDataview",
          "name": "Kx Dataview",
          "sdk_type": "sdk"
        },
        "aws_finspace_kx_environment": {
          "terraform_type": "aws_finspace_kx_environment",
          "factory_function": "resourceFinspaceKxEnvironment",
          "name": "Kx Environment",
          "sdk_type": "sdk"
        },
        "aws_finspace_kx_scaling_group": {
          "terraform_type": "aws_finspace_kx_scaling_group",
          "factory_function": "resourceFinspaceKxScalingGroup",
          "name": "Kx Scaling Group",
          "sdk_type": "sdk"
        },
        "aws_finspace_kx_user": {
          "terraform_type": "aws_finspace_kx_user",
          "factory_function": "resourceFinspaceKxUser",
          "name": "Kx User",
          "sdk_type": "sdk"
        },
        "aws_finspace_kx_volume": {
          "terraform_type": "aws_finspace_kx_volume",
          "factory_function": "resourceFinspaceKxVolume",
          "name": "Kx Volume",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_finspace_kx_cluster": {
          "create_method": "resourceKxClusterCreate",
          "read_method": "resourceKxClusterRead",
          "update_method": "resourceKxClusterUpdate",
          "delete_method": "resourceKxClusterDelete"
        },
        "aws_finspace_kx_database": {
          "create_method": "resourceKxDatabaseCreate",
          "read_method": "resourceKxDatabaseRead",
          "update_method": "resourceKxDatabaseUpdate",
          "delete_method": "resourceKxDatabaseDelete"
        },
        "aws_finspace_kx_dataview": {
          "create_method": "resourceKxDataviewCreate",
          "read_method": "resourceKxDataviewRead",
          "update_method": "resourceKxDataviewUpdate",
          "delete_method": "resourceKxDataviewDelete"
        },
        "aws_finspace_kx_environment": {
          "create_method": "resourceKxEnvironmentCreate",
          "read_method": "resourceKxEnvironmentRead",
          "update_method": "resourceKxEnvironmentUpdate",
          "delete_method": "resourceKxEnvironmentDelete"
        },
        "aws_finspace_kx_scaling_group": {
          "create_method": "resourceKxScalingGroupCreate",
          "read_method": "resourceKxScalingGroupRead",
          "update_method": "resourceKxScalingGroupUpdate",
          "delete_method": "resourceKxScalingGroupDelete"
        },
        "aws_finspace_kx_user": {
          "create_method": "resourceKxUserCreate",
          "read_method": "resourceKxUserRead",
          "update_method": "resourceKxUserUpdate",
          "delete_method": "resourceKxUserDelete"
        },
        "aws_finspace_kx_volume": {
          "create_method": "resourceKxVolumeCreate",
          "read_method": "resourceKxVolumeRead",
          "update_method": "resourceKxVolumeUpdate",
          "delete_method": "resourceKxVolumeDelete"
        }
      }
    },
    {
      "service_name": "firehose",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/firehose",
      "aws_sdk_resources": {
        "aws_kinesis_firehose_delivery_stream": {
          "terraform_type": "aws_kinesis_firehose_delivery_stream",
          "factory_function": "resourceKinesisFirehoseDeliveryStream",
          "name": "Delivery Stream",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_kinesis_firehose_delivery_stream": {
          "terraform_type": "aws_kinesis_firehose_delivery_stream",
          "factory_function": "dataSourceKinesisFirehoseDeliveryStream",
          "name": "Delivery Stream",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_kinesis_firehose_delivery_stream": {
          "create_method": "resourceDeliveryStreamCreate",
          "read_method": "resourceDeliveryStreamRead",
          "update_method": "resourceDeliveryStreamUpdate",
          "delete_method": "resourceDeliveryStreamDelete"
        }
      },
      "data_source_methods": {
        "aws_kinesis_firehose_delivery_stream": {
          "read_method": "dataSourceDeliveryStreamRead"
        }
      }
    },
    {
      "service_name": "fis",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/fis",
      "aws_sdk_resources": {
        "aws_fis_experiment_template": {
          "terraform_type": "aws_fis_experiment_template",
          "factory_function": "resourceFisExperimentTemplate",
          "name": "Experiment Template",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {
        "aws_fis_experiment_templates": {
          "terraform_type": "aws_fis_experiment_templates",
          "factory_function": "newFisExperimentTemplatesDataSource",
          "name": "Experiment Templates",
          "sdk_type": "framework",
          "struct_type": "experimentTemplatesDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "data_source_terraform_types": {
        "experimentTemplatesDataSource": "aws_fis_experiment_templates"
      },
      "resource_crud_methods": {
        "aws_fis_experiment_template": {
          "create_method": "resourceExperimentTemplateCreate",
          "read_method": "resourceExperimentTemplateRead",
          "update_method": "resourceExperimentTemplateUpdate",
          "delete_method": "resourceExperimentTemplateDelete"
        }
      }
    },
    {
      "service_name": "fms",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/fms",
      "aws_sdk_resources": {
        "aws_fms_admin_account": {
          "terraform_type": "aws_fms_admin_account",
          "factory_function": "resourceFmsAdminAccount",
          "name": "Admin Account",
          "sdk_type": "sdk"
        },
        "aws_fms_policy": {
          "terraform_type": "aws_fms_policy",
          "factory_function": "resourceFmsPolicy",
          "name": "Policy",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_fms_resource_set": {
          "terraform_type": "aws_fms_resource_set",
          "factory_function": "newFmsResourceSetResource",
          "name": "Resource Set",
          "sdk_type": "framework",
          "struct_type": "resourceSetResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "resourceSetResource": "aws_fms_resource_set"
      },
      "resource_crud_methods": {
        "aws_fms_admin_account": {
          "create_method": "resourceAdminAccountCreate",
          "read_method": "resourceAdminAccountRead",
          "delete_method": "resourceAdminAccountDelete"
        },
        "aws_fms_policy": {
          "create_method": "resourcePolicyCreate",
          "read_method": "resourcePolicyRead",
          "update_method": "resourcePolicyUpdate",
          "delete_method": "resourcePolicyDelete"
        }
      }
    },
    {
      "service_name": "gamelift",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/gamelift",
      "aws_sdk_resources": {
        "aws_gamelift_alias": {
          "terraform_type": "aws_gamelift_alias",
          "factory_function": "resourceGameliftAlias",
          "name": "Alias",
          "sdk_type": "sdk"
        },
        "aws_gamelift_build": {
          "terraform_type": "aws_gamelift_build",
          "factory_function": "resourceGameliftBuild",
          "name": "Build",
          "sdk_type": "sdk"
        },
        "aws_gamelift_fleet": {
          "terraform_type": "aws_gamelift_fleet",
          "factory_function": "resourceGameliftFleet",
          "name": "Fleet",
          "sdk_type": "sdk"
        },
        "aws_gamelift_game_server_group": {
          "terraform_type": "aws_gamelift_game_server_group",
          "factory_function": "resourceGameliftGameServerGroup",
          "name": "Game Server Group",
          "sdk_type": "sdk"
        },
        "aws_gamelift_game_session_queue": {
          "terraform_type": "aws_gamelift_game_session_queue",
          "factory_function": "resourceGameliftGameSessionQueue",
          "name": "Game Session Queue",
          "sdk_type": "sdk"
        },
        "aws_gamelift_script": {
          "terraform_type": "aws_gamelift_script",
          "factory_function": "resourceGameliftScript",
          "name": "Script",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_gamelift_alias": {
          "create_method": "resourceAliasCreate",
          "read_method": "resourceAliasRead",
          "update_method": "resourceAliasUpdate",
          "delete_method": "resourceAliasDelete"
        },
        "aws_gamelift_build": {
          "create_method": "resourceBuildCreate",
          "read_method": "resourceBuildRead",
          "update_method": "resourceBuildUpdate",
          "delete_method": "resourceBuildDelete"
        },
        "aws_gamelift_fleet": {
          "create_method": "resourceFleetCreate",
          "read_method": "resourceFleetRead",
          "update_method": "resourceFleetUpdate",
          "delete_method": "resourceFleetDelete"
        },
        "aws_gamelift_game_server_group": {
          "create_method": "resourceGameServerGroupCreate",
          "read_method": "resourceGameServerGroupRead",
          "update_method": "resourceGameServerGroupUpdate",
          "delete_method": "resourceGameServerGroupDelete"
        },
        "aws_gamelift_game_session_queue": {
          "create_method": "resourceGameSessionQueueCreate",
          "read_method": "resourceGameSessionQueueRead",
          "update_method": "resourceGameSessionQueueUpdate",
          "delete_method": "resourceGameSessionQueueDelete"
        },
        "aws_gamelift_script": {
          "create_method": "resourceScriptCreate",
          "read_method": "resourceScriptRead",
          "update_method": "resourceScriptUpdate",
          "delete_method": "resourceScriptDelete"
        }
      }
    },
    {
      "service_name": "fsx",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/fsx",
      "aws_sdk_resources": {
        "aws_fsx_backup": {
          "terraform_type": "aws_fsx_backup",
          "factory_function": "resourceFsxBackup",
          "name": "Backup",
          "sdk_type": "sdk"
        },
        "aws_fsx_data_repository_association": {
          "terraform_type": "aws_fsx_data_repository_association",
          "factory_function": "resourceFsxDataRepositoryAssociation",
          "name": "Data Repository Association",
          "sdk_type": "sdk"
        },
        "aws_fsx_file_cache": {
          "terraform_type": "aws_fsx_file_cache",
          "factory_function": "resourceFsxFileCache",
          "name": "File Cache",
          "sdk_type": "sdk"
        },
        "aws_fsx_lustre_file_system": {
          "terraform_type": "aws_fsx_lustre_file_system",
          "factory_function": "resourceFsxLustreFileSystem",
          "name": "Lustre File System",
          "sdk_type": "sdk"
        },
        "aws_fsx_ontap_file_system": {
          "terraform_type": "aws_fsx_ontap_file_system",
          "factory_function": "resourceFsxOntapFileSystem",
          "name": "ONTAP File System",
          "sdk_type": "sdk"
        },
        "aws_fsx_ontap_storage_virtual_machine": {
          "terraform_type": "aws_fsx_ontap_storage_virtual_machine",
          "factory_function": "resourceFsxOntapStorageVirtualMachine",
          "name": "ONTAP Storage Virtual Machine",
          "sdk_type": "sdk"
        },
        "aws_fsx_ontap_volume": {
          "terraform_type": "aws_fsx_ontap_volume",
          "factory_function": "resourceFsxOntapVolume",
          "name": "ONTAP Volume",
          "sdk_type": "sdk"
        },
        "aws_fsx_openzfs_file_system": {
          "terraform_type": "aws_fsx_openzfs_file_system",
          "factory_function": "resourceFsxOpenzfsFileSystem",
          "name": "OpenZFS File System",
          "sdk_type": "sdk"
        },
        "aws_fsx_openzfs_snapshot": {
          "terraform_type": "aws_fsx_openzfs_snapshot",
          "factory_function": "resourceFsxOpenzfsSnapshot",
          "name": "OpenZFS Snapshot",
          "sdk_type": "sdk"
        },
        "aws_fsx_openzfs_volume": {
          "terraform_type": "aws_fsx_openzfs_volume",
          "factory_function": "resourceFsxOpenzfsVolume",
          "name": "OpenZFS Volume",
          "sdk_type": "sdk"
        },
        "aws_fsx_windows_file_system": {
          "terraform_type": "aws_fsx_windows_file_system",
          "factory_function": "resourceFsxWindowsFileSystem",
          "name": "Windows File System",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_fsx_ontap_file_system": {
          "terraform_type": "aws_fsx_ontap_file_system",
          "factory_function": "dataSourceFsxOntapFileSystem",
          "name": "ONTAP File System",
          "sdk_type": "sdk"
        },
        "aws_fsx_ontap_storage_virtual_machine": {
          "terraform_type": "aws_fsx_ontap_storage_virtual_machine",
          "factory_function": "dataSourceFsxOntapStorageVirtualMachine",
          "name": "ONTAP Storage Virtual Machine",
          "sdk_type": "sdk"
        },
        "aws_fsx_ontap_storage_virtual_machines": {
          "terraform_type": "aws_fsx_ontap_storage_virtual_machines",
          "factory_function": "dataSourceFsxOntapStorageVirtualMachines",
          "name": "ONTAP Storage Virtual Machines",
          "sdk_type": "sdk"
        },
        "aws_fsx_openzfs_snapshot": {
          "terraform_type": "aws_fsx_openzfs_snapshot",
          "factory_function": "dataSourceFsxOpenzfsSnapshot",
          "name": "OpenZFS Snapshot",
          "sdk_type": "sdk"
        },
        "aws_fsx_windows_file_system": {
          "terraform_type": "aws_fsx_windows_file_system",
          "factory_function": "dataSourceFsxWindowsFileSystem",
          "name": "Windows File System",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_fsx_s3_access_point_attachment": {
          "terraform_type": "aws_fsx_s3_access_point_attachment",
          "factory_function": "newFsxS3AccessPointAttachmentResource",
          "name": "S3 Access Point Attachment",
          "sdk_type": "framework",
          "struct_type": "s3AccessPointAttachmentResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "s3AccessPointAttachmentResource": "aws_fsx_s3_access_point_attachment"
      },
      "resource_crud_methods": {
        "aws_fsx_backup": {
          "create_method": "resourceBackupCreate",
          "read_method": "resourceBackupRead",
          "update_method": "resourceBackupUpdate",
          "delete_method": "resourceBackupDelete"
        },
        "aws_fsx_data_repository_association": {
          "create_method": "resourceDataRepositoryAssociationCreate",
          "read_method": "resourceDataRepositoryAssociationRead",
          "update_method": "resourceDataRepositoryAssociationUpdate",
          "delete_method": "resourceDataRepositoryAssociationDelete"
        },
        "aws_fsx_file_cache": {
          "create_method": "resourceFileCacheCreate",
          "read_method": "resourceFileCacheRead",
          "update_method": "resourceFileCacheUpdate",
          "delete_method": "resourceFileCacheDelete"
        },
        "aws_fsx_lustre_file_system": {
          "create_method": "resourceLustreFileSystemCreate",
          "read_method": "resourceLustreFileSystemRead",
          "update_method": "resourceLustreFileSystemUpdate",
          "delete_method": "resourceLustreFileSystemDelete"
        },
        "aws_fsx_ontap_file_system": {
          "create_method": "resourceONTAPFileSystemCreate",
          "read_method": "resourceONTAPFileSystemRead",
          "update_method": "resourceONTAPFileSystemUpdate",
          "delete_method": "resourceONTAPFileSystemDelete"
        },
        "aws_fsx_ontap_storage_virtual_machine": {
          "create_method": "resourceONTAPStorageVirtualMachineCreate",
          "read_method": "resourceONTAPStorageVirtualMachineRead",
          "update_method": "resourceONTAPStorageVirtualMachineUpdate",
          "delete_method": "resourceONTAPStorageVirtualMachineDelete"
        },
        "aws_fsx_ontap_volume": {
          "create_method": "resourceONTAPVolumeCreate",
          "read_method": "resourceONTAPVolumeRead",
          "update_method": "resourceONTAPVolumeUpdate",
          "delete_method": "resourceONTAPVolumeDelete"
        },
        "aws_fsx_openzfs_file_system": {
          "create_method": "resourceOpenZFSFileSystemCreate",
          "read_method": "resourceOpenZFSFileSystemRead",
          "update_method": "resourceOpenZFSFileSystemUpdate",
          "delete_method": "resourceOpenZFSFileSystemDelete"
        },
        "aws_fsx_openzfs_snapshot": {
          "create_method": "resourceOpenZFSSnapshotCreate",
          "read_method": "resourceOpenZFSSnapshotRead",
          "update_method": "resourceOpenZFSSnapshotUpdate",
          "delete_method": "resourceOpenZFSSnapshotDelete"
        },
        "aws_fsx_openzfs_volume": {
          "create_method": "resourceOpenZFSVolumeCreate",
          "read_method": "resourceOpenZFSVolumeRead",
          "update_method": "resourceOpenZFSVolumeUpdate",
          "delete_method": "resourceOpenZFSVolumeDelete"
        },
        "aws_fsx_windows_file_system": {
          "create_method": "resourceWindowsFileSystemCreate",
          "read_method": "resourceWindowsFileSystemRead",
          "update_method": "resourceWindowsFileSystemUpdate",
          "delete_method": "resourceWindowsFileSystemDelete"
        }
      },
      "data_source_methods": {
        "aws_fsx_ontap_file_system": {
          "read_method": "dataSourceONTAPFileSystemRead"
        },
        "aws_fsx_ontap_storage_virtual_machine": {
          "read_method": "dataSourceONTAPStorageVirtualMachineRead"
        },
        "aws_fsx_ontap_storage_virtual_machines": {
          "read_method": "dataSourceONTAPStorageVirtualMachinesRead"
        },
        "aws_fsx_openzfs_snapshot": {
          "read_method": "dataSourceOpenZFSSnapshotRead"
        },
        "aws_fsx_windows_file_system": {
          "read_method": "dataSourceWindowsFileSystemRead"
        }
      }
    },
    {
      "service_name": "glacier",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/glacier",
      "aws_sdk_resources": {
        "aws_glacier_vault": {
          "terraform_type": "aws_glacier_vault",
          "factory_function": "resourceGlacierVault",
          "name": "Vault",
          "sdk_type": "sdk"
        },
        "aws_glacier_vault_lock": {
          "terraform_type": "aws_glacier_vault_lock",
          "factory_function": "resourceGlacierVaultLock",
          "name": "Vault Lock",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_glacier_vault": {
          "create_method": "resourceVaultCreate",
          "read_method": "resourceVaultRead",
          "update_method": "resourceVaultUpdate",
          "delete_method": "resourceVaultDelete"
        },
        "aws_glacier_vault_lock": {
          "create_method": "resourceVaultLockCreate",
          "read_method": "resourceVaultLockRead",
          "delete_method": "resourceVaultLockDelete"
        }
      }
    },
    {
      "service_name": "globalaccelerator",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/globalaccelerator",
      "aws_sdk_resources": {
        "aws_globalaccelerator_accelerator": {
          "terraform_type": "aws_globalaccelerator_accelerator",
          "factory_function": "resourceGlobalacceleratorAccelerator",
          "name": "Accelerator",
          "sdk_type": "sdk"
        },
        "aws_globalaccelerator_custom_routing_accelerator": {
          "terraform_type": "aws_globalaccelerator_custom_routing_accelerator",
          "factory_function": "resourceGlobalacceleratorCustomRoutingAccelerator",
          "name": "Custom Routing Accelerator",
          "sdk_type": "sdk"
        },
        "aws_globalaccelerator_custom_routing_endpoint_group": {
          "terraform_type": "aws_globalaccelerator_custom_routing_endpoint_group",
          "factory_function": "resourceGlobalacceleratorCustomRoutingEndpointGroup",
          "name": "Custom Routing Endpoint Group",
          "sdk_type": "sdk"
        },
        "aws_globalaccelerator_custom_routing_listener": {
          "terraform_type": "aws_globalaccelerator_custom_routing_listener",
          "factory_function": "resourceGlobalacceleratorCustomRoutingListener",
          "name": "Custom Routing Listener",
          "sdk_type": "sdk"
        },
        "aws_globalaccelerator_endpoint_group": {
          "terraform_type": "aws_globalaccelerator_endpoint_group",
          "factory_function": "resourceGlobalacceleratorEndpointGroup",
          "name": "Endpoint Group",
          "sdk_type": "sdk"
        },
        "aws_globalaccelerator_listener": {
          "terraform_type": "aws_globalaccelerator_listener",
          "factory_function": "resourceGlobalacceleratorListener",
          "name": "Listener",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_globalaccelerator_custom_routing_accelerator": {
          "terraform_type": "aws_globalaccelerator_custom_routing_accelerator",
          "factory_function": "dataSourceGlobalacceleratorCustomRoutingAccelerator",
          "name": "Custom Routing Accelerator",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_globalaccelerator_cross_account_attachment": {
          "terraform_type": "aws_globalaccelerator_cross_account_attachment",
          "factory_function": "newGlobalacceleratorCrossAccountAttachmentResource",
          "name": "Cross-Account Attachment",
          "sdk_type": "framework",
          "struct_type": "crossAccountAttachmentResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_globalaccelerator_accelerator": {
          "terraform_type": "aws_globalaccelerator_accelerator",
          "factory_function": "newGlobalacceleratorAcceleratorDataSource",
          "name": "Accelerator",
          "sdk_type": "framework",
          "struct_type": "acceleratorDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "crossAccountAttachmentResource": "aws_globalaccelerator_cross_account_attachment"
      },
      "data_source_terraform_types": {
        "acceleratorDataSource": "aws_globalaccelerator_accelerator"
      },
      "resource_crud_methods": {
        "aws_globalaccelerator_accelerator": {
          "create_method": "resourceAcceleratorCreate",
          "read_method": "resourceAcceleratorRead",
          "update_method": "resourceAcceleratorUpdate",
          "delete_method": "resourceAcceleratorDelete"
        },
        "aws_globalaccelerator_custom_routing_accelerator": {
          "create_method": "resourceCustomRoutingAcceleratorCreate",
          "read_method": "resourceCustomRoutingAcceleratorRead",
          "update_method": "resourceCustomRoutingAcceleratorUpdate",
          "delete_method": "resourceCustomRoutingAcceleratorDelete"
        },
        "aws_globalaccelerator_custom_routing_endpoint_group": {
          "create_method": "resourceCustomRoutingEndpointGroupCreate",
          "read_method": "resourceCustomRoutingEndpointGroupRead",
          "delete_method": "resourceCustomRoutingEndpointGroupDelete"
        },
        "aws_globalaccelerator_custom_routing_listener": {
          "create_method": "resourceCustomRoutingListenerCreate",
          "read_method": "resourceCustomRoutingListenerRead",
          "update_method": "resourceCustomRoutingListenerUpdate",
          "delete_method": "resourceCustomRoutingListenerDelete"
        },
        "aws_globalaccelerator_endpoint_group": {
          "create_method": "resourceEndpointGroupCreate",
          "read_method": "resourceEndpointGroupRead",
          "update_method": "resourceEndpointGroupUpdate",
          "delete_method": "resourceEndpointGroupDelete"
        },
        "aws_globalaccelerator_listener": {
          "create_method": "resourceListenerCreate",
          "read_method": "resourceListenerRead",
          "update_method": "resourceListenerUpdate",
          "delete_method": "resourceListenerDelete"
        }
      },
      "data_source_methods": {
        "aws_globalaccelerator_custom_routing_accelerator": {
          "read_method": "dataSourceCustomRoutingAcceleratorRead"
        }
      }
    },
    {
      "service_name": "grafana",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/grafana",
      "aws_sdk_resources": {
        "aws_grafana_license_association": {
          "terraform_type": "aws_grafana_license_association",
          "factory_function": "resourceGrafanaLicenseAssociation",
          "name": "License Association",
          "sdk_type": "sdk"
        },
        "aws_grafana_role_association": {
          "terraform_type": "aws_grafana_role_association",
          "factory_function": "resourceGrafanaRoleAssociation",
          "name": "Workspace Role Association",
          "sdk_type": "sdk"
        },
        "aws_grafana_workspace": {
          "terraform_type": "aws_grafana_workspace",
          "factory_function": "resourceGrafanaWorkspace",
          "name": "Workspace",
          "sdk_type": "sdk"
        },
        "aws_grafana_workspace_api_key": {
          "terraform_type": "aws_grafana_workspace_api_key",
          "factory_function": "resourceGrafanaWorkspaceApiKey",
          "name": "Workspace API Key",
          "sdk_type": "sdk"
        },
        "aws_grafana_workspace_saml_configuration": {
          "terraform_type": "aws_grafana_workspace_saml_configuration",
          "factory_function": "resourceGrafanaWorkspaceSamlConfiguration",
          "name": "Grafana Workspace SAML Configuration",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_grafana_workspace": {
          "terraform_type": "aws_grafana_workspace",
          "factory_function": "dataSourceGrafanaWorkspace",
          "name": "Workspace",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_grafana_workspace_service_account": {
          "terraform_type": "aws_grafana_workspace_service_account",
          "factory_function": "newGrafanaWorkspaceServiceAccountResource",
          "name": "Workspace Service Account",
          "sdk_type": "framework",
          "struct_type": "workspaceServiceAccountResource"
        },
        "aws_grafana_workspace_service_account_token": {
          "terraform_type": "aws_grafana_workspace_service_account_token",
          "factory_function": "newGrafanaWorkspaceServiceAccountTokenResource",
          "name": "Workspace Service Account Token",
          "sdk_type": "framework",
          "struct_type": "workspaceServiceAccountTokenResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "workspaceServiceAccountResource": "aws_grafana_workspace_service_account",
        "workspaceServiceAccountTokenResource": "aws_grafana_workspace_service_account_token"
      },
      "resource_crud_methods": {
        "aws_grafana_license_association": {
          "create_method": "resourceLicenseAssociationCreate",
          "read_method": "resourceLicenseAssociationRead",
          "delete_method": "resourceLicenseAssociationDelete"
        },
        "aws_grafana_role_association": {
          "create_method": "resourceRoleAssociationUpsert",
          "read_method": "resourceRoleAssociationRead",
          "update_method": "resourceRoleAssociationUpsert",
          "delete_method": "resourceRoleAssociationDelete"
        },
        "aws_grafana_workspace": {
          "create_method": "resourceWorkspaceCreate",
          "read_method": "resourceWorkspaceRead",
          "update_method": "resourceWorkspaceUpdate",
          "delete_method": "resourceWorkspaceDelete"
        },
        "aws_grafana_workspace_api_key": {
          "create_method": "resourceWorkspaceAPIKeyCreate",
          "delete_method": "resourceWorkspaceAPIKeyDelete"
        },
        "aws_grafana_workspace_saml_configuration": {
          "create_method": "resourceWorkspaceSAMLConfigurationUpsert",
          "read_method": "resourceWorkspaceSAMLConfigurationRead",
          "update_method": "resourceWorkspaceSAMLConfigurationUpsert"
        }
      },
      "data_source_methods": {
        "aws_grafana_workspace": {
          "read_method": "dataSourceWorkspaceRead"
        }
      }
    },
    {
      "service_name": "glue",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/glue",
      "aws_sdk_resources": {
        "aws_glue_catalog_database": {
          "terraform_type": "aws_glue_catalog_database",
          "factory_function": "resourceGlueCatalogDatabase",
          "name": "Database",
          "sdk_type": "sdk"
        },
        "aws_glue_catalog_table": {
          "terraform_type": "aws_glue_catalog_table",
          "factory_function": "resourceGlueCatalogTable",
          "name": "Catalog Table",
          "sdk_type": "sdk"
        },
        "aws_glue_classifier": {
          "terraform_type": "aws_glue_classifier",
          "factory_function": "resourceGlueClassifier",
          "name": "Classifier",
          "sdk_type": "sdk"
        },
        "aws_glue_connection": {
          "terraform_type": "aws_glue_connection",
          "factory_function": "resourceGlueConnection",
          "name": "Connection",
          "sdk_type": "sdk"
        },
        "aws_glue_crawler": {
          "terraform_type": "aws_glue_crawler",
          "factory_function": "resourceGlueCrawler",
          "name": "Crawler",
          "sdk_type": "sdk"
        },
        "aws_glue_data_catalog_encryption_settings": {
          "terraform_type": "aws_glue_data_catalog_encryption_settings",
          "factory_function": "resourceGlueDataCatalogEncryptionSettings",
          "name": "Data Catalog Encryption Settings",
          "sdk_type": "sdk"
        },
        "aws_glue_data_quality_ruleset": {
          "terraform_type": "aws_glue_data_quality_ruleset",
          "factory_function": "resourceGlueDataQualityRuleset",
          "name": "Data Quality Ruleset",
          "sdk_type": "sdk"
        },
        "aws_glue_dev_endpoint": {
          "terraform_type": "aws_glue_dev_endpoint",
          "factory_function": "resourceGlueDevEndpoint",
          "name": "Dev Endpoint",
          "sdk_type": "sdk"
        },
        "aws_glue_job": {
          "terraform_type": "aws_glue_job",
          "factory_function": "resourceGlueJob",
          "name": "Job",
          "sdk_type": "sdk"
        },
        "aws_glue_ml_transform": {
          "terraform_type": "aws_glue_ml_transform",
          "factory_function": "resourceGlueMlTransform",
          "name": "ML Transform",
          "sdk_type": "sdk"
        },
        "aws_glue_partition": {
          "terraform_type": "aws_glue_partition",
          "factory_function": "resourceGluePartition",
          "name": "Partition",
          "sdk_type": "sdk"
        },
        "aws_glue_partition_index": {
          "terraform_type": "aws_glue_partition_index",
          "factory_function": "resourceGluePartitionIndex",
          "name": "Partition Index",
          "sdk_type": "sdk"
        },
        "aws_glue_registry": {
          "terraform_type": "aws_glue_registry",
          "factory_function": "resourceGlueRegistry",
          "name": "Registry",
          "sdk_type": "sdk"
        },
        "aws_glue_resource_policy": {
          "terraform_type": "aws_glue_resource_policy",
          "factory_function": "resourceGlueResourcePolicy",
          "name": "Resource Policy",
          "sdk_type": "sdk"
        },
        "aws_glue_schema": {
          "terraform_type": "aws_glue_schema",
          "factory_function": "resourceGlueSchema",
          "name": "Schema",
          "sdk_type": "sdk"
        },
        "aws_glue_security_configuration": {
          "terraform_type": "aws_glue_security_configuration",
          "factory_function": "resourceGlueSecurityConfiguration",
          "name": "Security Configuration",
          "sdk_type": "sdk"
        },
        "aws_glue_trigger": {
          "terraform_type": "aws_glue_trigger",
          "factory_function": "resourceGlueTrigger",
          "name": "Trigger",
          "sdk_type": "sdk"
        },
        "aws_glue_user_defined_function": {
          "terraform_type": "aws_glue_user_defined_function",
          "factory_function": "resourceGlueUserDefinedFunction",
          "name": "User Defined Function",
          "sdk_type": "sdk"
        },
        "aws_glue_workflow": {
          "terraform_type": "aws_glue_workflow",
          "factory_function": "resourceGlueWorkflow",
          "name": "Workflow",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_glue_catalog_table": {
          "terraform_type": "aws_glue_catalog_table",
          "factory_function": "dataSourceGlueCatalogTable",
          "name": "Catalog Table",
          "sdk_type": "sdk"
        },
        "aws_glue_connection": {
          "terraform_type": "aws_glue_connection",
          "factory_function": "dataSourceGlueConnection",
          "name": "Connection",
          "sdk_type": "sdk"
        },
        "aws_glue_data_catalog_encryption_settings": {
          "terraform_type": "aws_glue_data_catalog_encryption_settings",
          "factory_function": "dataSourceGlueDataCatalogEncryptionSettings",
          "name": "Data Catalog Encryption Settings",
          "sdk_type": "sdk"
        },
        "aws_glue_script": {
          "terraform_type": "aws_glue_script",
          "factory_function": "dataSourceGlueScript",
          "name": "Script",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_glue_catalog_table_optimizer": {
          "terraform_type": "aws_glue_catalog_table_optimizer",
          "factory_function": "newGlueCatalogTableOptimizerResource",
          "name": "Catalog Table Optimizer",
          "sdk_type": "framework",
          "struct_type": "catalogTableOptimizerResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_glue_registry": {
          "terraform_type": "aws_glue_registry",
          "factory_function": "newGlueRegistryDataSource",
          "name": "Registry",
          "sdk_type": "framework",
          "struct_type": "registryDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "catalogTableOptimizerResource": "aws_glue_catalog_table_optimizer"
      },
      "data_source_terraform_types": {
        "registryDataSource": "aws_glue_registry"
      },
      "resource_crud_methods": {
        "aws_glue_catalog_database": {
          "create_method": "resourceCatalogDatabaseCreate",
          "read_method": "resourceCatalogDatabaseRead",
          "update_method": "resourceCatalogDatabaseUpdate",
          "delete_method": "resourceCatalogDatabaseDelete"
        },
        "aws_glue_catalog_table": {
          "create_method": "resourceCatalogTableCreate",
          "read_method": "resourceCatalogTableRead",
          "update_method": "resourceCatalogTableUpdate",
          "delete_method": "resourceCatalogTableDelete"
        },
        "aws_glue_classifier": {
          "create_method": "resourceClassifierCreate",
          "read_method": "resourceClassifierRead",
          "update_method": "resourceClassifierUpdate",
          "delete_method": "resourceClassifierDelete"
        },
        "aws_glue_connection": {
          "create_method": "resourceConnectionCreate",
          "read_method": "resourceConnectionRead",
          "update_method": "resourceConnectionUpdate",
          "delete_method": "resourceConnectionDelete"
        },
        "aws_glue_crawler": {
          "create_method": "resourceCrawlerCreate",
          "read_method": "resourceCrawlerRead",
          "update_method": "resourceCrawlerUpdate",
          "delete_method": "resourceCrawlerDelete"
        },
        "aws_glue_data_catalog_encryption_settings": {
          "create_method": "resourceDataCatalogEncryptionSettingsPut",
          "read_method": "resourceDataCatalogEncryptionSettingsRead",
          "update_method": "resourceDataCatalogEncryptionSettingsPut",
          "delete_method": "resourceDataCatalogEncryptionSettingsDelete"
        },
        "aws_glue_data_quality_ruleset": {
          "create_method": "resourceDataQualityRulesetCreate",
          "read_method": "resourceDataQualityRulesetRead",
          "update_method": "resourceDataQualityRulesetUpdate",
          "delete_method": "resourceDataQualityRulesetDelete"
        },
        "aws_glue_dev_endpoint": {
          "create_method": "resourceDevEndpointCreate",
          "read_method": "resourceDevEndpointRead",
          "update_method": "resourceDevEndpointUpdate",
          "delete_method": "resourceDevEndpointDelete"
        },
        "aws_glue_job": {
          "create_method": "resourceJobCreate",
          "read_method": "resourceJobRead",
          "update_method": "resourceJobUpdate",
          "delete_method": "resourceJobDelete"
        },
        "aws_glue_ml_transform": {
          "create_method": "resourceMLTransformCreate",
          "read_method": "resourceMLTransformRead",
          "update_method": "resourceMLTransformUpdate",
          "delete_method": "resourceMLTransformDelete"
        },
        "aws_glue_partition": {
          "create_method": "resourcePartitionCreate",
          "read_method": "resourcePartitionRead",
          "update_method": "resourcePartitionUpdate",
          "delete_method": "resourcePartitionDelete"
        },
        "aws_glue_partition_index": {
          "create_method": "resourcePartitionIndexCreate",
          "read_method": "resourcePartitionIndexRead",
          "delete_method": "resourcePartitionIndexDelete"
        },
        "aws_glue_registry": {
          "create_method": "resourceRegistryCreate",
          "read_method": "resourceRegistryRead",
          "update_method": "resourceRegistryUpdate",
          "delete_method": "resourceRegistryDelete"
        },
        "aws_glue_resource_policy": {
          "read_method": "resourceResourcePolicyRead",
          "delete_method": "resourceResourcePolicyDelete"
        },
        "aws_glue_schema": {
          "create_method": "resourceSchemaCreate",
          "read_method": "resourceSchemaRead",
          "update_method": "resourceSchemaUpdate",
          "delete_method": "resourceSchemaDelete"
        },
        "aws_glue_security_configuration": {
          "create_method": "resourceSecurityConfigurationCreate",
          "read_method": "resourceSecurityConfigurationRead",
          "delete_method": "resourceSecurityConfigurationDelete"
        },
        "aws_glue_trigger": {
          "create_method": "resourceTriggerCreate",
          "read_method": "resourceTriggerRead",
          "update_method": "resourceTriggerUpdate",
          "delete_method": "resourceTriggerDelete"
        },
        "aws_glue_user_defined_function": {
          "create_method": "resourceUserDefinedFunctionCreate",
          "read_method": "resourceUserDefinedFunctionRead",
          "update_method": "resourceUserDefinedFunctionUpdate",
          "delete_method": "resourceUserDefinedFunctionDelete"
        },
        "aws_glue_workflow": {
          "create_method": "resourceWorkflowCreate",
          "read_method": "resourceWorkflowRead",
          "update_method": "resourceWorkflowUpdate",
          "delete_method": "resourceWorkflowDelete"
        }
      },
      "data_source_methods": {
        "aws_glue_catalog_table": {
          "read_method": "dataSourceCatalogTableRead"
        },
        "aws_glue_connection": {
          "read_method": "dataSourceConnectionRead"
        },
        "aws_glue_data_catalog_encryption_settings": {
          "read_method": "dataSourceDataCatalogEncryptionSettingsRead"
        },
        "aws_glue_script": {
          "read_method": "dataSourceScriptRead"
        }
      }
    },
    {
      "service_name": "guardduty",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/guardduty",
      "aws_sdk_resources": {
        "aws_guardduty_detector": {
          "terraform_type": "aws_guardduty_detector",
          "factory_function": "resourceGuarddutyDetector",
          "name": "Detector",
          "sdk_type": "sdk"
        },
        "aws_guardduty_detector_feature": {
          "terraform_type": "aws_guardduty_detector_feature",
          "factory_function": "resourceGuarddutyDetectorFeature",
          "name": "Detector Feature",
          "sdk_type": "sdk"
        },
        "aws_guardduty_filter": {
          "terraform_type": "aws_guardduty_filter",
          "factory_function": "resourceGuarddutyFilter",
          "name": "Filter",
          "sdk_type": "sdk"
        },
        "aws_guardduty_invite_accepter": {
          "terraform_type": "aws_guardduty_invite_accepter",
          "factory_function": "resourceGuarddutyInviteAccepter",
          "name": "Invite Accepter",
          "sdk_type": "sdk"
        },
        "aws_guardduty_ipset": {
          "terraform_type": "aws_guardduty_ipset",
          "factory_function": "resourceGuarddutyIpset",
          "name": "IP Set",
          "sdk_type": "sdk"
        },
        "aws_guardduty_member": {
          "terraform_type": "aws_guardduty_member",
          "factory_function": "resourceGuarddutyMember",
          "name": "Member",
          "sdk_type": "sdk"
        },
        "aws_guardduty_organization_admin_account": {
          "terraform_type": "aws_guardduty_organization_admin_account",
          "factory_function": "resourceGuarddutyOrganizationAdminAccount",
          "name": "Organization Admin Account",
          "sdk_type": "sdk"
        },
        "aws_guardduty_organization_configuration": {
          "terraform_type": "aws_guardduty_organization_configuration",
          "factory_function": "resourceGuarddutyOrganizationConfiguration",
          "name": "Organization Configuration",
          "sdk_type": "sdk"
        },
        "aws_guardduty_organization_configuration_feature": {
          "terraform_type": "aws_guardduty_organization_configuration_feature",
          "factory_function": "resourceGuarddutyOrganizationConfigurationFeature",
          "name": "Organization Configuration Feature",
          "sdk_type": "sdk"
        },
        "aws_guardduty_publishing_destination": {
          "terraform_type": "aws_guardduty_publishing_destination",
          "factory_function": "resourceGuarddutyPublishingDestination",
          "name": "Publishing Destination",
          "sdk_type": "sdk"
        },
        "aws_guardduty_threatintelset": {
          "terraform_type": "aws_guardduty_threatintelset",
          "factory_function": "resourceGuarddutyThreatintelset",
          "name": "Threat Intel Set",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_guardduty_detector": {
          "terraform_type": "aws_guardduty_detector",
          "factory_function": "dataSourceGuarddutyDetector",
          "name": "Detector",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_guardduty_malware_protection_plan": {
          "terraform_type": "aws_guardduty_malware_protection_plan",
          "factory_function": "newGuarddutyMalwareProtectionPlanResource",
          "name": "Malware Protection Plan",
          "sdk_type": "framework",
          "struct_type": "malwareProtectionPlanResource"
        },
        "aws_guardduty_member_detector_feature": {
          "terraform_type": "aws_guardduty_member_detector_feature",
          "factory_function": "newGuarddutyMemberDetectorFeatureResource",
          "name": "Member Detector Feature",
          "sdk_type": "framework",
          "struct_type": "memberDetectorFeatureResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_guardduty_finding_ids": {
          "terraform_type": "aws_guardduty_finding_ids",
          "factory_function": "newGuarddutyFindingIdsDataSource",
          "name": "Finding Ids",
          "sdk_type": "framework",
          "struct_type": "findingIDsDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "malwareProtectionPlanResource": "aws_guardduty_malware_protection_plan",
        "memberDetectorFeatureResource": "aws_guardduty_member_detector_feature"
      },
      "data_source_terraform_types": {
        "findingIDsDataSource": "aws_guardduty_finding_ids"
      },
      "resource_crud_methods": {
        "aws_guardduty_detector": {
          "create_method": "resourceDetectorCreate",
          "read_method": "resourceDetectorRead",
          "update_method": "resourceDetectorUpdate",
          "delete_method": "resourceDetectorDelete"
        },
        "aws_guardduty_detector_feature": {
          "create_method": "resourceDetectorFeaturePut",
          "read_method": "resourceDetectorFeatureRead",
          "update_method": "resourceDetectorFeaturePut"
        },
        "aws_guardduty_filter": {
          "create_method": "resourceFilterCreate",
          "read_method": "resourceFilterRead",
          "update_method": "resourceFilterUpdate",
          "delete_method": "resourceFilterDelete"
        },
        "aws_guardduty_invite_accepter": {
          "create_method": "resourceInviteAccepterCreate",
          "read_method": "resourceInviteAccepterRead",
          "delete_method": "resourceInviteAccepterDelete"
        },
        "aws_guardduty_ipset": {
          "create_method": "resourceIPSetCreate",
          "read_method": "resourceIPSetRead",
          "update_method": "resourceIPSetUpdate",
          "delete_method": "resourceIPSetDelete"
        },
        "aws_guardduty_member": {
          "create_method": "resourceMemberCreate",
          "read_method": "resourceMemberRead",
          "update_method": "resourceMemberUpdate",
          "delete_method": "resourceMemberDelete"
        },
        "aws_guardduty_organization_admin_account": {
          "create_method": "resourceOrganizationAdminAccountCreate",
          "read_method": "resourceOrganizationAdminAccountRead",
          "delete_method": "resourceOrganizationAdminAccountDelete"
        },
        "aws_guardduty_organization_configuration": {
          "create_method": "resourceOrganizationConfigurationPut",
          "read_method": "resourceOrganizationConfigurationRead",
          "update_method": "resourceOrganizationConfigurationPut"
        },
        "aws_guardduty_organization_configuration_feature": {
          "create_method": "resourceOrganizationConfigurationFeaturePut",
          "read_method": "resourceOrganizationConfigurationFeatureRead",
          "update_method": "resourceOrganizationConfigurationFeaturePut"
        },
        "aws_guardduty_publishing_destination": {
          "create_method": "resourcePublishingDestinationCreate",
          "read_method": "resourcePublishingDestinationRead",
          "update_method": "resourcePublishingDestinationUpdate",
          "delete_method": "resourcePublishingDestinationDelete"
        },
        "aws_guardduty_threatintelset": {
          "create_method": "resourceThreatIntelSetCreate",
          "read_method": "resourceThreatIntelSetRead",
          "update_method": "resourceThreatIntelSetUpdate",
          "delete_method": "resourceThreatIntelSetDelete"
        }
      },
      "data_source_methods": {
        "aws_guardduty_detector": {
          "read_method": "dataSourceDetectorRead"
        }
      }
    },
    {
      "service_name": "identitystore",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/identitystore",
      "aws_sdk_resources": {
        "aws_identitystore_group": {
          "terraform_type": "aws_identitystore_group",
          "factory_function": "resourceIdentitystoreGroup",
          "name": "Group",
          "sdk_type": "sdk"
        },
        "aws_identitystore_group_membership": {
          "terraform_type": "aws_identitystore_group_membership",
          "factory_function": "resourceIdentitystoreGroupMembership",
          "name": "Group Membership",
          "sdk_type": "sdk"
        },
        "aws_identitystore_user": {
          "terraform_type": "aws_identitystore_user",
          "factory_function": "resourceIdentitystoreUser",
          "name": "User",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_identitystore_group": {
          "terraform_type": "aws_identitystore_group",
          "factory_function": "dataSourceIdentitystoreGroup",
          "name": "Group",
          "sdk_type": "sdk"
        },
        "aws_identitystore_user": {
          "terraform_type": "aws_identitystore_user",
          "factory_function": "dataSourceIdentitystoreUser",
          "name": "User",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {
        "aws_identitystore_group_memberships": {
          "terraform_type": "aws_identitystore_group_memberships",
          "factory_function": "newIdentitystoreGroupMembershipsDataSource",
          "name": "Group Memberships",
          "sdk_type": "framework",
          "struct_type": "groupMembershipsDataSource"
        },
        "aws_identitystore_groups": {
          "terraform_type": "aws_identitystore_groups",
          "factory_function": "newIdentitystoreGroupsDataSource",
          "name": "Groups",
          "sdk_type": "framework",
          "struct_type": "groupsDataSource"
        },
        "aws_identitystore_users": {
          "terraform_type": "aws_identitystore_users",
          "factory_function": "newIdentitystoreUsersDataSource",
          "name": "Users",
          "sdk_type": "framework",
          "struct_type": "usersDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "data_source_terraform_types": {
        "groupMembershipsDataSource": "aws_identitystore_group_memberships",
        "groupsDataSource": "aws_identitystore_groups",
        "usersDataSource": "aws_identitystore_users"
      },
      "resource_crud_methods": {
        "aws_identitystore_group": {
          "create_method": "resourceGroupCreate",
          "read_method": "resourceGroupRead",
          "update_method": "resourceGroupUpdate",
          "delete_method": "resourceGroupDelete"
        },
        "aws_identitystore_group_membership": {
          "create_method": "resourceGroupMembershipCreate",
          "read_method": "resourceGroupMembershipRead",
          "delete_method": "resourceGroupMembershipDelete"
        },
        "aws_identitystore_user": {
          "create_method": "resourceUserCreate",
          "read_method": "resourceUserRead",
          "update_method": "resourceUserUpdate",
          "delete_method": "resourceUserDelete"
        }
      },
      "data_source_methods": {
        "aws_identitystore_group": {
          "read_method": "dataSourceGroupRead"
        },
        "aws_identitystore_user": {
          "read_method": "dataSourceUserRead"
        }
      }
    },
    {
      "service_name": "iam",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/iam",
      "aws_sdk_resources": {
        "aws_iam_access_key": {
          "terraform_type": "aws_iam_access_key",
          "factory_function": "resourceIamAccessKey",
          "name": "Access Key",
          "sdk_type": "sdk"
        },
        "aws_iam_account_alias": {
          "terraform_type": "aws_iam_account_alias",
          "factory_function": "resourceIamAccountAlias",
          "name": "Account Alias",
          "sdk_type": "sdk"
        },
        "aws_iam_account_password_policy": {
          "terraform_type": "aws_iam_account_password_policy",
          "factory_function": "resourceIamAccountPasswordPolicy",
          "name": "Account Password Policy",
          "sdk_type": "sdk"
        },
        "aws_iam_group": {
          "terraform_type": "aws_iam_group",
          "factory_function": "resourceIamGroup",
          "name": "Group",
          "sdk_type": "sdk"
        },
        "aws_iam_group_membership": {
          "terraform_type": "aws_iam_group_membership",
          "factory_function": "resourceIamGroupMembership",
          "name": "Group Membership",
          "sdk_type": "sdk"
        },
        "aws_iam_group_policy": {
          "terraform_type": "aws_iam_group_policy",
          "factory_function": "resourceIamGroupPolicy",
          "name": "Group Policy",
          "sdk_type": "sdk"
        },
        "aws_iam_group_policy_attachment": {
          "terraform_type": "aws_iam_group_policy_attachment",
          "factory_function": "resourceIamGroupPolicyAttachment",
          "name": "Group Policy Attachment",
          "sdk_type": "sdk"
        },
        "aws_iam_instance_profile": {
          "terraform_type": "aws_iam_instance_profile",
          "factory_function": "resourceIamInstanceProfile",
          "name": "Instance Profile",
          "sdk_type": "sdk"
        },
        "aws_iam_openid_connect_provider": {
          "terraform_type": "aws_iam_openid_connect_provider",
          "factory_function": "resourceIamOpenidConnectProvider",
          "name": "OIDC Provider",
          "sdk_type": "sdk"
        },
        "aws_iam_policy": {
          "terraform_type": "aws_iam_policy",
          "factory_function": "resourceIamPolicy",
          "name": "Policy",
          "sdk_type": "sdk"
        },
        "aws_iam_policy_attachment": {
          "terraform_type": "aws_iam_policy_attachment",
          "factory_function": "resourceIamPolicyAttachment",
          "name": "Policy Attachment",
          "sdk_type": "sdk"
        },
        "aws_iam_role": {
          "terraform_type": "aws_iam_role",
          "factory_function": "resourceIamRole",
          "name": "Role",
          "sdk_type": "sdk"
        },
        "aws_iam_role_policy": {
          "terraform_type": "aws_iam_role_policy",
          "factory_function": "resourceIamRolePolicy",
          "name": "Role Policy",
          "sdk_type": "sdk"
        },
        "aws_iam_role_policy_attachment": {
          "terraform_type": "aws_iam_role_policy_attachment",
          "factory_function": "resourceIamRolePolicyAttachment",
          "name": "Role Policy Attachment",
          "sdk_type": "sdk"
        },
        "aws_iam_saml_provider": {
          "terraform_type": "aws_iam_saml_provider",
          "factory_function": "resourceIamSamlProvider",
          "name": "SAML Provider",
          "sdk_type": "sdk"
        },
        "aws_iam_security_token_service_preferences": {
          "terraform_type": "aws_iam_security_token_service_preferences",
          "factory_function": "resourceIamSecurityTokenServicePreferences",
          "name": "Security Token Service Preferences",
          "sdk_type": "sdk"
        },
        "aws_iam_server_certificate": {
          "terraform_type": "aws_iam_server_certificate",
          "factory_function": "resourceIamServerCertificate",
          "name": "Server Certificate",
          "sdk_type": "sdk"
        },
        "aws_iam_service_linked_role": {
          "terraform_type": "aws_iam_service_linked_role",
          "factory_function": "resourceIamServiceLinkedRole",
          "name": "Service Linked Role",
          "sdk_type": "sdk"
        },
        "aws_iam_service_specific_credential": {
          "terraform_type": "aws_iam_service_specific_credential",
          "factory_function": "resourceIamServiceSpecificCredential",
          "name": "Service Specific Credential",
          "sdk_type": "sdk"
        },
        "aws_iam_signing_certificate": {
          "terraform_type": "aws_iam_signing_certificate",
          "factory_function": "resourceIamSigningCertificate",
          "name": "Signing Certificate",
          "sdk_type": "sdk"
        },
        "aws_iam_user": {
          "terraform_type": "aws_iam_user",
          "factory_function": "resourceIamUser",
          "name": "User",
          "sdk_type": "sdk"
        },
        "aws_iam_user_group_membership": {
          "terraform_type": "aws_iam_user_group_membership",
          "factory_function": "resourceIamUserGroupMembership",
          "name": "User Group Membership",
          "sdk_type": "sdk"
        },
        "aws_iam_user_login_profile": {
          "terraform_type": "aws_iam_user_login_profile",
          "factory_function": "resourceIamUserLoginProfile",
          "name": "User Login Profile",
          "sdk_type": "sdk"
        },
        "aws_iam_user_policy": {
          "terraform_type": "aws_iam_user_policy",
          "factory_function": "resourceIamUserPolicy",
          "name": "User Policy",
          "sdk_type": "sdk"
        },
        "aws_iam_user_policy_attachment": {
          "terraform_type": "aws_iam_user_policy_attachment",
          "factory_function": "resourceIamUserPolicyAttachment",
          "name": "User Policy Attachment",
          "sdk_type": "sdk"
        },
        "aws_iam_user_ssh_key": {
          "terraform_type": "aws_iam_user_ssh_key",
          "factory_function": "resourceIamUserSshKey",
          "name": "User SSH Key",
          "sdk_type": "sdk"
        },
        "aws_iam_virtual_mfa_device": {
          "terraform_type": "aws_iam_virtual_mfa_device",
          "factory_function": "resourceIamVirtualMfaDevice",
          "name": "Virtual MFA Device",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_iam_access_keys": {
          "terraform_type": "aws_iam_access_keys",
          "factory_function": "dataSourceIamAccessKeys",
          "name": "Access Keys",
          "sdk_type": "sdk"
        },
        "aws_iam_account_alias": {
          "terraform_type": "aws_iam_account_alias",
          "factory_function": "dataSourceIamAccountAlias",
          "name": "Account Alias",
          "sdk_type": "sdk"
        },
        "aws_iam_group": {
          "terraform_type": "aws_iam_group",
          "factory_function": "dataSourceIamGroup",
          "name": "Group",
          "sdk_type": "sdk"
        },
        "aws_iam_instance_profile": {
          "terraform_type": "aws_iam_instance_profile",
          "factory_function": "dataSourceIamInstanceProfile",
          "name": "Instance Profile",
          "sdk_type": "sdk"
        },
        "aws_iam_instance_profiles": {
          "terraform_type": "aws_iam_instance_profiles",
          "factory_function": "dataSourceIamInstanceProfiles",
          "name": "Instance Profiles",
          "sdk_type": "sdk"
        },
        "aws_iam_openid_connect_provider": {
          "terraform_type": "aws_iam_openid_connect_provider",
          "factory_function": "dataSourceIamOpenidConnectProvider",
          "name": "OIDC Provider",
          "sdk_type": "sdk"
        },
        "aws_iam_policy": {
          "terraform_type": "aws_iam_policy",
          "factory_function": "dataSourceIamPolicy",
          "name": "Policy",
          "sdk_type": "sdk"
        },
        "aws_iam_policy_document": {
          "terraform_type": "aws_iam_policy_document",
          "factory_function": "dataSourceIamPolicyDocument",
          "name": "Policy Document",
          "sdk_type": "sdk"
        },
        "aws_iam_principal_policy_simulation": {
          "terraform_type": "aws_iam_principal_policy_simulation",
          "factory_function": "dataSourceIamPrincipalPolicySimulation",
          "name": "Principal Policy Simulation",
          "sdk_type": "sdk"
        },
        "aws_iam_role": {
          "terraform_type": "aws_iam_role",
          "factory_function": "dataSourceIamRole",
          "name": "Role",
          "sdk_type": "sdk"
        },
        "aws_iam_roles": {
          "terraform_type": "aws_iam_roles",
          "factory_function": "dataSourceIamRoles",
          "name": "Roles",
          "sdk_type": "sdk"
        },
        "aws_iam_saml_provider": {
          "terraform_type": "aws_iam_saml_provider",
          "factory_function": "dataSourceIamSamlProvider",
          "name": "SAML Provider",
          "sdk_type": "sdk"
        },
        "aws_iam_server_certificate": {
          "terraform_type": "aws_iam_server_certificate",
          "factory_function": "dataSourceIamServerCertificate",
          "name": "Server Certificate",
          "sdk_type": "sdk"
        },
        "aws_iam_session_context": {
          "terraform_type": "aws_iam_session_context",
          "factory_function": "dataSourceIamSessionContext",
          "name": "Session Context",
          "sdk_type": "sdk"
        },
        "aws_iam_user": {
          "terraform_type": "aws_iam_user",
          "factory_function": "dataSourceIamUser",
          "name": "User",
          "sdk_type": "sdk"
        },
        "aws_iam_user_ssh_key": {
          "terraform_type": "aws_iam_user_ssh_key",
          "factory_function": "dataSourceIamUserSshKey",
          "name": "User SSH Key",
          "sdk_type": "sdk"
        },
        "aws_iam_users": {
          "terraform_type": "aws_iam_users",
          "factory_function": "dataSourceIamUsers",
          "name": "Users",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_iam_group_policies_exclusive": {
          "terraform_type": "aws_iam_group_policies_exclusive",
          "factory_function": "newIamGroupPoliciesExclusiveResource",
          "name": "Group Policies Exclusive",
          "sdk_type": "framework",
          "struct_type": "groupPoliciesExclusiveResource"
        },
        "aws_iam_group_policy_attachments_exclusive": {
          "terraform_type": "aws_iam_group_policy_attachments_exclusive",
          "factory_function": "newIamGroupPolicyAttachmentsExclusiveResource",
          "name": "Group Policy Attachments Exclusive",
          "sdk_type": "framework",
          "struct_type": "groupPolicyAttachmentsExclusiveResource"
        },
        "aws_iam_organizations_features": {
          "terraform_type": "aws_iam_organizations_features",
          "factory_function": "newIamOrganizationsFeaturesResource",
          "name": "Organizations Features",
          "sdk_type": "framework",
          "struct_type": "organizationsFeaturesResource"
        },
        "aws_iam_role_policies_exclusive": {
          "terraform_type": "aws_iam_role_policies_exclusive",
          "factory_function": "newIamRolePoliciesExclusiveResource",
          "name": "Role Policies Exclusive",
          "sdk_type": "framework",
          "struct_type": "rolePoliciesExclusiveResource"
        },
        "aws_iam_role_policy_attachments_exclusive": {
          "terraform_type": "aws_iam_role_policy_attachments_exclusive",
          "factory_function": "newIamRolePolicyAttachmentsExclusiveResource",
          "name": "Role Policy Attachments Exclusive",
          "sdk_type": "framework",
          "struct_type": "rolePolicyAttachmentsExclusiveResource"
        },
        "aws_iam_user_policies_exclusive": {
          "terraform_type": "aws_iam_user_policies_exclusive",
          "factory_function": "newIamUserPoliciesExclusiveResource",
          "name": "User Policies Exclusive",
          "sdk_type": "framework",
          "struct_type": "userPoliciesExclusiveResource"
        },
        "aws_iam_user_policy_attachments_exclusive": {
          "terraform_type": "aws_iam_user_policy_attachments_exclusive",
          "factory_function": "newIamUserPolicyAttachmentsExclusiveResource",
          "name": "User Policy Attachments Exclusive",
          "sdk_type": "framework",
          "struct_type": "userPolicyAttachmentsExclusiveResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "groupPoliciesExclusiveResource": "aws_iam_group_policies_exclusive",
        "groupPolicyAttachmentsExclusiveResource": "aws_iam_group_policy_attachments_exclusive",
        "organizationsFeaturesResource": "aws_iam_organizations_features",
        "rolePoliciesExclusiveResource": "aws_iam_role_policies_exclusive",
        "rolePolicyAttachmentsExclusiveResource": "aws_iam_role_policy_attachments_exclusive",
        "userPoliciesExclusiveResource": "aws_iam_user_policies_exclusive",
        "userPolicyAttachmentsExclusiveResource": "aws_iam_user_policy_attachments_exclusive"
      },
      "resource_crud_methods": {
        "aws_iam_access_key": {
          "create_method": "resourceAccessKeyCreate",
          "read_method": "resourceAccessKeyRead",
          "update_method": "resourceAccessKeyUpdate",
          "delete_method": "resourceAccessKeyDelete"
        },
        "aws_iam_account_alias": {
          "create_method": "resourceAccountAliasCreate",
          "read_method": "resourceAccountAliasRead",
          "delete_method": "resourceAccountAliasDelete"
        },
        "aws_iam_account_password_policy": {
          "create_method": "resourceAccountPasswordPolicyUpdate",
          "read_method": "resourceAccountPasswordPolicyRead",
          "update_method": "resourceAccountPasswordPolicyUpdate",
          "delete_method": "resourceAccountPasswordPolicyDelete"
        },
        "aws_iam_group": {
          "create_method": "resourceGroupCreate",
          "read_method": "resourceGroupRead",
          "update_method": "resourceGroupUpdate",
          "delete_method": "resourceGroupDelete"
        },
        "aws_iam_group_membership": {
          "create_method": "resourceGroupMembershipCreate",
          "read_method": "resourceGroupMembershipRead",
          "update_method": "resourceGroupMembershipUpdate",
          "delete_method": "resourceGroupMembershipDelete"
        },
        "aws_iam_group_policy": {
          "create_method": "resourceGroupPolicyPut",
          "read_method": "resourceGroupPolicyRead",
          "update_method": "resourceGroupPolicyPut",
          "delete_method": "resourceGroupPolicyDelete"
        },
        "aws_iam_group_policy_attachment": {
          "create_method": "resourceGroupPolicyAttachmentCreate",
          "read_method": "resourceGroupPolicyAttachmentRead",
          "delete_method": "resourceGroupPolicyAttachmentDelete"
        },
        "aws_iam_instance_profile": {
          "create_method": "resourceInstanceProfileCreate",
          "read_method": "resourceInstanceProfileRead",
          "update_method": "resourceInstanceProfileUpdate",
          "delete_method": "resourceInstanceProfileDelete"
        },
        "aws_iam_openid_connect_provider": {
          "create_method": "resourceOpenIDConnectProviderCreate",
          "read_method": "resourceOpenIDConnectProviderRead",
          "update_method": "resourceOpenIDConnectProviderUpdate",
          "delete_method": "resourceOpenIDConnectProviderDelete"
        },
        "aws_iam_policy": {
          "create_method": "resourcePolicyCreate",
          "read_method": "resourcePolicyRead",
          "update_method": "resourcePolicyUpdate",
          "delete_method": "resourcePolicyDelete"
        },
        "aws_iam_policy_attachment": {
          "create_method": "resourcePolicyAttachmentCreate",
          "read_method": "resourcePolicyAttachmentRead",
          "update_method": "resourcePolicyAttachmentUpdate",
          "delete_method": "resourcePolicyAttachmentDelete"
        },
        "aws_iam_role": {
          "create_method": "resourceRoleCreate",
          "read_method": "resourceRoleRead",
          "update_method": "resourceRoleUpdate",
          "delete_method": "resourceRoleDelete"
        },
        "aws_iam_role_policy": {
          "create_method": "resourceRolePolicyPut",
          "read_method": "resourceRolePolicyRead",
          "update_method": "resourceRolePolicyPut",
          "delete_method": "resourceRolePolicyDelete"
        },
        "aws_iam_role_policy_attachment": {
          "create_method": "resourceRolePolicyAttachmentCreate",
          "read_method": "resourceRolePolicyAttachmentRead",
          "delete_method": "resourceRolePolicyAttachmentDelete"
        },
        "aws_iam_saml_provider": {
          "create_method": "resourceSAMLProviderCreate",
          "read_method": "resourceSAMLProviderRead",
          "update_method": "resourceSAMLProviderUpdate",
          "delete_method": "resourceSAMLProviderDelete"
        },
        "aws_iam_security_token_service_preferences": {
          "create_method": "resourceSecurityTokenServicePreferencesUpsert",
          "read_method": "resourceSecurityTokenServicePreferencesRead",
          "update_method": "resourceSecurityTokenServicePreferencesUpsert"
        },
        "aws_iam_server_certificate": {
          "create_method": "resourceServerCertificateCreate",
          "read_method": "resourceServerCertificateRead",
          "update_method": "resourceServerCertificateUpdate",
          "delete_method": "resourceServerCertificateDelete"
        },
        "aws_iam_service_linked_role": {
          "create_method": "resourceServiceLinkedRoleCreate",
          "read_method": "resourceServiceLinkedRoleRead",
          "update_method": "resourceServiceLinkedRoleUpdate",
          "delete_method": "resourceServiceLinkedRoleDelete"
        },
        "aws_iam_service_specific_credential": {
          "create_method": "resourceServiceSpecificCredentialCreate",
          "read_method": "resourceServiceSpecificCredentialRead",
          "update_method": "resourceServiceSpecificCredentialUpdate",
          "delete_method": "resourceServiceSpecificCredentialDelete"
        },
        "aws_iam_signing_certificate": {
          "create_method": "resourceSigningCertificateCreate",
          "read_method": "resourceSigningCertificateRead",
          "update_method": "resourceSigningCertificateUpdate",
          "delete_method": "resourceSigningCertificateDelete"
        },
        "aws_iam_user": {
          "create_method": "resourceUserCreate",
          "read_method": "resourceUserRead",
          "update_method": "resourceUserUpdate",
          "delete_method": "resourceUserDelete"
        },
        "aws_iam_user_group_membership": {
          "create_method": "resourceUserGroupMembershipCreate",
          "read_method": "resourceUserGroupMembershipRead",
          "update_method": "resourceUserGroupMembershipUpdate",
          "delete_method": "resourceUserGroupMembershipDelete"
        },
        "aws_iam_user_login_profile": {
          "create_method": "resourceUserLoginProfileCreate",
          "read_method": "resourceUserLoginProfileRead",
          "delete_method": "resourceUserLoginProfileDelete"
        },
        "aws_iam_user_policy": {
          "create_method": "resourceUserPolicyPut",
          "read_method": "resourceUserPolicyRead",
          "update_method": "resourceUserPolicyPut",
          "delete_method": "resourceUserPolicyDelete"
        },
        "aws_iam_user_policy_attachment": {
          "create_method": "resourceUserPolicyAttachmentCreate",
          "read_method": "resourceUserPolicyAttachmentRead",
          "delete_method": "resourceUserPolicyAttachmentDelete"
        },
        "aws_iam_user_ssh_key": {
          "create_method": "resourceUserSSHKeyCreate",
          "read_method": "resourceUserSSHKeyRead",
          "update_method": "resourceUserSSHKeyUpdate",
          "delete_method": "resourceUserSSHKeyDelete"
        },
        "aws_iam_virtual_mfa_device": {
          "create_method": "resourceVirtualMFADeviceCreate",
          "read_method": "resourceVirtualMFADeviceRead",
          "update_method": "resourceVirtualMFADeviceUpdate",
          "delete_method": "resourceVirtualMFADeviceDelete"
        }
      },
      "data_source_methods": {
        "aws_iam_access_keys": {
          "read_method": "dataSourceAccessKeysRead"
        },
        "aws_iam_account_alias": {
          "read_method": "dataSourceAccountAliasRead"
        },
        "aws_iam_group": {
          "read_method": "dataSourceGroupRead"
        },
        "aws_iam_instance_profile": {
          "read_method": "dataSourceInstanceProfileRead"
        },
        "aws_iam_instance_profiles": {
          "read_method": "dataSourceInstanceProfilesRead"
        },
        "aws_iam_openid_connect_provider": {
          "read_method": "dataSourceOpenIDConnectProviderRead"
        },
        "aws_iam_policy": {
          "read_method": "dataSourcePolicyRead"
        },
        "aws_iam_policy_document": {
          "read_method": "dataSourcePolicyDocumentRead"
        },
        "aws_iam_principal_policy_simulation": {
          "read_method": "dataSourcePrincipalPolicySimulationRead"
        },
        "aws_iam_role": {
          "read_method": "dataSourceRoleRead"
        },
        "aws_iam_roles": {
          "read_method": "dataSourceRolesRead"
        },
        "aws_iam_saml_provider": {
          "read_method": "dataSourceSAMLProviderRead"
        },
        "aws_iam_server_certificate": {
          "read_method": "dataSourceServerCertificateRead"
        },
        "aws_iam_session_context": {
          "read_method": "dataSourceSessionContextRead"
        },
        "aws_iam_user": {
          "read_method": "dataSourceUserRead"
        },
        "aws_iam_user_ssh_key": {
          "read_method": "dataSourceUserSSHKeyRead"
        },
        "aws_iam_users": {
          "read_method": "dataSourceUsersRead"
        }
      }
    },
    {
      "service_name": "inspector",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/inspector",
      "aws_sdk_resources": {
        "aws_inspector_assessment_target": {
          "terraform_type": "aws_inspector_assessment_target",
          "factory_function": "resourceInspectorAssessmentTarget",
          "name": "Assessment Target",
          "sdk_type": "sdk"
        },
        "aws_inspector_assessment_template": {
          "terraform_type": "aws_inspector_assessment_template",
          "factory_function": "resourceInspectorAssessmentTemplate",
          "name": "Assessment Template",
          "sdk_type": "sdk"
        },
        "aws_inspector_resource_group": {
          "terraform_type": "aws_inspector_resource_group",
          "factory_function": "resourceInspectorResourceGroup",
          "name": "Resource Group",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_inspector_rules_packages": {
          "terraform_type": "aws_inspector_rules_packages",
          "factory_function": "dataSourceInspectorRulesPackages",
          "name": "Rules Packages",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_inspector_assessment_target": {
          "create_method": "resourceAssessmentTargetCreate",
          "read_method": "resourceAssessmentTargetRead",
          "update_method": "resourceAssessmentTargetUpdate",
          "delete_method": "resourceAssessmentTargetDelete"
        },
        "aws_inspector_assessment_template": {
          "create_method": "resourceAssessmentTemplateCreate",
          "read_method": "resourceAssessmentTemplateRead",
          "update_method": "resourceAssessmentTemplateUpdate",
          "delete_method": "resourceAssessmentTemplateDelete"
        },
        "aws_inspector_resource_group": {
          "create_method": "resourceResourceGroupCreate",
          "read_method": "resourceResourceGroupRead",
          "delete_method": "resourceResourceGroupDelete"
        }
      },
      "data_source_methods": {
        "aws_inspector_rules_packages": {
          "read_method": "dataSourceRulesPackagesRead"
        }
      }
    },
    {
      "service_name": "inspector2",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/inspector2",
      "aws_sdk_resources": {
        "aws_inspector2_delegated_admin_account": {
          "terraform_type": "aws_inspector2_delegated_admin_account",
          "factory_function": "resourceInspector2DelegatedAdminAccount",
          "name": "Delegated Admin Account",
          "sdk_type": "sdk"
        },
        "aws_inspector2_enabler": {
          "terraform_type": "aws_inspector2_enabler",
          "factory_function": "resourceInspector2Enabler",
          "name": "Enabler",
          "sdk_type": "sdk"
        },
        "aws_inspector2_member_association": {
          "terraform_type": "aws_inspector2_member_association",
          "factory_function": "resourceInspector2MemberAssociation",
          "name": "Member Association",
          "sdk_type": "sdk"
        },
        "aws_inspector2_organization_configuration": {
          "terraform_type": "aws_inspector2_organization_configuration",
          "factory_function": "resourceInspector2OrganizationConfiguration",
          "name": "Organization Configuration",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_inspector2_filter": {
          "terraform_type": "aws_inspector2_filter",
          "factory_function": "newInspector2FilterResource",
          "name": "Filter",
          "sdk_type": "framework",
          "struct_type": "filterResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "filterResource": "aws_inspector2_filter"
      },
      "resource_crud_methods": {
        "aws_inspector2_delegated_admin_account": {
          "create_method": "resourceDelegatedAdminAccountCreate",
          "read_method": "resourceDelegatedAdminAccountRead",
          "delete_method": "resourceDelegatedAdminAccountDelete"
        },
        "aws_inspector2_enabler": {
          "create_method": "resourceEnablerCreate",
          "read_method": "resourceEnablerRead",
          "update_method": "resourceEnablerUpdate",
          "delete_method": "resourceEnablerDelete"
        },
        "aws_inspector2_member_association": {
          "create_method": "resourceMemberAssociationCreate",
          "read_method": "resourceMemberAssociationRead",
          "delete_method": "resourceMemberAssociationDelete"
        },
        "aws_inspector2_organization_configuration": {
          "create_method": "resourceOrganizationConfigurationCreate",
          "read_method": "resourceOrganizationConfigurationRead",
          "update_method": "resourceOrganizationConfigurationUpdate",
          "delete_method": "resourceOrganizationConfigurationDelete"
        }
      }
    },
    {
      "service_name": "imagebuilder",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/imagebuilder",
      "aws_sdk_resources": {
        "aws_imagebuilder_component": {
          "terraform_type": "aws_imagebuilder_component",
          "factory_function": "resourceImagebuilderComponent",
          "name": "Component",
          "sdk_type": "sdk"
        },
        "aws_imagebuilder_container_recipe": {
          "terraform_type": "aws_imagebuilder_container_recipe",
          "factory_function": "resourceImagebuilderContainerRecipe",
          "name": "Container Recipe",
          "sdk_type": "sdk"
        },
        "aws_imagebuilder_distribution_configuration": {
          "terraform_type": "aws_imagebuilder_distribution_configuration",
          "factory_function": "resourceImagebuilderDistributionConfiguration",
          "name": "Distribution Configuration",
          "sdk_type": "sdk"
        },
        "aws_imagebuilder_image": {
          "terraform_type": "aws_imagebuilder_image",
          "factory_function": "resourceImagebuilderImage",
          "name": "Image",
          "sdk_type": "sdk"
        },
        "aws_imagebuilder_image_pipeline": {
          "terraform_type": "aws_imagebuilder_image_pipeline",
          "factory_function": "resourceImagebuilderImagePipeline",
          "name": "Image Pipeline",
          "sdk_type": "sdk"
        },
        "aws_imagebuilder_image_recipe": {
          "terraform_type": "aws_imagebuilder_image_recipe",
          "factory_function": "resourceImagebuilderImageRecipe",
          "name": "Image Recipe",
          "sdk_type": "sdk"
        },
        "aws_imagebuilder_infrastructure_configuration": {
          "terraform_type": "aws_imagebuilder_infrastructure_configuration",
          "factory_function": "resourceImagebuilderInfrastructureConfiguration",
          "name": "Infrastructure Configuration",
          "sdk_type": "sdk"
        },
        "aws_imagebuilder_workflow": {
          "terraform_type": "aws_imagebuilder_workflow",
          "factory_function": "resourceImagebuilderWorkflow",
          "name": "Workflow",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_imagebuilder_component": {
          "terraform_type": "aws_imagebuilder_component",
          "factory_function": "dataSourceImagebuilderComponent",
          "name": "Component",
          "sdk_type": "sdk"
        },
        "aws_imagebuilder_components": {
          "terraform_type": "aws_imagebuilder_components",
          "factory_function": "dataSourceImagebuilderComponents",
          "name": "Components",
          "sdk_type": "sdk"
        },
        "aws_imagebuilder_container_recipe": {
          "terraform_type": "aws_imagebuilder_container_recipe",
          "factory_function": "dataSourceImagebuilderContainerRecipe",
          "name": "Container Recipe",
          "sdk_type": "sdk"
        },
        "aws_imagebuilder_container_recipes": {
          "terraform_type": "aws_imagebuilder_container_recipes",
          "factory_function": "dataSourceImagebuilderContainerRecipes",
          "name": "Container Recipes",
          "sdk_type": "sdk"
        },
        "aws_imagebuilder_distribution_configuration": {
          "terraform_type": "aws_imagebuilder_distribution_configuration",
          "factory_function": "dataSourceImagebuilderDistributionConfiguration",
          "name": "Distribution Configuration",
          "sdk_type": "sdk"
        },
        "aws_imagebuilder_distribution_configurations": {
          "terraform_type": "aws_imagebuilder_distribution_configurations",
          "factory_function": "dataSourceImagebuilderDistributionConfigurations",
          "name": "Distribution Configurations",
          "sdk_type": "sdk"
        },
        "aws_imagebuilder_image": {
          "terraform_type": "aws_imagebuilder_image",
          "factory_function": "dataSourceImagebuilderImage",
          "name": "Image",
          "sdk_type": "sdk"
        },
        "aws_imagebuilder_image_pipeline": {
          "terraform_type": "aws_imagebuilder_image_pipeline",
          "factory_function": "dataSourceImagebuilderImagePipeline",
          "name": "Image Pipeline",
          "sdk_type": "sdk"
        },
        "aws_imagebuilder_image_pipelines": {
          "terraform_type": "aws_imagebuilder_image_pipelines",
          "factory_function": "dataSourceImagebuilderImagePipelines",
          "name": "Image Pipelines",
          "sdk_type": "sdk"
        },
        "aws_imagebuilder_image_recipe": {
          "terraform_type": "aws_imagebuilder_image_recipe",
          "factory_function": "dataSourceImagebuilderImageRecipe",
          "name": "Image Recipe",
          "sdk_type": "sdk"
        },
        "aws_imagebuilder_image_recipes": {
          "terraform_type": "aws_imagebuilder_image_recipes",
          "factory_function": "dataSourceImagebuilderImageRecipes",
          "name": "Image Recipes",
          "sdk_type": "sdk"
        },
        "aws_imagebuilder_infrastructure_configuration": {
          "terraform_type": "aws_imagebuilder_infrastructure_configuration",
          "factory_function": "dataSourceImagebuilderInfrastructureConfiguration",
          "name": "Infrastructure Configuration",
          "sdk_type": "sdk"
        },
        "aws_imagebuilder_infrastructure_configurations": {
          "terraform_type": "aws_imagebuilder_infrastructure_configurations",
          "factory_function": "dataSourceImagebuilderInfrastructureConfigurations",
          "name": "Infrastructure Configurations",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_imagebuilder_lifecycle_policy": {
          "terraform_type": "aws_imagebuilder_lifecycle_policy",
          "factory_function": "newImagebuilderLifecyclePolicyResource",
          "name": "Lifecycle Policy",
          "sdk_type": "framework",
          "struct_type": "lifecyclePolicyResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "lifecyclePolicyResource": "aws_imagebuilder_lifecycle_policy"
      },
      "resource_crud_methods": {
        "aws_imagebuilder_component": {
          "create_method": "resourceComponentCreate",
          "read_method": "resourceComponentRead",
          "update_method": "resourceComponentUpdate",
          "delete_method": "resourceComponentDelete"
        },
        "aws_imagebuilder_container_recipe": {
          "create_method": "resourceContainerRecipeCreate",
          "read_method": "resourceContainerRecipeRead",
          "update_method": "resourceContainerRecipeUpdate",
          "delete_method": "resourceContainerRecipeDelete"
        },
        "aws_imagebuilder_distribution_configuration": {
          "create_method": "resourceDistributionConfigurationCreate",
          "read_method": "resourceDistributionConfigurationRead",
          "update_method": "resourceDistributionConfigurationUpdate",
          "delete_method": "resourceDistributionConfigurationDelete"
        },
        "aws_imagebuilder_image": {
          "create_method": "resourceImageCreate",
          "read_method": "resourceImageRead",
          "update_method": "resourceImageUpdate",
          "delete_method": "resourceImageDelete"
        },
        "aws_imagebuilder_image_pipeline": {
          "create_method": "resourceImagePipelineCreate",
          "read_method": "resourceImagePipelineRead",
          "update_method": "resourceImagePipelineUpdate",
          "delete_method": "resourceImagePipelineDelete"
        },
        "aws_imagebuilder_image_recipe": {
          "create_method": "resourceImageRecipeCreate",
          "read_method": "resourceImageRecipeRead",
          "update_method": "resourceImageRecipeUpdate",
          "delete_method": "resourceImageRecipeDelete"
        },
        "aws_imagebuilder_infrastructure_configuration": {
          "create_method": "resourceInfrastructureConfigurationCreate",
          "read_method": "resourceInfrastructureConfigurationRead",
          "update_method": "resourceInfrastructureConfigurationUpdate",
          "delete_method": "resourceInfrastructureConfigurationDelete"
        },
        "aws_imagebuilder_workflow": {
          "create_method": "resourceWorkflowCreate",
          "read_method": "resourceWorkflowRead",
          "update_method": "resourceWorkflowUpdate",
          "delete_method": "resourceWorkflowDelete"
        }
      },
      "data_source_methods": {
        "aws_imagebuilder_component": {
          "read_method": "dataSourceComponentRead"
        },
        "aws_imagebuilder_components": {
          "read_method": "dataSourceComponentsRead"
        },
        "aws_imagebuilder_container_recipe": {
          "read_method": "dataSourceContainerRecipeRead"
        },
        "aws_imagebuilder_container_recipes": {
          "read_method": "dataSourceContainerRecipesRead"
        },
        "aws_imagebuilder_distribution_configuration": {
          "read_method": "dataSourceDistributionConfigurationRead"
        },
        "aws_imagebuilder_distribution_configurations": {
          "read_method": "dataSourceDistributionConfigurationsRead"
        },
        "aws_imagebuilder_image": {
          "read_method": "dataSourceImageRead"
        },
        "aws_imagebuilder_image_pipeline": {
          "read_method": "dataSourceImagePipelineRead"
        },
        "aws_imagebuilder_image_pipelines": {
          "read_method": "dataSourceImagePipelinesRead"
        },
        "aws_imagebuilder_image_recipe": {
          "read_method": "dataSourceImageRecipeRead"
        },
        "aws_imagebuilder_image_recipes": {
          "read_method": "dataSourceImageRecipesRead"
        },
        "aws_imagebuilder_infrastructure_configuration": {
          "read_method": "dataSourceInfrastructureConfigurationRead"
        },
        "aws_imagebuilder_infrastructure_configurations": {
          "read_method": "dataSourceInfrastructureConfigurationsRead"
        }
      }
    },
    {
      "service_name": "internetmonitor",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/internetmonitor",
      "aws_sdk_resources": {
        "aws_internetmonitor_monitor": {
          "terraform_type": "aws_internetmonitor_monitor",
          "factory_function": "resourceInternetmonitorMonitor",
          "name": "Monitor",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_internetmonitor_monitor": {
          "create_method": "resourceMonitorCreate",
          "read_method": "resourceMonitorRead",
          "update_method": "resourceMonitorUpdate",
          "delete_method": "resourceMonitorDelete"
        }
      }
    },
    {
      "service_name": "ivs",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/ivs",
      "aws_sdk_resources": {
        "aws_ivs_channel": {
          "terraform_type": "aws_ivs_channel",
          "factory_function": "resourceIvsChannel",
          "name": "Channel",
          "sdk_type": "sdk"
        },
        "aws_ivs_playback_key_pair": {
          "terraform_type": "aws_ivs_playback_key_pair",
          "factory_function": "resourceIvsPlaybackKeyPair",
          "name": "Playback Key Pair",
          "sdk_type": "sdk"
        },
        "aws_ivs_recording_configuration": {
          "terraform_type": "aws_ivs_recording_configuration",
          "factory_function": "resourceIvsRecordingConfiguration",
          "name": "Recording Configuration",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_ivs_stream_key": {
          "terraform_type": "aws_ivs_stream_key",
          "factory_function": "dataSourceIvsStreamKey",
          "name": "Stream Key",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_ivs_channel": {
          "create_method": "resourceChannelCreate",
          "read_method": "resourceChannelRead",
          "update_method": "resourceChannelUpdate",
          "delete_method": "resourceChannelDelete"
        },
        "aws_ivs_playback_key_pair": {
          "create_method": "resourcePlaybackKeyPairCreate",
          "read_method": "resourcePlaybackKeyPairRead",
          "delete_method": "resourcePlaybackKeyPairDelete"
        },
        "aws_ivs_recording_configuration": {
          "create_method": "resourceRecordingConfigurationCreate",
          "read_method": "resourceRecordingConfigurationRead",
          "delete_method": "resourceRecordingConfigurationDelete"
        }
      },
      "data_source_methods": {
        "aws_ivs_stream_key": {
          "read_method": "dataSourceStreamKeyRead"
        }
      }
    },
    {
      "service_name": "iot",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/iot",
      "aws_sdk_resources": {
        "aws_iot_authorizer": {
          "terraform_type": "aws_iot_authorizer",
          "factory_function": "resourceIotAuthorizer",
          "name": "Authorizer",
          "sdk_type": "sdk"
        },
        "aws_iot_ca_certificate": {
          "terraform_type": "aws_iot_ca_certificate",
          "factory_function": "resourceIotCaCertificate",
          "name": "CA Certificate",
          "sdk_type": "sdk"
        },
        "aws_iot_certificate": {
          "terraform_type": "aws_iot_certificate",
          "factory_function": "resourceIotCertificate",
          "name": "",
          "sdk_type": "sdk"
        },
        "aws_iot_domain_configuration": {
          "terraform_type": "aws_iot_domain_configuration",
          "factory_function": "resourceIotDomainConfiguration",
          "name": "Domain Configuration",
          "sdk_type": "sdk"
        },
        "aws_iot_event_configurations": {
          "terraform_type": "aws_iot_event_configurations",
          "factory_function": "resourceIotEventConfigurations",
          "name": "Event Configurations",
          "sdk_type": "sdk"
        },
        "aws_iot_indexing_configuration": {
          "terraform_type": "aws_iot_indexing_configuration",
          "factory_function": "resourceIotIndexingConfiguration",
          "name": "Indexing Configuration",
          "sdk_type": "sdk"
        },
        "aws_iot_logging_options": {
          "terraform_type": "aws_iot_logging_options",
          "factory_function": "resourceIotLoggingOptions",
          "name": "Logging Options",
          "sdk_type": "sdk"
        },
        "aws_iot_policy": {
          "terraform_type": "aws_iot_policy",
          "factory_function": "resourceIotPolicy",
          "name": "Policy",
          "sdk_type": "sdk"
        },
        "aws_iot_policy_attachment": {
          "terraform_type": "aws_iot_policy_attachment",
          "factory_function": "resourceIotPolicyAttachment",
          "name": "Policy Attachment",
          "sdk_type": "sdk"
        },
        "aws_iot_provisioning_template": {
          "terraform_type": "aws_iot_provisioning_template",
          "factory_function": "resourceIotProvisioningTemplate",
          "name": "Provisioning Template",
          "sdk_type": "sdk"
        },
        "aws_iot_role_alias": {
          "terraform_type": "aws_iot_role_alias",
          "factory_function": "resourceIotRoleAlias",
          "name": "Role Alias",
          "sdk_type": "sdk"
        },
        "aws_iot_thing": {
          "terraform_type": "aws_iot_thing",
          "factory_function": "resourceIotThing",
          "name": "Thing",
          "sdk_type": "sdk"
        },
        "aws_iot_thing_group": {
          "terraform_type": "aws_iot_thing_group",
          "factory_function": "resourceIotThingGroup",
          "name": "Thing Group",
          "sdk_type": "sdk"
        },
        "aws_iot_thing_group_membership": {
          "terraform_type": "aws_iot_thing_group_membership",
          "factory_function": "resourceIotThingGroupMembership",
          "name": "Thing Group Membership",
          "sdk_type": "sdk"
        },
        "aws_iot_thing_principal_attachment": {
          "terraform_type": "aws_iot_thing_principal_attachment",
          "factory_function": "resourceIotThingPrincipalAttachment",
          "name": "Thing Principal Attachment",
          "sdk_type": "sdk"
        },
        "aws_iot_thing_type": {
          "terraform_type": "aws_iot_thing_type",
          "factory_function": "resourceIotThingType",
          "name": "Thing Type",
          "sdk_type": "sdk"
        },
        "aws_iot_topic_rule": {
          "terraform_type": "aws_iot_topic_rule",
          "factory_function": "resourceIotTopicRule",
          "name": "Topic Rule",
          "sdk_type": "sdk"
        },
        "aws_iot_topic_rule_destination": {
          "terraform_type": "aws_iot_topic_rule_destination",
          "factory_function": "resourceIotTopicRuleDestination",
          "name": "Topic Rule Destination",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_iot_endpoint": {
          "terraform_type": "aws_iot_endpoint",
          "factory_function": "dataSourceIotEndpoint",
          "name": "Endpoint",
          "sdk_type": "sdk"
        },
        "aws_iot_registration_code": {
          "terraform_type": "aws_iot_registration_code",
          "factory_function": "dataSourceIotRegistrationCode",
          "name": "Registration Code",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_iot_billing_group": {
          "terraform_type": "aws_iot_billing_group",
          "factory_function": "newIotBillingGroupResource",
          "name": "Billing Group",
          "sdk_type": "framework",
          "struct_type": "billingGroupResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "billingGroupResource": "aws_iot_billing_group"
      },
      "resource_crud_methods": {
        "aws_iot_authorizer": {
          "create_method": "resourceAuthorizerCreate",
          "read_method": "resourceAuthorizerRead",
          "update_method": "resourceAuthorizerUpdate",
          "delete_method": "resourceAuthorizerDelete"
        },
        "aws_iot_ca_certificate": {
          "create_method": "resourceCACertificateCreate",
          "read_method": "resourceCACertificateRead",
          "update_method": "resourceCACertificateUpdate",
          "delete_method": "resourceCACertificateDelete"
        },
        "aws_iot_certificate": {
          "create_method": "resourceCertificateCreate",
          "read_method": "resourceCertificateRead",
          "update_method": "resourceCertificateUpdate",
          "delete_method": "resourceCertificateDelete"
        },
        "aws_iot_domain_configuration": {
          "create_method": "resourceDomainConfigurationCreate",
          "read_method": "resourceDomainConfigurationRead",
          "update_method": "resourceDomainConfigurationUpdate",
          "delete_method": "resourceDomainConfigurationDelete"
        },
        "aws_iot_event_configurations": {
          "create_method": "resourceEventConfigurationsPut",
          "read_method": "resourceEventConfigurationsRead",
          "update_method": "resourceEventConfigurationsPut"
        },
        "aws_iot_indexing_configuration": {
          "create_method": "resourceIndexingConfigurationPut",
          "read_method": "resourceIndexingConfigurationRead",
          "update_method": "resourceIndexingConfigurationPut"
        },
        "aws_iot_logging_options": {
          "create_method": "resourceLoggingOptionsPut",
          "read_method": "resourceLoggingOptionsRead",
          "update_method": "resourceLoggingOptionsPut"
        },
        "aws_iot_policy": {
          "create_method": "resourcePolicyCreate",
          "read_method": "resourcePolicyRead",
          "update_method": "resourcePolicyUpdate",
          "delete_method": "resourcePolicyDelete"
        },
        "aws_iot_policy_attachment": {
          "create_method": "resourcePolicyAttachmentCreate",
          "read_method": "resourcePolicyAttachmentRead",
          "delete_method": "resourcePolicyAttachmentDelete"
        },
        "aws_iot_provisioning_template": {
          "create_method": "resourceProvisioningTemplateCreate",
          "read_method": "resourceProvisioningTemplateRead",
          "update_method": "resourceProvisioningTemplateUpdate",
          "delete_method": "resourceProvisioningTemplateDelete"
        },
        "aws_iot_role_alias": {
          "create_method": "resourceRoleAliasCreate",
          "read_method": "resourceRoleAliasRead",
          "update_method": "resourceRoleAliasUpdate",
          "delete_method": "resourceRoleAliasDelete"
        },
        "aws_iot_thing": {
          "create_method": "resourceThingCreate",
          "read_method": "resourceThingRead",
          "update_method": "resourceThingUpdate",
          "delete_method": "resourceThingDelete"
        },
        "aws_iot_thing_group": {
          "create_method": "resourceThingGroupCreate",
          "read_method": "resourceThingGroupRead",
          "update_method": "resourceThingGroupUpdate",
          "delete_method": "resourceThingGroupDelete"
        },
        "aws_iot_thing_group_membership": {
          "create_method": "resourceThingGroupMembershipCreate",
          "read_method": "resourceThingGroupMembershipRead",
          "delete_method": "resourceThingGroupMembershipDelete"
        },
        "aws_iot_thing_principal_attachment": {
          "create_method": "resourceThingPrincipalAttachmentCreate",
          "read_method": "resourceThingPrincipalAttachmentRead",
          "delete_method": "resourceThingPrincipalAttachmentDelete"
        },
        "aws_iot_thing_type": {
          "create_method": "resourceThingTypeCreate",
          "read_method": "resourceThingTypeRead",
          "update_method": "resourceThingTypeUpdate",
          "delete_method": "resourceThingTypeDelete"
        },
        "aws_iot_topic_rule": {
          "create_method": "resourceTopicRuleCreate",
          "read_method": "resourceTopicRuleRead",
          "update_method": "resourceTopicRuleUpdate",
          "delete_method": "resourceTopicRuleDelete"
        },
        "aws_iot_topic_rule_destination": {
          "create_method": "resourceTopicRuleDestinationCreate",
          "read_method": "resourceTopicRuleDestinationRead",
          "update_method": "resourceTopicRuleDestinationUpdate",
          "delete_method": "resourceTopicRuleDestinationDelete"
        }
      },
      "data_source_methods": {
        "aws_iot_endpoint": {
          "read_method": "dataSourceEndpointRead"
        },
        "aws_iot_registration_code": {
          "read_method": "dataSourceRegistrationCodeRead"
        }
      }
    },
    {
      "service_name": "ivschat",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/ivschat",
      "aws_sdk_resources": {
        "aws_ivschat_logging_configuration": {
          "terraform_type": "aws_ivschat_logging_configuration",
          "factory_function": "resourceIvschatLoggingConfiguration",
          "name": "Logging Configuration",
          "sdk_type": "sdk"
        },
        "aws_ivschat_room": {
          "terraform_type": "aws_ivschat_room",
          "factory_function": "resourceIvschatRoom",
          "name": "Room",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_ivschat_logging_configuration": {
          "create_method": "resourceLoggingConfigurationCreate",
          "read_method": "resourceLoggingConfigurationRead",
          "update_method": "resourceLoggingConfigurationUpdate",
          "delete_method": "resourceLoggingConfigurationDelete"
        },
        "aws_ivschat_room": {
          "create_method": "resourceRoomCreate",
          "read_method": "resourceRoomRead",
          "update_method": "resourceRoomUpdate",
          "delete_method": "resourceRoomDelete"
        }
      }
    },
    {
      "service_name": "kafka",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/kafka",
      "aws_sdk_resources": {
        "aws_msk_cluster": {
          "terraform_type": "aws_msk_cluster",
          "factory_function": "resourceMskCluster",
          "name": "Cluster",
          "sdk_type": "sdk"
        },
        "aws_msk_cluster_policy": {
          "terraform_type": "aws_msk_cluster_policy",
          "factory_function": "resourceMskClusterPolicy",
          "name": "Cluster Policy",
          "sdk_type": "sdk"
        },
        "aws_msk_configuration": {
          "terraform_type": "aws_msk_configuration",
          "factory_function": "resourceMskConfiguration",
          "name": "Configuration",
          "sdk_type": "sdk"
        },
        "aws_msk_replicator": {
          "terraform_type": "aws_msk_replicator",
          "factory_function": "resourceMskReplicator",
          "name": "Replicator",
          "sdk_type": "sdk"
        },
        "aws_msk_scram_secret_association": {
          "terraform_type": "aws_msk_scram_secret_association",
          "factory_function": "resourceMskScramSecretAssociation",
          "name": "SCRAM Secret Association",
          "sdk_type": "sdk"
        },
        "aws_msk_serverless_cluster": {
          "terraform_type": "aws_msk_serverless_cluster",
          "factory_function": "resourceMskServerlessCluster",
          "name": "Serverless Cluster",
          "sdk_type": "sdk"
        },
        "aws_msk_vpc_connection": {
          "terraform_type": "aws_msk_vpc_connection",
          "factory_function": "resourceMskVpcConnection",
          "name": "VPC Connection",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_msk_bootstrap_brokers": {
          "terraform_type": "aws_msk_bootstrap_brokers",
          "factory_function": "dataSourceMskBootstrapBrokers",
          "name": "Bootstrap Brokers",
          "sdk_type": "sdk"
        },
        "aws_msk_broker_nodes": {
          "terraform_type": "aws_msk_broker_nodes",
          "factory_function": "dataSourceMskBrokerNodes",
          "name": "Broker Nodes",
          "sdk_type": "sdk"
        },
        "aws_msk_cluster": {
          "terraform_type": "aws_msk_cluster",
          "factory_function": "dataSourceMskCluster",
          "name": "Cluster",
          "sdk_type": "sdk"
        },
        "aws_msk_configuration": {
          "terraform_type": "aws_msk_configuration",
          "factory_function": "dataSourceMskConfiguration",
          "name": "Configuration",
          "sdk_type": "sdk"
        },
        "aws_msk_kafka_version": {
          "terraform_type": "aws_msk_kafka_version",
          "factory_function": "dataSourceMskKafkaVersion",
          "name": "Kafka Version",
          "sdk_type": "sdk"
        },
        "aws_msk_vpc_connection": {
          "terraform_type": "aws_msk_vpc_connection",
          "factory_function": "dataSourceMskVpcConnection",
          "name": "VPC Connection",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_msk_single_scram_secret_association": {
          "terraform_type": "aws_msk_single_scram_secret_association",
          "factory_function": "newMskSingleScramSecretAssociationResource",
          "name": "Single SCRAM Secret Association",
          "sdk_type": "framework",
          "struct_type": "singleSCRAMSecretAssociationResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "singleSCRAMSecretAssociationResource": "aws_msk_single_scram_secret_association"
      },
      "resource_crud_methods": {
        "aws_msk_cluster": {
          "create_method": "resourceClusterCreate",
          "read_method": "resourceClusterRead",
          "update_method": "resourceClusterUpdate",
          "delete_method": "resourceClusterDelete"
        },
        "aws_msk_cluster_policy": {
          "create_method": "resourceClusterPolicyPut",
          "read_method": "resourceClusterPolicyRead",
          "update_method": "resourceClusterPolicyPut",
          "delete_method": "resourceClusterPolicyDelete"
        },
        "aws_msk_configuration": {
          "create_method": "resourceConfigurationCreate",
          "read_method": "resourceConfigurationRead",
          "update_method": "resourceConfigurationUpdate",
          "delete_method": "resourceConfigurationDelete"
        },
        "aws_msk_replicator": {
          "create_method": "resourceReplicatorCreate",
          "read_method": "resourceReplicatorRead",
          "update_method": "resourceReplicatorUpdate",
          "delete_method": "resourceReplicatorDelete"
        },
        "aws_msk_scram_secret_association": {
          "create_method": "resourceSCRAMSecretAssociationCreate",
          "read_method": "resourceSCRAMSecretAssociationRead",
          "update_method": "resourceSCRAMSecretAssociationUpdate",
          "delete_method": "resourceSCRAMSecretAssociationDelete"
        },
        "aws_msk_serverless_cluster": {
          "create_method": "resourceServerlessClusterCreate",
          "read_method": "resourceServerlessClusterRead",
          "update_method": "resourceServerlessClusterUpdate",
          "delete_method": "resourceClusterDelete"
        },
        "aws_msk_vpc_connection": {
          "create_method": "resourceVPCConnectionCreate",
          "read_method": "resourceVPCConnectionRead",
          "update_method": "resourceVPCConnectionUpdate",
          "delete_method": "resourceVPCConnectionDelete"
        }
      },
      "data_source_methods": {
        "aws_msk_bootstrap_brokers": {
          "read_method": "dataSourceBootstrapBrokersRead"
        },
        "aws_msk_broker_nodes": {
          "read_method": "dataSourceBrokerNodesRead"
        },
        "aws_msk_cluster": {
          "read_method": "dataSourceClusterRead"
        },
        "aws_msk_configuration": {
          "read_method": "dataSourceConfigurationRead"
        },
        "aws_msk_kafka_version": {
          "read_method": "dataSourceKafkaVersionRead"
        },
        "aws_msk_vpc_connection": {
          "read_method": "dataSourceVPCConnectionRead"
        }
      }
    },
    {
      "service_name": "kafkaconnect",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/kafkaconnect",
      "aws_sdk_resources": {
        "aws_mskconnect_connector": {
          "terraform_type": "aws_mskconnect_connector",
          "factory_function": "resourceMskconnectConnector",
          "name": "Connector",
          "sdk_type": "sdk"
        },
        "aws_mskconnect_custom_plugin": {
          "terraform_type": "aws_mskconnect_custom_plugin",
          "factory_function": "resourceMskconnectCustomPlugin",
          "name": "Custom Plugin",
          "sdk_type": "sdk"
        },
        "aws_mskconnect_worker_configuration": {
          "terraform_type": "aws_mskconnect_worker_configuration",
          "factory_function": "resourceMskconnectWorkerConfiguration",
          "name": "Worker Configuration",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_mskconnect_connector": {
          "terraform_type": "aws_mskconnect_connector",
          "factory_function": "dataSourceMskconnectConnector",
          "name": "Connector",
          "sdk_type": "sdk"
        },
        "aws_mskconnect_custom_plugin": {
          "terraform_type": "aws_mskconnect_custom_plugin",
          "factory_function": "dataSourceMskconnectCustomPlugin",
          "name": "Custom Plugin",
          "sdk_type": "sdk"
        },
        "aws_mskconnect_worker_configuration": {
          "terraform_type": "aws_mskconnect_worker_configuration",
          "factory_function": "dataSourceMskconnectWorkerConfiguration",
          "name": "Worker Configuration",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_mskconnect_connector": {
          "create_method": "resourceConnectorCreate",
          "read_method": "resourceConnectorRead",
          "update_method": "resourceConnectorUpdate",
          "delete_method": "resourceConnectorDelete"
        },
        "aws_mskconnect_custom_plugin": {
          "create_method": "resourceCustomPluginCreate",
          "read_method": "resourceCustomPluginRead",
          "update_method": "resourceCustomPluginUpdate",
          "delete_method": "resourceCustomPluginDelete"
        },
        "aws_mskconnect_worker_configuration": {
          "create_method": "resourceWorkerConfigurationCreate",
          "read_method": "resourceWorkerConfigurationRead",
          "update_method": "resourceWorkerConfigurationUpdate",
          "delete_method": "resourceWorkerConfigurationDelete"
        }
      },
      "data_source_methods": {
        "aws_mskconnect_connector": {
          "read_method": "dataSourceConnectorRead"
        },
        "aws_mskconnect_custom_plugin": {
          "read_method": "dataSourceCustomPluginRead"
        },
        "aws_mskconnect_worker_configuration": {
          "read_method": "dataSourceWorkerConfigurationRead"
        }
      }
    },
    {
      "service_name": "kendra",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/kendra",
      "aws_sdk_resources": {
        "aws_kendra_data_source": {
          "terraform_type": "aws_kendra_data_source",
          "factory_function": "resourceKendraDataSource",
          "name": "Data Source",
          "sdk_type": "sdk"
        },
        "aws_kendra_experience": {
          "terraform_type": "aws_kendra_experience",
          "factory_function": "resourceKendraExperience",
          "name": "Experience",
          "sdk_type": "sdk"
        },
        "aws_kendra_faq": {
          "terraform_type": "aws_kendra_faq",
          "factory_function": "resourceKendraFaq",
          "name": "FAQ",
          "sdk_type": "sdk"
        },
        "aws_kendra_index": {
          "terraform_type": "aws_kendra_index",
          "factory_function": "resourceKendraIndex",
          "name": "Index",
          "sdk_type": "sdk"
        },
        "aws_kendra_query_suggestions_block_list": {
          "terraform_type": "aws_kendra_query_suggestions_block_list",
          "factory_function": "resourceKendraQuerySuggestionsBlockList",
          "name": "Query Suggestions Block List",
          "sdk_type": "sdk"
        },
        "aws_kendra_thesaurus": {
          "terraform_type": "aws_kendra_thesaurus",
          "factory_function": "resourceKendraThesaurus",
          "name": "Thesaurus",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_kendra_experience": {
          "terraform_type": "aws_kendra_experience",
          "factory_function": "dataSourceKendraExperience",
          "name": "Experience",
          "sdk_type": "sdk"
        },
        "aws_kendra_faq": {
          "terraform_type": "aws_kendra_faq",
          "factory_function": "dataSourceKendraFaq",
          "name": "FAQ",
          "sdk_type": "sdk"
        },
        "aws_kendra_index": {
          "terraform_type": "aws_kendra_index",
          "factory_function": "dataSourceKendraIndex",
          "name": "Index",
          "sdk_type": "sdk"
        },
        "aws_kendra_query_suggestions_block_list": {
          "terraform_type": "aws_kendra_query_suggestions_block_list",
          "factory_function": "dataSourceKendraQuerySuggestionsBlockList",
          "name": "Query Suggestions Block List",
          "sdk_type": "sdk"
        },
        "aws_kendra_thesaurus": {
          "terraform_type": "aws_kendra_thesaurus",
          "factory_function": "dataSourceKendraThesaurus",
          "name": "Thesaurus",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_kendra_data_source": {
          "create_method": "resourceDataSourceCreate",
          "read_method": "resourceDataSourceRead",
          "update_method": "resourceDataSourceUpdate",
          "delete_method": "resourceDataSourceDelete"
        },
        "aws_kendra_experience": {
          "create_method": "resourceExperienceCreate",
          "read_method": "resourceExperienceRead",
          "update_method": "resourceExperienceUpdate",
          "delete_method": "resourceExperienceDelete"
        },
        "aws_kendra_faq": {
          "create_method": "resourceFaqCreate",
          "read_method": "resourceFaqRead",
          "update_method": "resourceFaqUpdate",
          "delete_method": "resourceFaqDelete"
        },
        "aws_kendra_index": {
          "create_method": "resourceIndexCreate",
          "read_method": "resourceIndexRead",
          "update_method": "resourceIndexUpdate",
          "delete_method": "resourceIndexDelete"
        },
        "aws_kendra_query_suggestions_block_list": {
          "create_method": "resourceQuerySuggestionsBlockListCreate",
          "read_method": "resourceQuerySuggestionsBlockListRead",
          "update_method": "resourceQuerySuggestionsBlockListUpdate",
          "delete_method": "resourceQuerySuggestionsBlockListDelete"
        },
        "aws_kendra_thesaurus": {
          "create_method": "resourceThesaurusCreate",
          "read_method": "resourceThesaurusRead",
          "update_method": "resourceThesaurusUpdate",
          "delete_method": "resourceThesaurusDelete"
        }
      },
      "data_source_methods": {
        "aws_kendra_experience": {
          "read_method": "dataSourceExperienceRead"
        },
        "aws_kendra_faq": {
          "read_method": "dataSourceFaqRead"
        },
        "aws_kendra_index": {
          "read_method": "dataSourceIndexRead"
        },
        "aws_kendra_query_suggestions_block_list": {
          "read_method": "dataSourceQuerySuggestionsBlockListRead"
        },
        "aws_kendra_thesaurus": {
          "read_method": "dataSourceThesaurusRead"
        }
      }
    },
    {
      "service_name": "keyspaces",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/keyspaces",
      "aws_sdk_resources": {
        "aws_keyspaces_keyspace": {
          "terraform_type": "aws_keyspaces_keyspace",
          "factory_function": "resourceKeyspacesKeyspace",
          "name": "Keyspace",
          "sdk_type": "sdk"
        },
        "aws_keyspaces_table": {
          "terraform_type": "aws_keyspaces_table",
          "factory_function": "resourceKeyspacesTable",
          "name": "Table",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_keyspaces_keyspace": {
          "create_method": "resourceKeyspaceCreate",
          "read_method": "resourceKeyspaceRead",
          "update_method": "resourceKeyspaceUpdate",
          "delete_method": "resourceKeyspaceDelete"
        },
        "aws_keyspaces_table": {
          "create_method": "resourceTableCreate",
          "read_method": "resourceTableRead",
          "update_method": "resourceTableUpdate",
          "delete_method": "resourceTableDelete"
        }
      }
    },
    {
      "service_name": "kinesis",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/kinesis",
      "aws_sdk_resources": {
        "aws_kinesis_stream": {
          "terraform_type": "aws_kinesis_stream",
          "factory_function": "resourceKinesisStream",
          "name": "Stream",
          "sdk_type": "sdk"
        },
        "aws_kinesis_stream_consumer": {
          "terraform_type": "aws_kinesis_stream_consumer",
          "factory_function": "resourceKinesisStreamConsumer",
          "name": "Stream Consumer",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_kinesis_stream": {
          "terraform_type": "aws_kinesis_stream",
          "factory_function": "dataSourceKinesisStream",
          "name": "Stream",
          "sdk_type": "sdk"
        },
        "aws_kinesis_stream_consumer": {
          "terraform_type": "aws_kinesis_stream_consumer",
          "factory_function": "dataSourceKinesisStreamConsumer",
          "name": "Stream Consumer)\n// @Tags(identifierAttribute=",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_kinesis_resource_policy": {
          "terraform_type": "aws_kinesis_resource_policy",
          "factory_function": "newKinesisResourcePolicyResource",
          "name": "Resource Policy",
          "sdk_type": "framework",
          "struct_type": "resourcePolicyResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "resourcePolicyResource": "aws_kinesis_resource_policy"
      },
      "resource_crud_methods": {
        "aws_kinesis_stream": {
          "create_method": "resourceStreamCreate",
          "read_method": "resourceStreamRead",
          "update_method": "resourceStreamUpdate",
          "delete_method": "resourceStreamDelete"
        },
        "aws_kinesis_stream_consumer": {
          "create_method": "resourceStreamConsumerCreate",
          "read_method": "resourceStreamConsumerRead",
          "update_method": "resourceStreamConsumerUpdate",
          "delete_method": "resourceStreamConsumerDelete"
        }
      },
      "data_source_methods": {
        "aws_kinesis_stream": {
          "read_method": "dataSourceStreamRead"
        },
        "aws_kinesis_stream_consumer": {
          "read_method": "dataSourceStreamConsumerRead"
        }
      }
    },
    {
      "service_name": "kinesisanalytics",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/kinesisanalytics",
      "aws_sdk_resources": {
        "aws_kinesis_analytics_application": {
          "terraform_type": "aws_kinesis_analytics_application",
          "factory_function": "resourceKinesisAnalyticsApplication",
          "name": "Application",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_kinesis_analytics_application": {
          "create_method": "resourceApplicationCreate",
          "read_method": "resourceApplicationRead",
          "update_method": "resourceApplicationUpdate",
          "delete_method": "resourceApplicationDelete"
        }
      }
    },
    {
      "service_name": "kinesisvideo",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/kinesisvideo",
      "aws_sdk_resources": {
        "aws_kinesis_video_stream": {
          "terraform_type": "aws_kinesis_video_stream",
          "factory_function": "resourceKinesisVideoStream",
          "name": "Stream",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_kinesis_video_stream": {
          "create_method": "resourceStreamCreate",
          "read_method": "resourceStreamRead",
          "update_method": "resourceStreamUpdate",
          "delete_method": "resourceStreamDelete"
        }
      }
    },
    {
      "service_name": "kinesisanalyticsv2",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/kinesisanalyticsv2",
      "aws_sdk_resources": {
        "aws_kinesisanalyticsv2_application": {
          "terraform_type": "aws_kinesisanalyticsv2_application",
          "factory_function": "resourceKinesisanalyticsv2Application",
          "name": "Application",
          "sdk_type": "sdk"
        },
        "aws_kinesisanalyticsv2_application_snapshot": {
          "terraform_type": "aws_kinesisanalyticsv2_application_snapshot",
          "factory_function": "resourceKinesisanalyticsv2ApplicationSnapshot",
          "name": "Application Snapshot",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_kinesisanalyticsv2_application": {
          "create_method": "resourceApplicationCreate",
          "read_method": "resourceApplicationRead",
          "update_method": "resourceApplicationUpdate",
          "delete_method": "resourceApplicationDelete"
        },
        "aws_kinesisanalyticsv2_application_snapshot": {
          "create_method": "resourceApplicationSnapshotCreate",
          "read_method": "resourceApplicationSnapshotRead",
          "delete_method": "resourceApplicationSnapshotDelete"
        }
      }
    },
    {
      "service_name": "kms",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/kms",
      "aws_sdk_resources": {
        "aws_kms_alias": {
          "terraform_type": "aws_kms_alias",
          "factory_function": "resourceKmsAlias",
          "name": "Alias",
          "sdk_type": "sdk"
        },
        "aws_kms_ciphertext": {
          "terraform_type": "aws_kms_ciphertext",
          "factory_function": "resourceKmsCiphertext",
          "name": "Ciphertext",
          "sdk_type": "sdk"
        },
        "aws_kms_custom_key_store": {
          "terraform_type": "aws_kms_custom_key_store",
          "factory_function": "resourceKmsCustomKeyStore",
          "name": "Custom Key Store",
          "sdk_type": "sdk"
        },
        "aws_kms_external_key": {
          "terraform_type": "aws_kms_external_key",
          "factory_function": "resourceKmsExternalKey",
          "name": "External Key",
          "sdk_type": "sdk"
        },
        "aws_kms_grant": {
          "terraform_type": "aws_kms_grant",
          "factory_function": "resourceKmsGrant",
          "name": "Grant",
          "sdk_type": "sdk"
        },
        "aws_kms_key": {
          "terraform_type": "aws_kms_key",
          "factory_function": "resourceKmsKey",
          "name": "Key",
          "sdk_type": "sdk"
        },
        "aws_kms_key_policy": {
          "terraform_type": "aws_kms_key_policy",
          "factory_function": "resourceKmsKeyPolicy",
          "name": "Key Policy",
          "sdk_type": "sdk"
        },
        "aws_kms_replica_external_key": {
          "terraform_type": "aws_kms_replica_external_key",
          "factory_function": "resourceKmsReplicaExternalKey",
          "name": "Replica External Key",
          "sdk_type": "sdk"
        },
        "aws_kms_replica_key": {
          "terraform_type": "aws_kms_replica_key",
          "factory_function": "resourceKmsReplicaKey",
          "name": "Replica Key",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_kms_alias": {
          "terraform_type": "aws_kms_alias",
          "factory_function": "dataSourceKmsAlias",
          "name": "Alias",
          "sdk_type": "sdk"
        },
        "aws_kms_ciphertext": {
          "terraform_type": "aws_kms_ciphertext",
          "factory_function": "dataSourceKmsCiphertext",
          "name": "Ciphertext",
          "sdk_type": "sdk"
        },
        "aws_kms_custom_key_store": {
          "terraform_type": "aws_kms_custom_key_store",
          "factory_function": "dataSourceKmsCustomKeyStore",
          "name": "Custom Key Store",
          "sdk_type": "sdk"
        },
        "aws_kms_key": {
          "terraform_type": "aws_kms_key",
          "factory_function": "dataSourceKmsKey",
          "name": "Key",
          "sdk_type": "sdk"
        },
        "aws_kms_public_key": {
          "terraform_type": "aws_kms_public_key",
          "factory_function": "dataSourceKmsPublicKey",
          "name": "Public Key",
          "sdk_type": "sdk"
        },
        "aws_kms_secret": {
          "terraform_type": "aws_kms_secret",
          "factory_function": "dataSourceKmsSecret",
          "name": "Secret",
          "sdk_type": "sdk"
        },
        "aws_kms_secrets": {
          "terraform_type": "aws_kms_secrets",
          "factory_function": "dataSourceKmsSecrets",
          "name": "",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_kms_alias": {
          "create_method": "resourceAliasCreate",
          "read_method": "resourceAliasRead",
          "update_method": "resourceAliasUpdate",
          "delete_method": "resourceAliasDelete"
        },
        "aws_kms_ciphertext": {
          "create_method": "resourceCiphertextCreate"
        },
        "aws_kms_custom_key_store": {
          "create_method": "resourceCustomKeyStoreCreate",
          "read_method": "resourceCustomKeyStoreRead",
          "update_method": "resourceCustomKeyStoreUpdate",
          "delete_method": "resourceCustomKeyStoreDelete"
        },
        "aws_kms_external_key": {
          "create_method": "resourceExternalKeyCreate",
          "read_method": "resourceExternalKeyRead",
          "update_method": "resourceExternalKeyUpdate",
          "delete_method": "resourceExternalKeyDelete"
        },
        "aws_kms_grant": {
          "create_method": "resourceGrantCreate",
          "read_method": "resourceGrantRead",
          "delete_method": "resourceGrantDelete"
        },
        "aws_kms_key": {
          "create_method": "resourceKeyCreate",
          "read_method": "resourceKeyRead",
          "update_method": "resourceKeyUpdate",
          "delete_method": "resourceKeyDelete"
        },
        "aws_kms_key_policy": {
          "create_method": "resourceKeyPolicyCreate",
          "read_method": "resourceKeyPolicyRead",
          "update_method": "resourceKeyPolicyUpdate",
          "delete_method": "resourceKeyPolicyDelete"
        },
        "aws_kms_replica_external_key": {
          "create_method": "resourceReplicaExternalKeyCreate",
          "read_method": "resourceReplicaExternalKeyRead",
          "update_method": "resourceReplicaExternalKeyUpdate",
          "delete_method": "resourceReplicaExternalKeyDelete"
        },
        "aws_kms_replica_key": {
          "create_method": "resourceReplicaKeyCreate",
          "read_method": "resourceReplicaKeyRead",
          "update_method": "resourceReplicaKeyUpdate",
          "delete_method": "resourceReplicaKeyDelete"
        }
      },
      "data_source_methods": {
        "aws_kms_alias": {
          "read_method": "dataSourceAliasRead"
        },
        "aws_kms_ciphertext": {
          "read_method": "dataSourceCiphertextRead"
        },
        "aws_kms_custom_key_store": {
          "read_method": "dataSourceCustomKeyStoreRead"
        },
        "aws_kms_key": {
          "read_method": "dataSourceKeyRead"
        },
        "aws_kms_public_key": {
          "read_method": "dataSourcePublicKeyRead"
        },
        "aws_kms_secrets": {
          "read_method": "dataSourceSecretsRead"
        }
      }
    },
    {
      "service_name": "lakeformation",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/lakeformation",
      "aws_sdk_resources": {
        "aws_lakeformation_data_lake_settings": {
          "terraform_type": "aws_lakeformation_data_lake_settings",
          "factory_function": "resourceLakeformationDataLakeSettings",
          "name": "Data Lake Settings",
          "sdk_type": "sdk"
        },
        "aws_lakeformation_lf_tag": {
          "terraform_type": "aws_lakeformation_lf_tag",
          "factory_function": "resourceLakeformationLfTag",
          "name": "LF Tag",
          "sdk_type": "sdk"
        },
        "aws_lakeformation_permissions": {
          "terraform_type": "aws_lakeformation_permissions",
          "factory_function": "resourceLakeformationPermissions",
          "name": "Permissions",
          "sdk_type": "sdk"
        },
        "aws_lakeformation_resource": {
          "terraform_type": "aws_lakeformation_resource",
          "factory_function": "resourceLakeformationResource",
          "name": "Resource",
          "sdk_type": "sdk"
        },
        "aws_lakeformation_resource_lf_tags": {
          "terraform_type": "aws_lakeformation_resource_lf_tags",
          "factory_function": "resourceLakeformationResourceLfTags",
          "name": "Resource LF Tags",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_lakeformation_data_lake_settings": {
          "terraform_type": "aws_lakeformation_data_lake_settings",
          "factory_function": "dataSourceLakeformationDataLakeSettings",
          "name": "Data Lake Settings",
          "sdk_type": "sdk"
        },
        "aws_lakeformation_permissions": {
          "terraform_type": "aws_lakeformation_permissions",
          "factory_function": "dataSourceLakeformationPermissions",
          "name": "Permissions",
          "sdk_type": "sdk"
        },
        "aws_lakeformation_resource": {
          "terraform_type": "aws_lakeformation_resource",
          "factory_function": "dataSourceLakeformationResource",
          "name": "Resource",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_lakeformation_data_cells_filter": {
          "terraform_type": "aws_lakeformation_data_cells_filter",
          "factory_function": "newLakeformationDataCellsFilterResource",
          "name": "Data Cells Filter",
          "sdk_type": "framework",
          "struct_type": "dataCellsFilterResource"
        },
        "aws_lakeformation_identity_center_configuration": {
          "terraform_type": "aws_lakeformation_identity_center_configuration",
          "factory_function": "newLakeformationIdentityCenterConfigurationResource",
          "name": "Identity Center Configuration",
          "sdk_type": "framework",
          "struct_type": "resourceIdentityCenterConfiguration"
        },
        "aws_lakeformation_lf_tag_expression": {
          "terraform_type": "aws_lakeformation_lf_tag_expression",
          "factory_function": "newLakeformationLfTagExpressionResource",
          "name": "LF Tag Expression",
          "sdk_type": "framework",
          "struct_type": "lfTagExpressionResource"
        },
        "aws_lakeformation_opt_in": {
          "terraform_type": "aws_lakeformation_opt_in",
          "factory_function": "newLakeformationOptInResource",
          "name": "Opt In",
          "sdk_type": "framework",
          "struct_type": "optInResource"
        },
        "aws_lakeformation_resource_lf_tag": {
          "terraform_type": "aws_lakeformation_resource_lf_tag",
          "factory_function": "newLakeformationResourceLfTagResource",
          "name": "Resource LF Tag",
          "sdk_type": "framework",
          "struct_type": "resourceLFTagResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "dataCellsFilterResource": "aws_lakeformation_data_cells_filter",
        "lfTagExpressionResource": "aws_lakeformation_lf_tag_expression",
        "optInResource": "aws_lakeformation_opt_in",
        "resourceIdentityCenterConfiguration": "aws_lakeformation_identity_center_configuration",
        "resourceLFTagResource": "aws_lakeformation_resource_lf_tag"
      },
      "resource_crud_methods": {
        "aws_lakeformation_data_lake_settings": {
          "create_method": "resourceDataLakeSettingsCreate",
          "read_method": "resourceDataLakeSettingsRead",
          "update_method": "resourceDataLakeSettingsCreate",
          "delete_method": "resourceDataLakeSettingsDelete"
        },
        "aws_lakeformation_lf_tag": {
          "create_method": "resourceLFTagCreate",
          "read_method": "resourceLFTagRead",
          "update_method": "resourceLFTagUpdate",
          "delete_method": "resourceLFTagDelete"
        },
        "aws_lakeformation_permissions": {
          "create_method": "resourcePermissionsCreate",
          "read_method": "resourcePermissionsRead",
          "delete_method": "resourcePermissionsDelete"
        },
        "aws_lakeformation_resource": {
          "create_method": "resourceResourceCreate",
          "read_method": "resourceResourceRead",
          "delete_method": "resourceResourceDelete"
        },
        "aws_lakeformation_resource_lf_tags": {
          "create_method": "resourceResourceLFTagsCreate",
          "read_method": "resourceResourceLFTagsRead",
          "delete_method": "resourceResourceLFTagsDelete"
        }
      },
      "data_source_methods": {
        "aws_lakeformation_data_lake_settings": {
          "read_method": "dataSourceDataLakeSettingsRead"
        },
        "aws_lakeformation_permissions": {
          "read_method": "dataSourcePermissionsRead"
        },
        "aws_lakeformation_resource": {
          "read_method": "dataSourceResourceRead"
        }
      }
    },
    {
      "service_name": "lambda",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/lambda",
      "aws_sdk_resources": {
        "aws_lambda_alias": {
          "terraform_type": "aws_lambda_alias",
          "factory_function": "resourceLambdaAlias",
          "name": "Alias",
          "sdk_type": "sdk"
        },
        "aws_lambda_code_signing_config": {
          "terraform_type": "aws_lambda_code_signing_config",
          "factory_function": "resourceLambdaCodeSigningConfig",
          "name": "Code Signing Config",
          "sdk_type": "sdk"
        },
        "aws_lambda_event_source_mapping": {
          "terraform_type": "aws_lambda_event_source_mapping",
          "factory_function": "resourceLambdaEventSourceMapping",
          "name": "Event Source Mapping",
          "sdk_type": "sdk"
        },
        "aws_lambda_function": {
          "terraform_type": "aws_lambda_function",
          "factory_function": "resourceLambdaFunction",
          "name": "Function",
          "sdk_type": "sdk"
        },
        "aws_lambda_function_event_invoke_config": {
          "terraform_type": "aws_lambda_function_event_invoke_config",
          "factory_function": "resourceLambdaFunctionEventInvokeConfig",
          "name": "Function Event Invoke Config",
          "sdk_type": "sdk"
        },
        "aws_lambda_function_url": {
          "terraform_type": "aws_lambda_function_url",
          "factory_function": "resourceLambdaFunctionUrl",
          "name": "Function URL",
          "sdk_type": "sdk"
        },
        "aws_lambda_invocation": {
          "terraform_type": "aws_lambda_invocation",
          "factory_function": "resourceLambdaInvocation",
          "name": "Invocation",
          "sdk_type": "sdk"
        },
        "aws_lambda_layer_version": {
          "terraform_type": "aws_lambda_layer_version",
          "factory_function": "resourceLambdaLayerVersion",
          "name": "Layer Version",
          "sdk_type": "sdk"
        },
        "aws_lambda_layer_version_permission": {
          "terraform_type": "aws_lambda_layer_version_permission",
          "factory_function": "resourceLambdaLayerVersionPermission",
          "name": "Layer Version Permission",
          "sdk_type": "sdk"
        },
        "aws_lambda_permission": {
          "terraform_type": "aws_lambda_permission",
          "factory_function": "resourceLambdaPermission",
          "name": "Permission",
          "sdk_type": "sdk"
        },
        "aws_lambda_provisioned_concurrency_config": {
          "terraform_type": "aws_lambda_provisioned_concurrency_config",
          "factory_function": "resourceLambdaProvisionedConcurrencyConfig",
          "name": "Provisioned Concurrency Config",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_lambda_alias": {
          "terraform_type": "aws_lambda_alias",
          "factory_function": "dataSourceLambdaAlias",
          "name": "Alias",
          "sdk_type": "sdk"
        },
        "aws_lambda_code_signing_config": {
          "terraform_type": "aws_lambda_code_signing_config",
          "factory_function": "dataSourceLambdaCodeSigningConfig",
          "name": "Code Signing Config",
          "sdk_type": "sdk"
        },
        "aws_lambda_function": {
          "terraform_type": "aws_lambda_function",
          "factory_function": "dataSourceLambdaFunction",
          "name": "Function",
          "sdk_type": "sdk"
        },
        "aws_lambda_function_url": {
          "terraform_type": "aws_lambda_function_url",
          "factory_function": "dataSourceLambdaFunctionUrl",
          "name": "Function URL",
          "sdk_type": "sdk"
        },
        "aws_lambda_functions": {
          "terraform_type": "aws_lambda_functions",
          "factory_function": "dataSourceLambdaFunctions",
          "name": "Functions",
          "sdk_type": "sdk"
        },
        "aws_lambda_invocation": {
          "terraform_type": "aws_lambda_invocation",
          "factory_function": "dataSourceLambdaInvocation",
          "name": "Invocation",
          "sdk_type": "sdk"
        },
        "aws_lambda_layer_version": {
          "terraform_type": "aws_lambda_layer_version",
          "factory_function": "dataSourceLambdaLayerVersion",
          "name": "Layer Version",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_lambda_function_recursion_config": {
          "terraform_type": "aws_lambda_function_recursion_config",
          "factory_function": "newLambdaFunctionRecursionConfigResource",
          "name": "Function Recursion Config",
          "sdk_type": "framework",
          "struct_type": "functionRecursionConfigResource"
        },
        "aws_lambda_runtime_management_config": {
          "terraform_type": "aws_lambda_runtime_management_config",
          "factory_function": "newLambdaRuntimeManagementConfigResource",
          "name": "Runtime Management Config",
          "sdk_type": "framework",
          "struct_type": "runtimeManagementConfigResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {
        "aws_lambda_invocation": {
          "terraform_type": "aws_lambda_invocation",
          "factory_function": "newLambdaInvocationEphemeralResource",
          "name": "Invocation",
          "sdk_type": "framework",
          "struct_type": "invocationEphemeralResource"
        }
      },
      "resource_terraform_types": {
        "functionRecursionConfigResource": "aws_lambda_function_recursion_config",
        "runtimeManagementConfigResource": "aws_lambda_runtime_management_config"
      },
      "ephemeral_terraform_types": {
        "invocationEphemeralResource": "aws_lambda_invocation"
      },
      "resource_crud_methods": {
        "aws_lambda_alias": {
          "create_method": "resourceAliasCreate",
          "read_method": "resourceAliasRead",
          "update_method": "resourceAliasUpdate",
          "delete_method": "resourceAliasDelete"
        },
        "aws_lambda_code_signing_config": {
          "create_method": "resourceCodeSigningConfigCreate",
          "read_method": "resourceCodeSigningConfigRead",
          "update_method": "resourceCodeSigningConfigUpdate",
          "delete_method": "resourceCodeSigningConfigDelete"
        },
        "aws_lambda_event_source_mapping": {
          "create_method": "resourceEventSourceMappingCreate",
          "read_method": "resourceEventSourceMappingRead",
          "update_method": "resourceEventSourceMappingUpdate",
          "delete_method": "resourceEventSourceMappingDelete"
        },
        "aws_lambda_function": {
          "create_method": "resourceFunctionCreate",
          "read_method": "resourceFunctionRead",
          "update_method": "resourceFunctionUpdate",
          "delete_method": "resourceFunctionDelete"
        },
        "aws_lambda_function_event_invoke_config": {
          "create_method": "resourceFunctionEventInvokeConfigCreate",
          "read_method": "resourceFunctionEventInvokeConfigRead",
          "update_method": "resourceFunctionEventInvokeConfigUpdate",
          "delete_method": "resourceFunctionEventInvokeConfigDelete"
        },
        "aws_lambda_function_url": {
          "create_method": "resourceFunctionURLCreate",
          "read_method": "resourceFunctionURLRead",
          "update_method": "resourceFunctionURLUpdate",
          "delete_method": "resourceFunctionURLDelete"
        },
        "aws_lambda_invocation": {
          "create_method": "resourceInvocationCreate",
          "update_method": "resourceInvocationUpdate",
          "delete_method": "resourceInvocationDelete"
        },
        "aws_lambda_layer_version": {
          "create_method": "resourceLayerVersionCreate",
          "read_method": "resourceLayerVersionRead",
          "delete_method": "resourceLayerVersionDelete"
        },
        "aws_lambda_layer_version_permission": {
          "create_method": "resourceLayerVersionPermissionCreate",
          "read_method": "resourceLayerVersionPermissionRead",
          "delete_method": "resourceLayerVersionPermissionDelete"
        },
        "aws_lambda_permission": {
          "create_method": "resourcePermissionCreate",
          "read_method": "resourcePermissionRead",
          "delete_method": "resourcePermissionDelete"
        },
        "aws_lambda_provisioned_concurrency_config": {
          "create_method": "resourceProvisionedConcurrencyConfigCreate",
          "read_method": "resourceProvisionedConcurrencyConfigRead",
          "update_method": "resourceProvisionedConcurrencyConfigUpdate",
          "delete_method": "resourceProvisionedConcurrencyConfigDelete"
        }
      },
      "data_source_methods": {
        "aws_lambda_alias": {
          "read_method": "dataSourceAliasRead"
        },
        "aws_lambda_code_signing_config": {
          "read_method": "dataSourceCodeSigningConfigRead"
        },
        "aws_lambda_function": {
          "read_method": "dataSourceFunctionRead"
        },
        "aws_lambda_function_url": {
          "read_method": "dataSourceFunctionURLRead"
        },
        "aws_lambda_functions": {
          "read_method": "dataSourceFunctionsRead"
        },
        "aws_lambda_invocation": {
          "read_method": "dataSourceInvocationRead"
        },
        "aws_lambda_layer_version": {
          "read_method": "dataSourceLayerVersionRead"
        }
      }
    },
    {
      "service_name": "lexmodels",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/lexmodels",
      "aws_sdk_resources": {
        "aws_lex_bot": {
          "terraform_type": "aws_lex_bot",
          "factory_function": "resourceLexBot",
          "name": "Bot",
          "sdk_type": "sdk"
        },
        "aws_lex_bot_alias": {
          "terraform_type": "aws_lex_bot_alias",
          "factory_function": "resourceLexBotAlias",
          "name": "Bot Alias",
          "sdk_type": "sdk"
        },
        "aws_lex_intent": {
          "terraform_type": "aws_lex_intent",
          "factory_function": "resourceLexIntent",
          "name": "Intent",
          "sdk_type": "sdk"
        },
        "aws_lex_slot_type": {
          "terraform_type": "aws_lex_slot_type",
          "factory_function": "resourceLexSlotType",
          "name": "Slot Type",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_lex_bot": {
          "terraform_type": "aws_lex_bot",
          "factory_function": "dataSourceLexBot",
          "name": "Bot",
          "sdk_type": "sdk"
        },
        "aws_lex_bot_alias": {
          "terraform_type": "aws_lex_bot_alias",
          "factory_function": "dataSourceLexBotAlias",
          "name": "Bot Alias",
          "sdk_type": "sdk"
        },
        "aws_lex_intent": {
          "terraform_type": "aws_lex_intent",
          "factory_function": "dataSourceLexIntent",
          "name": "Intent",
          "sdk_type": "sdk"
        },
        "aws_lex_slot_type": {
          "terraform_type": "aws_lex_slot_type",
          "factory_function": "dataSourceLexSlotType",
          "name": "Slot Type",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_lex_bot": {
          "create_method": "resourceBotCreate",
          "read_method": "resourceBotRead",
          "update_method": "resourceBotUpdate",
          "delete_method": "resourceBotDelete"
        },
        "aws_lex_bot_alias": {
          "create_method": "resourceBotAliasCreate",
          "read_method": "resourceBotAliasRead",
          "update_method": "resourceBotAliasUpdate",
          "delete_method": "resourceBotAliasDelete"
        },
        "aws_lex_intent": {
          "create_method": "resourceIntentCreate",
          "read_method": "resourceIntentRead",
          "update_method": "resourceIntentUpdate",
          "delete_method": "resourceIntentDelete"
        },
        "aws_lex_slot_type": {
          "create_method": "resourceSlotTypeCreate",
          "read_method": "resourceSlotTypeRead",
          "update_method": "resourceSlotTypeUpdate",
          "delete_method": "resourceSlotTypeDelete"
        }
      },
      "data_source_methods": {
        "aws_lex_bot": {
          "read_method": "dataSourceBotRead"
        },
        "aws_lex_bot_alias": {
          "read_method": "dataSourceBotAliasRead"
        },
        "aws_lex_intent": {
          "read_method": "dataSourceIntentRead"
        },
        "aws_lex_slot_type": {
          "read_method": "dataSourceSlotTypeRead"
        }
      }
    },
    {
      "service_name": "lexv2models",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/lexv2models",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_lexv2models_bot": {
          "terraform_type": "aws_lexv2models_bot",
          "factory_function": "newLexv2modelsBotResource",
          "name": "Bot",
          "sdk_type": "framework",
          "struct_type": "botResource"
        },
        "aws_lexv2models_bot_locale": {
          "terraform_type": "aws_lexv2models_bot_locale",
          "factory_function": "newLexv2modelsBotLocaleResource",
          "name": "Bot Locale",
          "sdk_type": "framework",
          "struct_type": "botLocaleResource"
        },
        "aws_lexv2models_bot_version": {
          "terraform_type": "aws_lexv2models_bot_version",
          "factory_function": "newLexv2modelsBotVersionResource",
          "name": "Bot Version",
          "sdk_type": "framework",
          "struct_type": "botVersionResource"
        },
        "aws_lexv2models_intent": {
          "terraform_type": "aws_lexv2models_intent",
          "factory_function": "newLexv2modelsIntentResource",
          "name": "Intent",
          "sdk_type": "framework",
          "struct_type": "intentResource"
        },
        "aws_lexv2models_slot": {
          "terraform_type": "aws_lexv2models_slot",
          "factory_function": "newLexv2modelsSlotResource",
          "name": "Slot",
          "sdk_type": "framework",
          "struct_type": "slotResource"
        },
        "aws_lexv2models_slot_type": {
          "terraform_type": "aws_lexv2models_slot_type",
          "factory_function": "newLexv2modelsSlotTypeResource",
          "name": "Slot Type",
          "sdk_type": "framework",
          "struct_type": "slotTypeResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "botLocaleResource": "aws_lexv2models_bot_locale",
        "botResource": "aws_lexv2models_bot",
        "botVersionResource": "aws_lexv2models_bot_version",
        "intentResource": "aws_lexv2models_intent",
        "slotResource": "aws_lexv2models_slot",
        "slotTypeResource": "aws_lexv2models_slot_type"
      }
    },
    {
      "service_name": "licensemanager",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/licensemanager",
      "aws_sdk_resources": {
        "aws_licensemanager_association": {
          "terraform_type": "aws_licensemanager_association",
          "factory_function": "resourceLicensemanagerAssociation",
          "name": "Association",
          "sdk_type": "sdk"
        },
        "aws_licensemanager_grant": {
          "terraform_type": "aws_licensemanager_grant",
          "factory_function": "resourceLicensemanagerGrant",
          "name": "Grant",
          "sdk_type": "sdk"
        },
        "aws_licensemanager_grant_accepter": {
          "terraform_type": "aws_licensemanager_grant_accepter",
          "factory_function": "resourceLicensemanagerGrantAccepter",
          "name": "Grant Accepter",
          "sdk_type": "sdk"
        },
        "aws_licensemanager_license_configuration": {
          "terraform_type": "aws_licensemanager_license_configuration",
          "factory_function": "resourceLicensemanagerLicenseConfiguration",
          "name": "License Configuration",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_licensemanager_grants": {
          "terraform_type": "aws_licensemanager_grants",
          "factory_function": "dataSourceLicensemanagerGrants",
          "name": "Grants",
          "sdk_type": "sdk"
        },
        "aws_licensemanager_received_license": {
          "terraform_type": "aws_licensemanager_received_license",
          "factory_function": "dataSourceLicensemanagerReceivedLicense",
          "name": "Received License",
          "sdk_type": "sdk"
        },
        "aws_licensemanager_received_licenses": {
          "terraform_type": "aws_licensemanager_received_licenses",
          "factory_function": "dataSourceLicensemanagerReceivedLicenses",
          "name": "Received Licenses",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_licensemanager_association": {
          "create_method": "resourceAssociationCreate",
          "read_method": "resourceAssociationRead",
          "delete_method": "resourceAssociationDelete"
        },
        "aws_licensemanager_grant": {
          "create_method": "resourceGrantCreate",
          "read_method": "resourceGrantRead",
          "update_method": "resourceGrantUpdate",
          "delete_method": "resourceGrantDelete"
        },
        "aws_licensemanager_grant_accepter": {
          "create_method": "resourceGrantAccepterCreate",
          "read_method": "resourceGrantAccepterRead",
          "delete_method": "resourceGrantAccepterDelete"
        },
        "aws_licensemanager_license_configuration": {
          "create_method": "resourceLicenseConfigurationCreate",
          "read_method": "resourceLicenseConfigurationRead",
          "update_method": "resourceLicenseConfigurationUpdate",
          "delete_method": "resourceLicenseConfigurationDelete"
        }
      },
      "data_source_methods": {
        "aws_licensemanager_grants": {
          "read_method": "dataSourceDistributedGrantsRead"
        },
        "aws_licensemanager_received_license": {
          "read_method": "dataSourceReceivedLicenseRead"
        },
        "aws_licensemanager_received_licenses": {
          "read_method": "dataSourceReceivedLicensesRead"
        }
      }
    },
    {
      "service_name": "lightsail",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/lightsail",
      "aws_sdk_resources": {
        "aws_lightsail_bucket": {
          "terraform_type": "aws_lightsail_bucket",
          "factory_function": "resourceLightsailBucket",
          "name": "Bucket",
          "sdk_type": "sdk"
        },
        "aws_lightsail_bucket_access_key": {
          "terraform_type": "aws_lightsail_bucket_access_key",
          "factory_function": "resourceLightsailBucketAccessKey",
          "name": "Bucket Access Key",
          "sdk_type": "sdk"
        },
        "aws_lightsail_bucket_resource_access": {
          "terraform_type": "aws_lightsail_bucket_resource_access",
          "factory_function": "resourceLightsailBucketResourceAccess",
          "name": "Bucket Resource Access",
          "sdk_type": "sdk"
        },
        "aws_lightsail_certificate": {
          "terraform_type": "aws_lightsail_certificate",
          "factory_function": "resourceLightsailCertificate",
          "name": "Certificate",
          "sdk_type": "sdk"
        },
        "aws_lightsail_container_service": {
          "terraform_type": "aws_lightsail_container_service",
          "factory_function": "resourceLightsailContainerService",
          "name": "Container Service",
          "sdk_type": "sdk"
        },
        "aws_lightsail_container_service_deployment_version": {
          "terraform_type": "aws_lightsail_container_service_deployment_version",
          "factory_function": "resourceLightsailContainerServiceDeploymentVersion",
          "name": "",
          "sdk_type": "sdk"
        },
        "aws_lightsail_database": {
          "terraform_type": "aws_lightsail_database",
          "factory_function": "resourceLightsailDatabase",
          "name": "Database",
          "sdk_type": "sdk"
        },
        "aws_lightsail_disk": {
          "terraform_type": "aws_lightsail_disk",
          "factory_function": "resourceLightsailDisk",
          "name": "Disk",
          "sdk_type": "sdk"
        },
        "aws_lightsail_disk_attachment": {
          "terraform_type": "aws_lightsail_disk_attachment",
          "factory_function": "resourceLightsailDiskAttachment",
          "name": "Disk Attachment",
          "sdk_type": "sdk"
        },
        "aws_lightsail_distribution": {
          "terraform_type": "aws_lightsail_distribution",
          "factory_function": "resourceLightsailDistribution",
          "name": "Distribution",
          "sdk_type": "sdk"
        },
        "aws_lightsail_domain": {
          "terraform_type": "aws_lightsail_domain",
          "factory_function": "resourceLightsailDomain",
          "name": "Domain",
          "sdk_type": "sdk"
        },
        "aws_lightsail_domain_entry": {
          "terraform_type": "aws_lightsail_domain_entry",
          "factory_function": "resourceLightsailDomainEntry",
          "name": "Domain Entry",
          "sdk_type": "sdk"
        },
        "aws_lightsail_instance": {
          "terraform_type": "aws_lightsail_instance",
          "factory_function": "resourceLightsailInstance",
          "name": "Instance",
          "sdk_type": "sdk"
        },
        "aws_lightsail_instance_public_ports": {
          "terraform_type": "aws_lightsail_instance_public_ports",
          "factory_function": "resourceLightsailInstancePublicPorts",
          "name": "Instance Public Ports",
          "sdk_type": "sdk"
        },
        "aws_lightsail_key_pair": {
          "terraform_type": "aws_lightsail_key_pair",
          "factory_function": "resourceLightsailKeyPair",
          "name": "",
          "sdk_type": "sdk"
        },
        "aws_lightsail_lb": {
          "terraform_type": "aws_lightsail_lb",
          "factory_function": "resourceLightsailLb",
          "name": "LB",
          "sdk_type": "sdk"
        },
        "aws_lightsail_lb_attachment": {
          "terraform_type": "aws_lightsail_lb_attachment",
          "factory_function": "resourceLightsailLbAttachment",
          "name": "Load Balancer Attachment",
          "sdk_type": "sdk"
        },
        "aws_lightsail_lb_certificate": {
          "terraform_type": "aws_lightsail_lb_certificate",
          "factory_function": "resourceLightsailLbCertificate",
          "name": "Load Balancer Certificate",
          "sdk_type": "sdk"
        },
        "aws_lightsail_lb_certificate_attachment": {
          "terraform_type": "aws_lightsail_lb_certificate_attachment",
          "factory_function": "resourceLightsailLbCertificateAttachment",
          "name": "Load Balancer Certificate Attachment",
          "sdk_type": "sdk"
        },
        "aws_lightsail_lb_https_redirection_policy": {
          "terraform_type": "aws_lightsail_lb_https_redirection_policy",
          "factory_function": "resourceLightsailLbHttpsRedirectionPolicy",
          "name": "Load Balancer HTTPS Redirection Policy",
          "sdk_type": "sdk"
        },
        "aws_lightsail_lb_stickiness_policy": {
          "terraform_type": "aws_lightsail_lb_stickiness_policy",
          "factory_function": "resourceLightsailLbStickinessPolicy",
          "name": "Load Balancer Stickiness Policy",
          "sdk_type": "sdk"
        },
        "aws_lightsail_static_ip": {
          "terraform_type": "aws_lightsail_static_ip",
          "factory_function": "resourceLightsailStaticIp",
          "name": "Static IP",
          "sdk_type": "sdk"
        },
        "aws_lightsail_static_ip_attachment": {
          "terraform_type": "aws_lightsail_static_ip_attachment",
          "factory_function": "resourceLightsailStaticIpAttachment",
          "name": "Static IP Attachment",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_lightsail_bucket": {
          "create_method": "resourceBucketCreate",
          "read_method": "resourceBucketRead",
          "update_method": "resourceBucketUpdate",
          "delete_method": "resourceBucketDelete"
        },
        "aws_lightsail_bucket_access_key": {
          "create_method": "resourceBucketAccessKeyCreate",
          "read_method": "resourceBucketAccessKeyRead",
          "delete_method": "resourceBucketAccessKeyDelete"
        },
        "aws_lightsail_bucket_resource_access": {
          "create_method": "resourceBucketResourceAccessCreate",
          "read_method": "resourceBucketResourceAccessRead",
          "delete_method": "resourceBucketResourceAccessDelete"
        },
        "aws_lightsail_certificate": {
          "create_method": "resourceCertificateCreate",
          "read_method": "resourceCertificateRead",
          "update_method": "resourceCertificateUpdate",
          "delete_method": "resourceCertificateDelete"
        },
        "aws_lightsail_container_service": {
          "create_method": "resourceContainerServiceCreate",
          "read_method": "resourceContainerServiceRead",
          "update_method": "resourceContainerServiceUpdate",
          "delete_method": "resourceContainerServiceDelete"
        },
        "aws_lightsail_container_service_deployment_version": {
          "create_method": "resourceContainerServiceDeploymentVersionCreate",
          "read_method": "resourceContainerServiceDeploymentVersionRead",
          "delete_method": "resourceContainerServiceDeploymentVersionDelete"
        },
        "aws_lightsail_database": {
          "create_method": "resourceDatabaseCreate",
          "read_method": "resourceDatabaseRead",
          "update_method": "resourceDatabaseUpdate",
          "delete_method": "resourceDatabaseDelete"
        },
        "aws_lightsail_disk": {
          "create_method": "resourceDiskCreate",
          "read_method": "resourceDiskRead",
          "update_method": "resourceDiskUpdate",
          "delete_method": "resourceDiskDelete"
        },
        "aws_lightsail_disk_attachment": {
          "create_method": "resourceDiskAttachmentCreate",
          "read_method": "resourceDiskAttachmentRead",
          "delete_method": "resourceDiskAttachmentDelete"
        },
        "aws_lightsail_distribution": {
          "create_method": "resourceDistributionCreate",
          "read_method": "resourceDistributionRead",
          "update_method": "resourceDistributionUpdate",
          "delete_method": "resourceDistributionDelete"
        },
        "aws_lightsail_domain": {
          "create_method": "resourceDomainCreate",
          "read_method": "resourceDomainRead",
          "delete_method": "resourceDomainDelete"
        },
        "aws_lightsail_domain_entry": {
          "create_method": "resourceDomainEntryCreate",
          "read_method": "resourceDomainEntryRead",
          "delete_method": "resourceDomainEntryDelete"
        },
        "aws_lightsail_instance": {
          "create_method": "resourceInstanceCreate",
          "read_method": "resourceInstanceRead",
          "update_method": "resourceInstanceUpdate",
          "delete_method": "resourceInstanceDelete"
        },
        "aws_lightsail_instance_public_ports": {
          "create_method": "resourceInstancePublicPortsCreate",
          "read_method": "resourceInstancePublicPortsRead",
          "delete_method": "resourceInstancePublicPortsDelete"
        },
        "aws_lightsail_key_pair": {
          "create_method": "resourceKeyPairCreate",
          "read_method": "resourceKeyPairRead",
          "update_method": "resourceKeyPairUpdate",
          "delete_method": "resourceKeyPairDelete"
        },
        "aws_lightsail_lb": {
          "create_method": "resourceLoadBalancerCreate",
          "read_method": "resourceLoadBalancerRead",
          "update_method": "resourceLoadBalancerUpdate",
          "delete_method": "resourceLoadBalancerDelete"
        },
        "aws_lightsail_lb_attachment": {
          "create_method": "resourceLoadBalancerAttachmentCreate",
          "read_method": "resourceLoadBalancerAttachmentRead",
          "delete_method": "resourceLoadBalancerAttachmentDelete"
        },
        "aws_lightsail_lb_certificate": {
          "create_method": "resourceLoadBalancerCertificateCreate",
          "read_method": "resourceLoadBalancerCertificateRead",
          "delete_method": "resourceLoadBalancerCertificateDelete"
        },
        "aws_lightsail_lb_certificate_attachment": {
          "create_method": "resourceLoadBalancerCertificateAttachmentCreate",
          "read_method": "resourceLoadBalancerCertificateAttachmentRead",
          "delete_method": "resourceLoadBalancerCertificateAttachmentDelete"
        },
        "aws_lightsail_lb_https_redirection_policy": {
          "create_method": "resourceLoadBalancerHTTPSRedirectionPolicyCreate",
          "read_method": "resourceLoadBalancerHTTPSRedirectionPolicyRead",
          "update_method": "resourceLoadBalancerHTTPSRedirectionPolicyUpdate",
          "delete_method": "resourceLoadBalancerHTTPSRedirectionPolicyDelete"
        },
        "aws_lightsail_lb_stickiness_policy": {
          "create_method": "resourceLoadBalancerStickinessPolicyCreate",
          "read_method": "resourceLoadBalancerStickinessPolicyRead",
          "update_method": "resourceLoadBalancerStickinessPolicyUpdate",
          "delete_method": "resourceLoadBalancerStickinessPolicyDelete"
        },
        "aws_lightsail_static_ip": {
          "create_method": "resourceStaticIPCreate",
          "read_method": "resourceStaticIPRead",
          "delete_method": "resourceStaticIPDelete"
        },
        "aws_lightsail_static_ip_attachment": {
          "create_method": "resourceStaticIPAttachmentCreate",
          "read_method": "resourceStaticIPAttachmentRead",
          "delete_method": "resourceStaticIPAttachmentDelete"
        }
      }
    },
    {
      "service_name": "location",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/location",
      "aws_sdk_resources": {
        "aws_location_geofence_collection": {
          "terraform_type": "aws_location_geofence_collection",
          "factory_function": "resourceLocationGeofenceCollection",
          "name": "Geofence Collection",
          "sdk_type": "sdk"
        },
        "aws_location_map": {
          "terraform_type": "aws_location_map",
          "factory_function": "resourceLocationMap",
          "name": "Map",
          "sdk_type": "sdk"
        },
        "aws_location_place_index": {
          "terraform_type": "aws_location_place_index",
          "factory_function": "resourceLocationPlaceIndex",
          "name": "Map",
          "sdk_type": "sdk"
        },
        "aws_location_route_calculator": {
          "terraform_type": "aws_location_route_calculator",
          "factory_function": "resourceLocationRouteCalculator",
          "name": "Route Calculator",
          "sdk_type": "sdk"
        },
        "aws_location_tracker": {
          "terraform_type": "aws_location_tracker",
          "factory_function": "resourceLocationTracker",
          "name": "Route Calculator",
          "sdk_type": "sdk"
        },
        "aws_location_tracker_association": {
          "terraform_type": "aws_location_tracker_association",
          "factory_function": "resourceLocationTrackerAssociation",
          "name": "Tracker Association",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_location_geofence_collection": {
          "terraform_type": "aws_location_geofence_collection",
          "factory_function": "dataSourceLocationGeofenceCollection",
          "name": "Geofence Collection",
          "sdk_type": "sdk"
        },
        "aws_location_map": {
          "terraform_type": "aws_location_map",
          "factory_function": "dataSourceLocationMap",
          "name": "Map",
          "sdk_type": "sdk"
        },
        "aws_location_place_index": {
          "terraform_type": "aws_location_place_index",
          "factory_function": "dataSourceLocationPlaceIndex",
          "name": "Place Index",
          "sdk_type": "sdk"
        },
        "aws_location_route_calculator": {
          "terraform_type": "aws_location_route_calculator",
          "factory_function": "dataSourceLocationRouteCalculator",
          "name": "Route Calculator",
          "sdk_type": "sdk"
        },
        "aws_location_tracker": {
          "terraform_type": "aws_location_tracker",
          "factory_function": "dataSourceLocationTracker",
          "name": "Tracker",
          "sdk_type": "sdk"
        },
        "aws_location_tracker_association": {
          "terraform_type": "aws_location_tracker_association",
          "factory_function": "dataSourceLocationTrackerAssociation",
          "name": "Tracker Association",
          "sdk_type": "sdk"
        },
        "aws_location_tracker_associations": {
          "terraform_type": "aws_location_tracker_associations",
          "factory_function": "dataSourceLocationTrackerAssociations",
          "name": "Tracker Associations",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_location_geofence_collection": {
          "create_method": "resourceGeofenceCollectionCreate",
          "read_method": "resourceGeofenceCollectionRead",
          "update_method": "resourceGeofenceCollectionUpdate",
          "delete_method": "resourceGeofenceCollectionDelete"
        },
        "aws_location_map": {
          "create_method": "resourceMapCreate",
          "read_method": "resourceMapRead",
          "update_method": "resourceMapUpdate",
          "delete_method": "resourceMapDelete"
        },
        "aws_location_place_index": {
          "create_method": "resourcePlaceIndexCreate",
          "read_method": "resourcePlaceIndexRead",
          "update_method": "resourcePlaceIndexUpdate",
          "delete_method": "resourcePlaceIndexDelete"
        },
        "aws_location_route_calculator": {
          "create_method": "resourceRouteCalculatorCreate",
          "read_method": "resourceRouteCalculatorRead",
          "update_method": "resourceRouteCalculatorUpdate",
          "delete_method": "resourceRouteCalculatorDelete"
        },
        "aws_location_tracker": {
          "create_method": "resourceTrackerCreate",
          "read_method": "resourceTrackerRead",
          "update_method": "resourceTrackerUpdate",
          "delete_method": "resourceTrackerDelete"
        },
        "aws_location_tracker_association": {
          "create_method": "resourceTrackerAssociationCreate",
          "read_method": "resourceTrackerAssociationRead",
          "delete_method": "resourceTrackerAssociationDelete"
        }
      },
      "data_source_methods": {
        "aws_location_geofence_collection": {
          "read_method": "dataSourceGeofenceCollectionRead"
        },
        "aws_location_map": {
          "read_method": "dataSourceMapRead"
        },
        "aws_location_place_index": {
          "read_method": "dataSourcePlaceIndexRead"
        },
        "aws_location_route_calculator": {
          "read_method": "dataSourceRouteCalculatorRead"
        },
        "aws_location_tracker": {
          "read_method": "dataSourceTrackerRead"
        },
        "aws_location_tracker_association": {
          "read_method": "dataSourceTrackerAssociationRead"
        },
        "aws_location_tracker_associations": {
          "read_method": "dataSourceTrackerAssociationsRead"
        }
      }
    },
    {
      "service_name": "logs",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/logs",
      "aws_sdk_resources": {
        "aws_cloudwatch_log_account_policy": {
          "terraform_type": "aws_cloudwatch_log_account_policy",
          "factory_function": "resourceCloudwatchLogAccountPolicy",
          "name": "Account Policy",
          "sdk_type": "sdk"
        },
        "aws_cloudwatch_log_data_protection_policy": {
          "terraform_type": "aws_cloudwatch_log_data_protection_policy",
          "factory_function": "resourceCloudwatchLogDataProtectionPolicy",
          "name": "Data Protection Policy",
          "sdk_type": "sdk"
        },
        "aws_cloudwatch_log_destination": {
          "terraform_type": "aws_cloudwatch_log_destination",
          "factory_function": "resourceCloudwatchLogDestination",
          "name": "Destination",
          "sdk_type": "sdk"
        },
        "aws_cloudwatch_log_destination_policy": {
          "terraform_type": "aws_cloudwatch_log_destination_policy",
          "factory_function": "resourceCloudwatchLogDestinationPolicy",
          "name": "Destination Policy",
          "sdk_type": "sdk"
        },
        "aws_cloudwatch_log_group": {
          "terraform_type": "aws_cloudwatch_log_group",
          "factory_function": "resourceCloudwatchLogGroup",
          "name": "Log Group",
          "sdk_type": "sdk"
        },
        "aws_cloudwatch_log_metric_filter": {
          "terraform_type": "aws_cloudwatch_log_metric_filter",
          "factory_function": "resourceCloudwatchLogMetricFilter",
          "name": "Metric Filter",
          "sdk_type": "sdk"
        },
        "aws_cloudwatch_log_resource_policy": {
          "terraform_type": "aws_cloudwatch_log_resource_policy",
          "factory_function": "resourceCloudwatchLogResourcePolicy",
          "name": "Resource Policy",
          "sdk_type": "sdk"
        },
        "aws_cloudwatch_log_stream": {
          "terraform_type": "aws_cloudwatch_log_stream",
          "factory_function": "resourceCloudwatchLogStream",
          "name": "Log Stream",
          "sdk_type": "sdk"
        },
        "aws_cloudwatch_log_subscription_filter": {
          "terraform_type": "aws_cloudwatch_log_subscription_filter",
          "factory_function": "resourceCloudwatchLogSubscriptionFilter",
          "name": "Subscription Filter",
          "sdk_type": "sdk"
        },
        "aws_cloudwatch_query_definition": {
          "terraform_type": "aws_cloudwatch_query_definition",
          "factory_function": "resourceCloudwatchQueryDefinition",
          "name": "Query Definition",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_cloudwatch_log_data_protection_policy_document": {
          "terraform_type": "aws_cloudwatch_log_data_protection_policy_document",
          "factory_function": "dataSourceCloudwatchLogDataProtectionPolicyDocument",
          "name": "Data Protection Policy Document",
          "sdk_type": "sdk"
        },
        "aws_cloudwatch_log_group": {
          "terraform_type": "aws_cloudwatch_log_group",
          "factory_function": "dataSourceCloudwatchLogGroup",
          "name": "Log Group",
          "sdk_type": "sdk"
        },
        "aws_cloudwatch_log_groups": {
          "terraform_type": "aws_cloudwatch_log_groups",
          "factory_function": "dataSourceCloudwatchLogGroups",
          "name": "Log Groups",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_cloudwatch_log_anomaly_detector": {
          "terraform_type": "aws_cloudwatch_log_anomaly_detector",
          "factory_function": "newCloudwatchLogAnomalyDetectorResource",
          "name": "Anomaly Detector",
          "sdk_type": "framework",
          "struct_type": "anomalyDetectorResource"
        },
        "aws_cloudwatch_log_delivery": {
          "terraform_type": "aws_cloudwatch_log_delivery",
          "factory_function": "newCloudwatchLogDeliveryResource",
          "name": "Delivery",
          "sdk_type": "framework",
          "struct_type": "deliveryResource"
        },
        "aws_cloudwatch_log_delivery_destination": {
          "terraform_type": "aws_cloudwatch_log_delivery_destination",
          "factory_function": "newCloudwatchLogDeliveryDestinationResource",
          "name": "Delivery Destination",
          "sdk_type": "framework",
          "struct_type": "deliveryDestinationResource"
        },
        "aws_cloudwatch_log_delivery_destination_policy": {
          "terraform_type": "aws_cloudwatch_log_delivery_destination_policy",
          "factory_function": "newCloudwatchLogDeliveryDestinationPolicyResource",
          "name": "Delivery Destination Policy",
          "sdk_type": "framework",
          "struct_type": "deliveryDestinationPolicyResource"
        },
        "aws_cloudwatch_log_delivery_source": {
          "terraform_type": "aws_cloudwatch_log_delivery_source",
          "factory_function": "newCloudwatchLogDeliverySourceResource",
          "name": "Delivery Source",
          "sdk_type": "framework",
          "struct_type": "deliverySourceResource"
        },
        "aws_cloudwatch_log_index_policy": {
          "terraform_type": "aws_cloudwatch_log_index_policy",
          "factory_function": "newCloudwatchLogIndexPolicyResource",
          "name": "Index Policy",
          "sdk_type": "framework",
          "struct_type": "indexPolicyResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "anomalyDetectorResource": "aws_cloudwatch_log_anomaly_detector",
        "deliveryDestinationPolicyResource": "aws_cloudwatch_log_delivery_destination_policy",
        "deliveryDestinationResource": "aws_cloudwatch_log_delivery_destination",
        "deliveryResource": "aws_cloudwatch_log_delivery",
        "deliverySourceResource": "aws_cloudwatch_log_delivery_source",
        "indexPolicyResource": "aws_cloudwatch_log_index_policy"
      },
      "resource_crud_methods": {
        "aws_cloudwatch_log_account_policy": {
          "create_method": "resourceAccountPolicyPut",
          "read_method": "resourceAccountPolicyRead",
          "update_method": "resourceAccountPolicyPut",
          "delete_method": "resourceAccountPolicyDelete"
        },
        "aws_cloudwatch_log_data_protection_policy": {
          "create_method": "resourceDataProtectionPolicyPut",
          "read_method": "resourceDataProtectionPolicyRead",
          "update_method": "resourceDataProtectionPolicyPut",
          "delete_method": "resourceDataProtectionPolicyDelete"
        },
        "aws_cloudwatch_log_destination": {
          "create_method": "resourceDestinationCreate",
          "read_method": "resourceDestinationRead",
          "update_method": "resourceDestinationUpdate",
          "delete_method": "resourceDestinationDelete"
        },
        "aws_cloudwatch_log_destination_policy": {
          "create_method": "resourceDestinationPolicyPut",
          "read_method": "resourceDestinationPolicyRead",
          "update_method": "resourceDestinationPolicyPut"
        },
        "aws_cloudwatch_log_group": {
          "create_method": "resourceGroupCreate",
          "read_method": "resourceGroupRead",
          "update_method": "resourceGroupUpdate",
          "delete_method": "resourceGroupDelete"
        },
        "aws_cloudwatch_log_metric_filter": {
          "create_method": "resourceMetricFilterPut",
          "read_method": "resourceMetricFilterRead",
          "update_method": "resourceMetricFilterPut",
          "delete_method": "resourceMetricFilterDelete"
        },
        "aws_cloudwatch_log_resource_policy": {
          "create_method": "resourceResourcePolicyPut",
          "read_method": "resourceResourcePolicyRead",
          "update_method": "resourceResourcePolicyPut",
          "delete_method": "resourceResourcePolicyDelete"
        },
        "aws_cloudwatch_log_stream": {
          "create_method": "resourceStreamCreate",
          "read_method": "resourceStreamRead",
          "delete_method": "resourceStreamDelete"
        },
        "aws_cloudwatch_log_subscription_filter": {
          "create_method": "resourceSubscriptionFilterPut",
          "read_method": "resourceSubscriptionFilterRead",
          "update_method": "resourceSubscriptionFilterPut",
          "delete_method": "resourceSubscriptionFilterDelete"
        },
        "aws_cloudwatch_query_definition": {
          "create_method": "resourceQueryDefinitionPut",
          "read_method": "resourceQueryDefinitionRead",
          "update_method": "resourceQueryDefinitionPut",
          "delete_method": "resourceQueryDefinitionDelete"
        }
      },
      "data_source_methods": {
        "aws_cloudwatch_log_data_protection_policy_document": {
          "read_method": "dataSourceDataProtectionPolicyDocumentRead"
        },
        "aws_cloudwatch_log_group": {
          "read_method": "dataSourceGroupRead"
        },
        "aws_cloudwatch_log_groups": {
          "read_method": "dataSourceGroupsRead"
        }
      }
    },
    {
      "service_name": "m2",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/m2",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_m2_application": {
          "terraform_type": "aws_m2_application",
          "factory_function": "newM2ApplicationResource",
          "name": "Application",
          "sdk_type": "framework",
          "struct_type": "applicationResource"
        },
        "aws_m2_deployment": {
          "terraform_type": "aws_m2_deployment",
          "factory_function": "newM2DeploymentResource",
          "name": "Deployment",
          "sdk_type": "framework",
          "struct_type": "deploymentResource"
        },
        "aws_m2_environment": {
          "terraform_type": "aws_m2_environment",
          "factory_function": "newM2EnvironmentResource",
          "name": "Environment",
          "sdk_type": "framework",
          "struct_type": "environmentResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "applicationResource": "aws_m2_application",
        "deploymentResource": "aws_m2_deployment",
        "environmentResource": "aws_m2_environment"
      }
    },
    {
      "service_name": "macie2",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/macie2",
      "aws_sdk_resources": {
        "aws_macie2_account": {
          "terraform_type": "aws_macie2_account",
          "factory_function": "resourceMacie2Account",
          "name": "Account",
          "sdk_type": "sdk"
        },
        "aws_macie2_classification_export_configuration": {
          "terraform_type": "aws_macie2_classification_export_configuration",
          "factory_function": "resourceMacie2ClassificationExportConfiguration",
          "name": "Classification Export Configuration",
          "sdk_type": "sdk"
        },
        "aws_macie2_classification_job": {
          "terraform_type": "aws_macie2_classification_job",
          "factory_function": "resourceMacie2ClassificationJob",
          "name": "Classification Job",
          "sdk_type": "sdk"
        },
        "aws_macie2_custom_data_identifier": {
          "terraform_type": "aws_macie2_custom_data_identifier",
          "factory_function": "resourceMacie2CustomDataIdentifier",
          "name": "Custom Data Identifier",
          "sdk_type": "sdk"
        },
        "aws_macie2_findings_filter": {
          "terraform_type": "aws_macie2_findings_filter",
          "factory_function": "resourceMacie2FindingsFilter",
          "name": "Findings Filter",
          "sdk_type": "sdk"
        },
        "aws_macie2_invitation_accepter": {
          "terraform_type": "aws_macie2_invitation_accepter",
          "factory_function": "resourceMacie2InvitationAccepter",
          "name": "Invitation Accepter",
          "sdk_type": "sdk"
        },
        "aws_macie2_member": {
          "terraform_type": "aws_macie2_member",
          "factory_function": "resourceMacie2Member",
          "name": "Member",
          "sdk_type": "sdk"
        },
        "aws_macie2_organization_admin_account": {
          "terraform_type": "aws_macie2_organization_admin_account",
          "factory_function": "resourceMacie2OrganizationAdminAccount",
          "name": "Organization Admin Account",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_macie2_organization_configuration": {
          "terraform_type": "aws_macie2_organization_configuration",
          "factory_function": "newMacie2OrganizationConfigurationResource",
          "name": "Organization Configuration",
          "sdk_type": "framework",
          "struct_type": "organizationConfigurationResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "organizationConfigurationResource": "aws_macie2_organization_configuration"
      },
      "resource_crud_methods": {
        "aws_macie2_account": {
          "create_method": "resourceAccountCreate",
          "read_method": "resourceAccountRead",
          "update_method": "resourceAccountUpdate",
          "delete_method": "resourceAccountDelete"
        },
        "aws_macie2_classification_export_configuration": {
          "create_method": "resourceClassificationExportConfigurationCreate",
          "read_method": "resourceClassificationExportConfigurationRead",
          "update_method": "resourceClassificationExportConfigurationUpdate",
          "delete_method": "resourceClassificationExportConfigurationDelete"
        },
        "aws_macie2_classification_job": {
          "create_method": "resourceClassificationJobCreate",
          "read_method": "resourceClassificationJobRead",
          "update_method": "resourceClassificationJobUpdate",
          "delete_method": "resourceClassificationJobDelete"
        },
        "aws_macie2_custom_data_identifier": {
          "create_method": "resourceCustomDataIdentifierCreate",
          "read_method": "resourceCustomDataIdentifierRead",
          "update_method": "resourceCustomDataIdentifierUpdate",
          "delete_method": "resourceCustomDataIdentifierDelete"
        },
        "aws_macie2_findings_filter": {
          "create_method": "resourceFindingsFilterCreate",
          "read_method": "resourceFindingsFilterRead",
          "update_method": "resourceFindingsFilterUpdate",
          "delete_method": "resourceFindingsFilterDelete"
        },
        "aws_macie2_invitation_accepter": {
          "create_method": "resourceInvitationAccepterCreate",
          "read_method": "resourceInvitationAccepterRead",
          "delete_method": "resourceInvitationAccepterDelete"
        },
        "aws_macie2_member": {
          "create_method": "resourceMemberCreate",
          "read_method": "resourceMemberRead",
          "update_method": "resourceMemberUpdate",
          "delete_method": "resourceMemberDelete"
        },
        "aws_macie2_organization_admin_account": {
          "create_method": "resourceOrganizationAdminAccountCreate",
          "read_method": "resourceOrganizationAdminAccountRead",
          "delete_method": "resourceOrganizationAdminAccountDelete"
        }
      }
    },
    {
      "service_name": "mediaconvert",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/mediaconvert",
      "aws_sdk_resources": {
        "aws_media_convert_queue": {
          "terraform_type": "aws_media_convert_queue",
          "factory_function": "resourceMediaConvertQueue",
          "name": "Queue",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_media_convert_queue": {
          "terraform_type": "aws_media_convert_queue",
          "factory_function": "dataSourceMediaConvertQueue",
          "name": "Queue",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_media_convert_queue": {
          "create_method": "resourceQueueCreate",
          "read_method": "resourceQueueRead",
          "update_method": "resourceQueueUpdate",
          "delete_method": "resourceQueueDelete"
        }
      },
      "data_source_methods": {
        "aws_media_convert_queue": {
          "read_method": "dataSourceQueueRead"
        }
      }
    },
    {
      "service_name": "medialive",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/medialive",
      "aws_sdk_resources": {
        "aws_medialive_channel": {
          "terraform_type": "aws_medialive_channel",
          "factory_function": "resourceMedialiveChannel",
          "name": "Channel",
          "sdk_type": "sdk"
        },
        "aws_medialive_input": {
          "terraform_type": "aws_medialive_input",
          "factory_function": "resourceMedialiveInput",
          "name": "Input",
          "sdk_type": "sdk"
        },
        "aws_medialive_input_security_group": {
          "terraform_type": "aws_medialive_input_security_group",
          "factory_function": "resourceMedialiveInputSecurityGroup",
          "name": "Input Security Group",
          "sdk_type": "sdk"
        },
        "aws_medialive_multiplex": {
          "terraform_type": "aws_medialive_multiplex",
          "factory_function": "resourceMedialiveMultiplex",
          "name": "Multiplex",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_medialive_multiplex_program": {
          "terraform_type": "aws_medialive_multiplex_program",
          "factory_function": "newMedialiveMultiplexProgramResource",
          "name": "Multiplex Program",
          "sdk_type": "framework",
          "struct_type": "multiplexProgramResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_medialive_input": {
          "terraform_type": "aws_medialive_input",
          "factory_function": "newMedialiveInputDataSource",
          "name": "Input",
          "sdk_type": "framework",
          "struct_type": "inputDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "multiplexProgramResource": "aws_medialive_multiplex_program"
      },
      "data_source_terraform_types": {
        "inputDataSource": "aws_medialive_input"
      },
      "resource_crud_methods": {
        "aws_medialive_channel": {
          "create_method": "resourceChannelCreate",
          "read_method": "resourceChannelRead",
          "update_method": "resourceChannelUpdate",
          "delete_method": "resourceChannelDelete"
        },
        "aws_medialive_input": {
          "create_method": "resourceInputCreate",
          "read_method": "resourceInputRead",
          "update_method": "resourceInputUpdate",
          "delete_method": "resourceInputDelete"
        },
        "aws_medialive_input_security_group": {
          "create_method": "resourceInputSecurityGroupCreate",
          "read_method": "resourceInputSecurityGroupRead",
          "update_method": "resourceInputSecurityGroupUpdate",
          "delete_method": "resourceInputSecurityGroupDelete"
        },
        "aws_medialive_multiplex": {
          "create_method": "resourceMultiplexCreate",
          "read_method": "resourceMultiplexRead",
          "update_method": "resourceMultiplexUpdate",
          "delete_method": "resourceMultiplexDelete"
        }
      }
    },
    {
      "service_name": "mediapackage",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/mediapackage",
      "aws_sdk_resources": {
        "aws_media_package_channel": {
          "terraform_type": "aws_media_package_channel",
          "factory_function": "resourceMediaPackageChannel",
          "name": "Channel",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_media_package_channel": {
          "create_method": "resourceChannelCreate",
          "read_method": "resourceChannelRead",
          "update_method": "resourceChannelUpdate",
          "delete_method": "resourceChannelDelete"
        }
      }
    },
    {
      "service_name": "mediapackagev2",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/mediapackagev2",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_media_packagev2_channel_group": {
          "terraform_type": "aws_media_packagev2_channel_group",
          "factory_function": "newMediaPackagev2ChannelGroupResource",
          "name": "Channel Group",
          "sdk_type": "framework",
          "struct_type": "channelGroupResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "channelGroupResource": "aws_media_packagev2_channel_group"
      }
    },
    {
      "service_name": "mediastore",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/mediastore",
      "aws_sdk_resources": {
        "aws_media_store_container": {
          "terraform_type": "aws_media_store_container",
          "factory_function": "resourceMediaStoreContainer",
          "name": "Container",
          "sdk_type": "sdk"
        },
        "aws_media_store_container_policy": {
          "terraform_type": "aws_media_store_container_policy",
          "factory_function": "resourceMediaStoreContainerPolicy",
          "name": "Container Policy",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_media_store_container": {
          "create_method": "resourceContainerCreate",
          "read_method": "resourceContainerRead",
          "update_method": "resourceContainerUpdate",
          "delete_method": "resourceContainerDelete"
        },
        "aws_media_store_container_policy": {
          "create_method": "resourceContainerPolicyPut",
          "read_method": "resourceContainerPolicyRead",
          "update_method": "resourceContainerPolicyPut",
          "delete_method": "resourceContainerPolicyDelete"
        }
      }
    },
    {
      "service_name": "meta",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/meta",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {
        "aws_arn": {
          "terraform_type": "aws_arn",
          "factory_function": "newArnDataSource",
          "name": "ARN",
          "sdk_type": "framework",
          "struct_type": "arnDataSource"
        },
        "aws_default_tags": {
          "terraform_type": "aws_default_tags",
          "factory_function": "newDefaultTagsDataSource",
          "name": "Default Tags",
          "sdk_type": "framework",
          "struct_type": "defaultTagsDataSource"
        },
        "aws_ip_ranges": {
          "terraform_type": "aws_ip_ranges",
          "factory_function": "newIpRangesDataSource",
          "name": "IP Ranges",
          "sdk_type": "framework",
          "struct_type": "ipRangesDataSource"
        },
        "aws_partition": {
          "terraform_type": "aws_partition",
          "factory_function": "newPartitionDataSource",
          "name": "Partition",
          "sdk_type": "framework",
          "struct_type": "partitionDataSource"
        },
        "aws_region": {
          "terraform_type": "aws_region",
          "factory_function": "newRegionDataSource",
          "name": "Region",
          "sdk_type": "framework",
          "struct_type": "regionDataSource"
        },
        "aws_regions": {
          "terraform_type": "aws_regions",
          "factory_function": "newRegionsDataSource",
          "name": "Regions",
          "sdk_type": "framework",
          "struct_type": "regionsDataSource"
        },
        "aws_service": {
          "terraform_type": "aws_service",
          "factory_function": "newServiceDataSource",
          "name": "Service",
          "sdk_type": "framework",
          "struct_type": "serviceDataSource"
        },
        "aws_service_principal": {
          "terraform_type": "aws_service_principal",
          "factory_function": "newServicePrincipalDataSource",
          "name": "Service Principal",
          "sdk_type": "framework",
          "struct_type": "servicePrincipalDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "data_source_terraform_types": {
        "arnDataSource": "aws_arn",
        "defaultTagsDataSource": "aws_default_tags",
        "ipRangesDataSource": "aws_ip_ranges",
        "partitionDataSource": "aws_partition",
        "regionDataSource": "aws_region",
        "regionsDataSource": "aws_regions",
        "serviceDataSource": "aws_service",
        "servicePrincipalDataSource": "aws_service_principal"
      }
    },
    {
      "service_name": "memorydb",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/memorydb",
      "aws_sdk_resources": {
        "aws_memorydb_acl": {
          "terraform_type": "aws_memorydb_acl",
          "factory_function": "resourceMemorydbAcl",
          "name": "ACL",
          "sdk_type": "sdk"
        },
        "aws_memorydb_cluster": {
          "terraform_type": "aws_memorydb_cluster",
          "factory_function": "resourceMemorydbCluster",
          "name": "Cluster",
          "sdk_type": "sdk"
        },
        "aws_memorydb_parameter_group": {
          "terraform_type": "aws_memorydb_parameter_group",
          "factory_function": "resourceMemorydbParameterGroup",
          "name": "Parameter Group",
          "sdk_type": "sdk"
        },
        "aws_memorydb_snapshot": {
          "terraform_type": "aws_memorydb_snapshot",
          "factory_function": "resourceMemorydbSnapshot",
          "name": "Snapshot",
          "sdk_type": "sdk"
        },
        "aws_memorydb_subnet_group": {
          "terraform_type": "aws_memorydb_subnet_group",
          "factory_function": "resourceMemorydbSubnetGroup",
          "name": "Subnet Group",
          "sdk_type": "sdk"
        },
        "aws_memorydb_user": {
          "terraform_type": "aws_memorydb_user",
          "factory_function": "resourceMemorydbUser",
          "name": "User",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_memorydb_acl": {
          "terraform_type": "aws_memorydb_acl",
          "factory_function": "dataSourceMemorydbAcl",
          "name": "ACL",
          "sdk_type": "sdk"
        },
        "aws_memorydb_cluster": {
          "terraform_type": "aws_memorydb_cluster",
          "factory_function": "dataSourceMemorydbCluster",
          "name": "Cluster",
          "sdk_type": "sdk"
        },
        "aws_memorydb_parameter_group": {
          "terraform_type": "aws_memorydb_parameter_group",
          "factory_function": "dataSourceMemorydbParameterGroup",
          "name": "Parameter Group",
          "sdk_type": "sdk"
        },
        "aws_memorydb_snapshot": {
          "terraform_type": "aws_memorydb_snapshot",
          "factory_function": "dataSourceMemorydbSnapshot",
          "name": "Snapshot",
          "sdk_type": "sdk"
        },
        "aws_memorydb_subnet_group": {
          "terraform_type": "aws_memorydb_subnet_group",
          "factory_function": "dataSourceMemorydbSubnetGroup",
          "name": "Subnet Group",
          "sdk_type": "sdk"
        },
        "aws_memorydb_user": {
          "terraform_type": "aws_memorydb_user",
          "factory_function": "dataSourceMemorydbUser",
          "name": "User",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_memorydb_multi_region_cluster": {
          "terraform_type": "aws_memorydb_multi_region_cluster",
          "factory_function": "newMemorydbMultiRegionClusterResource",
          "name": "Multi Region Cluster",
          "sdk_type": "framework",
          "struct_type": "multiRegionClusterResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "multiRegionClusterResource": "aws_memorydb_multi_region_cluster"
      },
      "resource_crud_methods": {
        "aws_memorydb_acl": {
          "create_method": "resourceACLCreate",
          "read_method": "resourceACLRead",
          "update_method": "resourceACLUpdate",
          "delete_method": "resourceACLDelete"
        },
        "aws_memorydb_cluster": {
          "create_method": "resourceClusterCreate",
          "read_method": "resourceClusterRead",
          "update_method": "resourceClusterUpdate",
          "delete_method": "resourceClusterDelete"
        },
        "aws_memorydb_parameter_group": {
          "create_method": "resourceParameterGroupCreate",
          "read_method": "resourceParameterGroupRead",
          "update_method": "resourceParameterGroupUpdate",
          "delete_method": "resourceParameterGroupDelete"
        },
        "aws_memorydb_snapshot": {
          "create_method": "resourceSnapshotCreate",
          "read_method": "resourceSnapshotRead",
          "update_method": "resourceSnapshotUpdate",
          "delete_method": "resourceSnapshotDelete"
        },
        "aws_memorydb_subnet_group": {
          "create_method": "resourceSubnetGroupCreate",
          "read_method": "resourceSubnetGroupRead",
          "update_method": "resourceSubnetGroupUpdate",
          "delete_method": "resourceSubnetGroupDelete"
        },
        "aws_memorydb_user": {
          "create_method": "resourceUserCreate",
          "read_method": "resourceUserRead",
          "update_method": "resourceUserUpdate",
          "delete_method": "resourceUserDelete"
        }
      },
      "data_source_methods": {
        "aws_memorydb_acl": {
          "read_method": "dataSourceACLRead"
        },
        "aws_memorydb_cluster": {
          "read_method": "dataSourceClusterRead"
        },
        "aws_memorydb_parameter_group": {
          "read_method": "dataSourceParameterGroupRead"
        },
        "aws_memorydb_snapshot": {
          "read_method": "dataSourceSnapshotRead"
        },
        "aws_memorydb_subnet_group": {
          "read_method": "dataSourceSubnetGroupRead"
        },
        "aws_memorydb_user": {
          "read_method": "dataSourceUserRead"
        }
      }
    },
    {
      "service_name": "mq",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/mq",
      "aws_sdk_resources": {
        "aws_mq_broker": {
          "terraform_type": "aws_mq_broker",
          "factory_function": "resourceMqBroker",
          "name": "Broker",
          "sdk_type": "sdk"
        },
        "aws_mq_configuration": {
          "terraform_type": "aws_mq_configuration",
          "factory_function": "resourceMqConfiguration",
          "name": "Configuration",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_mq_broker": {
          "terraform_type": "aws_mq_broker",
          "factory_function": "dataSourceMqBroker",
          "name": "Broker",
          "sdk_type": "sdk"
        },
        "aws_mq_broker_engine_types": {
          "terraform_type": "aws_mq_broker_engine_types",
          "factory_function": "dataSourceMqBrokerEngineTypes",
          "name": "Broker Engine Types",
          "sdk_type": "sdk"
        },
        "aws_mq_broker_instance_type_offerings": {
          "terraform_type": "aws_mq_broker_instance_type_offerings",
          "factory_function": "dataSourceMqBrokerInstanceTypeOfferings",
          "name": "Broker Instance Type Offerings",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_mq_broker": {
          "create_method": "resourceBrokerCreate",
          "read_method": "resourceBrokerRead",
          "update_method": "resourceBrokerUpdate",
          "delete_method": "resourceBrokerDelete"
        },
        "aws_mq_configuration": {
          "create_method": "resourceConfigurationCreate",
          "read_method": "resourceConfigurationRead",
          "update_method": "resourceConfigurationUpdate"
        }
      },
      "data_source_methods": {
        "aws_mq_broker": {
          "read_method": "dataSourceBrokerRead"
        },
        "aws_mq_broker_engine_types": {
          "read_method": "dataSourceBrokerEngineTypesRead"
        },
        "aws_mq_broker_instance_type_offerings": {
          "read_method": "dataSourceBrokerInstanceTypeOfferingsRead"
        }
      }
    },
    {
      "service_name": "mwaa",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/mwaa",
      "aws_sdk_resources": {
        "aws_mwaa_environment": {
          "terraform_type": "aws_mwaa_environment",
          "factory_function": "resourceMwaaEnvironment",
          "name": "Environment",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_mwaa_environment": {
          "create_method": "resourceEnvironmentCreate",
          "read_method": "resourceEnvironmentRead",
          "update_method": "resourceEnvironmentUpdate",
          "delete_method": "resourceEnvironmentDelete"
        }
      }
    },
    {
      "service_name": "neptune",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/neptune",
      "aws_sdk_resources": {
        "aws_neptune_cluster": {
          "terraform_type": "aws_neptune_cluster",
          "factory_function": "resourceNeptuneCluster",
          "name": "Cluster",
          "sdk_type": "sdk"
        },
        "aws_neptune_cluster_endpoint": {
          "terraform_type": "aws_neptune_cluster_endpoint",
          "factory_function": "resourceNeptuneClusterEndpoint",
          "name": "Cluster Endpoint",
          "sdk_type": "sdk"
        },
        "aws_neptune_cluster_instance": {
          "terraform_type": "aws_neptune_cluster_instance",
          "factory_function": "resourceNeptuneClusterInstance",
          "name": "Cluster Instance",
          "sdk_type": "sdk"
        },
        "aws_neptune_cluster_parameter_group": {
          "terraform_type": "aws_neptune_cluster_parameter_group",
          "factory_function": "resourceNeptuneClusterParameterGroup",
          "name": "Cluster Parameter Group",
          "sdk_type": "sdk"
        },
        "aws_neptune_cluster_snapshot": {
          "terraform_type": "aws_neptune_cluster_snapshot",
          "factory_function": "resourceNeptuneClusterSnapshot",
          "name": "Cluster Snapshot",
          "sdk_type": "sdk"
        },
        "aws_neptune_event_subscription": {
          "terraform_type": "aws_neptune_event_subscription",
          "factory_function": "resourceNeptuneEventSubscription",
          "name": "Event Subscription",
          "sdk_type": "sdk"
        },
        "aws_neptune_global_cluster": {
          "terraform_type": "aws_neptune_global_cluster",
          "factory_function": "resourceNeptuneGlobalCluster",
          "name": "Global Cluster",
          "sdk_type": "sdk"
        },
        "aws_neptune_parameter_group": {
          "terraform_type": "aws_neptune_parameter_group",
          "factory_function": "resourceNeptuneParameterGroup",
          "name": "Parameter Group",
          "sdk_type": "sdk"
        },
        "aws_neptune_subnet_group": {
          "terraform_type": "aws_neptune_subnet_group",
          "factory_function": "resourceNeptuneSubnetGroup",
          "name": "Subnet Group",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_neptune_engine_version": {
          "terraform_type": "aws_neptune_engine_version",
          "factory_function": "dataSourceNeptuneEngineVersion",
          "name": "Engine Version",
          "sdk_type": "sdk"
        },
        "aws_neptune_orderable_db_instance": {
          "terraform_type": "aws_neptune_orderable_db_instance",
          "factory_function": "dataSourceNeptuneOrderableDbInstance",
          "name": "Orderable DB Instance",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_neptune_cluster": {
          "create_method": "resourceClusterCreate",
          "read_method": "resourceClusterRead",
          "update_method": "resourceClusterUpdate",
          "delete_method": "resourceClusterDelete"
        },
        "aws_neptune_cluster_endpoint": {
          "create_method": "resourceClusterEndpointCreate",
          "read_method": "resourceClusterEndpointRead",
          "update_method": "resourceClusterEndpointUpdate",
          "delete_method": "resourceClusterEndpointDelete"
        },
        "aws_neptune_cluster_instance": {
          "create_method": "resourceClusterInstanceCreate",
          "read_method": "resourceClusterInstanceRead",
          "update_method": "resourceClusterInstanceUpdate",
          "delete_method": "resourceClusterInstanceDelete"
        },
        "aws_neptune_cluster_parameter_group": {
          "create_method": "resourceClusterParameterGroupCreate",
          "read_method": "resourceClusterParameterGroupRead",
          "update_method": "resourceClusterParameterGroupUpdate",
          "delete_method": "resourceClusterParameterGroupDelete"
        },
        "aws_neptune_cluster_snapshot": {
          "create_method": "resourceClusterSnapshotCreate",
          "read_method": "resourceClusterSnapshotRead",
          "delete_method": "resourceClusterSnapshotDelete"
        },
        "aws_neptune_event_subscription": {
          "create_method": "resourceEventSubscriptionCreate",
          "read_method": "resourceEventSubscriptionRead",
          "update_method": "resourceEventSubscriptionUpdate",
          "delete_method": "resourceEventSubscriptionDelete"
        },
        "aws_neptune_global_cluster": {
          "create_method": "resourceGlobalClusterCreate",
          "read_method": "resourceGlobalClusterRead",
          "update_method": "resourceGlobalClusterUpdate",
          "delete_method": "resourceGlobalClusterDelete"
        },
        "aws_neptune_parameter_group": {
          "create_method": "resourceParameterGroupCreate",
          "read_method": "resourceParameterGroupRead",
          "update_method": "resourceParameterGroupUpdate",
          "delete_method": "resourceParameterGroupDelete"
        },
        "aws_neptune_subnet_group": {
          "create_method": "resourceSubnetGroupCreate",
          "read_method": "resourceSubnetGroupRead",
          "update_method": "resourceSubnetGroupUpdate",
          "delete_method": "resourceSubnetGroupDelete"
        }
      },
      "data_source_methods": {
        "aws_neptune_engine_version": {
          "read_method": "dataSourceEngineVersionRead"
        },
        "aws_neptune_orderable_db_instance": {
          "read_method": "dataSourceOrderableDBInstanceRead"
        }
      }
    },
    {
      "service_name": "neptunegraph",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/neptunegraph",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_neptunegraph_graph": {
          "terraform_type": "aws_neptunegraph_graph",
          "factory_function": "newNeptunegraphGraphResource",
          "name": "Graph",
          "sdk_type": "framework",
          "struct_type": "graphResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "graphResource": "aws_neptunegraph_graph"
      }
    },
    {
      "service_name": "networkfirewall",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/networkfirewall",
      "aws_sdk_resources": {
        "aws_networkfirewall_firewall": {
          "terraform_type": "aws_networkfirewall_firewall",
          "factory_function": "resourceNetworkfirewallFirewall",
          "name": "Firewall",
          "sdk_type": "sdk"
        },
        "aws_networkfirewall_firewall_policy": {
          "terraform_type": "aws_networkfirewall_firewall_policy",
          "factory_function": "resourceNetworkfirewallFirewallPolicy",
          "name": "Firewall Policy",
          "sdk_type": "sdk"
        },
        "aws_networkfirewall_logging_configuration": {
          "terraform_type": "aws_networkfirewall_logging_configuration",
          "factory_function": "resourceNetworkfirewallLoggingConfiguration",
          "name": "Logging Configuration",
          "sdk_type": "sdk"
        },
        "aws_networkfirewall_resource_policy": {
          "terraform_type": "aws_networkfirewall_resource_policy",
          "factory_function": "resourceNetworkfirewallResourcePolicy",
          "name": "Resource Policy",
          "sdk_type": "sdk"
        },
        "aws_networkfirewall_rule_group": {
          "terraform_type": "aws_networkfirewall_rule_group",
          "factory_function": "resourceNetworkfirewallRuleGroup",
          "name": "Rule Group",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_networkfirewall_firewall": {
          "terraform_type": "aws_networkfirewall_firewall",
          "factory_function": "dataSourceNetworkfirewallFirewall",
          "name": "Firewall",
          "sdk_type": "sdk"
        },
        "aws_networkfirewall_firewall_policy": {
          "terraform_type": "aws_networkfirewall_firewall_policy",
          "factory_function": "dataSourceNetworkfirewallFirewallPolicy",
          "name": "Firewall Policy",
          "sdk_type": "sdk"
        },
        "aws_networkfirewall_resource_policy": {
          "terraform_type": "aws_networkfirewall_resource_policy",
          "factory_function": "dataSourceNetworkfirewallResourcePolicy",
          "name": "Resource Policy",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_networkfirewall_firewall_transit_gateway_attachment_accepter": {
          "terraform_type": "aws_networkfirewall_firewall_transit_gateway_attachment_accepter",
          "factory_function": "newNetworkfirewallFirewallTransitGatewayAttachmentAccepterResource",
          "name": "Firewall Transit Gateway Attachment Accepter",
          "sdk_type": "framework",
          "struct_type": "firewallTransitGatewayAttachmentAccepterResource"
        },
        "aws_networkfirewall_tls_inspection_configuration": {
          "terraform_type": "aws_networkfirewall_tls_inspection_configuration",
          "factory_function": "newNetworkfirewallTlsInspectionConfigurationResource",
          "name": "TLS Inspection Configuration",
          "sdk_type": "framework",
          "struct_type": "tlsInspectionConfigurationResource"
        },
        "aws_networkfirewall_vpc_endpoint_association": {
          "terraform_type": "aws_networkfirewall_vpc_endpoint_association",
          "factory_function": "newNetworkfirewallVpcEndpointAssociationResource",
          "name": "VPC Endpoint Association",
          "sdk_type": "framework",
          "struct_type": "vpcEndpointAssociationResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "firewallTransitGatewayAttachmentAccepterResource": "aws_networkfirewall_firewall_transit_gateway_attachment_accepter",
        "tlsInspectionConfigurationResource": "aws_networkfirewall_tls_inspection_configuration",
        "vpcEndpointAssociationResource": "aws_networkfirewall_vpc_endpoint_association"
      },
      "resource_crud_methods": {
        "aws_networkfirewall_firewall": {
          "create_method": "resourceFirewallCreate",
          "read_method": "resourceFirewallRead",
          "update_method": "resourceFirewallUpdate",
          "delete_method": "resourceFirewallDelete"
        },
        "aws_networkfirewall_firewall_policy": {
          "create_method": "resourceFirewallPolicyCreate",
          "read_method": "resourceFirewallPolicyRead",
          "update_method": "resourceFirewallPolicyUpdate",
          "delete_method": "resourceFirewallPolicyDelete"
        },
        "aws_networkfirewall_logging_configuration": {
          "create_method": "resourceLoggingConfigurationCreate",
          "read_method": "resourceLoggingConfigurationRead",
          "update_method": "resourceLoggingConfigurationUpdate",
          "delete_method": "resourceLoggingConfigurationDelete"
        },
        "aws_networkfirewall_resource_policy": {
          "create_method": "resourceResourcePolicyPut",
          "read_method": "resourceResourcePolicyRead",
          "update_method": "resourceResourcePolicyPut",
          "delete_method": "resourceResourcePolicyDelete"
        },
        "aws_networkfirewall_rule_group": {
          "create_method": "resourceRuleGroupCreate",
          "read_method": "resourceRuleGroupRead",
          "update_method": "resourceRuleGroupUpdate",
          "delete_method": "resourceRuleGroupDelete"
        }
      },
      "data_source_methods": {
        "aws_networkfirewall_firewall": {
          "read_method": "dataSourceFirewallResourceRead"
        },
        "aws_networkfirewall_firewall_policy": {
          "read_method": "dataSourceFirewallPolicyRead"
        },
        "aws_networkfirewall_resource_policy": {
          "read_method": "dataSourceResourcePolicyRead"
        }
      }
    },
    {
      "service_name": "networkmonitor",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/networkmonitor",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_networkmonitor_monitor": {
          "terraform_type": "aws_networkmonitor_monitor",
          "factory_function": "newNetworkmonitorMonitorResource",
          "name": "Monitor",
          "sdk_type": "framework",
          "struct_type": "monitorResource"
        },
        "aws_networkmonitor_probe": {
          "terraform_type": "aws_networkmonitor_probe",
          "factory_function": "newNetworkmonitorProbeResource",
          "name": "Probe",
          "sdk_type": "framework",
          "struct_type": "probeResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "monitorResource": "aws_networkmonitor_monitor",
        "probeResource": "aws_networkmonitor_probe"
      }
    },
    {
      "service_name": "networkmanager",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/networkmanager",
      "aws_sdk_resources": {
        "aws_networkmanager_attachment_accepter": {
          "terraform_type": "aws_networkmanager_attachment_accepter",
          "factory_function": "resourceNetworkmanagerAttachmentAccepter",
          "name": "Attachment Accepter",
          "sdk_type": "sdk"
        },
        "aws_networkmanager_connect_attachment": {
          "terraform_type": "aws_networkmanager_connect_attachment",
          "factory_function": "resourceNetworkmanagerConnectAttachment",
          "name": "Connect Attachment",
          "sdk_type": "sdk"
        },
        "aws_networkmanager_connect_peer": {
          "terraform_type": "aws_networkmanager_connect_peer",
          "factory_function": "resourceNetworkmanagerConnectPeer",
          "name": "Connect Peer",
          "sdk_type": "sdk"
        },
        "aws_networkmanager_connection": {
          "terraform_type": "aws_networkmanager_connection",
          "factory_function": "resourceNetworkmanagerConnection",
          "name": "Connection",
          "sdk_type": "sdk"
        },
        "aws_networkmanager_core_network": {
          "terraform_type": "aws_networkmanager_core_network",
          "factory_function": "resourceNetworkmanagerCoreNetwork",
          "name": "Core Network",
          "sdk_type": "sdk"
        },
        "aws_networkmanager_core_network_policy_attachment": {
          "terraform_type": "aws_networkmanager_core_network_policy_attachment",
          "factory_function": "resourceNetworkmanagerCoreNetworkPolicyAttachment",
          "name": "Core Network Policy Attachment",
          "sdk_type": "sdk"
        },
        "aws_networkmanager_customer_gateway_association": {
          "terraform_type": "aws_networkmanager_customer_gateway_association",
          "factory_function": "resourceNetworkmanagerCustomerGatewayAssociation",
          "name": "Customer Gateway Association",
          "sdk_type": "sdk"
        },
        "aws_networkmanager_device": {
          "terraform_type": "aws_networkmanager_device",
          "factory_function": "resourceNetworkmanagerDevice",
          "name": "Device",
          "sdk_type": "sdk"
        },
        "aws_networkmanager_global_network": {
          "terraform_type": "aws_networkmanager_global_network",
          "factory_function": "resourceNetworkmanagerGlobalNetwork",
          "name": "Global Network",
          "sdk_type": "sdk"
        },
        "aws_networkmanager_link": {
          "terraform_type": "aws_networkmanager_link",
          "factory_function": "resourceNetworkmanagerLink",
          "name": "Link",
          "sdk_type": "sdk"
        },
        "aws_networkmanager_link_association": {
          "terraform_type": "aws_networkmanager_link_association",
          "factory_function": "resourceNetworkmanagerLinkAssociation",
          "name": "Link Association",
          "sdk_type": "sdk"
        },
        "aws_networkmanager_site": {
          "terraform_type": "aws_networkmanager_site",
          "factory_function": "resourceNetworkmanagerSite",
          "name": "Site",
          "sdk_type": "sdk"
        },
        "aws_networkmanager_site_to_site_vpn_attachment": {
          "terraform_type": "aws_networkmanager_site_to_site_vpn_attachment",
          "factory_function": "resourceNetworkmanagerSiteToSiteVpnAttachment",
          "name": "Site To Site VPN Attachment",
          "sdk_type": "sdk"
        },
        "aws_networkmanager_transit_gateway_connect_peer_association": {
          "terraform_type": "aws_networkmanager_transit_gateway_connect_peer_association",
          "factory_function": "resourceNetworkmanagerTransitGatewayConnectPeerAssociation",
          "name": "Transit Gateway Connect Peer Association",
          "sdk_type": "sdk"
        },
        "aws_networkmanager_transit_gateway_peering": {
          "terraform_type": "aws_networkmanager_transit_gateway_peering",
          "factory_function": "resourceNetworkmanagerTransitGatewayPeering",
          "name": "Transit Gateway Peering",
          "sdk_type": "sdk"
        },
        "aws_networkmanager_transit_gateway_registration": {
          "terraform_type": "aws_networkmanager_transit_gateway_registration",
          "factory_function": "resourceNetworkmanagerTransitGatewayRegistration",
          "name": "Transit Gateway Registration",
          "sdk_type": "sdk"
        },
        "aws_networkmanager_transit_gateway_route_table_attachment": {
          "terraform_type": "aws_networkmanager_transit_gateway_route_table_attachment",
          "factory_function": "resourceNetworkmanagerTransitGatewayRouteTableAttachment",
          "name": "Transit Gateway Route Table Attachment",
          "sdk_type": "sdk"
        },
        "aws_networkmanager_vpc_attachment": {
          "terraform_type": "aws_networkmanager_vpc_attachment",
          "factory_function": "resourceNetworkmanagerVpcAttachment",
          "name": "VPC Attachment",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_networkmanager_connection": {
          "terraform_type": "aws_networkmanager_connection",
          "factory_function": "dataSourceNetworkmanagerConnection",
          "name": "Connection",
          "sdk_type": "sdk"
        },
        "aws_networkmanager_connections": {
          "terraform_type": "aws_networkmanager_connections",
          "factory_function": "dataSourceNetworkmanagerConnections",
          "name": "Connections",
          "sdk_type": "sdk"
        },
        "aws_networkmanager_core_network_policy_document": {
          "terraform_type": "aws_networkmanager_core_network_policy_document",
          "factory_function": "dataSourceNetworkmanagerCoreNetworkPolicyDocument",
          "name": "Core Network Policy Document",
          "sdk_type": "sdk"
        },
        "aws_networkmanager_device": {
          "terraform_type": "aws_networkmanager_device",
          "factory_function": "dataSourceNetworkmanagerDevice",
          "name": "Device",
          "sdk_type": "sdk"
        },
        "aws_networkmanager_devices": {
          "terraform_type": "aws_networkmanager_devices",
          "factory_function": "dataSourceNetworkmanagerDevices",
          "name": "Devices",
          "sdk_type": "sdk"
        },
        "aws_networkmanager_global_network": {
          "terraform_type": "aws_networkmanager_global_network",
          "factory_function": "dataSourceNetworkmanagerGlobalNetwork",
          "name": "Global Network",
          "sdk_type": "sdk"
        },
        "aws_networkmanager_global_networks": {
          "terraform_type": "aws_networkmanager_global_networks",
          "factory_function": "dataSourceNetworkmanagerGlobalNetworks",
          "name": "Global Networks",
          "sdk_type": "sdk"
        },
        "aws_networkmanager_link": {
          "terraform_type": "aws_networkmanager_link",
          "factory_function": "dataSourceNetworkmanagerLink",
          "name": "Link",
          "sdk_type": "sdk"
        },
        "aws_networkmanager_links": {
          "terraform_type": "aws_networkmanager_links",
          "factory_function": "dataSourceNetworkmanagerLinks",
          "name": "Links",
          "sdk_type": "sdk"
        },
        "aws_networkmanager_site": {
          "terraform_type": "aws_networkmanager_site",
          "factory_function": "dataSourceNetworkmanagerSite",
          "name": "Site",
          "sdk_type": "sdk"
        },
        "aws_networkmanager_sites": {
          "terraform_type": "aws_networkmanager_sites",
          "factory_function": "dataSourceNetworkmanagerSites",
          "name": "Sites",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_networkmanager_dx_gateway_attachment": {
          "terraform_type": "aws_networkmanager_dx_gateway_attachment",
          "factory_function": "newNetworkmanagerDxGatewayAttachmentResource",
          "name": "Direct Connect Gateway Attachment",
          "sdk_type": "framework",
          "struct_type": "directConnectGatewayAttachmentResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "directConnectGatewayAttachmentResource": "aws_networkmanager_dx_gateway_attachment"
      },
      "resource_crud_methods": {
        "aws_networkmanager_attachment_accepter": {
          "create_method": "resourceAttachmentAccepterCreate",
          "read_method": "resourceAttachmentAccepterRead",
          "delete_method": "resourceAttachmentAccepterDelete"
        },
        "aws_networkmanager_connect_attachment": {
          "create_method": "resourceConnectAttachmentCreate",
          "read_method": "resourceConnectAttachmentRead",
          "update_method": "resourceConnectAttachmentUpdate",
          "delete_method": "resourceConnectAttachmentDelete"
        },
        "aws_networkmanager_connect_peer": {
          "create_method": "resourceConnectPeerCreate",
          "read_method": "resourceConnectPeerRead",
          "update_method": "resourceConnectPeerUpdate",
          "delete_method": "resourceConnectPeerDelete"
        },
        "aws_networkmanager_connection": {
          "create_method": "resourceConnectionCreate",
          "read_method": "resourceConnectionRead",
          "update_method": "resourceConnectionUpdate",
          "delete_method": "resourceConnectionDelete"
        },
        "aws_networkmanager_core_network": {
          "create_method": "resourceCoreNetworkCreate",
          "read_method": "resourceCoreNetworkRead",
          "update_method": "resourceCoreNetworkUpdate",
          "delete_method": "resourceCoreNetworkDelete"
        },
        "aws_networkmanager_core_network_policy_attachment": {
          "create_method": "resourceCoreNetworkPolicyAttachmentCreate",
          "read_method": "resourceCoreNetworkPolicyAttachmentRead",
          "update_method": "resourceCoreNetworkPolicyAttachmentUpdate"
        },
        "aws_networkmanager_customer_gateway_association": {
          "create_method": "resourceCustomerGatewayAssociationCreate",
          "read_method": "resourceCustomerGatewayAssociationRead",
          "delete_method": "resourceCustomerGatewayAssociationDelete"
        },
        "aws_networkmanager_device": {
          "create_method": "resourceDeviceCreate",
          "read_method": "resourceDeviceRead",
          "update_method": "resourceDeviceUpdate",
          "delete_method": "resourceDeviceDelete"
        },
        "aws_networkmanager_global_network": {
          "create_method": "resourceGlobalNetworkCreate",
          "read_method": "resourceGlobalNetworkRead",
          "update_method": "resourceGlobalNetworkUpdate",
          "delete_method": "resourceGlobalNetworkDelete"
        },
        "aws_networkmanager_link": {
          "create_method": "resourceLinkCreate",
          "read_method": "resourceLinkRead",
          "update_method": "resourceLinkUpdate",
          "delete_method": "resourceLinkDelete"
        },
        "aws_networkmanager_link_association": {
          "create_method": "resourceLinkAssociationCreate",
          "read_method": "resourceLinkAssociationRead",
          "delete_method": "resourceLinkAssociationDelete"
        },
        "aws_networkmanager_site": {
          "create_method": "resourceSiteCreate",
          "read_method": "resourceSiteRead",
          "update_method": "resourceSiteUpdate",
          "delete_method": "resourceSiteDelete"
        },
        "aws_networkmanager_site_to_site_vpn_attachment": {
          "create_method": "resourceSiteToSiteVPNAttachmentCreate",
          "read_method": "resourceSiteToSiteVPNAttachmentRead",
          "update_method": "resourceSiteToSiteVPNAttachmentUpdate",
          "delete_method": "resourceSiteToSiteVPNAttachmentDelete"
        },
        "aws_networkmanager_transit_gateway_connect_peer_association": {
          "create_method": "resourceTransitGatewayConnectPeerAssociationCreate",
          "read_method": "resourceTransitGatewayConnectPeerAssociationRead",
          "delete_method": "resourceTransitGatewayConnectPeerAssociationDelete"
        },
        "aws_networkmanager_transit_gateway_peering": {
          "create_method": "resourceTransitGatewayPeeringCreate",
          "read_method": "resourceTransitGatewayPeeringRead",
          "update_method": "resourceTransitGatewayPeeringUpdate",
          "delete_method": "resourceTransitGatewayPeeringDelete"
        },
        "aws_networkmanager_transit_gateway_registration": {
          "create_method": "resourceTransitGatewayRegistrationCreate",
          "read_method": "resourceTransitGatewayRegistrationRead",
          "delete_method": "resourceTransitGatewayRegistrationDelete"
        },
        "aws_networkmanager_transit_gateway_route_table_attachment": {
          "create_method": "resourceTransitGatewayRouteTableAttachmentCreate",
          "read_method": "resourceTransitGatewayRouteTableAttachmentRead",
          "update_method": "resourceTransitGatewayRouteTableAttachmentUpdate",
          "delete_method": "resourceTransitGatewayRouteTableAttachmentDelete"
        },
        "aws_networkmanager_vpc_attachment": {
          "create_method": "resourceVPCAttachmentCreate",
          "read_method": "resourceVPCAttachmentRead",
          "update_method": "resourceVPCAttachmentUpdate",
          "delete_method": "resourceVPCAttachmentDelete"
        }
      },
      "data_source_methods": {
        "aws_networkmanager_connection": {
          "read_method": "dataSourceConnectionRead"
        },
        "aws_networkmanager_connections": {
          "read_method": "dataSourceConnectionsRead"
        },
        "aws_networkmanager_core_network_policy_document": {
          "read_method": "dataSourceCoreNetworkPolicyDocumentRead"
        },
        "aws_networkmanager_device": {
          "read_method": "dataSourceDeviceRead"
        },
        "aws_networkmanager_devices": {
          "read_method": "dataSourceDevicesRead"
        },
        "aws_networkmanager_global_network": {
          "read_method": "dataSourceGlobalNetworkRead"
        },
        "aws_networkmanager_global_networks": {
          "read_method": "dataSourceGlobalNetworksRead"
        },
        "aws_networkmanager_link": {
          "read_method": "dataSourceLinkRead"
        },
        "aws_networkmanager_links": {
          "read_method": "dataSourceLinksRead"
        },
        "aws_networkmanager_site": {
          "read_method": "dataSourceSiteRead"
        },
        "aws_networkmanager_sites": {
          "read_method": "dataSourceSitesRead"
        }
      }
    },
    {
      "service_name": "notifications",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/notifications",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_notifications_channel_association": {
          "terraform_type": "aws_notifications_channel_association",
          "factory_function": "newNotificationsChannelAssociationResource",
          "name": "Channel Association",
          "sdk_type": "framework",
          "struct_type": "channelAssociationResource"
        },
        "aws_notifications_event_rule": {
          "terraform_type": "aws_notifications_event_rule",
          "factory_function": "newNotificationsEventRuleResource",
          "name": "Event Rule",
          "sdk_type": "framework",
          "struct_type": "eventRuleResource"
        },
        "aws_notifications_notification_configuration": {
          "terraform_type": "aws_notifications_notification_configuration",
          "factory_function": "newNotificationsNotificationConfigurationResource",
          "name": "Notification Configuration",
          "sdk_type": "framework",
          "struct_type": "notificationConfigurationResource"
        },
        "aws_notifications_notification_hub": {
          "terraform_type": "aws_notifications_notification_hub",
          "factory_function": "newNotificationsNotificationHubResource",
          "name": "Notification Hub",
          "sdk_type": "framework",
          "struct_type": "notificationHubResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "channelAssociationResource": "aws_notifications_channel_association",
        "eventRuleResource": "aws_notifications_event_rule",
        "notificationConfigurationResource": "aws_notifications_notification_configuration",
        "notificationHubResource": "aws_notifications_notification_hub"
      }
    },
    {
      "service_name": "oam",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/oam",
      "aws_sdk_resources": {
        "aws_oam_link": {
          "terraform_type": "aws_oam_link",
          "factory_function": "resourceOamLink",
          "name": "Link",
          "sdk_type": "sdk"
        },
        "aws_oam_sink": {
          "terraform_type": "aws_oam_sink",
          "factory_function": "resourceOamSink",
          "name": "Sink",
          "sdk_type": "sdk"
        },
        "aws_oam_sink_policy": {
          "terraform_type": "aws_oam_sink_policy",
          "factory_function": "resourceOamSinkPolicy",
          "name": "Sink Policy",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_oam_link": {
          "terraform_type": "aws_oam_link",
          "factory_function": "dataSourceOamLink",
          "name": "Link",
          "sdk_type": "sdk"
        },
        "aws_oam_links": {
          "terraform_type": "aws_oam_links",
          "factory_function": "dataSourceOamLinks",
          "name": "Links",
          "sdk_type": "sdk"
        },
        "aws_oam_sink": {
          "terraform_type": "aws_oam_sink",
          "factory_function": "dataSourceOamSink",
          "name": "Sink",
          "sdk_type": "sdk"
        },
        "aws_oam_sinks": {
          "terraform_type": "aws_oam_sinks",
          "factory_function": "dataSourceOamSinks",
          "name": "Sinks",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_oam_link": {
          "create_method": "resourceLinkCreate",
          "read_method": "resourceLinkRead",
          "update_method": "resourceLinkUpdate",
          "delete_method": "resourceLinkDelete"
        },
        "aws_oam_sink": {
          "create_method": "resourceSinkCreate",
          "read_method": "resourceSinkRead",
          "update_method": "resourceSinkUpdate",
          "delete_method": "resourceSinkDelete"
        },
        "aws_oam_sink_policy": {
          "create_method": "resourceSinkPolicyPut",
          "read_method": "resourceSinkPolicyRead",
          "update_method": "resourceSinkPolicyPut"
        }
      },
      "data_source_methods": {
        "aws_oam_link": {
          "read_method": "dataSourceLinkRead"
        },
        "aws_oam_links": {
          "read_method": "dataSourceLinksRead"
        },
        "aws_oam_sink": {
          "read_method": "dataSourceSinkRead"
        },
        "aws_oam_sinks": {
          "read_method": "dataSourceSinksRead"
        }
      }
    },
    {
      "service_name": "notificationscontacts",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/notificationscontacts",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_notificationscontacts_email_contact": {
          "terraform_type": "aws_notificationscontacts_email_contact",
          "factory_function": "newNotificationscontactsEmailContactResource",
          "name": "Email Contact",
          "sdk_type": "framework",
          "struct_type": "emailContactResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "emailContactResource": "aws_notificationscontacts_email_contact"
      }
    },
    {
      "service_name": "odb",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/odb",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_odb_cloud_autonomous_vm_cluster": {
          "terraform_type": "aws_odb_cloud_autonomous_vm_cluster",
          "factory_function": "newOdbCloudAutonomousVmClusterResource",
          "name": "Cloud Autonomous Vm Cluster",
          "sdk_type": "framework",
          "struct_type": "resourceCloudAutonomousVmCluster"
        },
        "aws_odb_cloud_exadata_infrastructure": {
          "terraform_type": "aws_odb_cloud_exadata_infrastructure",
          "factory_function": "newOdbCloudExadataInfrastructureResource",
          "name": "Cloud Exadata Infrastructure",
          "sdk_type": "framework",
          "struct_type": "resourceCloudExadataInfrastructure"
        },
        "aws_odb_cloud_vm_cluster": {
          "terraform_type": "aws_odb_cloud_vm_cluster",
          "factory_function": "newOdbCloudVmClusterResource",
          "name": "Cloud Vm Cluster",
          "sdk_type": "framework",
          "struct_type": "resourceCloudVmCluster"
        },
        "aws_odb_network": {
          "terraform_type": "aws_odb_network",
          "factory_function": "newOdbNetworkResource",
          "name": "Network",
          "sdk_type": "framework",
          "struct_type": "resourceNetwork"
        },
        "aws_odb_network_peering_connection": {
          "terraform_type": "aws_odb_network_peering_connection",
          "factory_function": "newOdbNetworkPeeringConnectionResource",
          "name": "Network Peering Connection",
          "sdk_type": "framework",
          "struct_type": "resourceNetworkPeeringConnection"
        }
      },
      "aws_framework_data_sources": {
        "aws_odb_cloud_autonomous_vm_cluster": {
          "terraform_type": "aws_odb_cloud_autonomous_vm_cluster",
          "factory_function": "newOdbCloudAutonomousVmClusterDataSource",
          "name": "Cloud Autonomous Vm Cluster",
          "sdk_type": "framework",
          "struct_type": "dataSourceCloudAutonomousVmCluster"
        },
        "aws_odb_cloud_autonomous_vm_clusters": {
          "terraform_type": "aws_odb_cloud_autonomous_vm_clusters",
          "factory_function": "newOdbCloudAutonomousVmClustersDataSource",
          "name": "Cloud Autonomous Vm Clusters",
          "sdk_type": "framework",
          "struct_type": "dataSourceCloudAutonomousVmClustersList"
        },
        "aws_odb_cloud_exadata_infrastructure": {
          "terraform_type": "aws_odb_cloud_exadata_infrastructure",
          "factory_function": "newOdbCloudExadataInfrastructureDataSource",
          "name": "Cloud Exadata Infrastructure",
          "sdk_type": "framework",
          "struct_type": "dataSourceCloudExadataInfrastructure"
        },
        "aws_odb_cloud_exadata_infrastructures": {
          "terraform_type": "aws_odb_cloud_exadata_infrastructures",
          "factory_function": "newOdbCloudExadataInfrastructuresDataSource",
          "name": "Cloud Exadata Infrastructures",
          "sdk_type": "framework",
          "struct_type": "dataSourceCloudExadataInfrastructuresList"
        },
        "aws_odb_cloud_vm_cluster": {
          "terraform_type": "aws_odb_cloud_vm_cluster",
          "factory_function": "newOdbCloudVmClusterDataSource",
          "name": "Cloud Vm Cluster",
          "sdk_type": "framework",
          "struct_type": "dataSourceCloudVmCluster"
        },
        "aws_odb_cloud_vm_clusters": {
          "terraform_type": "aws_odb_cloud_vm_clusters",
          "factory_function": "newOdbCloudVmClustersDataSource",
          "name": "Cloud Vm Clusters",
          "sdk_type": "framework",
          "struct_type": "dataSourceCloudVmClustersList"
        },
        "aws_odb_db_node": {
          "terraform_type": "aws_odb_db_node",
          "factory_function": "newOdbDbNodeDataSource",
          "name": "Db Node",
          "sdk_type": "framework",
          "struct_type": "dataSourceDbNode"
        },
        "aws_odb_db_nodes": {
          "terraform_type": "aws_odb_db_nodes",
          "factory_function": "newOdbDbNodesDataSource",
          "name": "Db Nodes",
          "sdk_type": "framework",
          "struct_type": "dataSourceDbNodesList"
        },
        "aws_odb_db_server": {
          "terraform_type": "aws_odb_db_server",
          "factory_function": "newOdbDbServerDataSource",
          "name": "Db Server",
          "sdk_type": "framework",
          "struct_type": "dataSourceDbServer"
        },
        "aws_odb_db_servers": {
          "terraform_type": "aws_odb_db_servers",
          "factory_function": "newOdbDbServersDataSource",
          "name": "Db Servers",
          "sdk_type": "framework",
          "struct_type": "dataSourceDbServersList"
        },
        "aws_odb_db_system_shapes": {
          "terraform_type": "aws_odb_db_system_shapes",
          "factory_function": "newOdbDbSystemShapesDataSource",
          "name": "Db System Shapes",
          "sdk_type": "framework",
          "struct_type": "dataSourceDBSystemShapesList"
        },
        "aws_odb_gi_versions": {
          "terraform_type": "aws_odb_gi_versions",
          "factory_function": "newOdbGiVersionsDataSource",
          "name": "Gi Versions",
          "sdk_type": "framework",
          "struct_type": "dataSourceGiVersionsList"
        },
        "aws_odb_network": {
          "terraform_type": "aws_odb_network",
          "factory_function": "newOdbNetworkDataSource",
          "name": "Network",
          "sdk_type": "framework",
          "struct_type": "dataSourceNetwork"
        },
        "aws_odb_network_peering_connection": {
          "terraform_type": "aws_odb_network_peering_connection",
          "factory_function": "newOdbNetworkPeeringConnectionDataSource",
          "name": "Network Peering Connection",
          "sdk_type": "framework",
          "struct_type": "dataSourceNetworkPeeringConnection"
        },
        "aws_odb_network_peering_connections": {
          "terraform_type": "aws_odb_network_peering_connections",
          "factory_function": "newOdbNetworkPeeringConnectionsDataSource",
          "name": "Network Peering Connections",
          "sdk_type": "framework",
          "struct_type": "dataSourceNetworkPeeringConnectionsList"
        },
        "aws_odb_networks": {
          "terraform_type": "aws_odb_networks",
          "factory_function": "newOdbNetworksDataSource",
          "name": "Networks",
          "sdk_type": "framework",
          "struct_type": "dataSourceNetworksList"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "resourceCloudAutonomousVmCluster": "aws_odb_cloud_autonomous_vm_cluster",
        "resourceCloudExadataInfrastructure": "aws_odb_cloud_exadata_infrastructure",
        "resourceCloudVmCluster": "aws_odb_cloud_vm_cluster",
        "resourceNetwork": "aws_odb_network",
        "resourceNetworkPeeringConnection": "aws_odb_network_peering_connection"
      },
      "data_source_terraform_types": {
        "dataSourceCloudAutonomousVmCluster": "aws_odb_cloud_autonomous_vm_cluster",
        "dataSourceCloudAutonomousVmClustersList": "aws_odb_cloud_autonomous_vm_clusters",
        "dataSourceCloudExadataInfrastructure": "aws_odb_cloud_exadata_infrastructure",
        "dataSourceCloudExadataInfrastructuresList": "aws_odb_cloud_exadata_infrastructures",
        "dataSourceCloudVmCluster": "aws_odb_cloud_vm_cluster",
        "dataSourceCloudVmClustersList": "aws_odb_cloud_vm_clusters",
        "dataSourceDBSystemShapesList": "aws_odb_db_system_shapes",
        "dataSourceDbNode": "aws_odb_db_node",
        "dataSourceDbNodesList": "aws_odb_db_nodes",
        "dataSourceDbServer": "aws_odb_db_server",
        "dataSourceDbServersList": "aws_odb_db_servers",
        "dataSourceGiVersionsList": "aws_odb_gi_versions",
        "dataSourceNetwork": "aws_odb_network",
        "dataSourceNetworkPeeringConnection": "aws_odb_network_peering_connection",
        "dataSourceNetworkPeeringConnectionsList": "aws_odb_network_peering_connections",
        "dataSourceNetworksList": "aws_odb_networks"
      }
    },
    {
      "service_name": "opensearch",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/opensearch",
      "aws_sdk_resources": {
        "aws_opensearch_domain": {
          "terraform_type": "aws_opensearch_domain",
          "factory_function": "resourceOpensearchDomain",
          "name": "Domain",
          "sdk_type": "sdk"
        },
        "aws_opensearch_domain_policy": {
          "terraform_type": "aws_opensearch_domain_policy",
          "factory_function": "resourceOpensearchDomainPolicy",
          "name": "Domain Policy",
          "sdk_type": "sdk"
        },
        "aws_opensearch_domain_saml_options": {
          "terraform_type": "aws_opensearch_domain_saml_options",
          "factory_function": "resourceOpensearchDomainSamlOptions",
          "name": "Domain SAML Options",
          "sdk_type": "sdk"
        },
        "aws_opensearch_inbound_connection_accepter": {
          "terraform_type": "aws_opensearch_inbound_connection_accepter",
          "factory_function": "resourceOpensearchInboundConnectionAccepter",
          "name": "Inbound Connection Accepter",
          "sdk_type": "sdk"
        },
        "aws_opensearch_outbound_connection": {
          "terraform_type": "aws_opensearch_outbound_connection",
          "factory_function": "resourceOpensearchOutboundConnection",
          "name": "Outbound Connection",
          "sdk_type": "sdk"
        },
        "aws_opensearch_package": {
          "terraform_type": "aws_opensearch_package",
          "factory_function": "resourceOpensearchPackage",
          "name": "Package",
          "sdk_type": "sdk"
        },
        "aws_opensearch_package_association": {
          "terraform_type": "aws_opensearch_package_association",
          "factory_function": "resourceOpensearchPackageAssociation",
          "name": "Package Association",
          "sdk_type": "sdk"
        },
        "aws_opensearch_vpc_endpoint": {
          "terraform_type": "aws_opensearch_vpc_endpoint",
          "factory_function": "resourceOpensearchVpcEndpoint",
          "name": "VPC Endpoint",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_opensearch_domain": {
          "terraform_type": "aws_opensearch_domain",
          "factory_function": "dataSourceOpensearchDomain",
          "name": "Domain",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_opensearch_authorize_vpc_endpoint_access": {
          "terraform_type": "aws_opensearch_authorize_vpc_endpoint_access",
          "factory_function": "newOpensearchAuthorizeVpcEndpointAccessResource",
          "name": "Authorize VPC Endpoint Access",
          "sdk_type": "framework",
          "struct_type": "authorizeVPCEndpointAccessResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "authorizeVPCEndpointAccessResource": "aws_opensearch_authorize_vpc_endpoint_access"
      },
      "resource_crud_methods": {
        "aws_opensearch_domain": {
          "create_method": "resourceDomainCreate",
          "read_method": "resourceDomainRead",
          "update_method": "resourceDomainUpdate",
          "delete_method": "resourceDomainDelete"
        },
        "aws_opensearch_domain_policy": {
          "create_method": "resourceDomainPolicyUpsert",
          "read_method": "resourceDomainPolicyRead",
          "update_method": "resourceDomainPolicyUpsert",
          "delete_method": "resourceDomainPolicyDelete"
        },
        "aws_opensearch_domain_saml_options": {
          "create_method": "resourceDomainSAMLOptionsPut",
          "read_method": "resourceDomainSAMLOptionsRead",
          "update_method": "resourceDomainSAMLOptionsPut",
          "delete_method": "resourceDomainSAMLOptionsDelete"
        },
        "aws_opensearch_inbound_connection_accepter": {
          "create_method": "resourceInboundConnectionAccepterCreate",
          "read_method": "resourceInboundConnectionRead",
          "delete_method": "resourceInboundConnectionDelete"
        },
        "aws_opensearch_outbound_connection": {
          "create_method": "resourceOutboundConnectionCreate",
          "read_method": "resourceOutboundConnectionRead",
          "delete_method": "resourceOutboundConnectionDelete"
        },
        "aws_opensearch_package": {
          "create_method": "resourcePackageCreate",
          "read_method": "resourcePackageRead",
          "update_method": "resourcePackageUpdate",
          "delete_method": "resourcePackageDelete"
        },
        "aws_opensearch_package_association": {
          "create_method": "resourcePackageAssociationCreate",
          "read_method": "resourcePackageAssociationRead",
          "delete_method": "resourcePackageAssociationDelete"
        },
        "aws_opensearch_vpc_endpoint": {
          "create_method": "resourceVPCEndpointCreate",
          "read_method": "resourceVPCEndpointRead",
          "update_method": "resourceVPCEndpointUpdate",
          "delete_method": "resourceVPCEndpointDelete"
        }
      },
      "data_source_methods": {
        "aws_opensearch_domain": {
          "read_method": "dataSourceDomainRead"
        }
      }
    },
    {
      "service_name": "opensearchserverless",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/opensearchserverless",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {
        "aws_opensearchserverless_security_policy": {
          "terraform_type": "aws_opensearchserverless_security_policy",
          "factory_function": "dataSourceOpensearchserverlessSecurityPolicy",
          "name": "Security Policy",
          "sdk_type": "sdk"
        },
        "aws_opensearchserverless_vpc_endpoint": {
          "terraform_type": "aws_opensearchserverless_vpc_endpoint",
          "factory_function": "dataSourceOpensearchserverlessVpcEndpoint",
          "name": "VPC Endpoint",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_opensearchserverless_access_policy": {
          "terraform_type": "aws_opensearchserverless_access_policy",
          "factory_function": "newOpensearchserverlessAccessPolicyResource",
          "name": "",
          "sdk_type": "framework",
          "struct_type": "accessPolicyResource"
        },
        "aws_opensearchserverless_collection": {
          "terraform_type": "aws_opensearchserverless_collection",
          "factory_function": "newOpensearchserverlessCollectionResource",
          "name": "Collection",
          "sdk_type": "framework",
          "struct_type": "collectionResource"
        },
        "aws_opensearchserverless_lifecycle_policy": {
          "terraform_type": "aws_opensearchserverless_lifecycle_policy",
          "factory_function": "newOpensearchserverlessLifecyclePolicyResource",
          "name": "Lifecycle Policy",
          "sdk_type": "framework",
          "struct_type": "lifecyclePolicyResource"
        },
        "aws_opensearchserverless_security_config": {
          "terraform_type": "aws_opensearchserverless_security_config",
          "factory_function": "newOpensearchserverlessSecurityConfigResource",
          "name": "Security Config",
          "sdk_type": "framework",
          "struct_type": "securityConfigResource"
        },
        "aws_opensearchserverless_security_policy": {
          "terraform_type": "aws_opensearchserverless_security_policy",
          "factory_function": "newOpensearchserverlessSecurityPolicyResource",
          "name": "Security Policy",
          "sdk_type": "framework",
          "struct_type": "securityPolicyResource"
        },
        "aws_opensearchserverless_vpc_endpoint": {
          "terraform_type": "aws_opensearchserverless_vpc_endpoint",
          "factory_function": "newOpensearchserverlessVpcEndpointResource",
          "name": "VPC Endpoint",
          "sdk_type": "framework",
          "struct_type": "vpcEndpointResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_opensearchserverless_access_policy": {
          "terraform_type": "aws_opensearchserverless_access_policy",
          "factory_function": "newOpensearchserverlessAccessPolicyDataSource",
          "name": "Access Policy",
          "sdk_type": "framework",
          "struct_type": "accessPolicyDataSource"
        },
        "aws_opensearchserverless_collection": {
          "terraform_type": "aws_opensearchserverless_collection",
          "factory_function": "newOpensearchserverlessCollectionDataSource",
          "name": "Collection",
          "sdk_type": "framework",
          "struct_type": "collectionDataSource"
        },
        "aws_opensearchserverless_lifecycle_policy": {
          "terraform_type": "aws_opensearchserverless_lifecycle_policy",
          "factory_function": "newOpensearchserverlessLifecyclePolicyDataSource",
          "name": "Lifecycle Policy",
          "sdk_type": "framework",
          "struct_type": "lifecyclePolicyDataSource"
        },
        "aws_opensearchserverless_security_config": {
          "terraform_type": "aws_opensearchserverless_security_config",
          "factory_function": "newOpensearchserverlessSecurityConfigDataSource",
          "name": "Security Config",
          "sdk_type": "framework",
          "struct_type": "securityConfigDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "accessPolicyResource": "aws_opensearchserverless_access_policy",
        "collectionResource": "aws_opensearchserverless_collection",
        "lifecyclePolicyResource": "aws_opensearchserverless_lifecycle_policy",
        "securityConfigResource": "aws_opensearchserverless_security_config",
        "securityPolicyResource": "aws_opensearchserverless_security_policy",
        "vpcEndpointResource": "aws_opensearchserverless_vpc_endpoint"
      },
      "data_source_terraform_types": {
        "accessPolicyDataSource": "aws_opensearchserverless_access_policy",
        "collectionDataSource": "aws_opensearchserverless_collection",
        "lifecyclePolicyDataSource": "aws_opensearchserverless_lifecycle_policy",
        "securityConfigDataSource": "aws_opensearchserverless_security_config"
      },
      "data_source_methods": {
        "aws_opensearchserverless_security_policy": {
          "read_method": "dataSourceSecurityPolicyRead"
        },
        "aws_opensearchserverless_vpc_endpoint": {
          "read_method": "dataSourceVPCEndpointRead"
        }
      }
    },
    {
      "service_name": "organizations",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/organizations",
      "aws_sdk_resources": {
        "aws_organizations_account": {
          "terraform_type": "aws_organizations_account",
          "factory_function": "resourceOrganizationsAccount",
          "name": "Account",
          "sdk_type": "sdk"
        },
        "aws_organizations_delegated_administrator": {
          "terraform_type": "aws_organizations_delegated_administrator",
          "factory_function": "resourceOrganizationsDelegatedAdministrator",
          "name": "Delegated Administrator",
          "sdk_type": "sdk"
        },
        "aws_organizations_organization": {
          "terraform_type": "aws_organizations_organization",
          "factory_function": "resourceOrganizationsOrganization",
          "name": "Organization",
          "sdk_type": "sdk"
        },
        "aws_organizations_organizational_unit": {
          "terraform_type": "aws_organizations_organizational_unit",
          "factory_function": "resourceOrganizationsOrganizationalUnit",
          "name": "Organizational Unit",
          "sdk_type": "sdk"
        },
        "aws_organizations_policy": {
          "terraform_type": "aws_organizations_policy",
          "factory_function": "resourceOrganizationsPolicy",
          "name": "Policy",
          "sdk_type": "sdk"
        },
        "aws_organizations_policy_attachment": {
          "terraform_type": "aws_organizations_policy_attachment",
          "factory_function": "resourceOrganizationsPolicyAttachment",
          "name": "Policy Attachment",
          "sdk_type": "sdk"
        },
        "aws_organizations_resource_policy": {
          "terraform_type": "aws_organizations_resource_policy",
          "factory_function": "resourceOrganizationsResourcePolicy",
          "name": "Resource Policy",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_organizations_delegated_administrators": {
          "terraform_type": "aws_organizations_delegated_administrators",
          "factory_function": "dataSourceOrganizationsDelegatedAdministrators",
          "name": "Delegated Administrators",
          "sdk_type": "sdk"
        },
        "aws_organizations_delegated_services": {
          "terraform_type": "aws_organizations_delegated_services",
          "factory_function": "dataSourceOrganizationsDelegatedServices",
          "name": "Delegated Services",
          "sdk_type": "sdk"
        },
        "aws_organizations_organization": {
          "terraform_type": "aws_organizations_organization",
          "factory_function": "dataSourceOrganizationsOrganization",
          "name": "Organization",
          "sdk_type": "sdk"
        },
        "aws_organizations_organizational_unit": {
          "terraform_type": "aws_organizations_organizational_unit",
          "factory_function": "dataSourceOrganizationsOrganizationalUnit",
          "name": "Organizational Unit",
          "sdk_type": "sdk"
        },
        "aws_organizations_organizational_unit_child_accounts": {
          "terraform_type": "aws_organizations_organizational_unit_child_accounts",
          "factory_function": "dataSourceOrganizationsOrganizationalUnitChildAccounts",
          "name": "Organizational Unit Child Accounts",
          "sdk_type": "sdk"
        },
        "aws_organizations_organizational_unit_descendant_accounts": {
          "terraform_type": "aws_organizations_organizational_unit_descendant_accounts",
          "factory_function": "dataSourceOrganizationsOrganizationalUnitDescendantAccounts",
          "name": "Organizational Unit Descendant Accounts",
          "sdk_type": "sdk"
        },
        "aws_organizations_organizational_unit_descendant_organizational_units": {
          "terraform_type": "aws_organizations_organizational_unit_descendant_organizational_units",
          "factory_function": "dataSourceOrganizationsOrganizationalUnitDescendantOrganizationalUnits",
          "name": "Organizational Unit Descendant Organization Units",
          "sdk_type": "sdk"
        },
        "aws_organizations_organizational_units": {
          "terraform_type": "aws_organizations_organizational_units",
          "factory_function": "dataSourceOrganizationsOrganizationalUnits",
          "name": "Organizational Unit",
          "sdk_type": "sdk"
        },
        "aws_organizations_policies": {
          "terraform_type": "aws_organizations_policies",
          "factory_function": "dataSourceOrganizationsPolicies",
          "name": "Policies",
          "sdk_type": "sdk"
        },
        "aws_organizations_policies_for_target": {
          "terraform_type": "aws_organizations_policies_for_target",
          "factory_function": "dataSourceOrganizationsPoliciesForTarget",
          "name": "Policies For Target",
          "sdk_type": "sdk"
        },
        "aws_organizations_policy": {
          "terraform_type": "aws_organizations_policy",
          "factory_function": "dataSourceOrganizationsPolicy",
          "name": "Policy",
          "sdk_type": "sdk"
        },
        "aws_organizations_resource_tags": {
          "terraform_type": "aws_organizations_resource_tags",
          "factory_function": "dataSourceOrganizationsResourceTags",
          "name": "Resource Tags",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_organizations_account": {
          "create_method": "resourceAccountCreate",
          "read_method": "resourceAccountRead",
          "update_method": "resourceAccountUpdate",
          "delete_method": "resourceAccountDelete"
        },
        "aws_organizations_delegated_administrator": {
          "create_method": "resourceDelegatedAdministratorCreate",
          "read_method": "resourceDelegatedAdministratorRead",
          "delete_method": "resourceDelegatedAdministratorDelete"
        },
        "aws_organizations_organization": {
          "create_method": "resourceOrganizationCreate",
          "read_method": "resourceOrganizationRead",
          "update_method": "resourceOrganizationUpdate",
          "delete_method": "resourceOrganizationDelete"
        },
        "aws_organizations_organizational_unit": {
          "create_method": "resourceOrganizationalUnitCreate",
          "read_method": "resourceOrganizationalUnitRead",
          "update_method": "resourceOrganizationalUnitUpdate",
          "delete_method": "resourceOrganizationalUnitDelete"
        },
        "aws_organizations_policy": {
          "create_method": "resourcePolicyCreate",
          "read_method": "resourcePolicyRead",
          "update_method": "resourcePolicyUpdate",
          "delete_method": "resourcePolicyDelete"
        },
        "aws_organizations_policy_attachment": {
          "create_method": "resourcePolicyAttachmentCreate",
          "read_method": "resourcePolicyAttachmentRead",
          "update_method": "resourcePolicyAttachmentUpdate",
          "delete_method": "resourcePolicyAttachmentDelete"
        },
        "aws_organizations_resource_policy": {
          "create_method": "resourceResourcePolicyCreate",
          "read_method": "resourceResourcePolicyRead",
          "update_method": "resourceResourcePolicyUpdate",
          "delete_method": "resourceResourcePolicyDelete"
        }
      },
      "data_source_methods": {
        "aws_organizations_delegated_administrators": {
          "read_method": "dataSourceDelegatedAdministratorsRead"
        },
        "aws_organizations_delegated_services": {
          "read_method": "dataSourceDelegatedServicesRead"
        },
        "aws_organizations_organization": {
          "read_method": "dataSourceOrganizationRead"
        },
        "aws_organizations_organizational_unit": {
          "read_method": "dataSourceOrganizationalUnitRead"
        },
        "aws_organizations_organizational_unit_child_accounts": {
          "read_method": "dataSourceOrganizationalUnitChildAccountsRead"
        },
        "aws_organizations_organizational_unit_descendant_accounts": {
          "read_method": "dataSourceOrganizationalUnitDescendantAccountsRead"
        },
        "aws_organizations_organizational_unit_descendant_organizational_units": {
          "read_method": "dataSourceOrganizationalUnitDescendantOrganizationalUnitsRead"
        },
        "aws_organizations_organizational_units": {
          "read_method": "dataSourceOrganizationalUnitsRead"
        },
        "aws_organizations_policies": {
          "read_method": "dataSourcePoliciesRead"
        },
        "aws_organizations_policies_for_target": {
          "read_method": "dataSourcePoliciesForTargetRead"
        },
        "aws_organizations_policy": {
          "read_method": "dataSourcePolicyRead"
        },
        "aws_organizations_resource_tags": {
          "read_method": "dataSourceResourceTagsRead"
        }
      }
    },
    {
      "service_name": "osis",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/osis",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_osis_pipeline": {
          "terraform_type": "aws_osis_pipeline",
          "factory_function": "newOsisPipelineResource",
          "name": "Pipeline",
          "sdk_type": "framework",
          "struct_type": "pipelineResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "pipelineResource": "aws_osis_pipeline"
      }
    },
    {
      "service_name": "outposts",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/outposts",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {
        "aws_outposts_asset": {
          "terraform_type": "aws_outposts_asset",
          "factory_function": "dataSourceOutpostsAsset",
          "name": "Asset",
          "sdk_type": "sdk"
        },
        "aws_outposts_assets": {
          "terraform_type": "aws_outposts_assets",
          "factory_function": "dataSourceOutpostsAssets",
          "name": "Assets",
          "sdk_type": "sdk"
        },
        "aws_outposts_outpost": {
          "terraform_type": "aws_outposts_outpost",
          "factory_function": "dataSourceOutpostsOutpost",
          "name": "Outpost",
          "sdk_type": "sdk"
        },
        "aws_outposts_outpost_instance_type": {
          "terraform_type": "aws_outposts_outpost_instance_type",
          "factory_function": "dataSourceOutpostsOutpostInstanceType",
          "name": "Outpost Instance Type",
          "sdk_type": "sdk"
        },
        "aws_outposts_outpost_instance_types": {
          "terraform_type": "aws_outposts_outpost_instance_types",
          "factory_function": "dataSourceOutpostsOutpostInstanceTypes",
          "name": "Outpost Instance Types",
          "sdk_type": "sdk"
        },
        "aws_outposts_outposts": {
          "terraform_type": "aws_outposts_outposts",
          "factory_function": "dataSourceOutpostsOutposts",
          "name": "Outposts",
          "sdk_type": "sdk"
        },
        "aws_outposts_site": {
          "terraform_type": "aws_outposts_site",
          "factory_function": "dataSourceOutpostsSite",
          "name": "Site",
          "sdk_type": "sdk"
        },
        "aws_outposts_sites": {
          "terraform_type": "aws_outposts_sites",
          "factory_function": "dataSourceOutpostsSites",
          "name": "Sites",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "data_source_methods": {
        "aws_outposts_asset": {
          "read_method": "DataSourceOutpostAssetRead"
        },
        "aws_outposts_assets": {
          "read_method": "DataSourceOutpostAssetsRead"
        },
        "aws_outposts_outpost": {
          "read_method": "dataSourceOutpostRead"
        },
        "aws_outposts_outpost_instance_type": {
          "read_method": "dataSourceOutpostInstanceTypeRead"
        },
        "aws_outposts_outpost_instance_types": {
          "read_method": "dataSourceOutpostInstanceTypesRead"
        },
        "aws_outposts_outposts": {
          "read_method": "dataSourceOutpostsRead"
        },
        "aws_outposts_site": {
          "read_method": "dataSourceSiteRead"
        },
        "aws_outposts_sites": {
          "read_method": "dataSourceSitesRead"
        }
      }
    },
    {
      "service_name": "paymentcryptography",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/paymentcryptography",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_paymentcryptography_key": {
          "terraform_type": "aws_paymentcryptography_key",
          "factory_function": "newPaymentcryptographyKeyResource",
          "name": "Key",
          "sdk_type": "framework",
          "struct_type": "keyResource"
        },
        "aws_paymentcryptography_key_alias": {
          "terraform_type": "aws_paymentcryptography_key_alias",
          "factory_function": "newPaymentcryptographyKeyAliasResource",
          "name": "Key Alias",
          "sdk_type": "framework",
          "struct_type": "keyAliasResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "keyAliasResource": "aws_paymentcryptography_key_alias",
        "keyResource": "aws_paymentcryptography_key"
      }
    },
    {
      "service_name": "pinpoint",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/pinpoint",
      "aws_sdk_resources": {
        "aws_pinpoint_adm_channel": {
          "terraform_type": "aws_pinpoint_adm_channel",
          "factory_function": "resourcePinpointAdmChannel",
          "name": "ADM Channel",
          "sdk_type": "sdk"
        },
        "aws_pinpoint_apns_channel": {
          "terraform_type": "aws_pinpoint_apns_channel",
          "factory_function": "resourcePinpointApnsChannel",
          "name": "APNS Channel",
          "sdk_type": "sdk"
        },
        "aws_pinpoint_apns_sandbox_channel": {
          "terraform_type": "aws_pinpoint_apns_sandbox_channel",
          "factory_function": "resourcePinpointApnsSandboxChannel",
          "name": "APNS Sandbox Channel",
          "sdk_type": "sdk"
        },
        "aws_pinpoint_apns_voip_channel": {
          "terraform_type": "aws_pinpoint_apns_voip_channel",
          "factory_function": "resourcePinpointApnsVoipChannel",
          "name": "APNS VoIP Channel",
          "sdk_type": "sdk"
        },
        "aws_pinpoint_apns_voip_sandbox_channel": {
          "terraform_type": "aws_pinpoint_apns_voip_sandbox_channel",
          "factory_function": "resourcePinpointApnsVoipSandboxChannel",
          "name": "APNS VoIP Sandbox Channel",
          "sdk_type": "sdk"
        },
        "aws_pinpoint_app": {
          "terraform_type": "aws_pinpoint_app",
          "factory_function": "resourcePinpointApp",
          "name": "App",
          "sdk_type": "sdk"
        },
        "aws_pinpoint_baidu_channel": {
          "terraform_type": "aws_pinpoint_baidu_channel",
          "factory_function": "resourcePinpointBaiduChannel",
          "name": "Baidu Channel",
          "sdk_type": "sdk"
        },
        "aws_pinpoint_email_channel": {
          "terraform_type": "aws_pinpoint_email_channel",
          "factory_function": "resourcePinpointEmailChannel",
          "name": "Email Channel",
          "sdk_type": "sdk"
        },
        "aws_pinpoint_event_stream": {
          "terraform_type": "aws_pinpoint_event_stream",
          "factory_function": "resourcePinpointEventStream",
          "name": "Event Stream",
          "sdk_type": "sdk"
        },
        "aws_pinpoint_gcm_channel": {
          "terraform_type": "aws_pinpoint_gcm_channel",
          "factory_function": "resourcePinpointGcmChannel",
          "name": "GCM Channel",
          "sdk_type": "sdk"
        },
        "aws_pinpoint_sms_channel": {
          "terraform_type": "aws_pinpoint_sms_channel",
          "factory_function": "resourcePinpointSmsChannel",
          "name": "SMS Channel",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_pinpoint_email_template": {
          "terraform_type": "aws_pinpoint_email_template",
          "factory_function": "newPinpointEmailTemplateResource",
          "name": "Email Template",
          "sdk_type": "framework",
          "struct_type": "emailTemplateResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "emailTemplateResource": "aws_pinpoint_email_template"
      },
      "resource_crud_methods": {
        "aws_pinpoint_adm_channel": {
          "create_method": "resourceADMChannelUpsert",
          "read_method": "resourceADMChannelRead",
          "update_method": "resourceADMChannelUpsert",
          "delete_method": "resourceADMChannelDelete"
        },
        "aws_pinpoint_apns_channel": {
          "create_method": "resourceAPNSChannelUpsert",
          "read_method": "resourceAPNSChannelRead",
          "update_method": "resourceAPNSChannelUpsert",
          "delete_method": "resourceAPNSChannelDelete"
        },
        "aws_pinpoint_apns_sandbox_channel": {
          "create_method": "resourceAPNSSandboxChannelUpsert",
          "read_method": "resourceAPNSSandboxChannelRead",
          "update_method": "resourceAPNSSandboxChannelUpsert",
          "delete_method": "resourceAPNSSandboxChannelDelete"
        },
        "aws_pinpoint_apns_voip_channel": {
          "create_method": "resourceAPNSVoIPChannelUpsert",
          "read_method": "resourceAPNSVoIPChannelRead",
          "update_method": "resourceAPNSVoIPChannelUpsert",
          "delete_method": "resourceAPNSVoIPChannelDelete"
        },
        "aws_pinpoint_apns_voip_sandbox_channel": {
          "create_method": "resourceAPNSVoIPSandboxChannelUpsert",
          "read_method": "resourceAPNSVoIPSandboxChannelRead",
          "update_method": "resourceAPNSVoIPSandboxChannelUpsert",
          "delete_method": "resourceAPNSVoIPSandboxChannelDelete"
        },
        "aws_pinpoint_app": {
          "create_method": "resourceAppCreate",
          "read_method": "resourceAppRead",
          "update_method": "resourceAppUpdate",
          "delete_method": "resourceAppDelete"
        },
        "aws_pinpoint_baidu_channel": {
          "create_method": "resourceBaiduChannelUpsert",
          "read_method": "resourceBaiduChannelRead",
          "update_method": "resourceBaiduChannelUpsert",
          "delete_method": "resourceBaiduChannelDelete"
        },
        "aws_pinpoint_email_channel": {
          "create_method": "resourceEmailChannelUpsert",
          "read_method": "resourceEmailChannelRead",
          "update_method": "resourceEmailChannelUpsert",
          "delete_method": "resourceEmailChannelDelete"
        },
        "aws_pinpoint_event_stream": {
          "create_method": "resourceEventStreamUpsert",
          "read_method": "resourceEventStreamRead",
          "update_method": "resourceEventStreamUpsert",
          "delete_method": "resourceEventStreamDelete"
        },
        "aws_pinpoint_gcm_channel": {
          "create_method": "resourceGCMChannelUpsert",
          "read_method": "resourceGCMChannelRead",
          "update_method": "resourceGCMChannelUpsert",
          "delete_method": "resourceGCMChannelDelete"
        },
        "aws_pinpoint_sms_channel": {
          "create_method": "resourceSMSChannelUpsert",
          "read_method": "resourceSMSChannelRead",
          "update_method": "resourceSMSChannelUpsert",
          "delete_method": "resourceSMSChannelDelete"
        }
      }
    },
    {
      "service_name": "pinpointsmsvoicev2",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/pinpointsmsvoicev2",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_pinpointsmsvoicev2_configuration_set": {
          "terraform_type": "aws_pinpointsmsvoicev2_configuration_set",
          "factory_function": "newPinpointsmsvoicev2ConfigurationSetResource",
          "name": "Configuration Set",
          "sdk_type": "framework",
          "struct_type": "configurationSetResource"
        },
        "aws_pinpointsmsvoicev2_opt_out_list": {
          "terraform_type": "aws_pinpointsmsvoicev2_opt_out_list",
          "factory_function": "newPinpointsmsvoicev2OptOutListResource",
          "name": "Opt-out List",
          "sdk_type": "framework",
          "struct_type": "optOutListResource"
        },
        "aws_pinpointsmsvoicev2_phone_number": {
          "terraform_type": "aws_pinpointsmsvoicev2_phone_number",
          "factory_function": "newPinpointsmsvoicev2PhoneNumberResource",
          "name": "Phone Number",
          "sdk_type": "framework",
          "struct_type": "phoneNumberResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "configurationSetResource": "aws_pinpointsmsvoicev2_configuration_set",
        "optOutListResource": "aws_pinpointsmsvoicev2_opt_out_list",
        "phoneNumberResource": "aws_pinpointsmsvoicev2_phone_number"
      }
    },
    {
      "service_name": "pipes",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/pipes",
      "aws_sdk_resources": {
        "aws_pipes_pipe": {
          "terraform_type": "aws_pipes_pipe",
          "factory_function": "resourcePipesPipe",
          "name": "Pipe",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_pipes_pipe": {
          "create_method": "resourcePipeCreate",
          "read_method": "resourcePipeRead",
          "update_method": "resourcePipeUpdate",
          "delete_method": "resourcePipeDelete"
        }
      }
    },
    {
      "service_name": "polly",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/polly",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {
        "aws_polly_voices": {
          "terraform_type": "aws_polly_voices",
          "factory_function": "newPollyVoicesDataSource",
          "name": "Voices",
          "sdk_type": "framework",
          "struct_type": "voicesDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "data_source_terraform_types": {
        "voicesDataSource": "aws_polly_voices"
      }
    },
    {
      "service_name": "pricing",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/pricing",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {
        "aws_pricing_product": {
          "terraform_type": "aws_pricing_product",
          "factory_function": "dataSourcePricingProduct",
          "name": "Product",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "data_source_methods": {
        "aws_pricing_product": {
          "read_method": "dataSourceProductRead"
        }
      }
    },
    {
      "service_name": "qbusiness",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/qbusiness",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_qbusiness_application": {
          "terraform_type": "aws_qbusiness_application",
          "factory_function": "newQbusinessApplicationResource",
          "name": "Application",
          "sdk_type": "framework",
          "struct_type": "applicationResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "applicationResource": "aws_qbusiness_application"
      }
    },
    {
      "service_name": "qldb",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/qldb",
      "aws_sdk_resources": {
        "aws_qldb_ledger": {
          "terraform_type": "aws_qldb_ledger",
          "factory_function": "resourceQldbLedger",
          "name": "Ledger",
          "sdk_type": "sdk"
        },
        "aws_qldb_stream": {
          "terraform_type": "aws_qldb_stream",
          "factory_function": "resourceQldbStream",
          "name": "Stream",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_qldb_ledger": {
          "terraform_type": "aws_qldb_ledger",
          "factory_function": "dataSourceQldbLedger",
          "name": "Ledger",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_qldb_ledger": {
          "create_method": "resourceLedgerCreate",
          "read_method": "resourceLedgerRead",
          "update_method": "resourceLedgerUpdate",
          "delete_method": "resourceLedgerDelete"
        },
        "aws_qldb_stream": {
          "create_method": "resourceStreamCreate",
          "read_method": "resourceStreamRead",
          "update_method": "resourceStreamUpdate",
          "delete_method": "resourceStreamDelete"
        }
      },
      "data_source_methods": {
        "aws_qldb_ledger": {
          "read_method": "dataSourceLedgerRead"
        }
      }
    },
    {
      "service_name": "quicksight",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/quicksight",
      "aws_sdk_resources": {
        "aws_quicksight_account_subscription": {
          "terraform_type": "aws_quicksight_account_subscription",
          "factory_function": "resourceQuicksightAccountSubscription",
          "name": "Account Subscription",
          "sdk_type": "sdk"
        },
        "aws_quicksight_analysis": {
          "terraform_type": "aws_quicksight_analysis",
          "factory_function": "resourceQuicksightAnalysis",
          "name": "Analysis",
          "sdk_type": "sdk"
        },
        "aws_quicksight_dashboard": {
          "terraform_type": "aws_quicksight_dashboard",
          "factory_function": "resourceQuicksightDashboard",
          "name": "Dashboard",
          "sdk_type": "sdk"
        },
        "aws_quicksight_data_set": {
          "terraform_type": "aws_quicksight_data_set",
          "factory_function": "resourceQuicksightDataSet",
          "name": "Data Set",
          "sdk_type": "sdk"
        },
        "aws_quicksight_data_source": {
          "terraform_type": "aws_quicksight_data_source",
          "factory_function": "resourceQuicksightDataSource",
          "name": "Data Source",
          "sdk_type": "sdk"
        },
        "aws_quicksight_folder": {
          "terraform_type": "aws_quicksight_folder",
          "factory_function": "resourceQuicksightFolder",
          "name": "Folder",
          "sdk_type": "sdk"
        },
        "aws_quicksight_group": {
          "terraform_type": "aws_quicksight_group",
          "factory_function": "resourceQuicksightGroup",
          "name": "Group",
          "sdk_type": "sdk"
        },
        "aws_quicksight_group_membership": {
          "terraform_type": "aws_quicksight_group_membership",
          "factory_function": "resourceQuicksightGroupMembership",
          "name": "Group Membership",
          "sdk_type": "sdk"
        },
        "aws_quicksight_template": {
          "terraform_type": "aws_quicksight_template",
          "factory_function": "resourceQuicksightTemplate",
          "name": "Template",
          "sdk_type": "sdk"
        },
        "aws_quicksight_theme": {
          "terraform_type": "aws_quicksight_theme",
          "factory_function": "resourceQuicksightTheme",
          "name": "Theme",
          "sdk_type": "sdk"
        },
        "aws_quicksight_user": {
          "terraform_type": "aws_quicksight_user",
          "factory_function": "resourceQuicksightUser",
          "name": "User",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_quicksight_analysis": {
          "terraform_type": "aws_quicksight_analysis",
          "factory_function": "dataSourceQuicksightAnalysis",
          "name": "Analysis",
          "sdk_type": "sdk"
        },
        "aws_quicksight_data_set": {
          "terraform_type": "aws_quicksight_data_set",
          "factory_function": "dataSourceQuicksightDataSet",
          "name": "Data Set",
          "sdk_type": "sdk"
        },
        "aws_quicksight_group": {
          "terraform_type": "aws_quicksight_group",
          "factory_function": "dataSourceQuicksightGroup",
          "name": "Group",
          "sdk_type": "sdk"
        },
        "aws_quicksight_theme": {
          "terraform_type": "aws_quicksight_theme",
          "factory_function": "dataSourceQuicksightTheme",
          "name": "Theme",
          "sdk_type": "sdk"
        },
        "aws_quicksight_user": {
          "terraform_type": "aws_quicksight_user",
          "factory_function": "dataSourceQuicksightUser",
          "name": "User",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_quicksight_account_settings": {
          "terraform_type": "aws_quicksight_account_settings",
          "factory_function": "newQuicksightAccountSettingsResource",
          "name": "Account Settings",
          "sdk_type": "framework",
          "struct_type": "accountSettingsResource"
        },
        "aws_quicksight_custom_permissions": {
          "terraform_type": "aws_quicksight_custom_permissions",
          "factory_function": "newQuicksightCustomPermissionsResource",
          "name": "Custom Permissions",
          "sdk_type": "framework",
          "struct_type": "customPermissionsResource"
        },
        "aws_quicksight_folder_membership": {
          "terraform_type": "aws_quicksight_folder_membership",
          "factory_function": "newQuicksightFolderMembershipResource",
          "name": "Folder Membership",
          "sdk_type": "framework",
          "struct_type": "folderMembershipResource"
        },
        "aws_quicksight_iam_policy_assignment": {
          "terraform_type": "aws_quicksight_iam_policy_assignment",
          "factory_function": "newQuicksightIamPolicyAssignmentResource",
          "name": "IAM Policy Assignment",
          "sdk_type": "framework",
          "struct_type": "iamPolicyAssignmentResource"
        },
        "aws_quicksight_ingestion": {
          "terraform_type": "aws_quicksight_ingestion",
          "factory_function": "newQuicksightIngestionResource",
          "name": "Ingestion",
          "sdk_type": "framework",
          "struct_type": "ingestionResource"
        },
        "aws_quicksight_ip_restriction": {
          "terraform_type": "aws_quicksight_ip_restriction",
          "factory_function": "newQuicksightIpRestrictionResource",
          "name": "IP Restriction",
          "sdk_type": "framework",
          "struct_type": "ipRestrictionResource"
        },
        "aws_quicksight_key_registration": {
          "terraform_type": "aws_quicksight_key_registration",
          "factory_function": "newQuicksightKeyRegistrationResource",
          "name": "Key Registration",
          "sdk_type": "framework",
          "struct_type": "keyRegistrationResource"
        },
        "aws_quicksight_namespace": {
          "terraform_type": "aws_quicksight_namespace",
          "factory_function": "newQuicksightNamespaceResource",
          "name": "Namespace",
          "sdk_type": "framework",
          "struct_type": "namespaceResource"
        },
        "aws_quicksight_refresh_schedule": {
          "terraform_type": "aws_quicksight_refresh_schedule",
          "factory_function": "newQuicksightRefreshScheduleResource",
          "name": "Refresh Schedule",
          "sdk_type": "framework",
          "struct_type": "refreshScheduleResource"
        },
        "aws_quicksight_role_custom_permission": {
          "terraform_type": "aws_quicksight_role_custom_permission",
          "factory_function": "newQuicksightRoleCustomPermissionResource",
          "name": "Role Custom Permission",
          "sdk_type": "framework",
          "struct_type": "roleCustomPermissionResource"
        },
        "aws_quicksight_role_membership": {
          "terraform_type": "aws_quicksight_role_membership",
          "factory_function": "newQuicksightRoleMembershipResource",
          "name": "Role Membership",
          "sdk_type": "framework",
          "struct_type": "roleMembershipResource"
        },
        "aws_quicksight_template_alias": {
          "terraform_type": "aws_quicksight_template_alias",
          "factory_function": "newQuicksightTemplateAliasResource",
          "name": "Template Alias",
          "sdk_type": "framework",
          "struct_type": "templateAliasResource"
        },
        "aws_quicksight_user_custom_permission": {
          "terraform_type": "aws_quicksight_user_custom_permission",
          "factory_function": "newQuicksightUserCustomPermissionResource",
          "name": "User Custom Permission",
          "sdk_type": "framework",
          "struct_type": "userCustomPermissionResource"
        },
        "aws_quicksight_vpc_connection": {
          "terraform_type": "aws_quicksight_vpc_connection",
          "factory_function": "newQuicksightVpcConnectionResource",
          "name": "VPC Connection",
          "sdk_type": "framework",
          "struct_type": "vpcConnectionResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "accountSettingsResource": "aws_quicksight_account_settings",
        "customPermissionsResource": "aws_quicksight_custom_permissions",
        "folderMembershipResource": "aws_quicksight_folder_membership",
        "iamPolicyAssignmentResource": "aws_quicksight_iam_policy_assignment",
        "ingestionResource": "aws_quicksight_ingestion",
        "ipRestrictionResource": "aws_quicksight_ip_restriction",
        "keyRegistrationResource": "aws_quicksight_key_registration",
        "namespaceResource": "aws_quicksight_namespace",
        "refreshScheduleResource": "aws_quicksight_refresh_schedule",
        "roleCustomPermissionResource": "aws_quicksight_role_custom_permission",
        "roleMembershipResource": "aws_quicksight_role_membership",
        "templateAliasResource": "aws_quicksight_template_alias",
        "userCustomPermissionResource": "aws_quicksight_user_custom_permission",
        "vpcConnectionResource": "aws_quicksight_vpc_connection"
      },
      "resource_crud_methods": {
        "aws_quicksight_account_subscription": {
          "create_method": "resourceAccountSubscriptionCreate",
          "read_method": "resourceAccountSubscriptionRead",
          "delete_method": "resourceAccountSubscriptionDelete"
        },
        "aws_quicksight_analysis": {
          "create_method": "resourceAnalysisCreate",
          "read_method": "resourceAnalysisRead",
          "update_method": "resourceAnalysisUpdate",
          "delete_method": "resourceAnalysisDelete"
        },
        "aws_quicksight_dashboard": {
          "create_method": "resourceDashboardCreate",
          "read_method": "resourceDashboardRead",
          "update_method": "resourceDashboardUpdate",
          "delete_method": "resourceDashboardDelete"
        },
        "aws_quicksight_data_set": {
          "create_method": "resourceDataSetCreate",
          "read_method": "resourceDataSetRead",
          "update_method": "resourceDataSetUpdate",
          "delete_method": "resourceDataSetDelete"
        },
        "aws_quicksight_data_source": {
          "create_method": "resourceDataSourceCreate",
          "read_method": "resourceDataSourceRead",
          "update_method": "resourceDataSourceUpdate",
          "delete_method": "resourceDataSourceDelete"
        },
        "aws_quicksight_folder": {
          "create_method": "resourceFolderCreate",
          "read_method": "resourceFolderRead",
          "update_method": "resourceFolderUpdate",
          "delete_method": "resourceFolderDelete"
        },
        "aws_quicksight_group": {
          "create_method": "resourceGroupCreate",
          "read_method": "resourceGroupRead",
          "update_method": "resourceGroupUpdate",
          "delete_method": "resourceGroupDelete"
        },
        "aws_quicksight_group_membership": {
          "create_method": "resourceGroupMembershipCreate",
          "read_method": "resourceGroupMembershipRead",
          "delete_method": "resourceGroupMembershipDelete"
        },
        "aws_quicksight_template": {
          "create_method": "resourceTemplateCreate",
          "read_method": "resourceTemplateRead",
          "update_method": "resourceTemplateUpdate",
          "delete_method": "resourceTemplateDelete"
        },
        "aws_quicksight_theme": {
          "create_method": "resourceThemeCreate",
          "read_method": "resourceThemeRead",
          "update_method": "resourceThemeUpdate",
          "delete_method": "resourceThemeDelete"
        },
        "aws_quicksight_user": {
          "create_method": "resourceUserCreate",
          "read_method": "resourceUserRead",
          "update_method": "resourceUserUpdate",
          "delete_method": "resourceUserDelete"
        }
      },
      "data_source_methods": {
        "aws_quicksight_analysis": {
          "read_method": "dataSourceAnalysisRead"
        },
        "aws_quicksight_data_set": {
          "read_method": "dataSourceDataSetRead"
        },
        "aws_quicksight_group": {
          "read_method": "dataSourceGroupRead"
        },
        "aws_quicksight_theme": {
          "read_method": "dataSourceThemeRead"
        },
        "aws_quicksight_user": {
          "read_method": "dataSourceUserRead"
        }
      }
    },
    {
      "service_name": "ram",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/ram",
      "aws_sdk_resources": {
        "aws_ram_principal_association": {
          "terraform_type": "aws_ram_principal_association",
          "factory_function": "resourceRamPrincipalAssociation",
          "name": "Principal Association",
          "sdk_type": "sdk"
        },
        "aws_ram_resource_association": {
          "terraform_type": "aws_ram_resource_association",
          "factory_function": "resourceRamResourceAssociation",
          "name": "Resource Association",
          "sdk_type": "sdk"
        },
        "aws_ram_resource_share": {
          "terraform_type": "aws_ram_resource_share",
          "factory_function": "resourceRamResourceShare",
          "name": "Resource Share",
          "sdk_type": "sdk"
        },
        "aws_ram_resource_share_accepter": {
          "terraform_type": "aws_ram_resource_share_accepter",
          "factory_function": "resourceRamResourceShareAccepter",
          "name": "Resource Share Accepter",
          "sdk_type": "sdk"
        },
        "aws_ram_sharing_with_organization": {
          "terraform_type": "aws_ram_sharing_with_organization",
          "factory_function": "resourceRamSharingWithOrganization",
          "name": "Sharing With Organization",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_ram_resource_share": {
          "terraform_type": "aws_ram_resource_share",
          "factory_function": "dataSourceRamResourceShare",
          "name": "Resource Share",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_ram_principal_association": {
          "create_method": "resourcePrincipalAssociationCreate",
          "read_method": "resourcePrincipalAssociationRead",
          "delete_method": "resourcePrincipalAssociationDelete"
        },
        "aws_ram_resource_association": {
          "create_method": "resourceResourceAssociationCreate",
          "read_method": "resourceResourceAssociationRead",
          "delete_method": "resourceResourceAssociationDelete"
        },
        "aws_ram_resource_share": {
          "create_method": "resourceResourceShareCreate",
          "read_method": "resourceResourceShareRead",
          "update_method": "resourceResourceShareUpdate",
          "delete_method": "resourceResourceShareDelete"
        },
        "aws_ram_resource_share_accepter": {
          "create_method": "resourceResourceShareAccepterCreate",
          "read_method": "resourceResourceShareAccepterRead",
          "delete_method": "resourceResourceShareAccepterDelete"
        },
        "aws_ram_sharing_with_organization": {
          "create_method": "resourceSharingWithOrganizationCreate",
          "read_method": "resourceSharingWithOrganizationRead",
          "delete_method": "resourceSharingWithOrganizationDelete"
        }
      },
      "data_source_methods": {
        "aws_ram_resource_share": {
          "read_method": "dataSourceResourceShareRead"
        }
      }
    },
    {
      "service_name": "rbin",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/rbin",
      "aws_sdk_resources": {
        "aws_rbin_rule": {
          "terraform_type": "aws_rbin_rule",
          "factory_function": "resourceRbinRule",
          "name": "Rule",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_rbin_rule": {
          "create_method": "resourceRuleCreate",
          "read_method": "resourceRuleRead",
          "update_method": "resourceRuleUpdate",
          "delete_method": "resourceRuleDelete"
        }
      }
    },
    {
      "service_name": "rds",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/rds",
      "aws_sdk_resources": {
        "aws_db_cluster_snapshot": {
          "terraform_type": "aws_db_cluster_snapshot",
          "factory_function": "resourceDbClusterSnapshot",
          "name": "DB Cluster Snapshot",
          "sdk_type": "sdk"
        },
        "aws_db_event_subscription": {
          "terraform_type": "aws_db_event_subscription",
          "factory_function": "resourceDbEventSubscription",
          "name": "Event Subscription",
          "sdk_type": "sdk"
        },
        "aws_db_instance": {
          "terraform_type": "aws_db_instance",
          "factory_function": "resourceDbInstance",
          "name": "DB Instance",
          "sdk_type": "sdk"
        },
        "aws_db_instance_automated_backups_replication": {
          "terraform_type": "aws_db_instance_automated_backups_replication",
          "factory_function": "resourceDbInstanceAutomatedBackupsReplication",
          "name": "Instance Automated Backups Replication",
          "sdk_type": "sdk"
        },
        "aws_db_instance_role_association": {
          "terraform_type": "aws_db_instance_role_association",
          "factory_function": "resourceDbInstanceRoleAssociation",
          "name": "DB Instance IAM Role Association",
          "sdk_type": "sdk"
        },
        "aws_db_option_group": {
          "terraform_type": "aws_db_option_group",
          "factory_function": "resourceDbOptionGroup",
          "name": "DB Option Group",
          "sdk_type": "sdk"
        },
        "aws_db_parameter_group": {
          "terraform_type": "aws_db_parameter_group",
          "factory_function": "resourceDbParameterGroup",
          "name": "DB Parameter Group",
          "sdk_type": "sdk"
        },
        "aws_db_proxy": {
          "terraform_type": "aws_db_proxy",
          "factory_function": "resourceDbProxy",
          "name": "DB Proxy",
          "sdk_type": "sdk"
        },
        "aws_db_proxy_default_target_group": {
          "terraform_type": "aws_db_proxy_default_target_group",
          "factory_function": "resourceDbProxyDefaultTargetGroup",
          "name": "DB Proxy Default Target Group",
          "sdk_type": "sdk"
        },
        "aws_db_proxy_endpoint": {
          "terraform_type": "aws_db_proxy_endpoint",
          "factory_function": "resourceDbProxyEndpoint",
          "name": "DB Proxy Endpoint",
          "sdk_type": "sdk"
        },
        "aws_db_proxy_target": {
          "terraform_type": "aws_db_proxy_target",
          "factory_function": "resourceDbProxyTarget",
          "name": "DB Proxy Target",
          "sdk_type": "sdk"
        },
        "aws_db_snapshot": {
          "terraform_type": "aws_db_snapshot",
          "factory_function": "resourceDbSnapshot",
          "name": "DB Snapshot",
          "sdk_type": "sdk"
        },
        "aws_db_snapshot_copy": {
          "terraform_type": "aws_db_snapshot_copy",
          "factory_function": "resourceDbSnapshotCopy",
          "name": "DB Snapshot Copy",
          "sdk_type": "sdk"
        },
        "aws_db_subnet_group": {
          "terraform_type": "aws_db_subnet_group",
          "factory_function": "resourceDbSubnetGroup",
          "name": "DB Subnet Group",
          "sdk_type": "sdk"
        },
        "aws_rds_certificate": {
          "terraform_type": "aws_rds_certificate",
          "factory_function": "resourceRdsCertificate",
          "name": "Default Certificate",
          "sdk_type": "sdk"
        },
        "aws_rds_cluster": {
          "terraform_type": "aws_rds_cluster",
          "factory_function": "resourceRdsCluster",
          "name": "Cluster",
          "sdk_type": "sdk"
        },
        "aws_rds_cluster_activity_stream": {
          "terraform_type": "aws_rds_cluster_activity_stream",
          "factory_function": "resourceRdsClusterActivityStream",
          "name": "Cluster Activity Stream",
          "sdk_type": "sdk"
        },
        "aws_rds_cluster_endpoint": {
          "terraform_type": "aws_rds_cluster_endpoint",
          "factory_function": "resourceRdsClusterEndpoint",
          "name": "Cluster Endpoint",
          "sdk_type": "sdk"
        },
        "aws_rds_cluster_instance": {
          "terraform_type": "aws_rds_cluster_instance",
          "factory_function": "resourceRdsClusterInstance",
          "name": "Cluster Instance",
          "sdk_type": "sdk"
        },
        "aws_rds_cluster_parameter_group": {
          "terraform_type": "aws_rds_cluster_parameter_group",
          "factory_function": "resourceRdsClusterParameterGroup",
          "name": "Cluster Parameter Group",
          "sdk_type": "sdk"
        },
        "aws_rds_cluster_role_association": {
          "terraform_type": "aws_rds_cluster_role_association",
          "factory_function": "resourceRdsClusterRoleAssociation",
          "name": "Cluster IAM Role Association",
          "sdk_type": "sdk"
        },
        "aws_rds_custom_db_engine_version": {
          "terraform_type": "aws_rds_custom_db_engine_version",
          "factory_function": "resourceRdsCustomDbEngineVersion",
          "name": "Custom DB Engine Version",
          "sdk_type": "sdk"
        },
        "aws_rds_global_cluster": {
          "terraform_type": "aws_rds_global_cluster",
          "factory_function": "resourceRdsGlobalCluster",
          "name": "Global Cluster",
          "sdk_type": "sdk"
        },
        "aws_rds_reserved_instance": {
          "terraform_type": "aws_rds_reserved_instance",
          "factory_function": "resourceRdsReservedInstance",
          "name": "Reserved Instance",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_db_cluster_snapshot": {
          "terraform_type": "aws_db_cluster_snapshot",
          "factory_function": "dataSourceDbClusterSnapshot",
          "name": "DB Cluster Snapshot",
          "sdk_type": "sdk"
        },
        "aws_db_event_categories": {
          "terraform_type": "aws_db_event_categories",
          "factory_function": "dataSourceDbEventCategories",
          "name": "Event Categories",
          "sdk_type": "sdk"
        },
        "aws_db_instance": {
          "terraform_type": "aws_db_instance",
          "factory_function": "dataSourceDbInstance",
          "name": "DB Instance",
          "sdk_type": "sdk"
        },
        "aws_db_instances": {
          "terraform_type": "aws_db_instances",
          "factory_function": "dataSourceDbInstances",
          "name": "DB Instances",
          "sdk_type": "sdk"
        },
        "aws_db_parameter_group": {
          "terraform_type": "aws_db_parameter_group",
          "factory_function": "dataSourceDbParameterGroup",
          "name": "DB Parameter Group",
          "sdk_type": "sdk"
        },
        "aws_db_proxy": {
          "terraform_type": "aws_db_proxy",
          "factory_function": "dataSourceDbProxy",
          "name": "DB Proxy",
          "sdk_type": "sdk"
        },
        "aws_db_snapshot": {
          "terraform_type": "aws_db_snapshot",
          "factory_function": "dataSourceDbSnapshot",
          "name": "DB Snapshot",
          "sdk_type": "sdk"
        },
        "aws_db_subnet_group": {
          "terraform_type": "aws_db_subnet_group",
          "factory_function": "dataSourceDbSubnetGroup",
          "name": "DB Subnet Group",
          "sdk_type": "sdk"
        },
        "aws_rds_certificate": {
          "terraform_type": "aws_rds_certificate",
          "factory_function": "dataSourceRdsCertificate",
          "name": "Certificate",
          "sdk_type": "sdk"
        },
        "aws_rds_cluster": {
          "terraform_type": "aws_rds_cluster",
          "factory_function": "dataSourceRdsCluster",
          "name": "Cluster",
          "sdk_type": "sdk"
        },
        "aws_rds_clusters": {
          "terraform_type": "aws_rds_clusters",
          "factory_function": "dataSourceRdsClusters",
          "name": "Clusters",
          "sdk_type": "sdk"
        },
        "aws_rds_engine_version": {
          "terraform_type": "aws_rds_engine_version",
          "factory_function": "dataSourceRdsEngineVersion",
          "name": "Engine Version",
          "sdk_type": "sdk"
        },
        "aws_rds_orderable_db_instance": {
          "terraform_type": "aws_rds_orderable_db_instance",
          "factory_function": "dataSourceRdsOrderableDbInstance",
          "name": "Orderable DB Instance",
          "sdk_type": "sdk"
        },
        "aws_rds_reserved_instance_offering": {
          "terraform_type": "aws_rds_reserved_instance_offering",
          "factory_function": "dataSourceRdsReservedInstanceOffering",
          "name": "Reserved Instance Offering",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_rds_cluster_snapshot_copy": {
          "terraform_type": "aws_rds_cluster_snapshot_copy",
          "factory_function": "newRdsClusterSnapshotCopyResource",
          "name": "Cluster Snapshot Copy",
          "sdk_type": "framework",
          "struct_type": "clusterSnapshotCopyResource"
        },
        "aws_rds_export_task": {
          "terraform_type": "aws_rds_export_task",
          "factory_function": "newRdsExportTaskResource",
          "name": "Export Task",
          "sdk_type": "framework",
          "struct_type": "exportTaskResource"
        },
        "aws_rds_instance_state": {
          "terraform_type": "aws_rds_instance_state",
          "factory_function": "newRdsInstanceStateResource",
          "name": "Instance State",
          "sdk_type": "framework",
          "struct_type": "instanceStateResource"
        },
        "aws_rds_integration": {
          "terraform_type": "aws_rds_integration",
          "factory_function": "newRdsIntegrationResource",
          "name": "Integration",
          "sdk_type": "framework",
          "struct_type": "integrationResource"
        },
        "aws_rds_shard_group": {
          "terraform_type": "aws_rds_shard_group",
          "factory_function": "newRdsShardGroupResource",
          "name": "Shard Group",
          "sdk_type": "framework",
          "struct_type": "shardGroupResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_rds_cluster_parameter_group": {
          "terraform_type": "aws_rds_cluster_parameter_group",
          "factory_function": "newRdsClusterParameterGroupDataSource",
          "name": "",
          "sdk_type": "framework",
          "struct_type": "clusterParameterGroupDataSource"
        },
        "aws_rds_global_cluster": {
          "terraform_type": "aws_rds_global_cluster",
          "factory_function": "newRdsGlobalClusterDataSource",
          "name": "Global Cluster",
          "sdk_type": "framework",
          "struct_type": "dataSourceGlobalCluster"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "clusterSnapshotCopyResource": "aws_rds_cluster_snapshot_copy",
        "exportTaskResource": "aws_rds_export_task",
        "instanceStateResource": "aws_rds_instance_state",
        "integrationResource": "aws_rds_integration",
        "shardGroupResource": "aws_rds_shard_group"
      },
      "data_source_terraform_types": {
        "clusterParameterGroupDataSource": "aws_rds_cluster_parameter_group",
        "dataSourceGlobalCluster": "aws_rds_global_cluster"
      },
      "resource_crud_methods": {
        "aws_db_cluster_snapshot": {
          "create_method": "resourceClusterSnapshotCreate",
          "read_method": "resourceClusterSnapshotRead",
          "update_method": "resourceClusterSnapshotUpdate",
          "delete_method": "resourceClusterSnapshotDelete"
        },
        "aws_db_event_subscription": {
          "create_method": "resourceEventSubscriptionCreate",
          "read_method": "resourceEventSubscriptionRead",
          "update_method": "resourceEventSubscriptionUpdate",
          "delete_method": "resourceEventSubscriptionDelete"
        },
        "aws_db_instance": {
          "create_method": "resourceInstanceCreate",
          "read_method": "resourceInstanceRead",
          "update_method": "resourceInstanceUpdate",
          "delete_method": "resourceInstanceDelete"
        },
        "aws_db_instance_automated_backups_replication": {
          "create_method": "resourceInstanceAutomatedBackupsReplicationCreate",
          "read_method": "resourceInstanceAutomatedBackupsReplicationRead",
          "delete_method": "resourceInstanceAutomatedBackupsReplicationDelete"
        },
        "aws_db_instance_role_association": {
          "create_method": "resourceInstanceRoleAssociationCreate",
          "read_method": "resourceInstanceRoleAssociationRead",
          "delete_method": "resourceInstanceRoleAssociationDelete"
        },
        "aws_db_option_group": {
          "create_method": "resourceOptionGroupCreate",
          "read_method": "resourceOptionGroupRead",
          "update_method": "resourceOptionGroupUpdate",
          "delete_method": "resourceOptionGroupDelete"
        },
        "aws_db_parameter_group": {
          "create_method": "resourceParameterGroupCreate",
          "read_method": "resourceParameterGroupRead",
          "update_method": "resourceParameterGroupUpdate",
          "delete_method": "resourceParameterGroupDelete"
        },
        "aws_db_proxy": {
          "create_method": "resourceProxyCreate",
          "read_method": "resourceProxyRead",
          "update_method": "resourceProxyUpdate",
          "delete_method": "resourceProxyDelete"
        },
        "aws_db_proxy_default_target_group": {
          "create_method": "resourceProxyDefaultTargetGroupPut",
          "read_method": "resourceProxyDefaultTargetGroupRead",
          "update_method": "resourceProxyDefaultTargetGroupPut"
        },
        "aws_db_proxy_endpoint": {
          "create_method": "resourceProxyEndpointCreate",
          "read_method": "resourceProxyEndpointRead",
          "update_method": "resourceProxyEndpointUpdate",
          "delete_method": "resourceProxyEndpointDelete"
        },
        "aws_db_proxy_target": {
          "create_method": "resourceProxyTargetCreate",
          "read_method": "resourceProxyTargetRead",
          "delete_method": "resourceProxyTargetDelete"
        },
        "aws_db_snapshot": {
          "create_method": "resourceSnapshotCreate",
          "read_method": "resourceSnapshotRead",
          "update_method": "resourceSnapshotUpdate",
          "delete_method": "resourceSnapshotDelete"
        },
        "aws_db_snapshot_copy": {
          "create_method": "resourceSnapshotCopyCreate",
          "read_method": "resourceSnapshotCopyRead",
          "update_method": "resourceSnapshotCopyUpdate",
          "delete_method": "resourceSnapshotCopyDelete"
        },
        "aws_db_subnet_group": {
          "create_method": "resourceSubnetGroupCreate",
          "read_method": "resourceSubnetGroupRead",
          "update_method": "resourceSubnetGroupUpdate",
          "delete_method": "resourceSubnetGroupDelete"
        },
        "aws_rds_certificate": {
          "create_method": "resourceCertificatePut",
          "read_method": "resourceCertificateRead",
          "update_method": "resourceCertificatePut",
          "delete_method": "resourceCertificateDelete"
        },
        "aws_rds_cluster": {
          "create_method": "resourceClusterCreate",
          "read_method": "resourceClusterRead",
          "update_method": "resourceClusterUpdate",
          "delete_method": "resourceClusterDelete"
        },
        "aws_rds_cluster_activity_stream": {
          "create_method": "resourceClusterActivityStreamCreate",
          "read_method": "resourceClusterActivityStreamRead",
          "delete_method": "resourceClusterActivityStreamDelete"
        },
        "aws_rds_cluster_endpoint": {
          "create_method": "resourceClusterEndpointCreate",
          "read_method": "resourceClusterEndpointRead",
          "update_method": "resourceClusterEndpointUpdate",
          "delete_method": "resourceClusterEndpointDelete"
        },
        "aws_rds_cluster_instance": {
          "create_method": "resourceClusterInstanceCreate",
          "read_method": "resourceClusterInstanceRead",
          "update_method": "resourceClusterInstanceUpdate",
          "delete_method": "resourceClusterInstanceDelete"
        },
        "aws_rds_cluster_parameter_group": {
          "create_method": "resourceClusterParameterGroupCreate",
          "read_method": "resourceClusterParameterGroupRead",
          "update_method": "resourceClusterParameterGroupUpdate",
          "delete_method": "resourceClusterParameterGroupDelete"
        },
        "aws_rds_cluster_role_association": {
          "create_method": "resourceClusterRoleAssociationCreate",
          "read_method": "resourceClusterRoleAssociationRead",
          "delete_method": "resourceClusterRoleAssociationDelete"
        },
        "aws_rds_custom_db_engine_version": {
          "create_method": "resourceCustomDBEngineVersionCreate",
          "read_method": "resourceCustomDBEngineVersionRead",
          "update_method": "resourceCustomDBEngineVersionUpdate",
          "delete_method": "resourceCustomDBEngineVersionDelete"
        },
        "aws_rds_global_cluster": {
          "create_method": "resourceGlobalClusterCreate",
          "read_method": "resourceGlobalClusterRead",
          "update_method": "resourceGlobalClusterUpdate",
          "delete_method": "resourceGlobalClusterDelete"
        },
        "aws_rds_reserved_instance": {
          "create_method": "resourceReservedInstanceCreate",
          "read_method": "resourceReservedInstanceRead",
          "update_method": "resourceReservedInstanceUpdate"
        }
      },
      "data_source_methods": {
        "aws_db_cluster_snapshot": {
          "read_method": "dataSourceClusterSnapshotRead"
        },
        "aws_db_event_categories": {
          "read_method": "dataSourceEventCategoriesRead"
        },
        "aws_db_instance": {
          "read_method": "dataSourceInstanceRead"
        },
        "aws_db_instances": {
          "read_method": "dataSourceInstancesRead"
        },
        "aws_db_parameter_group": {
          "read_method": "dataSourceParameterGroupRead"
        },
        "aws_db_proxy": {
          "read_method": "dataSourceProxyRead"
        },
        "aws_db_snapshot": {
          "read_method": "dataSourceSnapshotRead"
        },
        "aws_db_subnet_group": {
          "read_method": "dataSourceSubnetGroupRead"
        },
        "aws_rds_certificate": {
          "read_method": "dataSourceCertificateRead"
        },
        "aws_rds_cluster": {
          "read_method": "dataSourceClusterRead"
        },
        "aws_rds_clusters": {
          "read_method": "dataSourceClustersRead"
        },
        "aws_rds_engine_version": {
          "read_method": "dataSourceEngineVersionRead"
        },
        "aws_rds_orderable_db_instance": {
          "read_method": "dataSourceOrderableInstanceRead"
        },
        "aws_rds_reserved_instance_offering": {
          "read_method": "dataSourceReservedOfferingRead"
        }
      }
    },
    {
      "service_name": "redshift",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/redshift",
      "aws_sdk_resources": {
        "aws_redshift_authentication_profile": {
          "terraform_type": "aws_redshift_authentication_profile",
          "factory_function": "resourceRedshiftAuthenticationProfile",
          "name": "Authentication Profile",
          "sdk_type": "sdk"
        },
        "aws_redshift_cluster": {
          "terraform_type": "aws_redshift_cluster",
          "factory_function": "resourceRedshiftCluster",
          "name": "Cluster",
          "sdk_type": "sdk"
        },
        "aws_redshift_cluster_iam_roles": {
          "terraform_type": "aws_redshift_cluster_iam_roles",
          "factory_function": "resourceRedshiftClusterIamRoles",
          "name": "Cluster IAM Roles",
          "sdk_type": "sdk"
        },
        "aws_redshift_cluster_snapshot": {
          "terraform_type": "aws_redshift_cluster_snapshot",
          "factory_function": "resourceRedshiftClusterSnapshot",
          "name": "Cluster Snapshot",
          "sdk_type": "sdk"
        },
        "aws_redshift_endpoint_access": {
          "terraform_type": "aws_redshift_endpoint_access",
          "factory_function": "resourceRedshiftEndpointAccess",
          "name": "Endpoint Access",
          "sdk_type": "sdk"
        },
        "aws_redshift_endpoint_authorization": {
          "terraform_type": "aws_redshift_endpoint_authorization",
          "factory_function": "resourceRedshiftEndpointAuthorization",
          "name": "Endpoint Authorization",
          "sdk_type": "sdk"
        },
        "aws_redshift_event_subscription": {
          "terraform_type": "aws_redshift_event_subscription",
          "factory_function": "resourceRedshiftEventSubscription",
          "name": "Event Subscription",
          "sdk_type": "sdk"
        },
        "aws_redshift_hsm_client_certificate": {
          "terraform_type": "aws_redshift_hsm_client_certificate",
          "factory_function": "resourceRedshiftHsmClientCertificate",
          "name": "HSM Client Certificate",
          "sdk_type": "sdk"
        },
        "aws_redshift_hsm_configuration": {
          "terraform_type": "aws_redshift_hsm_configuration",
          "factory_function": "resourceRedshiftHsmConfiguration",
          "name": "HSM Configuration",
          "sdk_type": "sdk"
        },
        "aws_redshift_parameter_group": {
          "terraform_type": "aws_redshift_parameter_group",
          "factory_function": "resourceRedshiftParameterGroup",
          "name": "Parameter Group",
          "sdk_type": "sdk"
        },
        "aws_redshift_partner": {
          "terraform_type": "aws_redshift_partner",
          "factory_function": "resourceRedshiftPartner",
          "name": "Partner",
          "sdk_type": "sdk"
        },
        "aws_redshift_resource_policy": {
          "terraform_type": "aws_redshift_resource_policy",
          "factory_function": "resourceRedshiftResourcePolicy",
          "name": "Resource Policy",
          "sdk_type": "sdk"
        },
        "aws_redshift_scheduled_action": {
          "terraform_type": "aws_redshift_scheduled_action",
          "factory_function": "resourceRedshiftScheduledAction",
          "name": "Scheduled Action",
          "sdk_type": "sdk"
        },
        "aws_redshift_snapshot_copy_grant": {
          "terraform_type": "aws_redshift_snapshot_copy_grant",
          "factory_function": "resourceRedshiftSnapshotCopyGrant",
          "name": "Snapshot Copy Grant",
          "sdk_type": "sdk"
        },
        "aws_redshift_snapshot_schedule": {
          "terraform_type": "aws_redshift_snapshot_schedule",
          "factory_function": "resourceRedshiftSnapshotSchedule",
          "name": "Snapshot Schedule",
          "sdk_type": "sdk"
        },
        "aws_redshift_snapshot_schedule_association": {
          "terraform_type": "aws_redshift_snapshot_schedule_association",
          "factory_function": "resourceRedshiftSnapshotScheduleAssociation",
          "name": "Snapshot Schedule Association",
          "sdk_type": "sdk"
        },
        "aws_redshift_subnet_group": {
          "terraform_type": "aws_redshift_subnet_group",
          "factory_function": "resourceRedshiftSubnetGroup",
          "name": "Subnet Group",
          "sdk_type": "sdk"
        },
        "aws_redshift_usage_limit": {
          "terraform_type": "aws_redshift_usage_limit",
          "factory_function": "resourceRedshiftUsageLimit",
          "name": "Usage Limit",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_redshift_cluster": {
          "terraform_type": "aws_redshift_cluster",
          "factory_function": "dataSourceRedshiftCluster",
          "name": "Cluster",
          "sdk_type": "sdk"
        },
        "aws_redshift_cluster_credentials": {
          "terraform_type": "aws_redshift_cluster_credentials",
          "factory_function": "dataSourceRedshiftClusterCredentials",
          "name": "Cluster Credentials",
          "sdk_type": "sdk"
        },
        "aws_redshift_orderable_cluster": {
          "terraform_type": "aws_redshift_orderable_cluster",
          "factory_function": "dataSourceRedshiftOrderableCluster",
          "name": "Orderable Cluster",
          "sdk_type": "sdk"
        },
        "aws_redshift_subnet_group": {
          "terraform_type": "aws_redshift_subnet_group",
          "factory_function": "dataSourceRedshiftSubnetGroup",
          "name": "Subnet Group",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_redshift_data_share_authorization": {
          "terraform_type": "aws_redshift_data_share_authorization",
          "factory_function": "newRedshiftDataShareAuthorizationResource",
          "name": "Data Share Authorization",
          "sdk_type": "framework",
          "struct_type": "dataShareAuthorizationResource"
        },
        "aws_redshift_data_share_consumer_association": {
          "terraform_type": "aws_redshift_data_share_consumer_association",
          "factory_function": "newRedshiftDataShareConsumerAssociationResource",
          "name": "Data Share Consumer Association",
          "sdk_type": "framework",
          "struct_type": "dataShareConsumerAssociationResource"
        },
        "aws_redshift_integration": {
          "terraform_type": "aws_redshift_integration",
          "factory_function": "newRedshiftIntegrationResource",
          "name": "Integration",
          "sdk_type": "framework",
          "struct_type": "integrationResource"
        },
        "aws_redshift_logging": {
          "terraform_type": "aws_redshift_logging",
          "factory_function": "newRedshiftLoggingResource",
          "name": "Logging",
          "sdk_type": "framework",
          "struct_type": "loggingResource"
        },
        "aws_redshift_snapshot_copy": {
          "terraform_type": "aws_redshift_snapshot_copy",
          "factory_function": "newRedshiftSnapshotCopyResource",
          "name": "Snapshot Copy",
          "sdk_type": "framework",
          "struct_type": "snapshotCopyResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_redshift_data_shares": {
          "terraform_type": "aws_redshift_data_shares",
          "factory_function": "newRedshiftDataSharesDataSource",
          "name": "Data Shares",
          "sdk_type": "framework",
          "struct_type": "dataSharesDataSource"
        },
        "aws_redshift_producer_data_shares": {
          "terraform_type": "aws_redshift_producer_data_shares",
          "factory_function": "newRedshiftProducerDataSharesDataSource",
          "name": "Producer Data Shares",
          "sdk_type": "framework",
          "struct_type": "producerDataSharesDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "dataShareAuthorizationResource": "aws_redshift_data_share_authorization",
        "dataShareConsumerAssociationResource": "aws_redshift_data_share_consumer_association",
        "integrationResource": "aws_redshift_integration",
        "loggingResource": "aws_redshift_logging",
        "snapshotCopyResource": "aws_redshift_snapshot_copy"
      },
      "data_source_terraform_types": {
        "dataSharesDataSource": "aws_redshift_data_shares",
        "producerDataSharesDataSource": "aws_redshift_producer_data_shares"
      },
      "resource_crud_methods": {
        "aws_redshift_authentication_profile": {
          "create_method": "resourceAuthenticationProfileCreate",
          "read_method": "resourceAuthenticationProfileRead",
          "update_method": "resourceAuthenticationProfileUpdate",
          "delete_method": "resourceAuthenticationProfileDelete"
        },
        "aws_redshift_cluster": {
          "create_method": "resourceClusterCreate",
          "read_method": "resourceClusterRead",
          "update_method": "resourceClusterUpdate",
          "delete_method": "resourceClusterDelete"
        },
        "aws_redshift_cluster_iam_roles": {
          "create_method": "resourceClusterIAMRolesCreate",
          "read_method": "resourceClusterIAMRolesRead",
          "update_method": "resourceClusterIAMRolesUpdate",
          "delete_method": "resourceClusterIAMRolesDelete"
        },
        "aws_redshift_cluster_snapshot": {
          "create_method": "resourceClusterSnapshotCreate",
          "read_method": "resourceClusterSnapshotRead",
          "update_method": "resourceClusterSnapshotUpdate",
          "delete_method": "resourceClusterSnapshotDelete"
        },
        "aws_redshift_endpoint_access": {
          "create_method": "resourceEndpointAccessCreate",
          "read_method": "resourceEndpointAccessRead",
          "update_method": "resourceEndpointAccessUpdate",
          "delete_method": "resourceEndpointAccessDelete"
        },
        "aws_redshift_endpoint_authorization": {
          "create_method": "resourceEndpointAuthorizationCreate",
          "read_method": "resourceEndpointAuthorizationRead",
          "update_method": "resourceEndpointAuthorizationUpdate",
          "delete_method": "resourceEndpointAuthorizationDelete"
        },
        "aws_redshift_event_subscription": {
          "create_method": "resourceEventSubscriptionCreate",
          "read_method": "resourceEventSubscriptionRead",
          "update_method": "resourceEventSubscriptionUpdate",
          "delete_method": "resourceEventSubscriptionDelete"
        },
        "aws_redshift_hsm_client_certificate": {
          "create_method": "resourceHSMClientCertificateCreate",
          "read_method": "resourceHSMClientCertificateRead",
          "update_method": "resourceHSMClientCertificateUpdate",
          "delete_method": "resourceHSMClientCertificateDelete"
        },
        "aws_redshift_hsm_configuration": {
          "create_method": "resourceHSMConfigurationCreate",
          "read_method": "resourceHSMConfigurationRead",
          "update_method": "resourceHSMConfigurationUpdate",
          "delete_method": "resourceHSMConfigurationDelete"
        },
        "aws_redshift_parameter_group": {
          "create_method": "resourceParameterGroupCreate",
          "read_method": "resourceParameterGroupRead",
          "update_method": "resourceParameterGroupUpdate",
          "delete_method": "resourceParameterGroupDelete"
        },
        "aws_redshift_partner": {
          "create_method": "resourcePartnerCreate",
          "read_method": "resourcePartnerRead",
          "delete_method": "resourcePartnerDelete"
        },
        "aws_redshift_resource_policy": {
          "create_method": "resourceResourcePolicyPut",
          "read_method": "resourceResourcePolicyRead",
          "update_method": "resourceResourcePolicyPut",
          "delete_method": "resourceResourcePolicyDelete"
        },
        "aws_redshift_scheduled_action": {
          "create_method": "resourceScheduledActionCreate",
          "read_method": "resourceScheduledActionRead",
          "update_method": "resourceScheduledActionUpdate",
          "delete_method": "resourceScheduledActionDelete"
        },
        "aws_redshift_snapshot_copy_grant": {
          "create_method": "resourceSnapshotCopyGrantCreate",
          "read_method": "resourceSnapshotCopyGrantRead",
          "update_method": "resourceSnapshotCopyGrantUpdate",
          "delete_method": "resourceSnapshotCopyGrantDelete"
        },
        "aws_redshift_snapshot_schedule": {
          "create_method": "resourceSnapshotScheduleCreate",
          "read_method": "resourceSnapshotScheduleRead",
          "update_method": "resourceSnapshotScheduleUpdate",
          "delete_method": "resourceSnapshotScheduleDelete"
        },
        "aws_redshift_snapshot_schedule_association": {
          "create_method": "resourceSnapshotScheduleAssociationCreate",
          "read_method": "resourceSnapshotScheduleAssociationRead",
          "delete_method": "resourceSnapshotScheduleAssociationDelete"
        },
        "aws_redshift_subnet_group": {
          "create_method": "resourceSubnetGroupCreate",
          "read_method": "resourceSubnetGroupRead",
          "update_method": "resourceSubnetGroupUpdate",
          "delete_method": "resourceSubnetGroupDelete"
        },
        "aws_redshift_usage_limit": {
          "create_method": "resourceUsageLimitCreate",
          "read_method": "resourceUsageLimitRead",
          "update_method": "resourceUsageLimitUpdate",
          "delete_method": "resourceUsageLimitDelete"
        }
      },
      "data_source_methods": {
        "aws_redshift_cluster": {
          "read_method": "dataSourceClusterRead"
        },
        "aws_redshift_cluster_credentials": {
          "read_method": "dataSourceClusterCredentialsRead"
        },
        "aws_redshift_orderable_cluster": {
          "read_method": "dataSourceOrderableClusterRead"
        },
        "aws_redshift_subnet_group": {
          "read_method": "dataSourceSubnetGroupRead"
        }
      }
    },
    {
      "service_name": "redshiftdata",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/redshiftdata",
      "aws_sdk_resources": {
        "aws_redshiftdata_statement": {
          "terraform_type": "aws_redshiftdata_statement",
          "factory_function": "resourceRedshiftdataStatement",
          "name": "Statement",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_redshiftdata_statement": {
          "create_method": "resourceStatementCreate",
          "read_method": "resourceStatementRead"
        }
      }
    },
    {
      "service_name": "redshiftserverless",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/redshiftserverless",
      "aws_sdk_resources": {
        "aws_redshiftserverless_endpoint_access": {
          "terraform_type": "aws_redshiftserverless_endpoint_access",
          "factory_function": "resourceRedshiftserverlessEndpointAccess",
          "name": "Endpoint Access",
          "sdk_type": "sdk"
        },
        "aws_redshiftserverless_namespace": {
          "terraform_type": "aws_redshiftserverless_namespace",
          "factory_function": "resourceRedshiftserverlessNamespace",
          "name": "Namespace",
          "sdk_type": "sdk"
        },
        "aws_redshiftserverless_resource_policy": {
          "terraform_type": "aws_redshiftserverless_resource_policy",
          "factory_function": "resourceRedshiftserverlessResourcePolicy",
          "name": "Resource Policy",
          "sdk_type": "sdk"
        },
        "aws_redshiftserverless_snapshot": {
          "terraform_type": "aws_redshiftserverless_snapshot",
          "factory_function": "resourceRedshiftserverlessSnapshot",
          "name": "Snapshot",
          "sdk_type": "sdk"
        },
        "aws_redshiftserverless_usage_limit": {
          "terraform_type": "aws_redshiftserverless_usage_limit",
          "factory_function": "resourceRedshiftserverlessUsageLimit",
          "name": "Usage Limit",
          "sdk_type": "sdk"
        },
        "aws_redshiftserverless_workgroup": {
          "terraform_type": "aws_redshiftserverless_workgroup",
          "factory_function": "resourceRedshiftserverlessWorkgroup",
          "name": "Workgroup",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_redshiftserverless_credentials": {
          "terraform_type": "aws_redshiftserverless_credentials",
          "factory_function": "dataSourceRedshiftserverlessCredentials",
          "name": "Credentials",
          "sdk_type": "sdk"
        },
        "aws_redshiftserverless_namespace": {
          "terraform_type": "aws_redshiftserverless_namespace",
          "factory_function": "dataSourceRedshiftserverlessNamespace",
          "name": "Namespace",
          "sdk_type": "sdk"
        },
        "aws_redshiftserverless_workgroup": {
          "terraform_type": "aws_redshiftserverless_workgroup",
          "factory_function": "dataSourceRedshiftserverlessWorkgroup",
          "name": "Workgroup",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_redshiftserverless_custom_domain_association": {
          "terraform_type": "aws_redshiftserverless_custom_domain_association",
          "factory_function": "newRedshiftserverlessCustomDomainAssociationResource",
          "name": "Custom Domain Association",
          "sdk_type": "framework",
          "struct_type": "customDomainAssociationResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "customDomainAssociationResource": "aws_redshiftserverless_custom_domain_association"
      },
      "resource_crud_methods": {
        "aws_redshiftserverless_endpoint_access": {
          "create_method": "resourceEndpointAccessCreate",
          "read_method": "resourceEndpointAccessRead",
          "update_method": "resourceEndpointAccessUpdate",
          "delete_method": "resourceEndpointAccessDelete"
        },
        "aws_redshiftserverless_namespace": {
          "create_method": "resourceNamespaceCreate",
          "read_method": "resourceNamespaceRead",
          "update_method": "resourceNamespaceUpdate",
          "delete_method": "resourceNamespaceDelete"
        },
        "aws_redshiftserverless_resource_policy": {
          "create_method": "resourceResourcePolicyPut",
          "read_method": "resourceResourcePolicyRead",
          "update_method": "resourceResourcePolicyPut",
          "delete_method": "resourceResourcePolicyDelete"
        },
        "aws_redshiftserverless_snapshot": {
          "create_method": "resourceSnapshotCreate",
          "read_method": "resourceSnapshotRead",
          "update_method": "resourceSnapshotUpdate",
          "delete_method": "resourceSnapshotDelete"
        },
        "aws_redshiftserverless_usage_limit": {
          "create_method": "resourceUsageLimitCreate",
          "read_method": "resourceUsageLimitRead",
          "update_method": "resourceUsageLimitUpdate",
          "delete_method": "resourceUsageLimitDelete"
        },
        "aws_redshiftserverless_workgroup": {
          "create_method": "resourceWorkgroupCreate",
          "read_method": "resourceWorkgroupRead",
          "update_method": "resourceWorkgroupUpdate",
          "delete_method": "resourceWorkgroupDelete"
        }
      },
      "data_source_methods": {
        "aws_redshiftserverless_credentials": {
          "read_method": "dataSourceCredentialsRead"
        },
        "aws_redshiftserverless_namespace": {
          "read_method": "dataSourceNamespaceRead"
        },
        "aws_redshiftserverless_workgroup": {
          "read_method": "dataSourceWorkgroupRead"
        }
      }
    },
    {
      "service_name": "rekognition",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/rekognition",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_rekognition_collection": {
          "terraform_type": "aws_rekognition_collection",
          "factory_function": "newRekognitionCollectionResource",
          "name": "Collection",
          "sdk_type": "framework",
          "struct_type": "collectionResource"
        },
        "aws_rekognition_project": {
          "terraform_type": "aws_rekognition_project",
          "factory_function": "newRekognitionProjectResource",
          "name": "Project",
          "sdk_type": "framework",
          "struct_type": "projectResource"
        },
        "aws_rekognition_stream_processor": {
          "terraform_type": "aws_rekognition_stream_processor",
          "factory_function": "newRekognitionStreamProcessorResource",
          "name": "Stream Processor",
          "sdk_type": "framework",
          "struct_type": "streamProcessorResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "collectionResource": "aws_rekognition_collection",
        "projectResource": "aws_rekognition_project",
        "streamProcessorResource": "aws_rekognition_stream_processor"
      }
    },
    {
      "service_name": "resiliencehub",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/resiliencehub",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_resiliencehub_resiliency_policy": {
          "terraform_type": "aws_resiliencehub_resiliency_policy",
          "factory_function": "newResiliencehubResiliencyPolicyResource",
          "name": "Resiliency Policy",
          "sdk_type": "framework",
          "struct_type": "resiliencyPolicyResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "resiliencyPolicyResource": "aws_resiliencehub_resiliency_policy"
      }
    },
    {
      "service_name": "resourceexplorer2",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/resourceexplorer2",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_resourceexplorer2_index": {
          "terraform_type": "aws_resourceexplorer2_index",
          "factory_function": "newResourceexplorer2IndexResource",
          "name": "Index",
          "sdk_type": "framework",
          "struct_type": "indexResource"
        },
        "aws_resourceexplorer2_view": {
          "terraform_type": "aws_resourceexplorer2_view",
          "factory_function": "newResourceexplorer2ViewResource",
          "name": "View",
          "sdk_type": "framework",
          "struct_type": "viewResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_resourceexplorer2_search": {
          "terraform_type": "aws_resourceexplorer2_search",
          "factory_function": "newResourceexplorer2SearchDataSource",
          "name": "Search",
          "sdk_type": "framework",
          "struct_type": "searchDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "indexResource": "aws_resourceexplorer2_index",
        "viewResource": "aws_resourceexplorer2_view"
      },
      "data_source_terraform_types": {
        "searchDataSource": "aws_resourceexplorer2_search"
      }
    },
    {
      "service_name": "resourcegroups",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/resourcegroups",
      "aws_sdk_resources": {
        "aws_resourcegroups_group": {
          "terraform_type": "aws_resourcegroups_group",
          "factory_function": "resourceResourcegroupsGroup",
          "name": "Group",
          "sdk_type": "sdk"
        },
        "aws_resourcegroups_resource": {
          "terraform_type": "aws_resourcegroups_resource",
          "factory_function": "resourceResourcegroupsResource",
          "name": "Resource",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_resourcegroups_group": {
          "create_method": "resourceGroupCreate",
          "read_method": "resourceGroupRead",
          "update_method": "resourceGroupUpdate",
          "delete_method": "resourceGroupDelete"
        },
        "aws_resourcegroups_resource": {
          "create_method": "resourceResourceCreate",
          "read_method": "resourceResourceRead",
          "delete_method": "resourceResourceDelete"
        }
      }
    },
    {
      "service_name": "resourcegroupstaggingapi",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/resourcegroupstaggingapi",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {
        "aws_resourcegroupstaggingapi_resources": {
          "terraform_type": "aws_resourcegroupstaggingapi_resources",
          "factory_function": "dataSourceResourcegroupstaggingapiResources",
          "name": "Resources",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "data_source_methods": {
        "aws_resourcegroupstaggingapi_resources": {
          "read_method": "dataSourceResourcesRead"
        }
      }
    },
    {
      "service_name": "rolesanywhere",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/rolesanywhere",
      "aws_sdk_resources": {
        "aws_rolesanywhere_profile": {
          "terraform_type": "aws_rolesanywhere_profile",
          "factory_function": "resourceRolesanywhereProfile",
          "name": "Profile",
          "sdk_type": "sdk"
        },
        "aws_rolesanywhere_trust_anchor": {
          "terraform_type": "aws_rolesanywhere_trust_anchor",
          "factory_function": "resourceRolesanywhereTrustAnchor",
          "name": "Trust Anchor",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_rolesanywhere_profile": {
          "create_method": "resourceProfileCreate",
          "read_method": "resourceProfileRead",
          "update_method": "resourceProfileUpdate",
          "delete_method": "resourceProfileDelete"
        },
        "aws_rolesanywhere_trust_anchor": {
          "create_method": "resourceTrustAnchorCreate",
          "read_method": "resourceTrustAnchorRead",
          "update_method": "resourceTrustAnchorUpdate",
          "delete_method": "resourceTrustAnchorDelete"
        }
      }
    },
    {
      "service_name": "route53",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/route53",
      "aws_sdk_resources": {
        "aws_route53_delegation_set": {
          "terraform_type": "aws_route53_delegation_set",
          "factory_function": "resourceRoute53DelegationSet",
          "name": "Reusable Delegation Set",
          "sdk_type": "sdk"
        },
        "aws_route53_health_check": {
          "terraform_type": "aws_route53_health_check",
          "factory_function": "resourceRoute53HealthCheck",
          "name": "Health Check",
          "sdk_type": "sdk"
        },
        "aws_route53_hosted_zone_dnssec": {
          "terraform_type": "aws_route53_hosted_zone_dnssec",
          "factory_function": "resourceRoute53HostedZoneDnssec",
          "name": "Hosted Zone DNSSEC",
          "sdk_type": "sdk"
        },
        "aws_route53_key_signing_key": {
          "terraform_type": "aws_route53_key_signing_key",
          "factory_function": "resourceRoute53KeySigningKey",
          "name": "Key Signing Key",
          "sdk_type": "sdk"
        },
        "aws_route53_query_log": {
          "terraform_type": "aws_route53_query_log",
          "factory_function": "resourceRoute53QueryLog",
          "name": "Query Logging Config",
          "sdk_type": "sdk"
        },
        "aws_route53_record": {
          "terraform_type": "aws_route53_record",
          "factory_function": "resourceRoute53Record",
          "name": "Record",
          "sdk_type": "sdk"
        },
        "aws_route53_traffic_policy": {
          "terraform_type": "aws_route53_traffic_policy",
          "factory_function": "resourceRoute53TrafficPolicy",
          "name": "Traffic Policy",
          "sdk_type": "sdk"
        },
        "aws_route53_traffic_policy_instance": {
          "terraform_type": "aws_route53_traffic_policy_instance",
          "factory_function": "resourceRoute53TrafficPolicyInstance",
          "name": "Traffic Policy Instance",
          "sdk_type": "sdk"
        },
        "aws_route53_vpc_association_authorization": {
          "terraform_type": "aws_route53_vpc_association_authorization",
          "factory_function": "resourceRoute53VpcAssociationAuthorization",
          "name": "VPC Association Authorization",
          "sdk_type": "sdk"
        },
        "aws_route53_zone": {
          "terraform_type": "aws_route53_zone",
          "factory_function": "resourceRoute53Zone",
          "name": "Hosted Zone",
          "sdk_type": "sdk"
        },
        "aws_route53_zone_association": {
          "terraform_type": "aws_route53_zone_association",
          "factory_function": "resourceRoute53ZoneAssociation",
          "name": "Zone Association",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_route53_delegation_set": {
          "terraform_type": "aws_route53_delegation_set",
          "factory_function": "dataSourceRoute53DelegationSet",
          "name": "Reusable Delegation Set",
          "sdk_type": "sdk"
        },
        "aws_route53_traffic_policy_document": {
          "terraform_type": "aws_route53_traffic_policy_document",
          "factory_function": "dataSourceRoute53TrafficPolicyDocument",
          "name": "Traffic Policy Document",
          "sdk_type": "sdk"
        },
        "aws_route53_zone": {
          "terraform_type": "aws_route53_zone",
          "factory_function": "dataSourceRoute53Zone",
          "name": "Hosted Zone",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_route53_cidr_collection": {
          "terraform_type": "aws_route53_cidr_collection",
          "factory_function": "newRoute53CidrCollectionResource",
          "name": "CIDR Collection",
          "sdk_type": "framework",
          "struct_type": "cidrCollectionResource"
        },
        "aws_route53_cidr_location": {
          "terraform_type": "aws_route53_cidr_location",
          "factory_function": "newRoute53CidrLocationResource",
          "name": "CIDR Location",
          "sdk_type": "framework",
          "struct_type": "cidrLocationResource"
        },
        "aws_route53_records_exclusive": {
          "terraform_type": "aws_route53_records_exclusive",
          "factory_function": "newRoute53RecordsExclusiveResource",
          "name": "Records Exclusive",
          "sdk_type": "framework",
          "struct_type": "recordsExclusiveResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_route53_records": {
          "terraform_type": "aws_route53_records",
          "factory_function": "newRoute53RecordsDataSource",
          "name": "Records",
          "sdk_type": "framework",
          "struct_type": "recordsDataSource"
        },
        "aws_route53_zones": {
          "terraform_type": "aws_route53_zones",
          "factory_function": "newRoute53ZonesDataSource",
          "name": "Zones",
          "sdk_type": "framework",
          "struct_type": "zonesDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "cidrCollectionResource": "aws_route53_cidr_collection",
        "cidrLocationResource": "aws_route53_cidr_location",
        "recordsExclusiveResource": "aws_route53_records_exclusive"
      },
      "data_source_terraform_types": {
        "recordsDataSource": "aws_route53_records",
        "zonesDataSource": "aws_route53_zones"
      },
      "resource_crud_methods": {
        "aws_route53_delegation_set": {
          "create_method": "resourceDelegationSetCreate",
          "read_method": "resourceDelegationSetRead",
          "delete_method": "resourceDelegationSetDelete"
        },
        "aws_route53_health_check": {
          "create_method": "resourceHealthCheckCreate",
          "read_method": "resourceHealthCheckRead",
          "update_method": "resourceHealthCheckUpdate",
          "delete_method": "resourceHealthCheckDelete"
        },
        "aws_route53_hosted_zone_dnssec": {
          "create_method": "resourceHostedZoneDNSSECCreate",
          "read_method": "resourceHostedZoneDNSSECRead",
          "update_method": "resourceHostedZoneDNSSECUpdate",
          "delete_method": "resourceHostedZoneDNSSECDelete"
        },
        "aws_route53_key_signing_key": {
          "create_method": "resourceKeySigningKeyCreate",
          "read_method": "resourceKeySigningKeyRead",
          "update_method": "resourceKeySigningKeyUpdate",
          "delete_method": "resourceKeySigningKeyDelete"
        },
        "aws_route53_query_log": {
          "create_method": "resourceQueryLogCreate",
          "read_method": "resourceQueryLogRead",
          "delete_method": "resourceQueryLogDelete"
        },
        "aws_route53_record": {
          "create_method": "resourceRecordCreate",
          "read_method": "resourceRecordRead",
          "update_method": "resourceRecordUpdate",
          "delete_method": "resourceRecordDelete"
        },
        "aws_route53_traffic_policy": {
          "create_method": "resourceTrafficPolicyCreate",
          "read_method": "resourceTrafficPolicyRead",
          "update_method": "resourceTrafficPolicyUpdate",
          "delete_method": "resourceTrafficPolicyDelete"
        },
        "aws_route53_traffic_policy_instance": {
          "create_method": "resourceTrafficPolicyInstanceCreate",
          "read_method": "resourceTrafficPolicyInstanceRead",
          "update_method": "resourceTrafficPolicyInstanceUpdate",
          "delete_method": "resourceTrafficPolicyInstanceDelete"
        },
        "aws_route53_vpc_association_authorization": {
          "create_method": "resourceVPCAssociationAuthorizationCreate",
          "read_method": "resourceVPCAssociationAuthorizationRead",
          "delete_method": "resourceVPCAssociationAuthorizationDelete"
        },
        "aws_route53_zone": {
          "create_method": "resourceZoneCreate",
          "read_method": "resourceZoneRead",
          "update_method": "resourceZoneUpdate",
          "delete_method": "resourceZoneDelete"
        },
        "aws_route53_zone_association": {
          "create_method": "resourceZoneAssociationCreate",
          "read_method": "resourceZoneAssociationRead",
          "delete_method": "resourceZoneAssociationDelete"
        }
      },
      "data_source_methods": {
        "aws_route53_delegation_set": {
          "read_method": "dataSourceDelegationSetRead"
        },
        "aws_route53_traffic_policy_document": {
          "read_method": "dataSourceTrafficPolicyDocumentRead"
        },
        "aws_route53_zone": {
          "read_method": "dataSourceZoneRead"
        }
      }
    },
    {
      "service_name": "route53domains",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/route53domains",
      "aws_sdk_resources": {
        "aws_route53domains_registered_domain": {
          "terraform_type": "aws_route53domains_registered_domain",
          "factory_function": "resourceRoute53domainsRegisteredDomain",
          "name": "Registered Domain",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_route53domains_delegation_signer_record": {
          "terraform_type": "aws_route53domains_delegation_signer_record",
          "factory_function": "newRoute53domainsDelegationSignerRecordResource",
          "name": "Delegation Signer Record",
          "sdk_type": "framework",
          "struct_type": "delegationSignerRecordResource"
        },
        "aws_route53domains_domain": {
          "terraform_type": "aws_route53domains_domain",
          "factory_function": "newRoute53domainsDomainResource",
          "name": "Domain",
          "sdk_type": "framework",
          "struct_type": "domainResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "delegationSignerRecordResource": "aws_route53domains_delegation_signer_record",
        "domainResource": "aws_route53domains_domain"
      },
      "resource_crud_methods": {
        "aws_route53domains_registered_domain": {
          "create_method": "resourceRegisteredDomainCreate",
          "read_method": "resourceRegisteredDomainRead",
          "update_method": "resourceRegisteredDomainUpdate"
        }
      }
    },
    {
      "service_name": "route53recoverycontrolconfig",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/route53recoverycontrolconfig",
      "aws_sdk_resources": {
        "aws_route53recoverycontrolconfig_cluster": {
          "terraform_type": "aws_route53recoverycontrolconfig_cluster",
          "factory_function": "resourceRoute53recoverycontrolconfigCluster",
          "name": "Cluster",
          "sdk_type": "sdk"
        },
        "aws_route53recoverycontrolconfig_control_panel": {
          "terraform_type": "aws_route53recoverycontrolconfig_control_panel",
          "factory_function": "resourceRoute53recoverycontrolconfigControlPanel",
          "name": "Control Panel",
          "sdk_type": "sdk"
        },
        "aws_route53recoverycontrolconfig_routing_control": {
          "terraform_type": "aws_route53recoverycontrolconfig_routing_control",
          "factory_function": "resourceRoute53recoverycontrolconfigRoutingControl",
          "name": "Routing Control",
          "sdk_type": "sdk"
        },
        "aws_route53recoverycontrolconfig_safety_rule": {
          "terraform_type": "aws_route53recoverycontrolconfig_safety_rule",
          "factory_function": "resourceRoute53recoverycontrolconfigSafetyRule",
          "name": "Safety Rule",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_route53recoverycontrolconfig_cluster": {
          "create_method": "resourceClusterCreate",
          "read_method": "resourceClusterRead",
          "update_method": "resourceClusterUpdate",
          "delete_method": "resourceClusterDelete"
        },
        "aws_route53recoverycontrolconfig_control_panel": {
          "create_method": "resourceControlPanelCreate",
          "read_method": "resourceControlPanelRead",
          "update_method": "resourceControlPanelUpdate",
          "delete_method": "resourceControlPanelDelete"
        },
        "aws_route53recoverycontrolconfig_routing_control": {
          "create_method": "resourceRoutingControlCreate",
          "read_method": "resourceRoutingControlRead",
          "update_method": "resourceRoutingControlUpdate",
          "delete_method": "resourceRoutingControlDelete"
        },
        "aws_route53recoverycontrolconfig_safety_rule": {
          "create_method": "resourceSafetyRuleCreate",
          "read_method": "resourceSafetyRuleRead",
          "update_method": "resourceSafetyRuleUpdate",
          "delete_method": "resourceSafetyRuleDelete"
        }
      }
    },
    {
      "service_name": "route53profiles",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/route53profiles",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_route53profiles_association": {
          "terraform_type": "aws_route53profiles_association",
          "factory_function": "newRoute53profilesAssociationResource",
          "name": "Association",
          "sdk_type": "framework",
          "struct_type": "associationResource"
        },
        "aws_route53profiles_profile": {
          "terraform_type": "aws_route53profiles_profile",
          "factory_function": "newRoute53profilesProfileResource",
          "name": "Profile",
          "sdk_type": "framework",
          "struct_type": "profileResource"
        },
        "aws_route53profiles_resource_association": {
          "terraform_type": "aws_route53profiles_resource_association",
          "factory_function": "newRoute53profilesResourceAssociationResource",
          "name": "ResourceAssociation",
          "sdk_type": "framework",
          "struct_type": "resourceAssociationResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_route53profiles_profiles": {
          "terraform_type": "aws_route53profiles_profiles",
          "factory_function": "newRoute53profilesProfilesDataSource",
          "name": "Profiles",
          "sdk_type": "framework",
          "struct_type": "profilesDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "associationResource": "aws_route53profiles_association",
        "profileResource": "aws_route53profiles_profile",
        "resourceAssociationResource": "aws_route53profiles_resource_association"
      },
      "data_source_terraform_types": {
        "profilesDataSource": "aws_route53profiles_profiles"
      }
    },
    {
      "service_name": "route53recoveryreadiness",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/route53recoveryreadiness",
      "aws_sdk_resources": {
        "aws_route53recoveryreadiness_cell": {
          "terraform_type": "aws_route53recoveryreadiness_cell",
          "factory_function": "resourceRoute53recoveryreadinessCell",
          "name": "Cell",
          "sdk_type": "sdk"
        },
        "aws_route53recoveryreadiness_readiness_check": {
          "terraform_type": "aws_route53recoveryreadiness_readiness_check",
          "factory_function": "resourceRoute53recoveryreadinessReadinessCheck",
          "name": "Readiness Check",
          "sdk_type": "sdk"
        },
        "aws_route53recoveryreadiness_recovery_group": {
          "terraform_type": "aws_route53recoveryreadiness_recovery_group",
          "factory_function": "resourceRoute53recoveryreadinessRecoveryGroup",
          "name": "Recovery Group",
          "sdk_type": "sdk"
        },
        "aws_route53recoveryreadiness_resource_set": {
          "terraform_type": "aws_route53recoveryreadiness_resource_set",
          "factory_function": "resourceRoute53recoveryreadinessResourceSet",
          "name": "Resource Set",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_route53recoveryreadiness_cell": {
          "create_method": "resourceCellCreate",
          "read_method": "resourceCellRead",
          "update_method": "resourceCellUpdate",
          "delete_method": "resourceCellDelete"
        },
        "aws_route53recoveryreadiness_readiness_check": {
          "create_method": "resourceReadinessCheckCreate",
          "read_method": "resourceReadinessCheckRead",
          "update_method": "resourceReadinessCheckUpdate",
          "delete_method": "resourceReadinessCheckDelete"
        },
        "aws_route53recoveryreadiness_recovery_group": {
          "create_method": "resourceRecoveryGroupCreate",
          "read_method": "resourceRecoveryGroupRead",
          "update_method": "resourceRecoveryGroupUpdate",
          "delete_method": "resourceRecoveryGroupDelete"
        },
        "aws_route53recoveryreadiness_resource_set": {
          "create_method": "resourceResourceSetCreate",
          "read_method": "resourceResourceSetRead",
          "update_method": "resourceResourceSetUpdate",
          "delete_method": "resourceResourceSetDelete"
        }
      }
    },
    {
      "service_name": "route53resolver",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/route53resolver",
      "aws_sdk_resources": {
        "aws_route53_resolver_config": {
          "terraform_type": "aws_route53_resolver_config",
          "factory_function": "resourceRoute53ResolverConfig",
          "name": "Config",
          "sdk_type": "sdk"
        },
        "aws_route53_resolver_dnssec_config": {
          "terraform_type": "aws_route53_resolver_dnssec_config",
          "factory_function": "resourceRoute53ResolverDnssecConfig",
          "name": "DNSSEC Config",
          "sdk_type": "sdk"
        },
        "aws_route53_resolver_endpoint": {
          "terraform_type": "aws_route53_resolver_endpoint",
          "factory_function": "resourceRoute53ResolverEndpoint",
          "name": "Endpoint",
          "sdk_type": "sdk"
        },
        "aws_route53_resolver_firewall_config": {
          "terraform_type": "aws_route53_resolver_firewall_config",
          "factory_function": "resourceRoute53ResolverFirewallConfig",
          "name": "Firewall Config",
          "sdk_type": "sdk"
        },
        "aws_route53_resolver_firewall_domain_list": {
          "terraform_type": "aws_route53_resolver_firewall_domain_list",
          "factory_function": "resourceRoute53ResolverFirewallDomainList",
          "name": "Firewall Domain List",
          "sdk_type": "sdk"
        },
        "aws_route53_resolver_firewall_rule": {
          "terraform_type": "aws_route53_resolver_firewall_rule",
          "factory_function": "resourceRoute53ResolverFirewallRule",
          "name": "Firewall Rule",
          "sdk_type": "sdk"
        },
        "aws_route53_resolver_firewall_rule_group": {
          "terraform_type": "aws_route53_resolver_firewall_rule_group",
          "factory_function": "resourceRoute53ResolverFirewallRuleGroup",
          "name": "Firewall Rule Group",
          "sdk_type": "sdk"
        },
        "aws_route53_resolver_firewall_rule_group_association": {
          "terraform_type": "aws_route53_resolver_firewall_rule_group_association",
          "factory_function": "resourceRoute53ResolverFirewallRuleGroupAssociation",
          "name": "Firewall Rule Group Association",
          "sdk_type": "sdk"
        },
        "aws_route53_resolver_query_log_config": {
          "terraform_type": "aws_route53_resolver_query_log_config",
          "factory_function": "resourceRoute53ResolverQueryLogConfig",
          "name": "Query Log Config",
          "sdk_type": "sdk"
        },
        "aws_route53_resolver_query_log_config_association": {
          "terraform_type": "aws_route53_resolver_query_log_config_association",
          "factory_function": "resourceRoute53ResolverQueryLogConfigAssociation",
          "name": "Query Log Config Association",
          "sdk_type": "sdk"
        },
        "aws_route53_resolver_rule": {
          "terraform_type": "aws_route53_resolver_rule",
          "factory_function": "resourceRoute53ResolverRule",
          "name": "Rule",
          "sdk_type": "sdk"
        },
        "aws_route53_resolver_rule_association": {
          "terraform_type": "aws_route53_resolver_rule_association",
          "factory_function": "resourceRoute53ResolverRuleAssociation",
          "name": "Rule Association",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_route53_resolver_endpoint": {
          "terraform_type": "aws_route53_resolver_endpoint",
          "factory_function": "dataSourceRoute53ResolverEndpoint",
          "name": "Endpoint",
          "sdk_type": "sdk"
        },
        "aws_route53_resolver_firewall_config": {
          "terraform_type": "aws_route53_resolver_firewall_config",
          "factory_function": "dataSourceRoute53ResolverFirewallConfig",
          "name": "Firewall Config",
          "sdk_type": "sdk"
        },
        "aws_route53_resolver_firewall_domain_list": {
          "terraform_type": "aws_route53_resolver_firewall_domain_list",
          "factory_function": "dataSourceRoute53ResolverFirewallDomainList",
          "name": "Firewall Domain List",
          "sdk_type": "sdk"
        },
        "aws_route53_resolver_firewall_rule_group": {
          "terraform_type": "aws_route53_resolver_firewall_rule_group",
          "factory_function": "dataSourceRoute53ResolverFirewallRuleGroup",
          "name": "Firewall Rule Group",
          "sdk_type": "sdk"
        },
        "aws_route53_resolver_firewall_rule_group_association": {
          "terraform_type": "aws_route53_resolver_firewall_rule_group_association",
          "factory_function": "dataSourceRoute53ResolverFirewallRuleGroupAssociation",
          "name": "Firewall Rule Group Association",
          "sdk_type": "sdk"
        },
        "aws_route53_resolver_firewall_rules": {
          "terraform_type": "aws_route53_resolver_firewall_rules",
          "factory_function": "dataSourceRoute53ResolverFirewallRules",
          "name": "Firewall Rules",
          "sdk_type": "sdk"
        },
        "aws_route53_resolver_query_log_config": {
          "terraform_type": "aws_route53_resolver_query_log_config",
          "factory_function": "dataSourceRoute53ResolverQueryLogConfig",
          "name": "Query Log Config",
          "sdk_type": "sdk"
        },
        "aws_route53_resolver_rule": {
          "terraform_type": "aws_route53_resolver_rule",
          "factory_function": "dataSourceRoute53ResolverRule",
          "name": "Rule",
          "sdk_type": "sdk"
        },
        "aws_route53_resolver_rules": {
          "terraform_type": "aws_route53_resolver_rules",
          "factory_function": "dataSourceRoute53ResolverRules",
          "name": "Rules",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_route53_resolver_config": {
          "create_method": "resourceConfigCreate",
          "read_method": "resourceConfigRead",
          "update_method": "resourceConfigUpdate"
        },
        "aws_route53_resolver_dnssec_config": {
          "create_method": "resourceDNSSECConfigCreate",
          "read_method": "resourceDNSSECConfigRead",
          "delete_method": "resourceDNSSECConfigDelete"
        },
        "aws_route53_resolver_endpoint": {
          "create_method": "resourceEndpointCreate",
          "read_method": "resourceEndpointRead",
          "update_method": "resourceEndpointUpdate",
          "delete_method": "resourceEndpointDelete"
        },
        "aws_route53_resolver_firewall_config": {
          "create_method": "resourceFirewallConfigCreate",
          "read_method": "resourceFirewallConfigRead",
          "update_method": "resourceFirewallConfigUpdate",
          "delete_method": "resourceFirewallConfigDelete"
        },
        "aws_route53_resolver_firewall_domain_list": {
          "create_method": "resourceFirewallDomainListCreate",
          "read_method": "resourceFirewallDomainListRead",
          "update_method": "resourceFirewallDomainListUpdate",
          "delete_method": "resourceFirewallDomainListDelete"
        },
        "aws_route53_resolver_firewall_rule": {
          "create_method": "resourceFirewallRuleCreate",
          "read_method": "resourceFirewallRuleRead",
          "update_method": "resourceFirewallRuleUpdate",
          "delete_method": "resourceFirewallRuleDelete"
        },
        "aws_route53_resolver_firewall_rule_group": {
          "create_method": "resourceFirewallRuleGroupCreate",
          "read_method": "resourceFirewallRuleGroupRead",
          "update_method": "resourceFirewallRuleGroupUpdate",
          "delete_method": "resourceFirewallRuleGroupDelete"
        },
        "aws_route53_resolver_firewall_rule_group_association": {
          "create_method": "resourceFirewallRuleGroupAssociationCreate",
          "read_method": "resourceFirewallRuleGroupAssociationRead",
          "update_method": "resourceFirewallRuleGroupAssociationUpdate",
          "delete_method": "resourceFirewallRuleGroupAssociationDelete"
        },
        "aws_route53_resolver_query_log_config": {
          "create_method": "resourceQueryLogConfigCreate",
          "read_method": "resourceQueryLogConfigRead",
          "update_method": "resourceQueryLogConfigUpdate",
          "delete_method": "resourceQueryLogConfigDelete"
        },
        "aws_route53_resolver_query_log_config_association": {
          "create_method": "resourceQueryLogConfigAssociationCreate",
          "read_method": "resourceQueryLogConfigAssociationRead",
          "delete_method": "resourceQueryLogConfigAssociationDelete"
        },
        "aws_route53_resolver_rule": {
          "create_method": "resourceRuleCreate",
          "read_method": "resourceRuleRead",
          "update_method": "resourceRuleUpdate",
          "delete_method": "resourceRuleDelete"
        },
        "aws_route53_resolver_rule_association": {
          "create_method": "resourceRuleAssociationCreate",
          "read_method": "resourceRuleAssociationRead",
          "delete_method": "resourceRuleAssociationDelete"
        }
      },
      "data_source_methods": {
        "aws_route53_resolver_endpoint": {
          "read_method": "dataSourceEndpointRead"
        },
        "aws_route53_resolver_firewall_config": {
          "read_method": "dataSourceFirewallConfigRead"
        },
        "aws_route53_resolver_firewall_domain_list": {
          "read_method": "dataSourceFirewallDomainListRead"
        },
        "aws_route53_resolver_firewall_rule_group": {
          "read_method": "dataSourceFirewallRuleGroupRead"
        },
        "aws_route53_resolver_firewall_rule_group_association": {
          "read_method": "dataSourceRuleGroupAssociationRead"
        },
        "aws_route53_resolver_firewall_rules": {
          "read_method": "dataSourceResolverFirewallFirewallRulesRead"
        },
        "aws_route53_resolver_query_log_config": {
          "read_method": "dataSourceQueryLogConfigRead"
        },
        "aws_route53_resolver_rule": {
          "read_method": "dataSourceRuleRead"
        },
        "aws_route53_resolver_rules": {
          "read_method": "dataSourceRulesRead"
        }
      }
    },
    {
      "service_name": "rum",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/rum",
      "aws_sdk_resources": {
        "aws_rum_app_monitor": {
          "terraform_type": "aws_rum_app_monitor",
          "factory_function": "resourceRumAppMonitor",
          "name": "App Monitor",
          "sdk_type": "sdk"
        },
        "aws_rum_metrics_destination": {
          "terraform_type": "aws_rum_metrics_destination",
          "factory_function": "resourceRumMetricsDestination",
          "name": "Metrics Destination",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_rum_app_monitor": {
          "create_method": "resourceAppMonitorCreate",
          "read_method": "resourceAppMonitorRead",
          "update_method": "resourceAppMonitorUpdate",
          "delete_method": "resourceAppMonitorDelete"
        },
        "aws_rum_metrics_destination": {
          "create_method": "resourceMetricsDestinationPut",
          "read_method": "resourceMetricsDestinationRead",
          "update_method": "resourceMetricsDestinationPut",
          "delete_method": "resourceMetricsDestinationDelete"
        }
      }
    },
    {
      "service_name": "s3",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/s3",
      "aws_sdk_resources": {
        "aws_s3_bucket": {
          "terraform_type": "aws_s3_bucket",
          "factory_function": "resourceS3Bucket",
          "name": "Bucket",
          "sdk_type": "sdk"
        },
        "aws_s3_bucket_accelerate_configuration": {
          "terraform_type": "aws_s3_bucket_accelerate_configuration",
          "factory_function": "resourceS3BucketAccelerateConfiguration",
          "name": "Bucket Accelerate Configuration",
          "sdk_type": "sdk"
        },
        "aws_s3_bucket_acl": {
          "terraform_type": "aws_s3_bucket_acl",
          "factory_function": "resourceS3BucketAcl",
          "name": "Bucket ACL",
          "sdk_type": "sdk"
        },
        "aws_s3_bucket_analytics_configuration": {
          "terraform_type": "aws_s3_bucket_analytics_configuration",
          "factory_function": "resourceS3BucketAnalyticsConfiguration",
          "name": "Bucket Analytics Configuration",
          "sdk_type": "sdk"
        },
        "aws_s3_bucket_cors_configuration": {
          "terraform_type": "aws_s3_bucket_cors_configuration",
          "factory_function": "resourceS3BucketCorsConfiguration",
          "name": "Bucket CORS Configuration",
          "sdk_type": "sdk"
        },
        "aws_s3_bucket_intelligent_tiering_configuration": {
          "terraform_type": "aws_s3_bucket_intelligent_tiering_configuration",
          "factory_function": "resourceS3BucketIntelligentTieringConfiguration",
          "name": "Bucket Intelligent-Tiering Configuration",
          "sdk_type": "sdk"
        },
        "aws_s3_bucket_inventory": {
          "terraform_type": "aws_s3_bucket_inventory",
          "factory_function": "resourceS3BucketInventory",
          "name": "Bucket Inventory",
          "sdk_type": "sdk"
        },
        "aws_s3_bucket_logging": {
          "terraform_type": "aws_s3_bucket_logging",
          "factory_function": "resourceS3BucketLogging",
          "name": "Bucket Logging",
          "sdk_type": "sdk"
        },
        "aws_s3_bucket_metric": {
          "terraform_type": "aws_s3_bucket_metric",
          "factory_function": "resourceS3BucketMetric",
          "name": "Bucket Metric",
          "sdk_type": "sdk"
        },
        "aws_s3_bucket_notification": {
          "terraform_type": "aws_s3_bucket_notification",
          "factory_function": "resourceS3BucketNotification",
          "name": "Bucket Notification",
          "sdk_type": "sdk"
        },
        "aws_s3_bucket_object": {
          "terraform_type": "aws_s3_bucket_object",
          "factory_function": "resourceS3BucketObject",
          "name": "Bucket Object",
          "sdk_type": "sdk"
        },
        "aws_s3_bucket_object_lock_configuration": {
          "terraform_type": "aws_s3_bucket_object_lock_configuration",
          "factory_function": "resourceS3BucketObjectLockConfiguration",
          "name": "Bucket Object Lock Configuration",
          "sdk_type": "sdk"
        },
        "aws_s3_bucket_ownership_controls": {
          "terraform_type": "aws_s3_bucket_ownership_controls",
          "factory_function": "resourceS3BucketOwnershipControls",
          "name": "Bucket Ownership Controls",
          "sdk_type": "sdk"
        },
        "aws_s3_bucket_policy": {
          "terraform_type": "aws_s3_bucket_policy",
          "factory_function": "resourceS3BucketPolicy",
          "name": "Bucket Policy",
          "sdk_type": "sdk"
        },
        "aws_s3_bucket_public_access_block": {
          "terraform_type": "aws_s3_bucket_public_access_block",
          "factory_function": "resourceS3BucketPublicAccessBlock",
          "name": "Bucket Public Access Block",
          "sdk_type": "sdk"
        },
        "aws_s3_bucket_replication_configuration": {
          "terraform_type": "aws_s3_bucket_replication_configuration",
          "factory_function": "resourceS3BucketReplicationConfiguration",
          "name": "Bucket Replication Configuration",
          "sdk_type": "sdk"
        },
        "aws_s3_bucket_request_payment_configuration": {
          "terraform_type": "aws_s3_bucket_request_payment_configuration",
          "factory_function": "resourceS3BucketRequestPaymentConfiguration",
          "name": "Bucket Request Payment Configuration",
          "sdk_type": "sdk"
        },
        "aws_s3_bucket_server_side_encryption_configuration": {
          "terraform_type": "aws_s3_bucket_server_side_encryption_configuration",
          "factory_function": "resourceS3BucketServerSideEncryptionConfiguration",
          "name": "Bucket Server Side Encryption Configuration",
          "sdk_type": "sdk"
        },
        "aws_s3_bucket_versioning": {
          "terraform_type": "aws_s3_bucket_versioning",
          "factory_function": "resourceS3BucketVersioning",
          "name": "Bucket Versioning",
          "sdk_type": "sdk"
        },
        "aws_s3_bucket_website_configuration": {
          "terraform_type": "aws_s3_bucket_website_configuration",
          "factory_function": "resourceS3BucketWebsiteConfiguration",
          "name": "Bucket Website Configuration",
          "sdk_type": "sdk"
        },
        "aws_s3_object": {
          "terraform_type": "aws_s3_object",
          "factory_function": "resourceS3Object",
          "name": "Object",
          "sdk_type": "sdk"
        },
        "aws_s3_object_copy": {
          "terraform_type": "aws_s3_object_copy",
          "factory_function": "resourceS3ObjectCopy",
          "name": "Object Copy",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_canonical_user_id": {
          "terraform_type": "aws_canonical_user_id",
          "factory_function": "dataSourceCanonicalUserId",
          "name": "Canonical User ID",
          "sdk_type": "sdk"
        },
        "aws_s3_bucket": {
          "terraform_type": "aws_s3_bucket",
          "factory_function": "dataSourceS3Bucket",
          "name": "Bucket",
          "sdk_type": "sdk"
        },
        "aws_s3_bucket_object": {
          "terraform_type": "aws_s3_bucket_object",
          "factory_function": "dataSourceS3BucketObject",
          "name": "Bucket Object",
          "sdk_type": "sdk"
        },
        "aws_s3_bucket_objects": {
          "terraform_type": "aws_s3_bucket_objects",
          "factory_function": "dataSourceS3BucketObjects",
          "name": "Bucket Objects",
          "sdk_type": "sdk"
        },
        "aws_s3_bucket_policy": {
          "terraform_type": "aws_s3_bucket_policy",
          "factory_function": "dataSourceS3BucketPolicy",
          "name": "Bucket Policy",
          "sdk_type": "sdk"
        },
        "aws_s3_object": {
          "terraform_type": "aws_s3_object",
          "factory_function": "dataSourceS3Object",
          "name": "Object",
          "sdk_type": "sdk"
        },
        "aws_s3_objects": {
          "terraform_type": "aws_s3_objects",
          "factory_function": "dataSourceS3Objects",
          "name": "Objects",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_s3_bucket_lifecycle_configuration": {
          "terraform_type": "aws_s3_bucket_lifecycle_configuration",
          "factory_function": "newS3BucketLifecycleConfigurationResource",
          "name": "Bucket Lifecycle Configuration",
          "sdk_type": "framework",
          "struct_type": "bucketLifecycleConfigurationResource"
        },
        "aws_s3_bucket_metadata_configuration": {
          "terraform_type": "aws_s3_bucket_metadata_configuration",
          "factory_function": "newS3BucketMetadataConfigurationResource",
          "name": "Bucket Metadata Configuration",
          "sdk_type": "framework",
          "struct_type": "bucketMetadataConfigurationResource"
        },
        "aws_s3_directory_bucket": {
          "terraform_type": "aws_s3_directory_bucket",
          "factory_function": "newS3DirectoryBucketResource",
          "name": "Directory Bucket",
          "sdk_type": "framework",
          "struct_type": "directoryBucketResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_s3_directory_buckets": {
          "terraform_type": "aws_s3_directory_buckets",
          "factory_function": "newS3DirectoryBucketsDataSource",
          "name": "Directory Buckets",
          "sdk_type": "framework",
          "struct_type": "directoryBucketsDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "bucketLifecycleConfigurationResource": "aws_s3_bucket_lifecycle_configuration",
        "bucketMetadataConfigurationResource": "aws_s3_bucket_metadata_configuration",
        "directoryBucketResource": "aws_s3_directory_bucket"
      },
      "data_source_terraform_types": {
        "directoryBucketsDataSource": "aws_s3_directory_buckets"
      },
      "resource_crud_methods": {
        "aws_s3_bucket": {
          "create_method": "resourceBucketCreate",
          "read_method": "resourceBucketRead",
          "update_method": "resourceBucketUpdate",
          "delete_method": "resourceBucketDelete"
        },
        "aws_s3_bucket_accelerate_configuration": {
          "create_method": "resourceBucketAccelerateConfigurationCreate",
          "read_method": "resourceBucketAccelerateConfigurationRead",
          "update_method": "resourceBucketAccelerateConfigurationUpdate",
          "delete_method": "resourceBucketAccelerateConfigurationDelete"
        },
        "aws_s3_bucket_acl": {
          "create_method": "resourceBucketACLCreate",
          "read_method": "resourceBucketACLRead",
          "update_method": "resourceBucketACLUpdate"
        },
        "aws_s3_bucket_analytics_configuration": {
          "create_method": "resourceBucketAnalyticsConfigurationPut",
          "read_method": "resourceBucketAnalyticsConfigurationRead",
          "update_method": "resourceBucketAnalyticsConfigurationPut",
          "delete_method": "resourceBucketAnalyticsConfigurationDelete"
        },
        "aws_s3_bucket_cors_configuration": {
          "create_method": "resourceBucketCorsConfigurationCreate",
          "read_method": "resourceBucketCorsConfigurationRead",
          "update_method": "resourceBucketCorsConfigurationUpdate",
          "delete_method": "resourceBucketCorsConfigurationDelete"
        },
        "aws_s3_bucket_intelligent_tiering_configuration": {
          "create_method": "resourceBucketIntelligentTieringConfigurationPut",
          "read_method": "resourceBucketIntelligentTieringConfigurationRead",
          "update_method": "resourceBucketIntelligentTieringConfigurationPut",
          "delete_method": "resourceBucketIntelligentTieringConfigurationDelete"
        },
        "aws_s3_bucket_inventory": {
          "create_method": "resourceBucketInventoryPut",
          "read_method": "resourceBucketInventoryRead",
          "update_method": "resourceBucketInventoryPut",
          "delete_method": "resourceBucketInventoryDelete"
        },
        "aws_s3_bucket_logging": {
          "create_method": "resourceBucketLoggingCreate",
          "read_method": "resourceBucketLoggingRead",
          "update_method": "resourceBucketLoggingUpdate",
          "delete_method": "resourceBucketLoggingDelete"
        },
        "aws_s3_bucket_metric": {
          "create_method": "resourceBucketMetricPut",
          "read_method": "resourceBucketMetricRead",
          "update_method": "resourceBucketMetricPut",
          "delete_method": "resourceBucketMetricDelete"
        },
        "aws_s3_bucket_notification": {
          "create_method": "resourceBucketNotificationPut",
          "read_method": "resourceBucketNotificationRead",
          "update_method": "resourceBucketNotificationPut",
          "delete_method": "resourceBucketNotificationDelete"
        },
        "aws_s3_bucket_object": {
          "create_method": "resourceBucketObjectCreate",
          "read_method": "resourceBucketObjectRead",
          "update_method": "resourceBucketObjectUpdate",
          "delete_method": "resourceBucketObjectDelete"
        },
        "aws_s3_bucket_object_lock_configuration": {
          "create_method": "resourceBucketObjectLockConfigurationCreate",
          "read_method": "resourceBucketObjectLockConfigurationRead",
          "update_method": "resourceBucketObjectLockConfigurationUpdate",
          "delete_method": "resourceBucketObjectLockConfigurationDelete"
        },
        "aws_s3_bucket_ownership_controls": {
          "create_method": "resourceBucketOwnershipControlsCreate",
          "read_method": "resourceBucketOwnershipControlsRead",
          "update_method": "resourceBucketOwnershipControlsUpdate",
          "delete_method": "resourceBucketOwnershipControlsDelete"
        },
        "aws_s3_bucket_policy": {
          "create_method": "resourceBucketPolicyPut",
          "read_method": "resourceBucketPolicyRead",
          "update_method": "resourceBucketPolicyPut",
          "delete_method": "resourceBucketPolicyDelete"
        },
        "aws_s3_bucket_public_access_block": {
          "create_method": "resourceBucketPublicAccessBlockCreate",
          "read_method": "resourceBucketPublicAccessBlockRead",
          "update_method": "resourceBucketPublicAccessBlockUpdate",
          "delete_method": "resourceBucketPublicAccessBlockDelete"
        },
        "aws_s3_bucket_replication_configuration": {
          "create_method": "resourceBucketReplicationConfigurationCreate",
          "read_method": "resourceBucketReplicationConfigurationRead",
          "update_method": "resourceBucketReplicationConfigurationUpdate",
          "delete_method": "resourceBucketReplicationConfigurationDelete"
        },
        "aws_s3_bucket_request_payment_configuration": {
          "create_method": "resourceBucketRequestPaymentConfigurationCreate",
          "read_method": "resourceBucketRequestPaymentConfigurationRead",
          "update_method": "resourceBucketRequestPaymentConfigurationUpdate",
          "delete_method": "resourceBucketRequestPaymentConfigurationDelete"
        },
        "aws_s3_bucket_server_side_encryption_configuration": {
          "create_method": "resourceBucketServerSideEncryptionConfigurationCreate",
          "read_method": "resourceBucketServerSideEncryptionConfigurationRead",
          "update_method": "resourceBucketServerSideEncryptionConfigurationUpdate",
          "delete_method": "resourceBucketServerSideEncryptionConfigurationDelete"
        },
        "aws_s3_bucket_versioning": {
          "create_method": "resourceBucketVersioningCreate",
          "read_method": "resourceBucketVersioningRead",
          "update_method": "resourceBucketVersioningUpdate",
          "delete_method": "resourceBucketVersioningDelete"
        },
        "aws_s3_bucket_website_configuration": {
          "create_method": "resourceBucketWebsiteConfigurationCreate",
          "read_method": "resourceBucketWebsiteConfigurationRead",
          "update_method": "resourceBucketWebsiteConfigurationUpdate",
          "delete_method": "resourceBucketWebsiteConfigurationDelete"
        },
        "aws_s3_object": {
          "create_method": "resourceObjectCreate",
          "read_method": "resourceObjectRead",
          "update_method": "resourceObjectUpdate",
          "delete_method": "resourceObjectDelete"
        },
        "aws_s3_object_copy": {
          "create_method": "resourceObjectCopyCreate",
          "read_method": "resourceObjectCopyRead",
          "update_method": "resourceObjectCopyUpdate",
          "delete_method": "resourceObjectCopyDelete"
        }
      },
      "data_source_methods": {
        "aws_canonical_user_id": {
          "read_method": "dataSourceCanonicalUserIDRead"
        },
        "aws_s3_bucket": {
          "read_method": "dataSourceBucketRead"
        },
        "aws_s3_bucket_object": {
          "read_method": "dataSourceBucketObjectRead"
        },
        "aws_s3_bucket_objects": {
          "read_method": "dataSourceBucketObjectsRead"
        },
        "aws_s3_bucket_policy": {
          "read_method": "dataSourceBucketPolicyRead"
        },
        "aws_s3_object": {
          "read_method": "dataSourceObjectRead"
        },
        "aws_s3_objects": {
          "read_method": "dataSourceObjectsRead"
        }
      }
    },
    {
      "service_name": "s3control",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/s3control",
      "aws_sdk_resources": {
        "aws_s3_access_point, name=": {
          "terraform_type": "aws_s3_access_point, name=",
          "factory_function": "resourceS3AccessPoint, name=",
          "name": "",
          "sdk_type": "sdk"
        },
        "aws_s3_account_public_access_block": {
          "terraform_type": "aws_s3_account_public_access_block",
          "factory_function": "resourceS3AccountPublicAccessBlock",
          "name": "Account Public Access Block",
          "sdk_type": "sdk"
        },
        "aws_s3control_access_point_policy": {
          "terraform_type": "aws_s3control_access_point_policy",
          "factory_function": "resourceS3controlAccessPointPolicy",
          "name": "Access Point Policy",
          "sdk_type": "sdk"
        },
        "aws_s3control_bucket": {
          "terraform_type": "aws_s3control_bucket",
          "factory_function": "resourceS3controlBucket",
          "name": "Bucket",
          "sdk_type": "sdk"
        },
        "aws_s3control_bucket_lifecycle_configuration": {
          "terraform_type": "aws_s3control_bucket_lifecycle_configuration",
          "factory_function": "resourceS3controlBucketLifecycleConfiguration",
          "name": "Bucket Lifecycle Configuration",
          "sdk_type": "sdk"
        },
        "aws_s3control_bucket_policy": {
          "terraform_type": "aws_s3control_bucket_policy",
          "factory_function": "resourceS3controlBucketPolicy",
          "name": "Bucket Policy",
          "sdk_type": "sdk"
        },
        "aws_s3control_multi_region_access_point": {
          "terraform_type": "aws_s3control_multi_region_access_point",
          "factory_function": "resourceS3controlMultiRegionAccessPoint",
          "name": "Multi-Region Access Point",
          "sdk_type": "sdk"
        },
        "aws_s3control_multi_region_access_point_policy": {
          "terraform_type": "aws_s3control_multi_region_access_point_policy",
          "factory_function": "resourceS3controlMultiRegionAccessPointPolicy",
          "name": "Multi-Region Access Point Policy",
          "sdk_type": "sdk"
        },
        "aws_s3control_object_lambda_access_point": {
          "terraform_type": "aws_s3control_object_lambda_access_point",
          "factory_function": "resourceS3controlObjectLambdaAccessPoint",
          "name": "Object Lambda Access Point",
          "sdk_type": "sdk"
        },
        "aws_s3control_object_lambda_access_point_policy": {
          "terraform_type": "aws_s3control_object_lambda_access_point_policy",
          "factory_function": "resourceS3controlObjectLambdaAccessPointPolicy",
          "name": "Object Lambda Access Point Policy",
          "sdk_type": "sdk"
        },
        "aws_s3control_storage_lens_configuration": {
          "terraform_type": "aws_s3control_storage_lens_configuration",
          "factory_function": "resourceS3controlStorageLensConfiguration",
          "name": "Storage Lens Configuration",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_s3_account_public_access_block": {
          "terraform_type": "aws_s3_account_public_access_block",
          "factory_function": "dataSourceS3AccountPublicAccessBlock",
          "name": "Account Public Access Block",
          "sdk_type": "sdk"
        },
        "aws_s3control_multi_region_access_point": {
          "terraform_type": "aws_s3control_multi_region_access_point",
          "factory_function": "dataSourceS3controlMultiRegionAccessPoint",
          "name": "Multi-Region Access Point",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_s3control_access_grant": {
          "terraform_type": "aws_s3control_access_grant",
          "factory_function": "newS3controlAccessGrantResource",
          "name": "Access Grant",
          "sdk_type": "framework",
          "struct_type": "accessGrantResource"
        },
        "aws_s3control_access_grants_instance": {
          "terraform_type": "aws_s3control_access_grants_instance",
          "factory_function": "newS3controlAccessGrantsInstanceResource",
          "name": "Access Grants Instance",
          "sdk_type": "framework",
          "struct_type": "accessGrantsInstanceResource"
        },
        "aws_s3control_access_grants_instance_resource_policy": {
          "terraform_type": "aws_s3control_access_grants_instance_resource_policy",
          "factory_function": "newS3controlAccessGrantsInstanceResourcePolicyResource",
          "name": "Access Grants Instance Resource Policy",
          "sdk_type": "framework",
          "struct_type": "accessGrantsInstanceResourcePolicyResource"
        },
        "aws_s3control_access_grants_location": {
          "terraform_type": "aws_s3control_access_grants_location",
          "factory_function": "newS3controlAccessGrantsLocationResource",
          "name": "Access Grants Location",
          "sdk_type": "framework",
          "struct_type": "accessGrantsLocationResource"
        },
        "aws_s3control_directory_bucket_access_point_scope": {
          "terraform_type": "aws_s3control_directory_bucket_access_point_scope",
          "factory_function": "newS3controlDirectoryBucketAccessPointScopeResource",
          "name": "Directory Bucket Access Point Scope",
          "sdk_type": "framework",
          "struct_type": "directoryBucketAccessPointScopeResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_s3_access_point": {
          "terraform_type": "aws_s3_access_point",
          "factory_function": "newS3AccessPointDataSource",
          "name": "Access Point",
          "sdk_type": "framework",
          "struct_type": "accessPointDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "accessGrantResource": "aws_s3control_access_grant",
        "accessGrantsInstanceResource": "aws_s3control_access_grants_instance",
        "accessGrantsInstanceResourcePolicyResource": "aws_s3control_access_grants_instance_resource_policy",
        "accessGrantsLocationResource": "aws_s3control_access_grants_location",
        "directoryBucketAccessPointScopeResource": "aws_s3control_directory_bucket_access_point_scope"
      },
      "data_source_terraform_types": {
        "accessPointDataSource": "aws_s3_access_point"
      },
      "resource_crud_methods": {
        "aws_s3_access_point, name=": {
          "create_method": "resourceAccessPointCreate",
          "read_method": "resourceAccessPointRead",
          "update_method": "resourceAccessPointUpdate",
          "delete_method": "resourceAccessPointDelete"
        },
        "aws_s3_account_public_access_block": {
          "create_method": "resourceAccountPublicAccessBlockCreate",
          "read_method": "resourceAccountPublicAccessBlockRead",
          "update_method": "resourceAccountPublicAccessBlockUpdate",
          "delete_method": "resourceAccountPublicAccessBlockDelete"
        },
        "aws_s3control_access_point_policy": {
          "create_method": "resourceAccessPointPolicyCreate",
          "read_method": "resourceAccessPointPolicyRead",
          "update_method": "resourceAccessPointPolicyUpdate",
          "delete_method": "resourceAccessPointPolicyDelete"
        },
        "aws_s3control_bucket": {
          "create_method": "resourceBucketCreate",
          "read_method": "resourceBucketRead",
          "update_method": "resourceBucketUpdate",
          "delete_method": "resourceBucketDelete"
        },
        "aws_s3control_bucket_lifecycle_configuration": {
          "create_method": "resourceBucketLifecycleConfigurationCreate",
          "read_method": "resourceBucketLifecycleConfigurationRead",
          "update_method": "resourceBucketLifecycleConfigurationUpdate",
          "delete_method": "resourceBucketLifecycleConfigurationDelete"
        },
        "aws_s3control_bucket_policy": {
          "create_method": "resourceBucketPolicyCreate",
          "read_method": "resourceBucketPolicyRead",
          "update_method": "resourceBucketPolicyUpdate",
          "delete_method": "resourceBucketPolicyDelete"
        },
        "aws_s3control_multi_region_access_point": {
          "create_method": "resourceMultiRegionAccessPointCreate",
          "read_method": "resourceMultiRegionAccessPointRead",
          "delete_method": "resourceMultiRegionAccessPointDelete"
        },
        "aws_s3control_multi_region_access_point_policy": {
          "create_method": "resourceMultiRegionAccessPointPolicyCreate",
          "read_method": "resourceMultiRegionAccessPointPolicyRead",
          "update_method": "resourceMultiRegionAccessPointPolicyUpdate"
        },
        "aws_s3control_object_lambda_access_point": {
          "create_method": "resourceObjectLambdaAccessPointCreate",
          "read_method": "resourceObjectLambdaAccessPointRead",
          "update_method": "resourceObjectLambdaAccessPointUpdate",
          "delete_method": "resourceObjectLambdaAccessPointDelete"
        },
        "aws_s3control_object_lambda_access_point_policy": {
          "create_method": "resourceObjectLambdaAccessPointPolicyCreate",
          "read_method": "resourceObjectLambdaAccessPointPolicyRead",
          "update_method": "resourceObjectLambdaAccessPointPolicyUpdate",
          "delete_method": "resourceObjectLambdaAccessPointPolicyDelete"
        },
        "aws_s3control_storage_lens_configuration": {
          "create_method": "resourceStorageLensConfigurationCreate",
          "read_method": "resourceStorageLensConfigurationRead",
          "update_method": "resourceStorageLensConfigurationUpdate",
          "delete_method": "resourceStorageLensConfigurationDelete"
        }
      },
      "data_source_methods": {
        "aws_s3_account_public_access_block": {
          "read_method": "dataSourceAccountPublicAccessBlockRead"
        },
        "aws_s3control_multi_region_access_point": {
          "read_method": "dataSourceMultiRegionAccessPointBlockRead"
        }
      }
    },
    {
      "service_name": "s3outposts",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/s3outposts",
      "aws_sdk_resources": {
        "aws_s3outposts_endpoint": {
          "terraform_type": "aws_s3outposts_endpoint",
          "factory_function": "resourceS3outpostsEndpoint",
          "name": "Endpoint",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_s3outposts_endpoint": {
          "create_method": "resourceEndpointCreate",
          "read_method": "resourceEndpointRead",
          "delete_method": "resourceEndpointDelete"
        }
      }
    },
    {
      "service_name": "s3tables",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/s3tables",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_s3tables_namespace": {
          "terraform_type": "aws_s3tables_namespace",
          "factory_function": "newS3tablesNamespaceResource",
          "name": "Namespace",
          "sdk_type": "framework",
          "struct_type": "namespaceResource"
        },
        "aws_s3tables_table": {
          "terraform_type": "aws_s3tables_table",
          "factory_function": "newS3tablesTableResource",
          "name": "Table",
          "sdk_type": "framework",
          "struct_type": "tableResource"
        },
        "aws_s3tables_table_bucket": {
          "terraform_type": "aws_s3tables_table_bucket",
          "factory_function": "newS3tablesTableBucketResource",
          "name": "Table Bucket",
          "sdk_type": "framework",
          "struct_type": "tableBucketResource"
        },
        "aws_s3tables_table_bucket_policy": {
          "terraform_type": "aws_s3tables_table_bucket_policy",
          "factory_function": "newS3tablesTableBucketPolicyResource",
          "name": "Table Bucket Policy",
          "sdk_type": "framework",
          "struct_type": "tableBucketPolicyResource"
        },
        "aws_s3tables_table_policy": {
          "terraform_type": "aws_s3tables_table_policy",
          "factory_function": "newS3tablesTablePolicyResource",
          "name": "Table Policy",
          "sdk_type": "framework",
          "struct_type": "tablePolicyResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "namespaceResource": "aws_s3tables_namespace",
        "tableBucketPolicyResource": "aws_s3tables_table_bucket_policy",
        "tableBucketResource": "aws_s3tables_table_bucket",
        "tablePolicyResource": "aws_s3tables_table_policy",
        "tableResource": "aws_s3tables_table"
      }
    },
    {
      "service_name": "scheduler",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/scheduler",
      "aws_sdk_resources": {
        "aws_scheduler_schedule": {
          "terraform_type": "aws_scheduler_schedule",
          "factory_function": "resourceSchedulerSchedule",
          "name": "Schedule",
          "sdk_type": "sdk"
        },
        "aws_scheduler_schedule_group": {
          "terraform_type": "aws_scheduler_schedule_group",
          "factory_function": "resourceSchedulerScheduleGroup",
          "name": "Schedule Group",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_scheduler_schedule": {
          "create_method": "resourceScheduleCreate",
          "read_method": "resourceScheduleRead",
          "update_method": "resourceScheduleUpdate",
          "delete_method": "resourceScheduleDelete"
        },
        "aws_scheduler_schedule_group": {
          "create_method": "resourceScheduleGroupCreate",
          "read_method": "resourceScheduleGroupRead",
          "update_method": "resourceScheduleGroupUpdate",
          "delete_method": "resourceScheduleGroupDelete"
        }
      }
    },
    {
      "service_name": "sagemaker",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/sagemaker",
      "aws_sdk_resources": {
        "aws_sagemaker_app": {
          "terraform_type": "aws_sagemaker_app",
          "factory_function": "resourceSagemakerApp",
          "name": "App",
          "sdk_type": "sdk"
        },
        "aws_sagemaker_app_image_config": {
          "terraform_type": "aws_sagemaker_app_image_config",
          "factory_function": "resourceSagemakerAppImageConfig",
          "name": "App Image Config",
          "sdk_type": "sdk"
        },
        "aws_sagemaker_code_repository": {
          "terraform_type": "aws_sagemaker_code_repository",
          "factory_function": "resourceSagemakerCodeRepository",
          "name": "Code Repository",
          "sdk_type": "sdk"
        },
        "aws_sagemaker_data_quality_job_definition": {
          "terraform_type": "aws_sagemaker_data_quality_job_definition",
          "factory_function": "resourceSagemakerDataQualityJobDefinition",
          "name": "Data Quality Job Definition",
          "sdk_type": "sdk"
        },
        "aws_sagemaker_device": {
          "terraform_type": "aws_sagemaker_device",
          "factory_function": "resourceSagemakerDevice",
          "name": "Device",
          "sdk_type": "sdk"
        },
        "aws_sagemaker_device_fleet": {
          "terraform_type": "aws_sagemaker_device_fleet",
          "factory_function": "resourceSagemakerDeviceFleet",
          "name": "Device Fleet",
          "sdk_type": "sdk"
        },
        "aws_sagemaker_domain": {
          "terraform_type": "aws_sagemaker_domain",
          "factory_function": "resourceSagemakerDomain",
          "name": "Domain",
          "sdk_type": "sdk"
        },
        "aws_sagemaker_endpoint": {
          "terraform_type": "aws_sagemaker_endpoint",
          "factory_function": "resourceSagemakerEndpoint",
          "name": "Endpoint",
          "sdk_type": "sdk"
        },
        "aws_sagemaker_endpoint_configuration": {
          "terraform_type": "aws_sagemaker_endpoint_configuration",
          "factory_function": "resourceSagemakerEndpointConfiguration",
          "name": "Endpoint Configuration",
          "sdk_type": "sdk"
        },
        "aws_sagemaker_feature_group": {
          "terraform_type": "aws_sagemaker_feature_group",
          "factory_function": "resourceSagemakerFeatureGroup",
          "name": "Feature Group",
          "sdk_type": "sdk"
        },
        "aws_sagemaker_flow_definition": {
          "terraform_type": "aws_sagemaker_flow_definition",
          "factory_function": "resourceSagemakerFlowDefinition",
          "name": "Flow Definition",
          "sdk_type": "sdk"
        },
        "aws_sagemaker_hub": {
          "terraform_type": "aws_sagemaker_hub",
          "factory_function": "resourceSagemakerHub",
          "name": "Hub",
          "sdk_type": "sdk"
        },
        "aws_sagemaker_human_task_ui": {
          "terraform_type": "aws_sagemaker_human_task_ui",
          "factory_function": "resourceSagemakerHumanTaskUi",
          "name": "Human Task UI",
          "sdk_type": "sdk"
        },
        "aws_sagemaker_image": {
          "terraform_type": "aws_sagemaker_image",
          "factory_function": "resourceSagemakerImage",
          "name": "Image",
          "sdk_type": "sdk"
        },
        "aws_sagemaker_image_version": {
          "terraform_type": "aws_sagemaker_image_version",
          "factory_function": "resourceSagemakerImageVersion",
          "name": "Image Version",
          "sdk_type": "sdk"
        },
        "aws_sagemaker_mlflow_tracking_server": {
          "terraform_type": "aws_sagemaker_mlflow_tracking_server",
          "factory_function": "resourceSagemakerMlflowTrackingServer",
          "name": "Mlflow Tracking Server",
          "sdk_type": "sdk"
        },
        "aws_sagemaker_model": {
          "terraform_type": "aws_sagemaker_model",
          "factory_function": "resourceSagemakerModel",
          "name": "Model",
          "sdk_type": "sdk"
        },
        "aws_sagemaker_model_package_group": {
          "terraform_type": "aws_sagemaker_model_package_group",
          "factory_function": "resourceSagemakerModelPackageGroup",
          "name": "Model Package Group",
          "sdk_type": "sdk"
        },
        "aws_sagemaker_model_package_group_policy": {
          "terraform_type": "aws_sagemaker_model_package_group_policy",
          "factory_function": "resourceSagemakerModelPackageGroupPolicy",
          "name": "Model Package Group Policy",
          "sdk_type": "sdk"
        },
        "aws_sagemaker_monitoring_schedule": {
          "terraform_type": "aws_sagemaker_monitoring_schedule",
          "factory_function": "resourceSagemakerMonitoringSchedule",
          "name": "Monitoring Schedule",
          "sdk_type": "sdk"
        },
        "aws_sagemaker_notebook_instance": {
          "terraform_type": "aws_sagemaker_notebook_instance",
          "factory_function": "resourceSagemakerNotebookInstance",
          "name": "Notebook Instance",
          "sdk_type": "sdk"
        },
        "aws_sagemaker_notebook_instance_lifecycle_configuration": {
          "terraform_type": "aws_sagemaker_notebook_instance_lifecycle_configuration",
          "factory_function": "resourceSagemakerNotebookInstanceLifecycleConfiguration",
          "name": "Notebook Instance Lifecycle Configuration",
          "sdk_type": "sdk"
        },
        "aws_sagemaker_pipeline": {
          "terraform_type": "aws_sagemaker_pipeline",
          "factory_function": "resourceSagemakerPipeline",
          "name": "Pipeline",
          "sdk_type": "sdk"
        },
        "aws_sagemaker_project": {
          "terraform_type": "aws_sagemaker_project",
          "factory_function": "resourceSagemakerProject",
          "name": "Project",
          "sdk_type": "sdk"
        },
        "aws_sagemaker_servicecatalog_portfolio_status": {
          "terraform_type": "aws_sagemaker_servicecatalog_portfolio_status",
          "factory_function": "resourceSagemakerServicecatalogPortfolioStatus",
          "name": "Servicecatalog Portfolio Status",
          "sdk_type": "sdk"
        },
        "aws_sagemaker_space": {
          "terraform_type": "aws_sagemaker_space",
          "factory_function": "resourceSagemakerSpace",
          "name": "Space",
          "sdk_type": "sdk"
        },
        "aws_sagemaker_studio_lifecycle_config": {
          "terraform_type": "aws_sagemaker_studio_lifecycle_config",
          "factory_function": "resourceSagemakerStudioLifecycleConfig",
          "name": "Studio Lifecycle Config",
          "sdk_type": "sdk"
        },
        "aws_sagemaker_user_profile": {
          "terraform_type": "aws_sagemaker_user_profile",
          "factory_function": "resourceSagemakerUserProfile",
          "name": "User Profile",
          "sdk_type": "sdk"
        },
        "aws_sagemaker_workforce": {
          "terraform_type": "aws_sagemaker_workforce",
          "factory_function": "resourceSagemakerWorkforce",
          "name": "Workforce",
          "sdk_type": "sdk"
        },
        "aws_sagemaker_workteam": {
          "terraform_type": "aws_sagemaker_workteam",
          "factory_function": "resourceSagemakerWorkteam",
          "name": "Workteam",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_sagemaker_prebuilt_ecr_image": {
          "terraform_type": "aws_sagemaker_prebuilt_ecr_image",
          "factory_function": "dataSourceSagemakerPrebuiltEcrImage",
          "name": "Prebuilt ECR Image",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_sagemaker_app": {
          "create_method": "resourceAppCreate",
          "read_method": "resourceAppRead",
          "update_method": "resourceAppUpdate",
          "delete_method": "resourceAppDelete"
        },
        "aws_sagemaker_app_image_config": {
          "create_method": "resourceAppImageConfigCreate",
          "read_method": "resourceAppImageConfigRead",
          "update_method": "resourceAppImageConfigUpdate",
          "delete_method": "resourceAppImageConfigDelete"
        },
        "aws_sagemaker_code_repository": {
          "create_method": "resourceCodeRepositoryCreate",
          "read_method": "resourceCodeRepositoryRead",
          "update_method": "resourceCodeRepositoryUpdate",
          "delete_method": "resourceCodeRepositoryDelete"
        },
        "aws_sagemaker_data_quality_job_definition": {
          "create_method": "resourceDataQualityJobDefinitionCreate",
          "read_method": "resourceDataQualityJobDefinitionRead",
          "update_method": "resourceDataQualityJobDefinitionUpdate",
          "delete_method": "resourceDataQualityJobDefinitionDelete"
        },
        "aws_sagemaker_device": {
          "create_method": "resourceDeviceCreate",
          "read_method": "resourceDeviceRead",
          "update_method": "resourceDeviceUpdate",
          "delete_method": "resourceDeviceDelete"
        },
        "aws_sagemaker_device_fleet": {
          "create_method": "resourceDeviceFleetCreate",
          "read_method": "resourceDeviceFleetRead",
          "update_method": "resourceDeviceFleetUpdate",
          "delete_method": "resourceDeviceFleetDelete"
        },
        "aws_sagemaker_domain": {
          "create_method": "resourceDomainCreate",
          "read_method": "resourceDomainRead",
          "update_method": "resourceDomainUpdate",
          "delete_method": "resourceDomainDelete"
        },
        "aws_sagemaker_endpoint": {
          "create_method": "resourceEndpointCreate",
          "read_method": "resourceEndpointRead",
          "update_method": "resourceEndpointUpdate",
          "delete_method": "resourceEndpointDelete"
        },
        "aws_sagemaker_endpoint_configuration": {
          "create_method": "resourceEndpointConfigurationCreate",
          "read_method": "resourceEndpointConfigurationRead",
          "update_method": "resourceEndpointConfigurationUpdate",
          "delete_method": "resourceEndpointConfigurationDelete"
        },
        "aws_sagemaker_feature_group": {
          "create_method": "resourceFeatureGroupCreate",
          "read_method": "resourceFeatureGroupRead",
          "update_method": "resourceFeatureGroupUpdate",
          "delete_method": "resourceFeatureGroupDelete"
        },
        "aws_sagemaker_flow_definition": {
          "create_method": "resourceFlowDefinitionCreate",
          "read_method": "resourceFlowDefinitionRead",
          "update_method": "resourceFlowDefinitionUpdate",
          "delete_method": "resourceFlowDefinitionDelete"
        },
        "aws_sagemaker_hub": {
          "create_method": "resourceHubCreate",
          "read_method": "resourceHubRead",
          "update_method": "resourceHubUpdate",
          "delete_method": "resourceHubDelete"
        },
        "aws_sagemaker_human_task_ui": {
          "create_method": "resourceHumanTaskUICreate",
          "read_method": "resourceHumanTaskUIRead",
          "update_method": "resourceHumanTaskUIUpdate",
          "delete_method": "resourceHumanTaskUIDelete"
        },
        "aws_sagemaker_image": {
          "create_method": "resourceImageCreate",
          "read_method": "resourceImageRead",
          "update_method": "resourceImageUpdate",
          "delete_method": "resourceImageDelete"
        },
        "aws_sagemaker_image_version": {
          "create_method": "resourceImageVersionCreate",
          "read_method": "resourceImageVersionRead",
          "update_method": "resourceImageVersionUpdate",
          "delete_method": "resourceImageVersionDelete"
        },
        "aws_sagemaker_mlflow_tracking_server": {
          "create_method": "resourceMlflowTrackingServerCreate",
          "read_method": "resourceMlflowTrackingServerRead",
          "update_method": "resourceMlflowTrackingServerUpdate",
          "delete_method": "resourceMlflowTrackingServerDelete"
        },
        "aws_sagemaker_model": {
          "create_method": "resourceModelCreate",
          "read_method": "resourceModelRead",
          "update_method": "resourceModelUpdate",
          "delete_method": "resourceModelDelete"
        },
        "aws_sagemaker_model_package_group": {
          "create_method": "resourceModelPackageGroupCreate",
          "read_method": "resourceModelPackageGroupRead",
          "update_method": "resourceModelPackageGroupUpdate",
          "delete_method": "resourceModelPackageGroupDelete"
        },
        "aws_sagemaker_model_package_group_policy": {
          "create_method": "resourceModelPackageGroupPolicyPut",
          "read_method": "resourceModelPackageGroupPolicyRead",
          "update_method": "resourceModelPackageGroupPolicyPut",
          "delete_method": "resourceModelPackageGroupPolicyDelete"
        },
        "aws_sagemaker_monitoring_schedule": {
          "create_method": "resourceMonitoringScheduleCreate",
          "read_method": "resourceMonitoringScheduleRead",
          "update_method": "resourceMonitoringScheduleUpdate",
          "delete_method": "resourceMonitoringScheduleDelete"
        },
        "aws_sagemaker_notebook_instance": {
          "create_method": "resourceNotebookInstanceCreate",
          "read_method": "resourceNotebookInstanceRead",
          "update_method": "resourceNotebookInstanceUpdate",
          "delete_method": "resourceNotebookInstanceDelete"
        },
        "aws_sagemaker_notebook_instance_lifecycle_configuration": {
          "create_method": "resourceNotebookInstanceLifeCycleConfigurationCreate",
          "read_method": "resourceNotebookInstanceLifeCycleConfigurationRead",
          "update_method": "resourceNotebookInstanceLifeCycleConfigurationUpdate",
          "delete_method": "resourceNotebookInstanceLifeCycleConfigurationDelete"
        },
        "aws_sagemaker_pipeline": {
          "create_method": "resourcePipelineCreate",
          "read_method": "resourcePipelineRead",
          "update_method": "resourcePipelineUpdate",
          "delete_method": "resourcePipelineDelete"
        },
        "aws_sagemaker_project": {
          "create_method": "resourceProjectCreate",
          "read_method": "resourceProjectRead",
          "update_method": "resourceProjectUpdate",
          "delete_method": "resourceProjectDelete"
        },
        "aws_sagemaker_servicecatalog_portfolio_status": {
          "create_method": "resourceServicecatalogPortfolioStatusPut",
          "read_method": "resourceServicecatalogPortfolioStatusRead",
          "update_method": "resourceServicecatalogPortfolioStatusPut"
        },
        "aws_sagemaker_space": {
          "create_method": "resourceSpaceCreate",
          "read_method": "resourceSpaceRead",
          "update_method": "resourceSpaceUpdate",
          "delete_method": "resourceSpaceDelete"
        },
        "aws_sagemaker_studio_lifecycle_config": {
          "create_method": "resourceStudioLifecycleConfigCreate",
          "read_method": "resourceStudioLifecycleConfigRead",
          "update_method": "resourceStudioLifecycleConfigUpdate",
          "delete_method": "resourceStudioLifecycleConfigDelete"
        },
        "aws_sagemaker_user_profile": {
          "create_method": "resourceUserProfileCreate",
          "read_method": "resourceUserProfileRead",
          "update_method": "resourceUserProfileUpdate",
          "delete_method": "resourceUserProfileDelete"
        },
        "aws_sagemaker_workforce": {
          "create_method": "resourceWorkforceCreate",
          "read_method": "resourceWorkforceRead",
          "update_method": "resourceWorkforceUpdate",
          "delete_method": "resourceWorkforceDelete"
        },
        "aws_sagemaker_workteam": {
          "create_method": "resourceWorkteamCreate",
          "read_method": "resourceWorkteamRead",
          "update_method": "resourceWorkteamUpdate",
          "delete_method": "resourceWorkteamDelete"
        }
      },
      "data_source_methods": {
        "aws_sagemaker_prebuilt_ecr_image": {
          "read_method": "dataSourcePrebuiltECRImageRead"
        }
      }
    },
    {
      "service_name": "schemas",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/schemas",
      "aws_sdk_resources": {
        "aws_schemas_discoverer": {
          "terraform_type": "aws_schemas_discoverer",
          "factory_function": "resourceSchemasDiscoverer",
          "name": "Discoverer",
          "sdk_type": "sdk"
        },
        "aws_schemas_registry": {
          "terraform_type": "aws_schemas_registry",
          "factory_function": "resourceSchemasRegistry",
          "name": "Registry",
          "sdk_type": "sdk"
        },
        "aws_schemas_registry_policy": {
          "terraform_type": "aws_schemas_registry_policy",
          "factory_function": "resourceSchemasRegistryPolicy",
          "name": "Registry Policy",
          "sdk_type": "sdk"
        },
        "aws_schemas_schema": {
          "terraform_type": "aws_schemas_schema",
          "factory_function": "resourceSchemasSchema",
          "name": "Schema",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_schemas_discoverer": {
          "create_method": "resourceDiscovererCreate",
          "read_method": "resourceDiscovererRead",
          "update_method": "resourceDiscovererUpdate",
          "delete_method": "resourceDiscovererDelete"
        },
        "aws_schemas_registry": {
          "create_method": "resourceRegistryCreate",
          "read_method": "resourceRegistryRead",
          "update_method": "resourceRegistryUpdate",
          "delete_method": "resourceRegistryDelete"
        },
        "aws_schemas_registry_policy": {
          "create_method": "resourceRegistryPolicyCreate",
          "read_method": "resourceRegistryPolicyRead",
          "update_method": "resourceRegistryPolicyUpdate",
          "delete_method": "resourceRegistryPolicyDelete"
        },
        "aws_schemas_schema": {
          "create_method": "resourceSchemaCreate",
          "read_method": "resourceSchemaRead",
          "update_method": "resourceSchemaUpdate",
          "delete_method": "resourceSchemaDelete"
        }
      }
    },
    {
      "service_name": "secretsmanager",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/secretsmanager",
      "aws_sdk_resources": {
        "aws_secretsmanager_secret": {
          "terraform_type": "aws_secretsmanager_secret",
          "factory_function": "resourceSecretsmanagerSecret",
          "name": "Secret",
          "sdk_type": "sdk"
        },
        "aws_secretsmanager_secret_policy": {
          "terraform_type": "aws_secretsmanager_secret_policy",
          "factory_function": "resourceSecretsmanagerSecretPolicy",
          "name": "Secret Policy",
          "sdk_type": "sdk"
        },
        "aws_secretsmanager_secret_rotation": {
          "terraform_type": "aws_secretsmanager_secret_rotation",
          "factory_function": "resourceSecretsmanagerSecretRotation",
          "name": "Secret Rotation",
          "sdk_type": "sdk"
        },
        "aws_secretsmanager_secret_version": {
          "terraform_type": "aws_secretsmanager_secret_version",
          "factory_function": "resourceSecretsmanagerSecretVersion",
          "name": "Secret Version",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_secretsmanager_random_password": {
          "terraform_type": "aws_secretsmanager_random_password",
          "factory_function": "dataSourceSecretsmanagerRandomPassword",
          "name": "Random Password",
          "sdk_type": "sdk"
        },
        "aws_secretsmanager_secret": {
          "terraform_type": "aws_secretsmanager_secret",
          "factory_function": "dataSourceSecretsmanagerSecret",
          "name": "Secret",
          "sdk_type": "sdk"
        },
        "aws_secretsmanager_secret_rotation": {
          "terraform_type": "aws_secretsmanager_secret_rotation",
          "factory_function": "dataSourceSecretsmanagerSecretRotation",
          "name": "Secret Rotation",
          "sdk_type": "sdk"
        },
        "aws_secretsmanager_secret_version": {
          "terraform_type": "aws_secretsmanager_secret_version",
          "factory_function": "dataSourceSecretsmanagerSecretVersion",
          "name": "Secret Version",
          "sdk_type": "sdk"
        },
        "aws_secretsmanager_secrets": {
          "terraform_type": "aws_secretsmanager_secrets",
          "factory_function": "dataSourceSecretsmanagerSecrets",
          "name": "Secrets",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {
        "aws_secretsmanager_secret_versions, name=": {
          "terraform_type": "aws_secretsmanager_secret_versions, name=",
          "factory_function": "newSecretsmanagerSecretVersions, name=DataSource",
          "name": "",
          "sdk_type": "framework",
          "struct_type": "secretVersionsDataSource"
        }
      },
      "aws_ephemeral_resources": {
        "aws_secretsmanager_random_password": {
          "terraform_type": "aws_secretsmanager_random_password",
          "factory_function": "newSecretsmanagerRandomPasswordEphemeralResource",
          "name": "Random Password",
          "sdk_type": "framework",
          "struct_type": "randomPasswordEphemeralResource"
        }
      },
      "data_source_terraform_types": {
        "secretVersionsDataSource": "aws_secretsmanager_secret_versions, name="
      },
      "ephemeral_terraform_types": {
        "randomPasswordEphemeralResource": "aws_secretsmanager_random_password"
      },
      "resource_crud_methods": {
        "aws_secretsmanager_secret": {
          "create_method": "resourceSecretCreate",
          "read_method": "resourceSecretRead",
          "update_method": "resourceSecretUpdate",
          "delete_method": "resourceSecretDelete"
        },
        "aws_secretsmanager_secret_policy": {
          "create_method": "resourceSecretPolicyCreate",
          "read_method": "resourceSecretPolicyRead",
          "update_method": "resourceSecretPolicyUpdate",
          "delete_method": "resourceSecretPolicyDelete"
        },
        "aws_secretsmanager_secret_rotation": {
          "create_method": "resourceSecretRotationCreate",
          "read_method": "resourceSecretRotationRead",
          "update_method": "resourceSecretRotationUpdate",
          "delete_method": "resourceSecretRotationDelete"
        },
        "aws_secretsmanager_secret_version": {
          "create_method": "resourceSecretVersionCreate",
          "read_method": "resourceSecretVersionRead",
          "update_method": "resourceSecretVersionUpdate",
          "delete_method": "resourceSecretVersionDelete"
        }
      },
      "data_source_methods": {
        "aws_secretsmanager_random_password": {
          "read_method": "dataSourceRandomPasswordRead"
        },
        "aws_secretsmanager_secret": {
          "read_method": "dataSourceSecretRead"
        },
        "aws_secretsmanager_secret_rotation": {
          "read_method": "dataSourceSecretRotationRead"
        },
        "aws_secretsmanager_secret_version": {
          "read_method": "dataSourceSecretVersionRead"
        },
        "aws_secretsmanager_secrets": {
          "read_method": "dataSourceSecretsRead"
        }
      }
    },
    {
      "service_name": "securityhub",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/securityhub",
      "aws_sdk_resources": {
        "aws_securityhub_account": {
          "terraform_type": "aws_securityhub_account",
          "factory_function": "resourceSecurityhubAccount",
          "name": "Account",
          "sdk_type": "sdk"
        },
        "aws_securityhub_action_target": {
          "terraform_type": "aws_securityhub_action_target",
          "factory_function": "resourceSecurityhubActionTarget",
          "name": "Action Target",
          "sdk_type": "sdk"
        },
        "aws_securityhub_configuration_policy": {
          "terraform_type": "aws_securityhub_configuration_policy",
          "factory_function": "resourceSecurityhubConfigurationPolicy",
          "name": "Configuration Policy",
          "sdk_type": "sdk"
        },
        "aws_securityhub_configuration_policy_association": {
          "terraform_type": "aws_securityhub_configuration_policy_association",
          "factory_function": "resourceSecurityhubConfigurationPolicyAssociation",
          "name": "Configuration Policy Association",
          "sdk_type": "sdk"
        },
        "aws_securityhub_finding_aggregator": {
          "terraform_type": "aws_securityhub_finding_aggregator",
          "factory_function": "resourceSecurityhubFindingAggregator",
          "name": "Finding Aggregator",
          "sdk_type": "sdk"
        },
        "aws_securityhub_insight": {
          "terraform_type": "aws_securityhub_insight",
          "factory_function": "resourceSecurityhubInsight",
          "name": "Insight",
          "sdk_type": "sdk"
        },
        "aws_securityhub_invite_accepter": {
          "terraform_type": "aws_securityhub_invite_accepter",
          "factory_function": "resourceSecurityhubInviteAccepter",
          "name": "Invite Accepter",
          "sdk_type": "sdk"
        },
        "aws_securityhub_member": {
          "terraform_type": "aws_securityhub_member",
          "factory_function": "resourceSecurityhubMember",
          "name": "Member",
          "sdk_type": "sdk"
        },
        "aws_securityhub_organization_admin_account": {
          "terraform_type": "aws_securityhub_organization_admin_account",
          "factory_function": "resourceSecurityhubOrganizationAdminAccount",
          "name": "Organization Admin Account",
          "sdk_type": "sdk"
        },
        "aws_securityhub_organization_configuration": {
          "terraform_type": "aws_securityhub_organization_configuration",
          "factory_function": "resourceSecurityhubOrganizationConfiguration",
          "name": "Organization Configuration",
          "sdk_type": "sdk"
        },
        "aws_securityhub_product_subscription": {
          "terraform_type": "aws_securityhub_product_subscription",
          "factory_function": "resourceSecurityhubProductSubscription",
          "name": "Product Subscription",
          "sdk_type": "sdk"
        },
        "aws_securityhub_standards_control": {
          "terraform_type": "aws_securityhub_standards_control",
          "factory_function": "resourceSecurityhubStandardsControl",
          "name": "Standards Control",
          "sdk_type": "sdk"
        },
        "aws_securityhub_standards_subscription": {
          "terraform_type": "aws_securityhub_standards_subscription",
          "factory_function": "resourceSecurityhubStandardsSubscription",
          "name": "Standards Subscription",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_securityhub_automation_rule": {
          "terraform_type": "aws_securityhub_automation_rule",
          "factory_function": "newSecurityhubAutomationRuleResource",
          "name": "Automation Rule",
          "sdk_type": "framework",
          "struct_type": "automationRuleResource"
        },
        "aws_securityhub_standards_control_association": {
          "terraform_type": "aws_securityhub_standards_control_association",
          "factory_function": "newSecurityhubStandardsControlAssociationResource",
          "name": "Standards Control Association",
          "sdk_type": "framework",
          "struct_type": "standardsControlAssociationResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_securityhub_standards_control_associations": {
          "terraform_type": "aws_securityhub_standards_control_associations",
          "factory_function": "newSecurityhubStandardsControlAssociationsDataSource",
          "name": "Standards Control Associations",
          "sdk_type": "framework",
          "struct_type": "standardsControlAssociationsDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "automationRuleResource": "aws_securityhub_automation_rule",
        "standardsControlAssociationResource": "aws_securityhub_standards_control_association"
      },
      "data_source_terraform_types": {
        "standardsControlAssociationsDataSource": "aws_securityhub_standards_control_associations"
      },
      "resource_crud_methods": {
        "aws_securityhub_account": {
          "create_method": "resourceAccountCreate",
          "read_method": "resourceAccountRead",
          "update_method": "resourceAccountUpdate",
          "delete_method": "resourceAccountDelete"
        },
        "aws_securityhub_action_target": {
          "create_method": "resourceActionTargetCreate",
          "read_method": "resourceActionTargetRead",
          "update_method": "resourceActionTargetUpdate",
          "delete_method": "resourceActionTargetDelete"
        },
        "aws_securityhub_configuration_policy": {
          "create_method": "resourceConfigurationPolicyCreate",
          "read_method": "resourceConfigurationPolicyRead",
          "update_method": "resourceConfigurationPolicyUpdate",
          "delete_method": "resourceConfigurationPolicyDelete"
        },
        "aws_securityhub_configuration_policy_association": {
          "create_method": "resourceConfigurationPolicyAssociationCreateOrUpdate",
          "read_method": "resourceConfigurationPolicyAssociationRead",
          "update_method": "resourceConfigurationPolicyAssociationCreateOrUpdate",
          "delete_method": "resourceConfigurationPolicyAssociationDelete"
        },
        "aws_securityhub_finding_aggregator": {
          "create_method": "resourceFindingAggregatorCreate",
          "read_method": "resourceFindingAggregatorRead",
          "update_method": "resourceFindingAggregatorUpdate",
          "delete_method": "resourceFindingAggregatorDelete"
        },
        "aws_securityhub_insight": {
          "create_method": "resourceInsightCreate",
          "read_method": "resourceInsightRead",
          "update_method": "resourceInsightUpdate",
          "delete_method": "resourceInsightDelete"
        },
        "aws_securityhub_invite_accepter": {
          "create_method": "resourceInviteAccepterCreate",
          "read_method": "resourceInviteAccepterRead",
          "delete_method": "resourceInviteAccepterDelete"
        },
        "aws_securityhub_member": {
          "create_method": "resourceMemberCreate",
          "read_method": "resourceMemberRead",
          "delete_method": "resourceMemberDelete"
        },
        "aws_securityhub_organization_admin_account": {
          "create_method": "resourceOrganizationAdminAccountCreate",
          "read_method": "resourceOrganizationAdminAccountRead",
          "delete_method": "resourceOrganizationAdminAccountDelete"
        },
        "aws_securityhub_organization_configuration": {
          "create_method": "resourceOrganizationConfigurationUpdate",
          "read_method": "resourceOrganizationConfigurationRead",
          "update_method": "resourceOrganizationConfigurationUpdate",
          "delete_method": "resourceOrganizationConfigurationDelete"
        },
        "aws_securityhub_product_subscription": {
          "create_method": "resourceProductSubscriptionCreate",
          "read_method": "resourceProductSubscriptionRead",
          "delete_method": "resourceProductSubscriptionDelete"
        },
        "aws_securityhub_standards_control": {
          "create_method": "resourceStandardsControlPut",
          "read_method": "resourceStandardsControlRead",
          "update_method": "resourceStandardsControlPut"
        },
        "aws_securityhub_standards_subscription": {
          "create_method": "resourceStandardsSubscriptionCreate",
          "read_method": "resourceStandardsSubscriptionRead",
          "delete_method": "resourceStandardsSubscriptionDelete"
        }
      }
    },
    {
      "service_name": "securitylake",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/securitylake",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_securitylake_aws_log_source": {
          "terraform_type": "aws_securitylake_aws_log_source",
          "factory_function": "newSecuritylakeAwsLogSourceResource",
          "name": "AWS Log Source",
          "sdk_type": "framework",
          "struct_type": "awsLogSourceResource"
        },
        "aws_securitylake_custom_log_source": {
          "terraform_type": "aws_securitylake_custom_log_source",
          "factory_function": "newSecuritylakeCustomLogSourceResource",
          "name": "Custom Log Source",
          "sdk_type": "framework",
          "struct_type": "customLogSourceResource"
        },
        "aws_securitylake_data_lake": {
          "terraform_type": "aws_securitylake_data_lake",
          "factory_function": "newSecuritylakeDataLakeResource",
          "name": "Data Lake",
          "sdk_type": "framework",
          "struct_type": "dataLakeResource"
        },
        "aws_securitylake_subscriber": {
          "terraform_type": "aws_securitylake_subscriber",
          "factory_function": "newSecuritylakeSubscriberResource",
          "name": "Subscriber",
          "sdk_type": "framework",
          "struct_type": "subscriberResource"
        },
        "aws_securitylake_subscriber_notification": {
          "terraform_type": "aws_securitylake_subscriber_notification",
          "factory_function": "newSecuritylakeSubscriberNotificationResource",
          "name": "Subscriber Notification",
          "sdk_type": "framework",
          "struct_type": "subscriberNotificationResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "awsLogSourceResource": "aws_securitylake_aws_log_source",
        "customLogSourceResource": "aws_securitylake_custom_log_source",
        "dataLakeResource": "aws_securitylake_data_lake",
        "subscriberNotificationResource": "aws_securitylake_subscriber_notification",
        "subscriberResource": "aws_securitylake_subscriber"
      }
    },
    {
      "service_name": "serverlessrepo",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/serverlessrepo",
      "aws_sdk_resources": {
        "aws_serverlessapplicationrepository_cloudformation_stack": {
          "terraform_type": "aws_serverlessapplicationrepository_cloudformation_stack",
          "factory_function": "resourceServerlessapplicationrepositoryCloudformationStack",
          "name": "CloudFormation Stack",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_serverlessapplicationrepository_application": {
          "terraform_type": "aws_serverlessapplicationrepository_application",
          "factory_function": "dataSourceServerlessapplicationrepositoryApplication",
          "name": "Application",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_serverlessapplicationrepository_cloudformation_stack": {
          "create_method": "resourceCloudFormationStackCreate",
          "read_method": "resourceCloudFormationStackRead",
          "update_method": "resourceCloudFormationStackUpdate",
          "delete_method": "resourceCloudFormationStackDelete"
        }
      },
      "data_source_methods": {
        "aws_serverlessapplicationrepository_application": {
          "read_method": "dataSourceApplicationRead"
        }
      }
    },
    {
      "service_name": "servicecatalog",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/servicecatalog",
      "aws_sdk_resources": {
        "aws_servicecatalog_budget_resource_association": {
          "terraform_type": "aws_servicecatalog_budget_resource_association",
          "factory_function": "resourceServicecatalogBudgetResourceAssociation",
          "name": "Budget Resource Association",
          "sdk_type": "sdk"
        },
        "aws_servicecatalog_constraint": {
          "terraform_type": "aws_servicecatalog_constraint",
          "factory_function": "resourceServicecatalogConstraint",
          "name": "Constraint",
          "sdk_type": "sdk"
        },
        "aws_servicecatalog_organizations_access": {
          "terraform_type": "aws_servicecatalog_organizations_access",
          "factory_function": "resourceServicecatalogOrganizationsAccess",
          "name": "Organizations Access",
          "sdk_type": "sdk"
        },
        "aws_servicecatalog_portfolio": {
          "terraform_type": "aws_servicecatalog_portfolio",
          "factory_function": "resourceServicecatalogPortfolio",
          "name": "Portfolio",
          "sdk_type": "sdk"
        },
        "aws_servicecatalog_portfolio_share": {
          "terraform_type": "aws_servicecatalog_portfolio_share",
          "factory_function": "resourceServicecatalogPortfolioShare",
          "name": "Portfolio Share",
          "sdk_type": "sdk"
        },
        "aws_servicecatalog_principal_portfolio_association": {
          "terraform_type": "aws_servicecatalog_principal_portfolio_association",
          "factory_function": "resourceServicecatalogPrincipalPortfolioAssociation",
          "name": "Principal Portfolio Association",
          "sdk_type": "sdk"
        },
        "aws_servicecatalog_product": {
          "terraform_type": "aws_servicecatalog_product",
          "factory_function": "resourceServicecatalogProduct",
          "name": "Product",
          "sdk_type": "sdk"
        },
        "aws_servicecatalog_product_portfolio_association": {
          "terraform_type": "aws_servicecatalog_product_portfolio_association",
          "factory_function": "resourceServicecatalogProductPortfolioAssociation",
          "name": "Product Portfolio Association",
          "sdk_type": "sdk"
        },
        "aws_servicecatalog_provisioned_product": {
          "terraform_type": "aws_servicecatalog_provisioned_product",
          "factory_function": "resourceServicecatalogProvisionedProduct",
          "name": "Provisioned Product",
          "sdk_type": "sdk"
        },
        "aws_servicecatalog_provisioning_artifact": {
          "terraform_type": "aws_servicecatalog_provisioning_artifact",
          "factory_function": "resourceServicecatalogProvisioningArtifact",
          "name": "Provisioning Artifact",
          "sdk_type": "sdk"
        },
        "aws_servicecatalog_service_action": {
          "terraform_type": "aws_servicecatalog_service_action",
          "factory_function": "resourceServicecatalogServiceAction",
          "name": "Service Action",
          "sdk_type": "sdk"
        },
        "aws_servicecatalog_tag_option": {
          "terraform_type": "aws_servicecatalog_tag_option",
          "factory_function": "resourceServicecatalogTagOption",
          "name": "Tag Option",
          "sdk_type": "sdk"
        },
        "aws_servicecatalog_tag_option_resource_association": {
          "terraform_type": "aws_servicecatalog_tag_option_resource_association",
          "factory_function": "resourceServicecatalogTagOptionResourceAssociation",
          "name": "Tag Option Resource Association",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_servicecatalog_constraint": {
          "terraform_type": "aws_servicecatalog_constraint",
          "factory_function": "dataSourceServicecatalogConstraint",
          "name": "Constraint",
          "sdk_type": "sdk"
        },
        "aws_servicecatalog_launch_paths": {
          "terraform_type": "aws_servicecatalog_launch_paths",
          "factory_function": "dataSourceServicecatalogLaunchPaths",
          "name": "Launch Paths",
          "sdk_type": "sdk"
        },
        "aws_servicecatalog_portfolio": {
          "terraform_type": "aws_servicecatalog_portfolio",
          "factory_function": "dataSourceServicecatalogPortfolio",
          "name": "Portfolio",
          "sdk_type": "sdk"
        },
        "aws_servicecatalog_portfolio_constraints": {
          "terraform_type": "aws_servicecatalog_portfolio_constraints",
          "factory_function": "dataSourceServicecatalogPortfolioConstraints",
          "name": "Portfolio Constraints",
          "sdk_type": "sdk"
        },
        "aws_servicecatalog_product": {
          "terraform_type": "aws_servicecatalog_product",
          "factory_function": "dataSourceServicecatalogProduct",
          "name": "Product",
          "sdk_type": "sdk"
        },
        "aws_servicecatalog_provisioning_artifacts": {
          "terraform_type": "aws_servicecatalog_provisioning_artifacts",
          "factory_function": "dataSourceServicecatalogProvisioningArtifacts",
          "name": "Provisioning Artifacts",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_servicecatalog_budget_resource_association": {
          "create_method": "resourceBudgetResourceAssociationCreate",
          "read_method": "resourceBudgetResourceAssociationRead",
          "delete_method": "resourceBudgetResourceAssociationDelete"
        },
        "aws_servicecatalog_constraint": {
          "create_method": "resourceConstraintCreate",
          "read_method": "resourceConstraintRead",
          "update_method": "resourceConstraintUpdate",
          "delete_method": "resourceConstraintDelete"
        },
        "aws_servicecatalog_organizations_access": {
          "create_method": "resourceOrganizationsAccessCreate",
          "read_method": "resourceOrganizationsAccessRead",
          "delete_method": "resourceOrganizationsAccessDelete"
        },
        "aws_servicecatalog_portfolio": {
          "create_method": "resourcePortfolioCreate",
          "read_method": "resourcePortfolioRead",
          "update_method": "resourcePortfolioUpdate",
          "delete_method": "resourcePortfolioDelete"
        },
        "aws_servicecatalog_portfolio_share": {
          "create_method": "resourcePortfolioShareCreate",
          "read_method": "resourcePortfolioShareRead",
          "update_method": "resourcePortfolioShareUpdate",
          "delete_method": "resourcePortfolioShareDelete"
        },
        "aws_servicecatalog_principal_portfolio_association": {
          "create_method": "resourcePrincipalPortfolioAssociationCreate",
          "read_method": "resourcePrincipalPortfolioAssociationRead",
          "delete_method": "resourcePrincipalPortfolioAssociationDelete"
        },
        "aws_servicecatalog_product": {
          "create_method": "resourceProductCreate",
          "read_method": "resourceProductRead",
          "update_method": "resourceProductUpdate",
          "delete_method": "resourceProductDelete"
        },
        "aws_servicecatalog_product_portfolio_association": {
          "create_method": "resourceProductPortfolioAssociationCreate",
          "read_method": "resourceProductPortfolioAssociationRead",
          "delete_method": "resourceProductPortfolioAssociationDelete"
        },
        "aws_servicecatalog_provisioned_product": {
          "create_method": "resourceProvisionedProductCreate",
          "read_method": "resourceProvisionedProductRead",
          "update_method": "resourceProvisionedProductUpdate",
          "delete_method": "resourceProvisionedProductDelete"
        },
        "aws_servicecatalog_provisioning_artifact": {
          "create_method": "resourceProvisioningArtifactCreate",
          "read_method": "resourceProvisioningArtifactRead",
          "update_method": "resourceProvisioningArtifactUpdate",
          "delete_method": "resourceProvisioningArtifactDelete"
        },
        "aws_servicecatalog_service_action": {
          "create_method": "resourceServiceActionCreate",
          "read_method": "resourceServiceActionRead",
          "update_method": "resourceServiceActionUpdate",
          "delete_method": "resourceServiceActionDelete"
        },
        "aws_servicecatalog_tag_option": {
          "create_method": "resourceTagOptionCreate",
          "read_method": "resourceTagOptionRead",
          "update_method": "resourceTagOptionUpdate",
          "delete_method": "resourceTagOptionDelete"
        },
        "aws_servicecatalog_tag_option_resource_association": {
          "create_method": "resourceTagOptionResourceAssociationCreate",
          "read_method": "resourceTagOptionResourceAssociationRead",
          "delete_method": "resourceTagOptionResourceAssociationDelete"
        }
      },
      "data_source_methods": {
        "aws_servicecatalog_constraint": {
          "read_method": "dataSourceConstraintRead"
        },
        "aws_servicecatalog_launch_paths": {
          "read_method": "dataSourceLaunchPathsRead"
        },
        "aws_servicecatalog_portfolio": {
          "read_method": "dataSourcePortfolioRead"
        },
        "aws_servicecatalog_portfolio_constraints": {
          "read_method": "dataSourcePortfolioConstraintsRead"
        },
        "aws_servicecatalog_product": {
          "read_method": "dataSourceProductRead"
        },
        "aws_servicecatalog_provisioning_artifacts": {
          "read_method": "dataSourceProvisioningArtifactsRead"
        }
      }
    },
    {
      "service_name": "servicecatalogappregistry",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/servicecatalogappregistry",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_servicecatalogappregistry_application": {
          "terraform_type": "aws_servicecatalogappregistry_application",
          "factory_function": "newServicecatalogappregistryApplicationResource",
          "name": "Application",
          "sdk_type": "framework",
          "struct_type": "applicationResource"
        },
        "aws_servicecatalogappregistry_attribute_group": {
          "terraform_type": "aws_servicecatalogappregistry_attribute_group",
          "factory_function": "newServicecatalogappregistryAttributeGroupResource",
          "name": "Attribute Group",
          "sdk_type": "framework",
          "struct_type": "attributeGroupResource"
        },
        "aws_servicecatalogappregistry_attribute_group_association": {
          "terraform_type": "aws_servicecatalogappregistry_attribute_group_association",
          "factory_function": "newServicecatalogappregistryAttributeGroupAssociationResource",
          "name": "Attribute Group Association",
          "sdk_type": "framework",
          "struct_type": "attributeGroupAssociationResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_servicecatalogappregistry_application": {
          "terraform_type": "aws_servicecatalogappregistry_application",
          "factory_function": "newServicecatalogappregistryApplicationDataSource",
          "name": "Application",
          "sdk_type": "framework",
          "struct_type": "applicationDataSource"
        },
        "aws_servicecatalogappregistry_attribute_group": {
          "terraform_type": "aws_servicecatalogappregistry_attribute_group",
          "factory_function": "newServicecatalogappregistryAttributeGroupDataSource",
          "name": "Attribute Group",
          "sdk_type": "framework",
          "struct_type": "attributeGroupDataSource"
        },
        "aws_servicecatalogappregistry_attribute_group_associations": {
          "terraform_type": "aws_servicecatalogappregistry_attribute_group_associations",
          "factory_function": "newServicecatalogappregistryAttributeGroupAssociationsDataSource",
          "name": "Attribute Group Associations",
          "sdk_type": "framework",
          "struct_type": "attributeGroupAssociationsDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "applicationResource": "aws_servicecatalogappregistry_application",
        "attributeGroupAssociationResource": "aws_servicecatalogappregistry_attribute_group_association",
        "attributeGroupResource": "aws_servicecatalogappregistry_attribute_group"
      },
      "data_source_terraform_types": {
        "applicationDataSource": "aws_servicecatalogappregistry_application",
        "attributeGroupAssociationsDataSource": "aws_servicecatalogappregistry_attribute_group_associations",
        "attributeGroupDataSource": "aws_servicecatalogappregistry_attribute_group"
      }
    },
    {
      "service_name": "servicediscovery",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/servicediscovery",
      "aws_sdk_resources": {
        "aws_service_discovery_http_namespace": {
          "terraform_type": "aws_service_discovery_http_namespace",
          "factory_function": "resourceServiceDiscoveryHttpNamespace",
          "name": "HTTP Namespace",
          "sdk_type": "sdk"
        },
        "aws_service_discovery_instance": {
          "terraform_type": "aws_service_discovery_instance",
          "factory_function": "resourceServiceDiscoveryInstance",
          "name": "Instance",
          "sdk_type": "sdk"
        },
        "aws_service_discovery_private_dns_namespace": {
          "terraform_type": "aws_service_discovery_private_dns_namespace",
          "factory_function": "resourceServiceDiscoveryPrivateDnsNamespace",
          "name": "Private DNS Namespace",
          "sdk_type": "sdk"
        },
        "aws_service_discovery_public_dns_namespace": {
          "terraform_type": "aws_service_discovery_public_dns_namespace",
          "factory_function": "resourceServiceDiscoveryPublicDnsNamespace",
          "name": "Public DNS Namespace",
          "sdk_type": "sdk"
        },
        "aws_service_discovery_service": {
          "terraform_type": "aws_service_discovery_service",
          "factory_function": "resourceServiceDiscoveryService",
          "name": "Service",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_service_discovery_dns_namespace": {
          "terraform_type": "aws_service_discovery_dns_namespace",
          "factory_function": "dataSourceServiceDiscoveryDnsNamespace",
          "name": "DNS Namespace",
          "sdk_type": "sdk"
        },
        "aws_service_discovery_http_namespace": {
          "terraform_type": "aws_service_discovery_http_namespace",
          "factory_function": "dataSourceServiceDiscoveryHttpNamespace",
          "name": "HTTP Namespace",
          "sdk_type": "sdk"
        },
        "aws_service_discovery_service": {
          "terraform_type": "aws_service_discovery_service",
          "factory_function": "dataSourceServiceDiscoveryService",
          "name": "Service",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_service_discovery_http_namespace": {
          "create_method": "resourceHTTPNamespaceCreate",
          "read_method": "resourceHTTPNamespaceRead",
          "update_method": "resourceHTTPNamespaceUpdate",
          "delete_method": "resourceHTTPNamespaceDelete"
        },
        "aws_service_discovery_instance": {
          "create_method": "resourceInstancePut",
          "read_method": "resourceInstanceRead",
          "update_method": "resourceInstancePut",
          "delete_method": "resourceInstanceDelete"
        },
        "aws_service_discovery_private_dns_namespace": {
          "create_method": "resourcePrivateDNSNamespaceCreate",
          "read_method": "resourcePrivateDNSNamespaceRead",
          "update_method": "resourcePrivateDNSNamespaceUpdate",
          "delete_method": "resourcePrivateDNSNamespaceDelete"
        },
        "aws_service_discovery_public_dns_namespace": {
          "create_method": "resourcePublicDNSNamespaceCreate",
          "read_method": "resourcePublicDNSNamespaceRead",
          "update_method": "resourcePublicDNSNamespaceUpdate",
          "delete_method": "resourcePublicDNSNamespaceDelete"
        },
        "aws_service_discovery_service": {
          "create_method": "resourceServiceCreate",
          "read_method": "resourceServiceRead",
          "update_method": "resourceServiceUpdate",
          "delete_method": "resourceServiceDelete"
        }
      },
      "data_source_methods": {
        "aws_service_discovery_dns_namespace": {
          "read_method": "dataSourceDNSNamespaceRead"
        },
        "aws_service_discovery_http_namespace": {
          "read_method": "dataSourceHTTPNamespaceRead"
        },
        "aws_service_discovery_service": {
          "read_method": "dataSourceServiceRead"
        }
      }
    },
    {
      "service_name": "servicequotas",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/servicequotas",
      "aws_sdk_resources": {
        "aws_servicequotas_service_quota": {
          "terraform_type": "aws_servicequotas_service_quota",
          "factory_function": "resourceServicequotasServiceQuota",
          "name": "Service Quota",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_servicequotas_service": {
          "terraform_type": "aws_servicequotas_service",
          "factory_function": "dataSourceServicequotasService",
          "name": "Service",
          "sdk_type": "sdk"
        },
        "aws_servicequotas_service_quota": {
          "terraform_type": "aws_servicequotas_service_quota",
          "factory_function": "dataSourceServicequotasServiceQuota",
          "name": "Service Quota",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_servicequotas_template": {
          "terraform_type": "aws_servicequotas_template",
          "factory_function": "newServicequotasTemplateResource",
          "name": "Template",
          "sdk_type": "framework",
          "struct_type": "templateResource"
        },
        "aws_servicequotas_template_association": {
          "terraform_type": "aws_servicequotas_template_association",
          "factory_function": "newServicequotasTemplateAssociationResource",
          "name": "Template Association",
          "sdk_type": "framework",
          "struct_type": "resourceTemplateAssociation"
        }
      },
      "aws_framework_data_sources": {
        "aws_servicequotas_templates": {
          "terraform_type": "aws_servicequotas_templates",
          "factory_function": "newServicequotasTemplatesDataSource",
          "name": "Templates",
          "sdk_type": "framework",
          "struct_type": "dataSourceTemplates"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "resourceTemplateAssociation": "aws_servicequotas_template_association",
        "templateResource": "aws_servicequotas_template"
      },
      "data_source_terraform_types": {
        "dataSourceTemplates": "aws_servicequotas_templates"
      },
      "resource_crud_methods": {
        "aws_servicequotas_service_quota": {
          "create_method": "resourceServiceQuotaCreate",
          "read_method": "resourceServiceQuotaRead",
          "update_method": "resourceServiceQuotaUpdate"
        }
      },
      "data_source_methods": {
        "aws_servicequotas_service": {
          "read_method": "dataSourceServiceRead"
        },
        "aws_servicequotas_service_quota": {
          "read_method": "dataSourceServiceQuotaRead"
        }
      }
    },
    {
      "service_name": "ses",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/ses",
      "aws_sdk_resources": {
        "aws_ses_active_receipt_rule_set": {
          "terraform_type": "aws_ses_active_receipt_rule_set",
          "factory_function": "resourceSesActiveReceiptRuleSet",
          "name": "Active Receipt Rule Set",
          "sdk_type": "sdk"
        },
        "aws_ses_configuration_set": {
          "terraform_type": "aws_ses_configuration_set",
          "factory_function": "resourceSesConfigurationSet",
          "name": "Configuration Set",
          "sdk_type": "sdk"
        },
        "aws_ses_domain_dkim": {
          "terraform_type": "aws_ses_domain_dkim",
          "factory_function": "resourceSesDomainDkim",
          "name": "Domain DKIM",
          "sdk_type": "sdk"
        },
        "aws_ses_domain_identity": {
          "terraform_type": "aws_ses_domain_identity",
          "factory_function": "resourceSesDomainIdentity",
          "name": "Domain Identity",
          "sdk_type": "sdk"
        },
        "aws_ses_domain_identity_verification": {
          "terraform_type": "aws_ses_domain_identity_verification",
          "factory_function": "resourceSesDomainIdentityVerification",
          "name": "Domain Identity Verification",
          "sdk_type": "sdk"
        },
        "aws_ses_domain_mail_from": {
          "terraform_type": "aws_ses_domain_mail_from",
          "factory_function": "resourceSesDomainMailFrom",
          "name": "MAIL FROM Domain",
          "sdk_type": "sdk"
        },
        "aws_ses_email_identity": {
          "terraform_type": "aws_ses_email_identity",
          "factory_function": "resourceSesEmailIdentity",
          "name": "Email Identity",
          "sdk_type": "sdk"
        },
        "aws_ses_event_destination": {
          "terraform_type": "aws_ses_event_destination",
          "factory_function": "resourceSesEventDestination",
          "name": "Configuration Set Event Destination",
          "sdk_type": "sdk"
        },
        "aws_ses_identity_notification_topic": {
          "terraform_type": "aws_ses_identity_notification_topic",
          "factory_function": "resourceSesIdentityNotificationTopic",
          "name": "Identity Notification Topic",
          "sdk_type": "sdk"
        },
        "aws_ses_identity_policy": {
          "terraform_type": "aws_ses_identity_policy",
          "factory_function": "resourceSesIdentityPolicy",
          "name": "Identity Policy",
          "sdk_type": "sdk"
        },
        "aws_ses_receipt_filter": {
          "terraform_type": "aws_ses_receipt_filter",
          "factory_function": "resourceSesReceiptFilter",
          "name": "Receipt Filter",
          "sdk_type": "sdk"
        },
        "aws_ses_receipt_rule": {
          "terraform_type": "aws_ses_receipt_rule",
          "factory_function": "resourceSesReceiptRule",
          "name": "Receipt Rule",
          "sdk_type": "sdk"
        },
        "aws_ses_receipt_rule_set": {
          "terraform_type": "aws_ses_receipt_rule_set",
          "factory_function": "resourceSesReceiptRuleSet",
          "name": "Receipt Rule Set",
          "sdk_type": "sdk"
        },
        "aws_ses_template": {
          "terraform_type": "aws_ses_template",
          "factory_function": "resourceSesTemplate",
          "name": "Template",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_ses_active_receipt_rule_set": {
          "terraform_type": "aws_ses_active_receipt_rule_set",
          "factory_function": "dataSourceSesActiveReceiptRuleSet",
          "name": "Active Receipt Rule Set",
          "sdk_type": "sdk"
        },
        "aws_ses_domain_identity": {
          "terraform_type": "aws_ses_domain_identity",
          "factory_function": "dataSourceSesDomainIdentity",
          "name": "Domain Identity",
          "sdk_type": "sdk"
        },
        "aws_ses_email_identity": {
          "terraform_type": "aws_ses_email_identity",
          "factory_function": "dataSourceSesEmailIdentity",
          "name": "Email Identity",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_ses_active_receipt_rule_set": {
          "create_method": "resourceActiveReceiptRuleSetUpdate",
          "read_method": "resourceActiveReceiptRuleSetRead",
          "update_method": "resourceActiveReceiptRuleSetUpdate",
          "delete_method": "resourceActiveReceiptRuleSetDelete"
        },
        "aws_ses_configuration_set": {
          "create_method": "resourceConfigurationSetCreate",
          "read_method": "resourceConfigurationSetRead",
          "update_method": "resourceConfigurationSetUpdate",
          "delete_method": "resourceConfigurationSetDelete"
        },
        "aws_ses_domain_dkim": {
          "create_method": "resourceDomainDKIMCreate",
          "read_method": "resourceDomainDKIMRead"
        },
        "aws_ses_domain_identity": {
          "create_method": "resourceDomainIdentityCreate",
          "read_method": "resourceDomainIdentityRead",
          "delete_method": "resourceDomainIdentityDelete"
        },
        "aws_ses_domain_identity_verification": {
          "create_method": "resourceDomainIdentityVerificationCreate",
          "read_method": "resourceDomainIdentityVerificationRead"
        },
        "aws_ses_domain_mail_from": {
          "create_method": "resourceDomainMailFromSet",
          "read_method": "resourceDomainMailFromRead",
          "update_method": "resourceDomainMailFromSet",
          "delete_method": "resourceDomainMailFromDelete"
        },
        "aws_ses_email_identity": {
          "create_method": "resourceEmailIdentityCreate",
          "read_method": "resourceEmailIdentityRead",
          "delete_method": "resourceEmailIdentityDelete"
        },
        "aws_ses_event_destination": {
          "create_method": "resourceEventDestinationCreate",
          "read_method": "resourceEventDestinationRead",
          "delete_method": "resourceEventDestinationDelete"
        },
        "aws_ses_identity_notification_topic": {
          "create_method": "resourceIdentityNotificationTopicSet",
          "read_method": "resourceIdentityNotificationTopicRead",
          "update_method": "resourceIdentityNotificationTopicSet",
          "delete_method": "resourceIdentityNotificationTopicDelete"
        },
        "aws_ses_identity_policy": {
          "create_method": "resourceIdentityPolicyCreate",
          "read_method": "resourceIdentityPolicyRead",
          "update_method": "resourceIdentityPolicyUpdate",
          "delete_method": "resourceIdentityPolicyDelete"
        },
        "aws_ses_receipt_filter": {
          "create_method": "resourceReceiptFilterCreate",
          "read_method": "resourceReceiptFilterRead",
          "delete_method": "resourceReceiptFilterDelete"
        },
        "aws_ses_receipt_rule": {
          "create_method": "resourceReceiptRuleCreate",
          "read_method": "resourceReceiptRuleRead",
          "update_method": "resourceReceiptRuleUpdate",
          "delete_method": "resourceReceiptRuleDelete"
        },
        "aws_ses_receipt_rule_set": {
          "create_method": "resourceReceiptRuleSetCreate",
          "read_method": "resourceReceiptRuleSetRead",
          "delete_method": "resourceReceiptRuleSetDelete"
        },
        "aws_ses_template": {
          "create_method": "resourceTemplateCreate",
          "read_method": "resourceTemplateRead",
          "update_method": "resourceTemplateUpdate",
          "delete_method": "resourceTemplateDelete"
        }
      },
      "data_source_methods": {
        "aws_ses_active_receipt_rule_set": {
          "read_method": "dataSourceActiveReceiptRuleSetRead"
        },
        "aws_ses_domain_identity": {
          "read_method": "dataSourceDomainIdentityRead"
        },
        "aws_ses_email_identity": {
          "read_method": "dataSourceEmailIdentityRead"
        }
      }
    },
    {
      "service_name": "sesv2",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/sesv2",
      "aws_sdk_resources": {
        "aws_sesv2_account_vdm_attributes": {
          "terraform_type": "aws_sesv2_account_vdm_attributes",
          "factory_function": "resourceSesv2AccountVdmAttributes",
          "name": "Account VDM Attributes",
          "sdk_type": "sdk"
        },
        "aws_sesv2_configuration_set": {
          "terraform_type": "aws_sesv2_configuration_set",
          "factory_function": "resourceSesv2ConfigurationSet",
          "name": "Configuration Set",
          "sdk_type": "sdk"
        },
        "aws_sesv2_configuration_set_event_destination": {
          "terraform_type": "aws_sesv2_configuration_set_event_destination",
          "factory_function": "resourceSesv2ConfigurationSetEventDestination",
          "name": "Configuration Set Event Destination",
          "sdk_type": "sdk"
        },
        "aws_sesv2_contact_list": {
          "terraform_type": "aws_sesv2_contact_list",
          "factory_function": "resourceSesv2ContactList",
          "name": "Contact List",
          "sdk_type": "sdk"
        },
        "aws_sesv2_dedicated_ip_assignment": {
          "terraform_type": "aws_sesv2_dedicated_ip_assignment",
          "factory_function": "resourceSesv2DedicatedIpAssignment",
          "name": "Dedicated IP Assignment",
          "sdk_type": "sdk"
        },
        "aws_sesv2_dedicated_ip_pool": {
          "terraform_type": "aws_sesv2_dedicated_ip_pool",
          "factory_function": "resourceSesv2DedicatedIpPool",
          "name": "Dedicated IP Pool",
          "sdk_type": "sdk"
        },
        "aws_sesv2_email_identity": {
          "terraform_type": "aws_sesv2_email_identity",
          "factory_function": "resourceSesv2EmailIdentity",
          "name": "Email Identity",
          "sdk_type": "sdk"
        },
        "aws_sesv2_email_identity_feedback_attributes": {
          "terraform_type": "aws_sesv2_email_identity_feedback_attributes",
          "factory_function": "resourceSesv2EmailIdentityFeedbackAttributes",
          "name": "Email Identity Feedback Attributes",
          "sdk_type": "sdk"
        },
        "aws_sesv2_email_identity_mail_from_attributes": {
          "terraform_type": "aws_sesv2_email_identity_mail_from_attributes",
          "factory_function": "resourceSesv2EmailIdentityMailFromAttributes",
          "name": "Email Identity Mail From Attributes",
          "sdk_type": "sdk"
        },
        "aws_sesv2_email_identity_policy": {
          "terraform_type": "aws_sesv2_email_identity_policy",
          "factory_function": "resourceSesv2EmailIdentityPolicy",
          "name": "Email Identity Policy",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_sesv2_configuration_set": {
          "terraform_type": "aws_sesv2_configuration_set",
          "factory_function": "dataSourceSesv2ConfigurationSet",
          "name": "Configuration Set",
          "sdk_type": "sdk"
        },
        "aws_sesv2_dedicated_ip_pool": {
          "terraform_type": "aws_sesv2_dedicated_ip_pool",
          "factory_function": "dataSourceSesv2DedicatedIpPool",
          "name": "Dedicated IP Pool",
          "sdk_type": "sdk"
        },
        "aws_sesv2_email_identity": {
          "terraform_type": "aws_sesv2_email_identity",
          "factory_function": "dataSourceSesv2EmailIdentity",
          "name": "Email Identity",
          "sdk_type": "sdk"
        },
        "aws_sesv2_email_identity_mail_from_attributes": {
          "terraform_type": "aws_sesv2_email_identity_mail_from_attributes",
          "factory_function": "dataSourceSesv2EmailIdentityMailFromAttributes",
          "name": "Email Identity Mail From Attributes",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_sesv2_account_suppression_attributes": {
          "terraform_type": "aws_sesv2_account_suppression_attributes",
          "factory_function": "newSesv2AccountSuppressionAttributesResource",
          "name": "Account Suppression Attributes",
          "sdk_type": "framework",
          "struct_type": "accountSuppressionAttributesResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "accountSuppressionAttributesResource": "aws_sesv2_account_suppression_attributes"
      },
      "resource_crud_methods": {
        "aws_sesv2_account_vdm_attributes": {
          "create_method": "resourceAccountVDMAttributesUpdate",
          "read_method": "resourceAccountVDMAttributesRead",
          "update_method": "resourceAccountVDMAttributesUpdate",
          "delete_method": "resourceAccountVDMAttributesDelete"
        },
        "aws_sesv2_configuration_set": {
          "create_method": "resourceConfigurationSetCreate",
          "read_method": "resourceConfigurationSetRead",
          "update_method": "resourceConfigurationSetUpdate",
          "delete_method": "resourceConfigurationSetDelete"
        },
        "aws_sesv2_configuration_set_event_destination": {
          "create_method": "resourceConfigurationSetEventDestinationCreate",
          "read_method": "resourceConfigurationSetEventDestinationRead",
          "update_method": "resourceConfigurationSetEventDestinationUpdate",
          "delete_method": "resourceConfigurationSetEventDestinationDelete"
        },
        "aws_sesv2_contact_list": {
          "create_method": "resourceContactListCreate",
          "read_method": "resourceContactListRead",
          "update_method": "resourceContactListUpdate",
          "delete_method": "resourceContactListDelete"
        },
        "aws_sesv2_dedicated_ip_assignment": {
          "create_method": "resourceDedicatedIPAssignmentCreate",
          "read_method": "resourceDedicatedIPAssignmentRead",
          "delete_method": "resourceDedicatedIPAssignmentDelete"
        },
        "aws_sesv2_dedicated_ip_pool": {
          "create_method": "resourceDedicatedIPPoolCreate",
          "read_method": "resourceDedicatedIPPoolRead",
          "update_method": "resourceDedicatedIPPoolUpdate",
          "delete_method": "resourceDedicatedIPPoolDelete"
        },
        "aws_sesv2_email_identity": {
          "create_method": "resourceEmailIdentityCreate",
          "read_method": "resourceEmailIdentityRead",
          "update_method": "resourceEmailIdentityUpdate",
          "delete_method": "resourceEmailIdentityDelete"
        },
        "aws_sesv2_email_identity_feedback_attributes": {
          "create_method": "resourceEmailIdentityFeedbackAttributesCreate",
          "read_method": "resourceEmailIdentityFeedbackAttributesRead",
          "update_method": "resourceEmailIdentityFeedbackAttributesUpdate",
          "delete_method": "resourceEmailIdentityFeedbackAttributesDelete"
        },
        "aws_sesv2_email_identity_mail_from_attributes": {
          "create_method": "resourceEmailIdentityMailFromAttributesCreate",
          "read_method": "resourceEmailIdentityMailFromAttributesRead",
          "update_method": "resourceEmailIdentityMailFromAttributesUpdate",
          "delete_method": "resourceEmailIdentityMailFromAttributesDelete"
        },
        "aws_sesv2_email_identity_policy": {
          "create_method": "resourceEmailIdentityPolicyCreate",
          "read_method": "resourceEmailIdentityPolicyRead",
          "update_method": "resourceEmailIdentityPolicyUpdate",
          "delete_method": "resourceEmailIdentityPolicyDelete"
        }
      },
      "data_source_methods": {
        "aws_sesv2_configuration_set": {
          "read_method": "dataSourceConfigurationSetRead"
        },
        "aws_sesv2_dedicated_ip_pool": {
          "read_method": "dataSourceDedicatedIPPoolRead"
        },
        "aws_sesv2_email_identity": {
          "read_method": "dataSourceEmailIdentityRead"
        },
        "aws_sesv2_email_identity_mail_from_attributes": {
          "read_method": "dataSourceEmailIdentityMailFromAttributesRead"
        }
      }
    },
    {
      "service_name": "sfn",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/sfn",
      "aws_sdk_resources": {
        "aws_sfn_activity": {
          "terraform_type": "aws_sfn_activity",
          "factory_function": "resourceSfnActivity",
          "name": "Activity",
          "sdk_type": "sdk"
        },
        "aws_sfn_alias": {
          "terraform_type": "aws_sfn_alias",
          "factory_function": "resourceSfnAlias",
          "name": "Alias",
          "sdk_type": "sdk"
        },
        "aws_sfn_state_machine": {
          "terraform_type": "aws_sfn_state_machine",
          "factory_function": "resourceSfnStateMachine",
          "name": "State Machine",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_sfn_activity": {
          "terraform_type": "aws_sfn_activity",
          "factory_function": "dataSourceSfnActivity",
          "name": "Activity",
          "sdk_type": "sdk"
        },
        "aws_sfn_alias": {
          "terraform_type": "aws_sfn_alias",
          "factory_function": "dataSourceSfnAlias",
          "name": "Alias",
          "sdk_type": "sdk"
        },
        "aws_sfn_state_machine": {
          "terraform_type": "aws_sfn_state_machine",
          "factory_function": "dataSourceSfnStateMachine",
          "name": "State Machine",
          "sdk_type": "sdk"
        },
        "aws_sfn_state_machine_versions": {
          "terraform_type": "aws_sfn_state_machine_versions",
          "factory_function": "dataSourceSfnStateMachineVersions",
          "name": "State Machine Versions",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_sfn_activity": {
          "create_method": "resourceActivityCreate",
          "read_method": "resourceActivityRead",
          "update_method": "resourceActivityUpdate",
          "delete_method": "resourceActivityDelete"
        },
        "aws_sfn_alias": {
          "create_method": "resourceAliasCreate",
          "read_method": "resourceAliasRead",
          "update_method": "resourceAliasUpdate",
          "delete_method": "resourceAliasDelete"
        },
        "aws_sfn_state_machine": {
          "create_method": "resourceStateMachineCreate",
          "read_method": "resourceStateMachineRead",
          "update_method": "resourceStateMachineUpdate",
          "delete_method": "resourceStateMachineDelete"
        }
      },
      "data_source_methods": {
        "aws_sfn_activity": {
          "read_method": "dataSourceActivityRead"
        },
        "aws_sfn_alias": {
          "read_method": "dataSourceAliasRead"
        },
        "aws_sfn_state_machine": {
          "read_method": "dataSourceStateMachineRead"
        },
        "aws_sfn_state_machine_versions": {
          "read_method": "dataSourceStateMachineVersionsRead"
        }
      }
    },
    {
      "service_name": "shield",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/shield",
      "aws_sdk_resources": {
        "aws_shield_protection": {
          "terraform_type": "aws_shield_protection",
          "factory_function": "resourceShieldProtection",
          "name": "Protection",
          "sdk_type": "sdk"
        },
        "aws_shield_protection_group": {
          "terraform_type": "aws_shield_protection_group",
          "factory_function": "resourceShieldProtectionGroup",
          "name": "Protection Group",
          "sdk_type": "sdk"
        },
        "aws_shield_protection_health_check_association": {
          "terraform_type": "aws_shield_protection_health_check_association",
          "factory_function": "resourceShieldProtectionHealthCheckAssociation",
          "name": "Protection Health Check Association",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_shield_application_layer_automatic_response": {
          "terraform_type": "aws_shield_application_layer_automatic_response",
          "factory_function": "newShieldApplicationLayerAutomaticResponseResource",
          "name": "Application Layer Automatic Response",
          "sdk_type": "framework",
          "struct_type": "applicationLayerAutomaticResponseResource"
        },
        "aws_shield_drt_access_log_bucket_association": {
          "terraform_type": "aws_shield_drt_access_log_bucket_association",
          "factory_function": "newShieldDrtAccessLogBucketAssociationResource",
          "name": "DRT Log Bucket Association",
          "sdk_type": "framework",
          "struct_type": "drtAccessLogBucketAssociationResource"
        },
        "aws_shield_drt_access_role_arn_association": {
          "terraform_type": "aws_shield_drt_access_role_arn_association",
          "factory_function": "newShieldDrtAccessRoleArnAssociationResource",
          "name": "DRT Role ARN Association",
          "sdk_type": "framework",
          "struct_type": "drtAccessRoleARNAssociationResource"
        },
        "aws_shield_proactive_engagement": {
          "terraform_type": "aws_shield_proactive_engagement",
          "factory_function": "newShieldProactiveEngagementResource",
          "name": "Proactive Engagement",
          "sdk_type": "framework",
          "struct_type": "proactiveEngagementResource"
        },
        "aws_shield_subscription": {
          "terraform_type": "aws_shield_subscription",
          "factory_function": "newShieldSubscriptionResource",
          "name": "Subscription",
          "sdk_type": "framework",
          "struct_type": "subscriptionResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_shield_protection": {
          "terraform_type": "aws_shield_protection",
          "factory_function": "newShieldProtectionDataSource",
          "name": "Protection",
          "sdk_type": "framework",
          "struct_type": "protectionDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "applicationLayerAutomaticResponseResource": "aws_shield_application_layer_automatic_response",
        "drtAccessLogBucketAssociationResource": "aws_shield_drt_access_log_bucket_association",
        "drtAccessRoleARNAssociationResource": "aws_shield_drt_access_role_arn_association",
        "proactiveEngagementResource": "aws_shield_proactive_engagement",
        "subscriptionResource": "aws_shield_subscription"
      },
      "data_source_terraform_types": {
        "protectionDataSource": "aws_shield_protection"
      },
      "resource_crud_methods": {
        "aws_shield_protection": {
          "create_method": "resourceProtectionCreate",
          "read_method": "resourceProtectionRead",
          "update_method": "resourceProtectionUpdate",
          "delete_method": "resourceProtectionDelete"
        },
        "aws_shield_protection_group": {
          "create_method": "resourceProtectionGroupCreate",
          "read_method": "resourceProtectionGroupRead",
          "update_method": "resourceProtectionGroupUpdate",
          "delete_method": "resourceProtectionGroupDelete"
        },
        "aws_shield_protection_health_check_association": {
          "create_method": "ResourceProtectionHealthCheckAssociationCreate",
          "read_method": "ResourceProtectionHealthCheckAssociationRead",
          "delete_method": "ResourceProtectionHealthCheckAssociationDelete"
        }
      }
    },
    {
      "service_name": "signer",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/signer",
      "aws_sdk_resources": {
        "aws_signer_signing_job": {
          "terraform_type": "aws_signer_signing_job",
          "factory_function": "resourceSignerSigningJob",
          "name": "Signing Job",
          "sdk_type": "sdk"
        },
        "aws_signer_signing_profile": {
          "terraform_type": "aws_signer_signing_profile",
          "factory_function": "resourceSignerSigningProfile",
          "name": "Signing Profile",
          "sdk_type": "sdk"
        },
        "aws_signer_signing_profile_permission": {
          "terraform_type": "aws_signer_signing_profile_permission",
          "factory_function": "resourceSignerSigningProfilePermission",
          "name": "Signing Profile Permission",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_signer_signing_job": {
          "terraform_type": "aws_signer_signing_job",
          "factory_function": "dataSourceSignerSigningJob",
          "name": "Signing Job",
          "sdk_type": "sdk"
        },
        "aws_signer_signing_profile": {
          "terraform_type": "aws_signer_signing_profile",
          "factory_function": "dataSourceSignerSigningProfile",
          "name": "Signing Profile",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_signer_signing_job": {
          "create_method": "resourceSigningJobCreate",
          "read_method": "resourceSigningJobRead"
        },
        "aws_signer_signing_profile": {
          "create_method": "resourceSigningProfileCreate",
          "read_method": "resourceSigningProfileRead",
          "update_method": "resourceSigningProfileUpdate",
          "delete_method": "resourceSigningProfileDelete"
        },
        "aws_signer_signing_profile_permission": {
          "create_method": "resourceSigningProfilePermissionCreate",
          "read_method": "resourceSigningProfilePermissionRead",
          "delete_method": "resourceSigningProfilePermissionDelete"
        }
      },
      "data_source_methods": {
        "aws_signer_signing_job": {
          "read_method": "dataSourceSigningJobRead"
        },
        "aws_signer_signing_profile": {
          "read_method": "dataSourceSigningProfileRead"
        }
      }
    },
    {
      "service_name": "sns",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/sns",
      "aws_sdk_resources": {
        "aws_sns_platform_application": {
          "terraform_type": "aws_sns_platform_application",
          "factory_function": "resourceSnsPlatformApplication",
          "name": "Platform Application",
          "sdk_type": "sdk"
        },
        "aws_sns_sms_preferences": {
          "terraform_type": "aws_sns_sms_preferences",
          "factory_function": "resourceSnsSmsPreferences",
          "name": "SMS Preferences",
          "sdk_type": "sdk"
        },
        "aws_sns_topic": {
          "terraform_type": "aws_sns_topic",
          "factory_function": "resourceSnsTopic",
          "name": "Topic",
          "sdk_type": "sdk"
        },
        "aws_sns_topic_data_protection_policy": {
          "terraform_type": "aws_sns_topic_data_protection_policy",
          "factory_function": "resourceSnsTopicDataProtectionPolicy",
          "name": "Topic Data Protection Policy",
          "sdk_type": "sdk"
        },
        "aws_sns_topic_policy": {
          "terraform_type": "aws_sns_topic_policy",
          "factory_function": "resourceSnsTopicPolicy",
          "name": "Topic Policy",
          "sdk_type": "sdk"
        },
        "aws_sns_topic_subscription": {
          "terraform_type": "aws_sns_topic_subscription",
          "factory_function": "resourceSnsTopicSubscription",
          "name": "Topic Subscription",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_sns_topic": {
          "terraform_type": "aws_sns_topic",
          "factory_function": "dataSourceSnsTopic",
          "name": "Topic",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_sns_platform_application": {
          "create_method": "resourcePlatformApplicationCreate",
          "read_method": "resourcePlatformApplicationRead",
          "update_method": "resourcePlatformApplicationUpdate",
          "delete_method": "resourcePlatformApplicationDelete"
        },
        "aws_sns_sms_preferences": {
          "create_method": "resourceSMSPreferencesSet",
          "read_method": "resourceSMSPreferencesGet",
          "update_method": "resourceSMSPreferencesSet",
          "delete_method": "resourceSMSPreferencesDelete"
        },
        "aws_sns_topic": {
          "create_method": "resourceTopicCreate",
          "read_method": "resourceTopicRead",
          "update_method": "resourceTopicUpdate",
          "delete_method": "resourceTopicDelete"
        },
        "aws_sns_topic_data_protection_policy": {
          "create_method": "resourceTopicDataProtectionPolicyUpsert",
          "read_method": "resourceTopicDataProtectionPolicyRead",
          "update_method": "resourceTopicDataProtectionPolicyUpsert",
          "delete_method": "resourceTopicDataProtectionPolicyDelete"
        },
        "aws_sns_topic_policy": {
          "create_method": "resourceTopicPolicyUpsert",
          "read_method": "resourceTopicPolicyRead",
          "update_method": "resourceTopicPolicyUpsert",
          "delete_method": "resourceTopicPolicyDelete"
        },
        "aws_sns_topic_subscription": {
          "create_method": "resourceTopicSubscriptionCreate",
          "read_method": "resourceTopicSubscriptionRead",
          "update_method": "resourceTopicSubscriptionUpdate",
          "delete_method": "resourceTopicSubscriptionDelete"
        }
      },
      "data_source_methods": {
        "aws_sns_topic": {
          "read_method": "dataSourceTopicRead"
        }
      }
    },
    {
      "service_name": "sqs",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/sqs",
      "aws_sdk_resources": {
        "aws_sqs_queue": {
          "terraform_type": "aws_sqs_queue",
          "factory_function": "resourceSqsQueue",
          "name": "Queue",
          "sdk_type": "sdk"
        },
        "aws_sqs_queue_policy": {
          "terraform_type": "aws_sqs_queue_policy",
          "factory_function": "resourceSqsQueuePolicy",
          "name": "Queue Policy",
          "sdk_type": "sdk"
        },
        "aws_sqs_queue_redrive_allow_policy": {
          "terraform_type": "aws_sqs_queue_redrive_allow_policy",
          "factory_function": "resourceSqsQueueRedriveAllowPolicy",
          "name": "Queue Redrive Allow Policy",
          "sdk_type": "sdk"
        },
        "aws_sqs_queue_redrive_policy": {
          "terraform_type": "aws_sqs_queue_redrive_policy",
          "factory_function": "resourceSqsQueueRedrivePolicy",
          "name": "Queue Redrive Policy",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_sqs_queue": {
          "terraform_type": "aws_sqs_queue",
          "factory_function": "dataSourceSqsQueue",
          "name": "Queue",
          "sdk_type": "sdk"
        },
        "aws_sqs_queues": {
          "terraform_type": "aws_sqs_queues",
          "factory_function": "dataSourceSqsQueues",
          "name": "Queues",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_sqs_queue": {
          "create_method": "resourceQueueCreate",
          "read_method": "resourceQueueRead",
          "update_method": "resourceQueueUpdate",
          "delete_method": "resourceQueueDelete"
        },
        "aws_sqs_queue_policy": {
          "create_method": "h.Upsert",
          "read_method": "h.Read",
          "update_method": "h.Upsert",
          "delete_method": "h.Delete"
        },
        "aws_sqs_queue_redrive_allow_policy": {
          "create_method": "h.Upsert",
          "read_method": "h.Read",
          "update_method": "h.Upsert",
          "delete_method": "h.Delete"
        },
        "aws_sqs_queue_redrive_policy": {
          "create_method": "h.Upsert",
          "read_method": "h.Read",
          "update_method": "h.Upsert",
          "delete_method": "h.Delete"
        }
      },
      "data_source_methods": {
        "aws_sqs_queue": {
          "read_method": "dataSourceQueueRead"
        },
        "aws_sqs_queues": {
          "read_method": "dataSourceQueuesRead"
        }
      }
    },
    {
      "service_name": "ssm",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/ssm",
      "aws_sdk_resources": {
        "aws_ssm_activation": {
          "terraform_type": "aws_ssm_activation",
          "factory_function": "resourceSsmActivation",
          "name": "Activation",
          "sdk_type": "sdk"
        },
        "aws_ssm_association": {
          "terraform_type": "aws_ssm_association",
          "factory_function": "resourceSsmAssociation",
          "name": "Association",
          "sdk_type": "sdk"
        },
        "aws_ssm_default_patch_baseline": {
          "terraform_type": "aws_ssm_default_patch_baseline",
          "factory_function": "resourceSsmDefaultPatchBaseline",
          "name": "Default Patch Baseline",
          "sdk_type": "sdk"
        },
        "aws_ssm_document": {
          "terraform_type": "aws_ssm_document",
          "factory_function": "resourceSsmDocument",
          "name": "Document",
          "sdk_type": "sdk"
        },
        "aws_ssm_maintenance_window": {
          "terraform_type": "aws_ssm_maintenance_window",
          "factory_function": "resourceSsmMaintenanceWindow",
          "name": "Maintenance Window",
          "sdk_type": "sdk"
        },
        "aws_ssm_maintenance_window_target": {
          "terraform_type": "aws_ssm_maintenance_window_target",
          "factory_function": "resourceSsmMaintenanceWindowTarget",
          "name": "Maintenance Window Target",
          "sdk_type": "sdk"
        },
        "aws_ssm_maintenance_window_task": {
          "terraform_type": "aws_ssm_maintenance_window_task",
          "factory_function": "resourceSsmMaintenanceWindowTask",
          "name": "Maintenance Window Task",
          "sdk_type": "sdk"
        },
        "aws_ssm_parameter": {
          "terraform_type": "aws_ssm_parameter",
          "factory_function": "resourceSsmParameter",
          "name": "Parameter",
          "sdk_type": "sdk"
        },
        "aws_ssm_patch_baseline": {
          "terraform_type": "aws_ssm_patch_baseline",
          "factory_function": "resourceSsmPatchBaseline",
          "name": "Patch Baseline",
          "sdk_type": "sdk"
        },
        "aws_ssm_patch_group": {
          "terraform_type": "aws_ssm_patch_group",
          "factory_function": "resourceSsmPatchGroup",
          "name": "Patch Group",
          "sdk_type": "sdk"
        },
        "aws_ssm_resource_data_sync": {
          "terraform_type": "aws_ssm_resource_data_sync",
          "factory_function": "resourceSsmResourceDataSync",
          "name": "Resource Data Sync",
          "sdk_type": "sdk"
        },
        "aws_ssm_service_setting": {
          "terraform_type": "aws_ssm_service_setting",
          "factory_function": "resourceSsmServiceSetting",
          "name": "Service Setting",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_ssm_document": {
          "terraform_type": "aws_ssm_document",
          "factory_function": "dataSourceSsmDocument",
          "name": "Document",
          "sdk_type": "sdk"
        },
        "aws_ssm_instances, name=": {
          "terraform_type": "aws_ssm_instances, name=",
          "factory_function": "dataSourceSsmInstances, name=",
          "name": "",
          "sdk_type": "sdk"
        },
        "aws_ssm_maintenance_windows": {
          "terraform_type": "aws_ssm_maintenance_windows",
          "factory_function": "dataSourceSsmMaintenanceWindows",
          "name": "Maintenance Windows",
          "sdk_type": "sdk"
        },
        "aws_ssm_parameter": {
          "terraform_type": "aws_ssm_parameter",
          "factory_function": "dataSourceSsmParameter",
          "name": "Parameter",
          "sdk_type": "sdk"
        },
        "aws_ssm_parameters_by_path": {
          "terraform_type": "aws_ssm_parameters_by_path",
          "factory_function": "dataSourceSsmParametersByPath",
          "name": "Parameters By Path",
          "sdk_type": "sdk"
        },
        "aws_ssm_patch_baseline": {
          "terraform_type": "aws_ssm_patch_baseline",
          "factory_function": "dataSourceSsmPatchBaseline",
          "name": "Patch Baseline",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {
        "aws_ssm_patch_baselines": {
          "terraform_type": "aws_ssm_patch_baselines",
          "factory_function": "newSsmPatchBaselinesDataSource",
          "name": "Patch Baselines",
          "sdk_type": "framework",
          "struct_type": "patchBaselinesDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "data_source_terraform_types": {
        "patchBaselinesDataSource": "aws_ssm_patch_baselines"
      },
      "resource_crud_methods": {
        "aws_ssm_activation": {
          "create_method": "resourceActivationCreate",
          "read_method": "resourceActivationRead",
          "delete_method": "resourceActivationDelete"
        },
        "aws_ssm_association": {
          "create_method": "resourceAssociationCreate",
          "read_method": "resourceAssociationRead",
          "update_method": "resourceAssociationUpdate",
          "delete_method": "resourceAssociationDelete"
        },
        "aws_ssm_default_patch_baseline": {
          "create_method": "resourceDefaultPatchBaselineCreate",
          "read_method": "resourceDefaultPatchBaselineRead",
          "delete_method": "resourceDefaultPatchBaselineDelete"
        },
        "aws_ssm_document": {
          "create_method": "resourceDocumentCreate",
          "read_method": "resourceDocumentRead",
          "update_method": "resourceDocumentUpdate",
          "delete_method": "resourceDocumentDelete"
        },
        "aws_ssm_maintenance_window": {
          "create_method": "resourceMaintenanceWindowCreate",
          "read_method": "resourceMaintenanceWindowRead",
          "update_method": "resourceMaintenanceWindowUpdate",
          "delete_method": "resourceMaintenanceWindowDelete"
        },
        "aws_ssm_maintenance_window_target": {
          "create_method": "resourceMaintenanceWindowTargetCreate",
          "read_method": "resourceMaintenanceWindowTargetRead",
          "update_method": "resourceMaintenanceWindowTargetUpdate",
          "delete_method": "resourceMaintenanceWindowTargetDelete"
        },
        "aws_ssm_maintenance_window_task": {
          "create_method": "resourceMaintenanceWindowTaskCreate",
          "read_method": "resourceMaintenanceWindowTaskRead",
          "update_method": "resourceMaintenanceWindowTaskUpdate",
          "delete_method": "resourceMaintenanceWindowTaskDelete"
        },
        "aws_ssm_parameter": {
          "create_method": "resourceParameterCreate",
          "read_method": "resourceParameterRead",
          "update_method": "resourceParameterUpdate",
          "delete_method": "resourceParameterDelete"
        },
        "aws_ssm_patch_baseline": {
          "create_method": "resourcePatchBaselineCreate",
          "read_method": "resourcePatchBaselineRead",
          "update_method": "resourcePatchBaselineUpdate",
          "delete_method": "resourcePatchBaselineDelete"
        },
        "aws_ssm_patch_group": {
          "create_method": "resourcePatchGroupCreate",
          "read_method": "resourcePatchGroupRead",
          "delete_method": "resourcePatchGroupDelete"
        },
        "aws_ssm_resource_data_sync": {
          "create_method": "resourceResourceDataSyncCreate",
          "read_method": "resourceResourceDataSyncRead",
          "delete_method": "resourceResourceDataSyncDelete"
        },
        "aws_ssm_service_setting": {
          "create_method": "resourceServiceSettingUpdate",
          "read_method": "resourceServiceSettingRead",
          "update_method": "resourceServiceSettingUpdate",
          "delete_method": "resourceServiceSettingDelete"
        }
      },
      "data_source_methods": {
        "aws_ssm_document": {
          "read_method": "dataDocumentRead"
        },
        "aws_ssm_instances, name=": {
          "read_method": "dataSourceInstancesRead"
        },
        "aws_ssm_maintenance_windows": {
          "read_method": "dataMaintenanceWindowsRead"
        },
        "aws_ssm_parameter": {
          "read_method": "dataParameterRead"
        },
        "aws_ssm_parameters_by_path": {
          "read_method": "dataSourceParametersReadByPath"
        },
        "aws_ssm_patch_baseline": {
          "read_method": "dataPatchBaselineRead"
        }
      }
    },
    {
      "service_name": "ssmcontacts",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/ssmcontacts",
      "aws_sdk_resources": {
        "aws_ssmcontacts_contact": {
          "terraform_type": "aws_ssmcontacts_contact",
          "factory_function": "resourceSsmcontactsContact",
          "name": "Contact",
          "sdk_type": "sdk"
        },
        "aws_ssmcontacts_contact_channel": {
          "terraform_type": "aws_ssmcontacts_contact_channel",
          "factory_function": "resourceSsmcontactsContactChannel",
          "name": "Contact Channel",
          "sdk_type": "sdk"
        },
        "aws_ssmcontacts_plan": {
          "terraform_type": "aws_ssmcontacts_plan",
          "factory_function": "resourceSsmcontactsPlan",
          "name": "Plan",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_ssmcontacts_contact": {
          "terraform_type": "aws_ssmcontacts_contact",
          "factory_function": "dataSourceSsmcontactsContact",
          "name": "Contact",
          "sdk_type": "sdk"
        },
        "aws_ssmcontacts_contact_channel": {
          "terraform_type": "aws_ssmcontacts_contact_channel",
          "factory_function": "dataSourceSsmcontactsContactChannel",
          "name": "Contact Channel",
          "sdk_type": "sdk"
        },
        "aws_ssmcontacts_plan": {
          "terraform_type": "aws_ssmcontacts_plan",
          "factory_function": "dataSourceSsmcontactsPlan",
          "name": "Plan",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_ssmcontacts_rotation": {
          "terraform_type": "aws_ssmcontacts_rotation",
          "factory_function": "newSsmcontactsRotationResource",
          "name": "Rotation",
          "sdk_type": "framework",
          "struct_type": "rotationResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_ssmcontacts_rotation": {
          "terraform_type": "aws_ssmcontacts_rotation",
          "factory_function": "newSsmcontactsRotationDataSource",
          "name": "Rotation",
          "sdk_type": "framework",
          "struct_type": "rotationDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "rotationResource": "aws_ssmcontacts_rotation"
      },
      "data_source_terraform_types": {
        "rotationDataSource": "aws_ssmcontacts_rotation"
      },
      "resource_crud_methods": {
        "aws_ssmcontacts_contact": {
          "create_method": "resourceContactCreate",
          "read_method": "resourceContactRead",
          "update_method": "resourceContactUpdate",
          "delete_method": "resourceContactDelete"
        },
        "aws_ssmcontacts_contact_channel": {
          "create_method": "resourceContactChannelCreate",
          "read_method": "resourceContactChannelRead",
          "update_method": "resourceContactChannelUpdate",
          "delete_method": "resourceContactChannelDelete"
        },
        "aws_ssmcontacts_plan": {
          "create_method": "resourcePlanCreate",
          "read_method": "resourcePlanRead",
          "update_method": "resourcePlanUpdate",
          "delete_method": "resourcePlanDelete"
        }
      },
      "data_source_methods": {
        "aws_ssmcontacts_contact": {
          "read_method": "dataSourceContactRead"
        },
        "aws_ssmcontacts_contact_channel": {
          "read_method": "dataSourceContactChannelRead"
        },
        "aws_ssmcontacts_plan": {
          "read_method": "dataSourcePlanRead"
        }
      }
    },
    {
      "service_name": "ssmincidents",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/ssmincidents",
      "aws_sdk_resources": {
        "aws_ssmincidents_replication_set": {
          "terraform_type": "aws_ssmincidents_replication_set",
          "factory_function": "resourceSsmincidentsReplicationSet",
          "name": "Replication Set",
          "sdk_type": "sdk"
        },
        "aws_ssmincidents_response_plan": {
          "terraform_type": "aws_ssmincidents_response_plan",
          "factory_function": "resourceSsmincidentsResponsePlan",
          "name": "Response Plan",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_ssmincidents_replication_set": {
          "terraform_type": "aws_ssmincidents_replication_set",
          "factory_function": "dataSourceSsmincidentsReplicationSet",
          "name": "Replication Set",
          "sdk_type": "sdk"
        },
        "aws_ssmincidents_response_plan": {
          "terraform_type": "aws_ssmincidents_response_plan",
          "factory_function": "dataSourceSsmincidentsResponsePlan",
          "name": "Response Plan",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_ssmincidents_replication_set": {
          "create_method": "resourceReplicationSetCreate",
          "read_method": "resourceReplicationSetRead",
          "update_method": "resourceReplicationSetUpdate",
          "delete_method": "resourceReplicationSetDelete"
        },
        "aws_ssmincidents_response_plan": {
          "create_method": "resourceResponsePlanCreate",
          "read_method": "resourceResponsePlanRead",
          "update_method": "resourceResponsePlanUpdate",
          "delete_method": "resourceResponsePlanDelete"
        }
      },
      "data_source_methods": {
        "aws_ssmincidents_replication_set": {
          "read_method": "dataSourceReplicationSetRead"
        },
        "aws_ssmincidents_response_plan": {
          "read_method": "dataSourceResponsePlanRead"
        }
      }
    },
    {
      "service_name": "ssmquicksetup",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/ssmquicksetup",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_ssmquicksetup_configuration_manager": {
          "terraform_type": "aws_ssmquicksetup_configuration_manager",
          "factory_function": "newSsmquicksetupConfigurationManagerResource",
          "name": "Configuration Manager",
          "sdk_type": "framework",
          "struct_type": "configurationManagerResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "configurationManagerResource": "aws_ssmquicksetup_configuration_manager"
      }
    },
    {
      "service_name": "ssoadmin",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/ssoadmin",
      "aws_sdk_resources": {
        "aws_ssoadmin_account_assignment": {
          "terraform_type": "aws_ssoadmin_account_assignment",
          "factory_function": "resourceSsoadminAccountAssignment",
          "name": "Account Assignment",
          "sdk_type": "sdk"
        },
        "aws_ssoadmin_customer_managed_policy_attachment": {
          "terraform_type": "aws_ssoadmin_customer_managed_policy_attachment",
          "factory_function": "resourceSsoadminCustomerManagedPolicyAttachment",
          "name": "Customer Managed Policy Attachment",
          "sdk_type": "sdk"
        },
        "aws_ssoadmin_instance_access_control_attributes": {
          "terraform_type": "aws_ssoadmin_instance_access_control_attributes",
          "factory_function": "resourceSsoadminInstanceAccessControlAttributes",
          "name": "Instance Access Control Attributes",
          "sdk_type": "sdk"
        },
        "aws_ssoadmin_managed_policy_attachment": {
          "terraform_type": "aws_ssoadmin_managed_policy_attachment",
          "factory_function": "resourceSsoadminManagedPolicyAttachment",
          "name": "Managed Policy Attachment",
          "sdk_type": "sdk"
        },
        "aws_ssoadmin_permission_set": {
          "terraform_type": "aws_ssoadmin_permission_set",
          "factory_function": "resourceSsoadminPermissionSet",
          "name": "Permission Set",
          "sdk_type": "sdk"
        },
        "aws_ssoadmin_permission_set_inline_policy": {
          "terraform_type": "aws_ssoadmin_permission_set_inline_policy",
          "factory_function": "resourceSsoadminPermissionSetInlinePolicy",
          "name": "Permission Set Inline Policy",
          "sdk_type": "sdk"
        },
        "aws_ssoadmin_permissions_boundary_attachment": {
          "terraform_type": "aws_ssoadmin_permissions_boundary_attachment",
          "factory_function": "resourceSsoadminPermissionsBoundaryAttachment",
          "name": "Permissions Boundary Attachment",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_ssoadmin_instances": {
          "terraform_type": "aws_ssoadmin_instances",
          "factory_function": "dataSourceSsoadminInstances",
          "name": "Instances",
          "sdk_type": "sdk"
        },
        "aws_ssoadmin_permission_set": {
          "terraform_type": "aws_ssoadmin_permission_set",
          "factory_function": "dataSourceSsoadminPermissionSet",
          "name": "Permission Set",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_ssoadmin_application": {
          "terraform_type": "aws_ssoadmin_application",
          "factory_function": "newSsoadminApplicationResource",
          "name": "Application",
          "sdk_type": "framework",
          "struct_type": "applicationResource"
        },
        "aws_ssoadmin_application_access_scope": {
          "terraform_type": "aws_ssoadmin_application_access_scope",
          "factory_function": "newSsoadminApplicationAccessScopeResource",
          "name": "Application Access Scope",
          "sdk_type": "framework",
          "struct_type": "applicationAccessScopeResource"
        },
        "aws_ssoadmin_application_assignment": {
          "terraform_type": "aws_ssoadmin_application_assignment",
          "factory_function": "newSsoadminApplicationAssignmentResource",
          "name": "Application Assignment",
          "sdk_type": "framework",
          "struct_type": "applicationAssignmentResource"
        },
        "aws_ssoadmin_application_assignment_configuration": {
          "terraform_type": "aws_ssoadmin_application_assignment_configuration",
          "factory_function": "newSsoadminApplicationAssignmentConfigurationResource",
          "name": "Application Assignment Configuration",
          "sdk_type": "framework",
          "struct_type": "applicationAssignmentConfigurationResource"
        },
        "aws_ssoadmin_trusted_token_issuer": {
          "terraform_type": "aws_ssoadmin_trusted_token_issuer",
          "factory_function": "newSsoadminTrustedTokenIssuerResource",
          "name": "Trusted Token Issuer",
          "sdk_type": "framework",
          "struct_type": "trustedTokenIssuerResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_ssoadmin_application": {
          "terraform_type": "aws_ssoadmin_application",
          "factory_function": "newSsoadminApplicationDataSource",
          "name": "Application",
          "sdk_type": "framework",
          "struct_type": "applicationDataSource"
        },
        "aws_ssoadmin_application_assignments": {
          "terraform_type": "aws_ssoadmin_application_assignments",
          "factory_function": "newSsoadminApplicationAssignmentsDataSource",
          "name": "Application Assignments",
          "sdk_type": "framework",
          "struct_type": "applicationAssignmentsDataSource"
        },
        "aws_ssoadmin_application_providers": {
          "terraform_type": "aws_ssoadmin_application_providers",
          "factory_function": "newSsoadminApplicationProvidersDataSource",
          "name": "Application Providers",
          "sdk_type": "framework",
          "struct_type": "applicationProvidersDataSource"
        },
        "aws_ssoadmin_permission_sets": {
          "terraform_type": "aws_ssoadmin_permission_sets",
          "factory_function": "newSsoadminPermissionSetsDataSource",
          "name": "Permission Sets",
          "sdk_type": "framework",
          "struct_type": "permissionSetsDataSource"
        },
        "aws_ssoadmin_principal_application_assignments": {
          "terraform_type": "aws_ssoadmin_principal_application_assignments",
          "factory_function": "newSsoadminPrincipalApplicationAssignmentsDataSource",
          "name": "Principal Application Assignments",
          "sdk_type": "framework",
          "struct_type": "principalApplicationAssignmentsDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "applicationAccessScopeResource": "aws_ssoadmin_application_access_scope",
        "applicationAssignmentConfigurationResource": "aws_ssoadmin_application_assignment_configuration",
        "applicationAssignmentResource": "aws_ssoadmin_application_assignment",
        "applicationResource": "aws_ssoadmin_application",
        "trustedTokenIssuerResource": "aws_ssoadmin_trusted_token_issuer"
      },
      "data_source_terraform_types": {
        "applicationAssignmentsDataSource": "aws_ssoadmin_application_assignments",
        "applicationDataSource": "aws_ssoadmin_application",
        "applicationProvidersDataSource": "aws_ssoadmin_application_providers",
        "permissionSetsDataSource": "aws_ssoadmin_permission_sets",
        "principalApplicationAssignmentsDataSource": "aws_ssoadmin_principal_application_assignments"
      },
      "resource_crud_methods": {
        "aws_ssoadmin_account_assignment": {
          "create_method": "resourceAccountAssignmentCreate",
          "read_method": "resourceAccountAssignmentRead",
          "delete_method": "resourceAccountAssignmentDelete"
        },
        "aws_ssoadmin_customer_managed_policy_attachment": {
          "create_method": "resourceCustomerManagedPolicyAttachmentCreate",
          "read_method": "resourceCustomerManagedPolicyAttachmentRead",
          "delete_method": "resourceCustomerManagedPolicyAttachmentDelete"
        },
        "aws_ssoadmin_instance_access_control_attributes": {
          "create_method": "resourceInstanceAccessControlAttributesCreate",
          "read_method": "resourceInstanceAccessControlAttributesRead",
          "update_method": "resourceInstanceAccessControlAttributesUpdate",
          "delete_method": "resourceInstanceAccessControlAttributesDelete"
        },
        "aws_ssoadmin_managed_policy_attachment": {
          "create_method": "resourceManagedPolicyAttachmentCreate",
          "read_method": "resourceManagedPolicyAttachmentRead",
          "delete_method": "resourceManagedPolicyAttachmentDelete"
        },
        "aws_ssoadmin_permission_set": {
          "create_method": "resourcePermissionSetCreate",
          "read_method": "resourcePermissionSetRead",
          "update_method": "resourcePermissionSetUpdate",
          "delete_method": "resourcePermissionSetDelete"
        },
        "aws_ssoadmin_permission_set_inline_policy": {
          "create_method": "resourcePermissionSetInlinePolicyPut",
          "read_method": "resourcePermissionSetInlinePolicyRead",
          "update_method": "resourcePermissionSetInlinePolicyPut",
          "delete_method": "resourcePermissionSetInlinePolicyDelete"
        },
        "aws_ssoadmin_permissions_boundary_attachment": {
          "create_method": "resourcePermissionsBoundaryAttachmentCreate",
          "read_method": "resourcePermissionsBoundaryAttachmentRead",
          "delete_method": "resourcePermissionsBoundaryAttachmentDelete"
        }
      },
      "data_source_methods": {
        "aws_ssoadmin_instances": {
          "read_method": "dataSourceInstancesRead"
        },
        "aws_ssoadmin_permission_set": {
          "read_method": "dataSourcePermissionSetRead"
        }
      }
    },
    {
      "service_name": "sts",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/sts",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {
        "aws_caller_identity": {
          "terraform_type": "aws_caller_identity",
          "factory_function": "newCallerIdentityDataSource",
          "name": "Caller Identity",
          "sdk_type": "framework",
          "struct_type": "callerIdentityDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "data_source_terraform_types": {
        "callerIdentityDataSource": "aws_caller_identity"
      }
    },
    {
      "service_name": "storagegateway",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/storagegateway",
      "aws_sdk_resources": {
        "aws_storagegateway_cache": {
          "terraform_type": "aws_storagegateway_cache",
          "factory_function": "resourceStoragegatewayCache",
          "name": "Cache",
          "sdk_type": "sdk"
        },
        "aws_storagegateway_cached_iscsi_volume": {
          "terraform_type": "aws_storagegateway_cached_iscsi_volume",
          "factory_function": "resourceStoragegatewayCachedIscsiVolume",
          "name": "Cached iSCSI Volume",
          "sdk_type": "sdk"
        },
        "aws_storagegateway_file_system_association": {
          "terraform_type": "aws_storagegateway_file_system_association",
          "factory_function": "resourceStoragegatewayFileSystemAssociation",
          "name": "File System Association",
          "sdk_type": "sdk"
        },
        "aws_storagegateway_gateway": {
          "terraform_type": "aws_storagegateway_gateway",
          "factory_function": "resourceStoragegatewayGateway",
          "name": "Gateway",
          "sdk_type": "sdk"
        },
        "aws_storagegateway_nfs_file_share": {
          "terraform_type": "aws_storagegateway_nfs_file_share",
          "factory_function": "resourceStoragegatewayNfsFileShare",
          "name": "NFS File Share",
          "sdk_type": "sdk"
        },
        "aws_storagegateway_smb_file_share": {
          "terraform_type": "aws_storagegateway_smb_file_share",
          "factory_function": "resourceStoragegatewaySmbFileShare",
          "name": "SMB File Share",
          "sdk_type": "sdk"
        },
        "aws_storagegateway_stored_iscsi_volume": {
          "terraform_type": "aws_storagegateway_stored_iscsi_volume",
          "factory_function": "resourceStoragegatewayStoredIscsiVolume",
          "name": "Stored iSCSI Volume",
          "sdk_type": "sdk"
        },
        "aws_storagegateway_tape_pool": {
          "terraform_type": "aws_storagegateway_tape_pool",
          "factory_function": "resourceStoragegatewayTapePool",
          "name": "Tape Pool",
          "sdk_type": "sdk"
        },
        "aws_storagegateway_upload_buffer": {
          "terraform_type": "aws_storagegateway_upload_buffer",
          "factory_function": "resourceStoragegatewayUploadBuffer",
          "name": "Upload Buffer",
          "sdk_type": "sdk"
        },
        "aws_storagegateway_working_storage": {
          "terraform_type": "aws_storagegateway_working_storage",
          "factory_function": "resourceStoragegatewayWorkingStorage",
          "name": "Working Storage",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_storagegateway_local_disk": {
          "terraform_type": "aws_storagegateway_local_disk",
          "factory_function": "dataSourceStoragegatewayLocalDisk",
          "name": "Local Disk",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_storagegateway_cache": {
          "create_method": "resourceCacheCreate",
          "read_method": "resourceCacheRead"
        },
        "aws_storagegateway_cached_iscsi_volume": {
          "create_method": "resourceCachediSCSIVolumeCreate",
          "read_method": "resourceCachediSCSIVolumeRead",
          "update_method": "resourceCachediSCSIVolumeUpdate",
          "delete_method": "resourceCachediSCSIVolumeDelete"
        },
        "aws_storagegateway_file_system_association": {
          "create_method": "resourceFileSystemAssociationCreate",
          "read_method": "resourceFileSystemAssociationRead",
          "update_method": "resourceFileSystemAssociationUpdate",
          "delete_method": "resourceFileSystemAssociationDelete"
        },
        "aws_storagegateway_gateway": {
          "create_method": "resourceGatewayCreate",
          "read_method": "resourceGatewayRead",
          "update_method": "resourceGatewayUpdate",
          "delete_method": "resourceGatewayDelete"
        },
        "aws_storagegateway_nfs_file_share": {
          "create_method": "resourceNFSFileShareCreate",
          "read_method": "resourceNFSFileShareRead",
          "update_method": "resourceNFSFileShareUpdate",
          "delete_method": "resourceNFSFileShareDelete"
        },
        "aws_storagegateway_smb_file_share": {
          "create_method": "resourceSMBFileShareCreate",
          "read_method": "resourceSMBFileShareRead",
          "update_method": "resourceSMBFileShareUpdate",
          "delete_method": "resourceSMBFileShareDelete"
        },
        "aws_storagegateway_stored_iscsi_volume": {
          "create_method": "resourceStorediSCSIVolumeCreate",
          "read_method": "resourceStorediSCSIVolumeRead",
          "update_method": "resourceStorediSCSIVolumeUpdate",
          "delete_method": "resourceStorediSCSIVolumeDelete"
        },
        "aws_storagegateway_tape_pool": {
          "create_method": "resourceTapePoolCreate",
          "read_method": "resourceTapePoolRead",
          "update_method": "resourceTapePoolUpdate",
          "delete_method": "resourceTapePoolDelete"
        },
        "aws_storagegateway_upload_buffer": {
          "create_method": "resourceUploadBufferCreate",
          "read_method": "resourceUploadBufferRead"
        },
        "aws_storagegateway_working_storage": {
          "create_method": "resourceWorkingStorageCreate",
          "read_method": "resourceWorkingStorageRead"
        }
      },
      "data_source_methods": {
        "aws_storagegateway_local_disk": {
          "read_method": "dataSourceLocalDiskRead"
        }
      }
    },
    {
      "service_name": "swf",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/swf",
      "aws_sdk_resources": {
        "aws_swf_domain": {
          "terraform_type": "aws_swf_domain",
          "factory_function": "resourceSwfDomain",
          "name": "Domain",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_swf_domain": {
          "create_method": "resourceDomainCreate",
          "read_method": "resourceDomainRead",
          "update_method": "resourceDomainUpdate",
          "delete_method": "resourceDomainDelete"
        }
      }
    },
    {
      "service_name": "synthetics",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/synthetics",
      "aws_sdk_resources": {
        "aws_synthetics_canary": {
          "terraform_type": "aws_synthetics_canary",
          "factory_function": "resourceSyntheticsCanary",
          "name": "Canary",
          "sdk_type": "sdk"
        },
        "aws_synthetics_group": {
          "terraform_type": "aws_synthetics_group",
          "factory_function": "resourceSyntheticsGroup",
          "name": "Group",
          "sdk_type": "sdk"
        },
        "aws_synthetics_group_association": {
          "terraform_type": "aws_synthetics_group_association",
          "factory_function": "resourceSyntheticsGroupAssociation",
          "name": "Group Association",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {
        "aws_synthetics_runtime_version": {
          "terraform_type": "aws_synthetics_runtime_version",
          "factory_function": "newSyntheticsRuntimeVersionDataSource",
          "name": "Runtime Version",
          "sdk_type": "framework",
          "struct_type": "runtimeVersionDataSource"
        },
        "aws_synthetics_runtime_versions": {
          "terraform_type": "aws_synthetics_runtime_versions",
          "factory_function": "newSyntheticsRuntimeVersionsDataSource",
          "name": "Runtime Versions",
          "sdk_type": "framework",
          "struct_type": "runtimeVersionsDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "data_source_terraform_types": {
        "runtimeVersionDataSource": "aws_synthetics_runtime_version",
        "runtimeVersionsDataSource": "aws_synthetics_runtime_versions"
      },
      "resource_crud_methods": {
        "aws_synthetics_canary": {
          "create_method": "resourceCanaryCreate",
          "read_method": "resourceCanaryRead",
          "update_method": "resourceCanaryUpdate",
          "delete_method": "resourceCanaryDelete"
        },
        "aws_synthetics_group": {
          "create_method": "resourceGroupCreate",
          "read_method": "resourceGroupRead",
          "update_method": "resourceGroupUpdate",
          "delete_method": "resourceGroupDelete"
        },
        "aws_synthetics_group_association": {
          "create_method": "resourceGroupAssociationCreate",
          "read_method": "resourceGroupAssociationRead",
          "delete_method": "resourceGroupAssociationDelete"
        }
      }
    },
    {
      "service_name": "timestreaminfluxdb",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/timestreaminfluxdb",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_timestreaminfluxdb_db_cluster": {
          "terraform_type": "aws_timestreaminfluxdb_db_cluster",
          "factory_function": "newTimestreaminfluxdbDbClusterResource",
          "name": "DB Cluster",
          "sdk_type": "framework",
          "struct_type": "dbClusterResource"
        },
        "aws_timestreaminfluxdb_db_instance": {
          "terraform_type": "aws_timestreaminfluxdb_db_instance",
          "factory_function": "newTimestreaminfluxdbDbInstanceResource",
          "name": "DB Instance",
          "sdk_type": "framework",
          "struct_type": "dbInstanceResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "dbClusterResource": "aws_timestreaminfluxdb_db_cluster",
        "dbInstanceResource": "aws_timestreaminfluxdb_db_instance"
      }
    },
    {
      "service_name": "timestreamquery",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/timestreamquery",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_timestreamquery_scheduled_query": {
          "terraform_type": "aws_timestreamquery_scheduled_query",
          "factory_function": "newTimestreamqueryScheduledQueryResource",
          "name": "Scheduled Query",
          "sdk_type": "framework",
          "struct_type": "scheduledQueryResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "scheduledQueryResource": "aws_timestreamquery_scheduled_query"
      }
    },
    {
      "service_name": "timestreamwrite",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/timestreamwrite",
      "aws_sdk_resources": {
        "aws_timestreamwrite_database": {
          "terraform_type": "aws_timestreamwrite_database",
          "factory_function": "resourceTimestreamwriteDatabase",
          "name": "Database",
          "sdk_type": "sdk"
        },
        "aws_timestreamwrite_table": {
          "terraform_type": "aws_timestreamwrite_table",
          "factory_function": "resourceTimestreamwriteTable",
          "name": "Table",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {
        "aws_timestreamwrite_database": {
          "terraform_type": "aws_timestreamwrite_database",
          "factory_function": "newTimestreamwriteDatabaseDataSource",
          "name": "Database",
          "sdk_type": "framework",
          "struct_type": "databaseDataSource"
        },
        "aws_timestreamwrite_table": {
          "terraform_type": "aws_timestreamwrite_table",
          "factory_function": "newTimestreamwriteTableDataSource",
          "name": "Table",
          "sdk_type": "framework",
          "struct_type": "tableDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "data_source_terraform_types": {
        "databaseDataSource": "aws_timestreamwrite_database",
        "tableDataSource": "aws_timestreamwrite_table"
      },
      "resource_crud_methods": {
        "aws_timestreamwrite_database": {
          "create_method": "resourceDatabaseCreate",
          "read_method": "resourceDatabaseRead",
          "update_method": "resourceDatabaseUpdate",
          "delete_method": "resourceDatabaseDelete"
        },
        "aws_timestreamwrite_table": {
          "create_method": "resourceTableCreate",
          "read_method": "resourceTableRead",
          "update_method": "resourceTableUpdate",
          "delete_method": "resourceTableDelete"
        }
      }
    },
    {
      "service_name": "transcribe",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/transcribe",
      "aws_sdk_resources": {
        "aws_transcribe_language_model": {
          "terraform_type": "aws_transcribe_language_model",
          "factory_function": "resourceTranscribeLanguageModel",
          "name": "Language Model",
          "sdk_type": "sdk"
        },
        "aws_transcribe_medical_vocabulary": {
          "terraform_type": "aws_transcribe_medical_vocabulary",
          "factory_function": "resourceTranscribeMedicalVocabulary",
          "name": "Medical Vocabulary",
          "sdk_type": "sdk"
        },
        "aws_transcribe_vocabulary": {
          "terraform_type": "aws_transcribe_vocabulary",
          "factory_function": "resourceTranscribeVocabulary",
          "name": "Vocabulary",
          "sdk_type": "sdk"
        },
        "aws_transcribe_vocabulary_filter": {
          "terraform_type": "aws_transcribe_vocabulary_filter",
          "factory_function": "resourceTranscribeVocabularyFilter",
          "name": "Vocabulary Filter",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_transcribe_language_model": {
          "create_method": "resourceLanguageModelCreate",
          "read_method": "resourceLanguageModelRead",
          "update_method": "resourceLanguageModelUpdate",
          "delete_method": "resourceLanguageModelDelete"
        },
        "aws_transcribe_medical_vocabulary": {
          "create_method": "resourceMedicalVocabularyCreate",
          "read_method": "resourceMedicalVocabularyRead",
          "update_method": "resourceMedicalVocabularyUpdate",
          "delete_method": "resourceMedicalVocabularyDelete"
        },
        "aws_transcribe_vocabulary": {
          "create_method": "resourceVocabularyCreate",
          "read_method": "resourceVocabularyRead",
          "update_method": "resourceVocabularyUpdate",
          "delete_method": "resourceVocabularyDelete"
        },
        "aws_transcribe_vocabulary_filter": {
          "create_method": "resourceVocabularyFilterCreate",
          "read_method": "resourceVocabularyFilterRead",
          "update_method": "resourceVocabularyFilterUpdate",
          "delete_method": "resourceVocabularyFilterDelete"
        }
      }
    },
    {
      "service_name": "transfer",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/transfer",
      "aws_sdk_resources": {
        "aws_transfer_access": {
          "terraform_type": "aws_transfer_access",
          "factory_function": "resourceTransferAccess",
          "name": "Access",
          "sdk_type": "sdk"
        },
        "aws_transfer_agreement": {
          "terraform_type": "aws_transfer_agreement",
          "factory_function": "resourceTransferAgreement",
          "name": "Agreement",
          "sdk_type": "sdk"
        },
        "aws_transfer_certificate": {
          "terraform_type": "aws_transfer_certificate",
          "factory_function": "resourceTransferCertificate",
          "name": "Certificate",
          "sdk_type": "sdk"
        },
        "aws_transfer_connector": {
          "terraform_type": "aws_transfer_connector",
          "factory_function": "resourceTransferConnector",
          "name": "Connector",
          "sdk_type": "sdk"
        },
        "aws_transfer_profile": {
          "terraform_type": "aws_transfer_profile",
          "factory_function": "resourceTransferProfile",
          "name": "Profile",
          "sdk_type": "sdk"
        },
        "aws_transfer_server": {
          "terraform_type": "aws_transfer_server",
          "factory_function": "resourceTransferServer",
          "name": "Server",
          "sdk_type": "sdk"
        },
        "aws_transfer_ssh_key": {
          "terraform_type": "aws_transfer_ssh_key",
          "factory_function": "resourceTransferSshKey",
          "name": "SSH Key",
          "sdk_type": "sdk"
        },
        "aws_transfer_tag": {
          "terraform_type": "aws_transfer_tag",
          "factory_function": "resourceTransferTag",
          "name": "Transfer Resource Tag",
          "sdk_type": "sdk"
        },
        "aws_transfer_user": {
          "terraform_type": "aws_transfer_user",
          "factory_function": "resourceTransferUser",
          "name": "User",
          "sdk_type": "sdk"
        },
        "aws_transfer_workflow": {
          "terraform_type": "aws_transfer_workflow",
          "factory_function": "resourceTransferWorkflow",
          "name": "Workflow",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_transfer_server": {
          "terraform_type": "aws_transfer_server",
          "factory_function": "dataSourceTransferServer",
          "name": "Server",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_transfer_host_key": {
          "terraform_type": "aws_transfer_host_key",
          "factory_function": "newTransferHostKeyResource",
          "name": "Host Key",
          "sdk_type": "framework",
          "struct_type": "hostKeyResource"
        },
        "aws_transfer_web_app": {
          "terraform_type": "aws_transfer_web_app",
          "factory_function": "newTransferWebAppResource",
          "name": "Web App",
          "sdk_type": "framework",
          "struct_type": "webAppResource"
        },
        "aws_transfer_web_app_customization": {
          "terraform_type": "aws_transfer_web_app_customization",
          "factory_function": "newTransferWebAppCustomizationResource",
          "name": "Web App Customization",
          "sdk_type": "framework",
          "struct_type": "webAppCustomizationResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_transfer_connector": {
          "terraform_type": "aws_transfer_connector",
          "factory_function": "newTransferConnectorDataSource",
          "name": "Connector",
          "sdk_type": "framework",
          "struct_type": "connectorDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "hostKeyResource": "aws_transfer_host_key",
        "webAppCustomizationResource": "aws_transfer_web_app_customization",
        "webAppResource": "aws_transfer_web_app"
      },
      "data_source_terraform_types": {
        "connectorDataSource": "aws_transfer_connector"
      },
      "resource_crud_methods": {
        "aws_transfer_access": {
          "create_method": "resourceAccessCreate",
          "read_method": "resourceAccessRead",
          "update_method": "resourceAccessUpdate",
          "delete_method": "resourceAccessDelete"
        },
        "aws_transfer_agreement": {
          "create_method": "resourceAgreementCreate",
          "read_method": "resourceAgreementRead",
          "update_method": "resourceAgreementUpdate",
          "delete_method": "resourceAgreementDelete"
        },
        "aws_transfer_certificate": {
          "create_method": "resourceCertificateCreate",
          "read_method": "resourceCertificateRead",
          "update_method": "resourceCertificateUpdate",
          "delete_method": "resourceCertificateDelete"
        },
        "aws_transfer_connector": {
          "create_method": "resourceConnectorCreate",
          "read_method": "resourceConnectorRead",
          "update_method": "resourceConnectorUpdate",
          "delete_method": "resourceConnectorDelete"
        },
        "aws_transfer_profile": {
          "create_method": "resourceProfileCreate",
          "read_method": "resourceProfileRead",
          "update_method": "resourceProfileUpdate",
          "delete_method": "resourceProfileDelete"
        },
        "aws_transfer_server": {
          "create_method": "resourceServerCreate",
          "read_method": "resourceServerRead",
          "update_method": "resourceServerUpdate",
          "delete_method": "resourceServerDelete"
        },
        "aws_transfer_ssh_key": {
          "create_method": "resourceSSHKeyCreate",
          "read_method": "resourceSSHKeyRead",
          "delete_method": "resourceSSHKeyDelete"
        },
        "aws_transfer_tag": {
          "create_method": "resourceTagCreate",
          "read_method": "resourceTagRead",
          "update_method": "resourceTagUpdate",
          "delete_method": "resourceTagDelete"
        },
        "aws_transfer_user": {
          "create_method": "resourceUserCreate",
          "read_method": "resourceUserRead",
          "update_method": "resourceUserUpdate",
          "delete_method": "resourceUserDelete"
        },
        "aws_transfer_workflow": {
          "create_method": "resourceWorkflowCreate",
          "read_method": "resourceWorkflowRead",
          "update_method": "resourceWorkflowUpdate",
          "delete_method": "resourceWorkflowDelete"
        }
      },
      "data_source_methods": {
        "aws_transfer_server": {
          "read_method": "dataSourceServerRead"
        }
      }
    },
    {
      "service_name": "verifiedpermissions",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/verifiedpermissions",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_verifiedpermissions_identity_source": {
          "terraform_type": "aws_verifiedpermissions_identity_source",
          "factory_function": "newVerifiedpermissionsIdentitySourceResource",
          "name": "Identity Source",
          "sdk_type": "framework",
          "struct_type": "identitySourceResource"
        },
        "aws_verifiedpermissions_policy_store": {
          "terraform_type": "aws_verifiedpermissions_policy_store",
          "factory_function": "newVerifiedpermissionsPolicyStoreResource",
          "name": "Policy Store",
          "sdk_type": "framework",
          "struct_type": "policyStoreResource"
        },
        "aws_verifiedpermissions_policy_template": {
          "terraform_type": "aws_verifiedpermissions_policy_template",
          "factory_function": "newVerifiedpermissionsPolicyTemplateResource",
          "name": "Policy Template",
          "sdk_type": "framework",
          "struct_type": "policyTemplateResource"
        },
        "aws_verifiedpermissions_schema": {
          "terraform_type": "aws_verifiedpermissions_schema",
          "factory_function": "newVerifiedpermissionsSchemaResource",
          "name": "Schema",
          "sdk_type": "framework",
          "struct_type": "schemaResource"
        }
      },
      "aws_framework_data_sources": {
        "aws_verifiedpermissions_policy_store": {
          "terraform_type": "aws_verifiedpermissions_policy_store",
          "factory_function": "newVerifiedpermissionsPolicyStoreDataSource",
          "name": "Policy Store",
          "sdk_type": "framework",
          "struct_type": "policyStoreDataSource"
        }
      },
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "identitySourceResource": "aws_verifiedpermissions_identity_source",
        "policyStoreResource": "aws_verifiedpermissions_policy_store",
        "policyTemplateResource": "aws_verifiedpermissions_policy_template",
        "schemaResource": "aws_verifiedpermissions_schema"
      },
      "data_source_terraform_types": {
        "policyStoreDataSource": "aws_verifiedpermissions_policy_store"
      }
    },
    {
      "service_name": "vpclattice",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/vpclattice",
      "aws_sdk_resources": {
        "aws_vpclattice_access_log_subscription": {
          "terraform_type": "aws_vpclattice_access_log_subscription",
          "factory_function": "resourceVpclatticeAccessLogSubscription",
          "name": "Access Log Subscription",
          "sdk_type": "sdk"
        },
        "aws_vpclattice_auth_policy": {
          "terraform_type": "aws_vpclattice_auth_policy",
          "factory_function": "resourceVpclatticeAuthPolicy",
          "name": "Auth Policy",
          "sdk_type": "sdk"
        },
        "aws_vpclattice_listener": {
          "terraform_type": "aws_vpclattice_listener",
          "factory_function": "resourceVpclatticeListener",
          "name": "Listener",
          "sdk_type": "sdk"
        },
        "aws_vpclattice_listener_rule": {
          "terraform_type": "aws_vpclattice_listener_rule",
          "factory_function": "resourceVpclatticeListenerRule",
          "name": "Listener Rule",
          "sdk_type": "sdk"
        },
        "aws_vpclattice_resource_policy": {
          "terraform_type": "aws_vpclattice_resource_policy",
          "factory_function": "resourceVpclatticeResourcePolicy",
          "name": "Resource Policy",
          "sdk_type": "sdk"
        },
        "aws_vpclattice_service": {
          "terraform_type": "aws_vpclattice_service",
          "factory_function": "resourceVpclatticeService",
          "name": "Service",
          "sdk_type": "sdk"
        },
        "aws_vpclattice_service_network": {
          "terraform_type": "aws_vpclattice_service_network",
          "factory_function": "resourceVpclatticeServiceNetwork",
          "name": "Service Network",
          "sdk_type": "sdk"
        },
        "aws_vpclattice_service_network_service_association": {
          "terraform_type": "aws_vpclattice_service_network_service_association",
          "factory_function": "resourceVpclatticeServiceNetworkServiceAssociation",
          "name": "Service Network Service Association",
          "sdk_type": "sdk"
        },
        "aws_vpclattice_service_network_vpc_association": {
          "terraform_type": "aws_vpclattice_service_network_vpc_association",
          "factory_function": "resourceVpclatticeServiceNetworkVpcAssociation",
          "name": "Service Network VPC Association",
          "sdk_type": "sdk"
        },
        "aws_vpclattice_target_group": {
          "terraform_type": "aws_vpclattice_target_group",
          "factory_function": "resourceVpclatticeTargetGroup",
          "name": "Target Group",
          "sdk_type": "sdk"
        },
        "aws_vpclattice_target_group_attachment": {
          "terraform_type": "aws_vpclattice_target_group_attachment",
          "factory_function": "resourceVpclatticeTargetGroupAttachment",
          "name": "Target Group Attachment",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_vpclattice_auth_policy": {
          "terraform_type": "aws_vpclattice_auth_policy",
          "factory_function": "dataSourceVpclatticeAuthPolicy",
          "name": "Auth Policy",
          "sdk_type": "sdk"
        },
        "aws_vpclattice_listener": {
          "terraform_type": "aws_vpclattice_listener",
          "factory_function": "dataSourceVpclatticeListener",
          "name": "Listener",
          "sdk_type": "sdk"
        },
        "aws_vpclattice_resource_policy": {
          "terraform_type": "aws_vpclattice_resource_policy",
          "factory_function": "dataSourceVpclatticeResourcePolicy",
          "name": "Resource Policy",
          "sdk_type": "sdk"
        },
        "aws_vpclattice_service": {
          "terraform_type": "aws_vpclattice_service",
          "factory_function": "dataSourceVpclatticeService",
          "name": "Service",
          "sdk_type": "sdk"
        },
        "aws_vpclattice_service_network": {
          "terraform_type": "aws_vpclattice_service_network",
          "factory_function": "dataSourceVpclatticeServiceNetwork",
          "name": "Service Network",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_vpclattice_resource_configuration": {
          "terraform_type": "aws_vpclattice_resource_configuration",
          "factory_function": "newVpclatticeResourceConfigurationResource",
          "name": "Resource Configuration",
          "sdk_type": "framework",
          "struct_type": "resourceConfigurationResource"
        },
        "aws_vpclattice_resource_gateway": {
          "terraform_type": "aws_vpclattice_resource_gateway",
          "factory_function": "newVpclatticeResourceGatewayResource",
          "name": "Resource Gateway",
          "sdk_type": "framework",
          "struct_type": "resourceGatewayResource"
        },
        "aws_vpclattice_service_network_resource_association": {
          "terraform_type": "aws_vpclattice_service_network_resource_association",
          "factory_function": "newVpclatticeServiceNetworkResourceAssociationResource",
          "name": "Service Network Resource Association",
          "sdk_type": "framework",
          "struct_type": "serviceNetworkResourceAssociationResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "resourceConfigurationResource": "aws_vpclattice_resource_configuration",
        "resourceGatewayResource": "aws_vpclattice_resource_gateway",
        "serviceNetworkResourceAssociationResource": "aws_vpclattice_service_network_resource_association"
      },
      "resource_crud_methods": {
        "aws_vpclattice_access_log_subscription": {
          "create_method": "resourceAccessLogSubscriptionCreate",
          "read_method": "resourceAccessLogSubscriptionRead",
          "update_method": "resourceAccessLogSubscriptionUpdate",
          "delete_method": "resourceAccessLogSubscriptionDelete"
        },
        "aws_vpclattice_auth_policy": {
          "create_method": "resourceAuthPolicyPut",
          "read_method": "resourceAuthPolicyRead",
          "update_method": "resourceAuthPolicyPut",
          "delete_method": "resourceAuthPolicyDelete"
        },
        "aws_vpclattice_listener": {
          "create_method": "resourceListenerCreate",
          "read_method": "resourceListenerRead",
          "update_method": "resourceListenerUpdate",
          "delete_method": "resourceListenerDelete"
        },
        "aws_vpclattice_listener_rule": {
          "create_method": "resourceListenerRuleCreate",
          "read_method": "resourceListenerRuleRead",
          "update_method": "resourceListenerRuleUpdate",
          "delete_method": "resourceListenerRuleDelete"
        },
        "aws_vpclattice_resource_policy": {
          "create_method": "resourceResourcePolicyPut",
          "read_method": "resourceResourcePolicyRead",
          "update_method": "resourceResourcePolicyPut",
          "delete_method": "resourceResourcePolicyDelete"
        },
        "aws_vpclattice_service": {
          "create_method": "resourceServiceCreate",
          "read_method": "resourceServiceRead",
          "update_method": "resourceServiceUpdate",
          "delete_method": "resourceServiceDelete"
        },
        "aws_vpclattice_service_network": {
          "create_method": "resourceServiceNetworkCreate",
          "read_method": "resourceServiceNetworkRead",
          "update_method": "resourceServiceNetworkUpdate",
          "delete_method": "resourceServiceNetworkDelete"
        },
        "aws_vpclattice_service_network_service_association": {
          "create_method": "resourceServiceNetworkServiceAssociationCreate",
          "read_method": "resourceServiceNetworkServiceAssociationRead",
          "update_method": "resourceServiceNetworkServiceAssociationUpdate",
          "delete_method": "resourceServiceNetworkServiceAssociationDelete"
        },
        "aws_vpclattice_service_network_vpc_association": {
          "create_method": "resourceServiceNetworkVPCAssociationCreate",
          "read_method": "resourceServiceNetworkVPCAssociationRead",
          "update_method": "resourceServiceNetworkVPCAssociationUpdate",
          "delete_method": "resourceServiceNetworkVPCAssociationDelete"
        },
        "aws_vpclattice_target_group": {
          "create_method": "resourceTargetGroupCreate",
          "read_method": "resourceTargetGroupRead",
          "update_method": "resourceTargetGroupUpdate",
          "delete_method": "resourceTargetGroupDelete"
        },
        "aws_vpclattice_target_group_attachment": {
          "create_method": "resourceTargetGroupAttachmentCreate",
          "read_method": "resourceTargetGroupAttachmentRead",
          "delete_method": "resourceTargetGroupAttachmentDelete"
        }
      },
      "data_source_methods": {
        "aws_vpclattice_auth_policy": {
          "read_method": "dataSourceAuthPolicyRead"
        },
        "aws_vpclattice_listener": {
          "read_method": "dataSourceListenerRead"
        },
        "aws_vpclattice_resource_policy": {
          "read_method": "dataSourceResourcePolicyRead"
        },
        "aws_vpclattice_service": {
          "read_method": "dataSourceServiceRead"
        },
        "aws_vpclattice_service_network": {
          "read_method": "dataSourceServiceNetworkRead"
        }
      }
    },
    {
      "service_name": "waf",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/waf",
      "aws_sdk_resources": {
        "aws_waf_byte_match_set": {
          "terraform_type": "aws_waf_byte_match_set",
          "factory_function": "resourceWafByteMatchSet",
          "name": "ByteMatchSet",
          "sdk_type": "sdk"
        },
        "aws_waf_geo_match_set": {
          "terraform_type": "aws_waf_geo_match_set",
          "factory_function": "resourceWafGeoMatchSet",
          "name": "GeoMatchSet",
          "sdk_type": "sdk"
        },
        "aws_waf_ipset": {
          "terraform_type": "aws_waf_ipset",
          "factory_function": "resourceWafIpset",
          "name": "IPSet",
          "sdk_type": "sdk"
        },
        "aws_waf_rate_based_rule": {
          "terraform_type": "aws_waf_rate_based_rule",
          "factory_function": "resourceWafRateBasedRule",
          "name": "Rate Based Rule",
          "sdk_type": "sdk"
        },
        "aws_waf_regex_match_set": {
          "terraform_type": "aws_waf_regex_match_set",
          "factory_function": "resourceWafRegexMatchSet",
          "name": "Regex Match Set",
          "sdk_type": "sdk"
        },
        "aws_waf_regex_pattern_set": {
          "terraform_type": "aws_waf_regex_pattern_set",
          "factory_function": "resourceWafRegexPatternSet",
          "name": "Regex Pattern Set",
          "sdk_type": "sdk"
        },
        "aws_waf_rule": {
          "terraform_type": "aws_waf_rule",
          "factory_function": "resourceWafRule",
          "name": "Rule",
          "sdk_type": "sdk"
        },
        "aws_waf_rule_group": {
          "terraform_type": "aws_waf_rule_group",
          "factory_function": "resourceWafRuleGroup",
          "name": "Rule Group",
          "sdk_type": "sdk"
        },
        "aws_waf_size_constraint_set": {
          "terraform_type": "aws_waf_size_constraint_set",
          "factory_function": "resourceWafSizeConstraintSet",
          "name": "Size Constraint Set",
          "sdk_type": "sdk"
        },
        "aws_waf_sql_injection_match_set": {
          "terraform_type": "aws_waf_sql_injection_match_set",
          "factory_function": "resourceWafSqlInjectionMatchSet",
          "name": "SqlInjectionMatchSet",
          "sdk_type": "sdk"
        },
        "aws_waf_web_acl": {
          "terraform_type": "aws_waf_web_acl",
          "factory_function": "resourceWafWebAcl",
          "name": "Web ACL",
          "sdk_type": "sdk"
        },
        "aws_waf_xss_match_set": {
          "terraform_type": "aws_waf_xss_match_set",
          "factory_function": "resourceWafXssMatchSet",
          "name": "XSS Match Set",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_waf_ipset": {
          "terraform_type": "aws_waf_ipset",
          "factory_function": "dataSourceWafIpset",
          "name": "IPSet",
          "sdk_type": "sdk"
        },
        "aws_waf_rate_based_rule": {
          "terraform_type": "aws_waf_rate_based_rule",
          "factory_function": "dataSourceWafRateBasedRule",
          "name": "Rate Based Rule",
          "sdk_type": "sdk"
        },
        "aws_waf_rule": {
          "terraform_type": "aws_waf_rule",
          "factory_function": "dataSourceWafRule",
          "name": "Rule",
          "sdk_type": "sdk"
        },
        "aws_waf_subscribed_rule_group": {
          "terraform_type": "aws_waf_subscribed_rule_group",
          "factory_function": "dataSourceWafSubscribedRuleGroup",
          "name": "Subscribed Rule Group",
          "sdk_type": "sdk"
        },
        "aws_waf_web_acl": {
          "terraform_type": "aws_waf_web_acl",
          "factory_function": "dataSourceWafWebAcl",
          "name": "Web ACL",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_waf_byte_match_set": {
          "create_method": "resourceByteMatchSetCreate",
          "read_method": "resourceByteMatchSetRead",
          "update_method": "resourceByteMatchSetUpdate",
          "delete_method": "resourceByteMatchSetDelete"
        },
        "aws_waf_geo_match_set": {
          "create_method": "resourceGeoMatchSetCreate",
          "read_method": "resourceGeoMatchSetRead",
          "update_method": "resourceGeoMatchSetUpdate",
          "delete_method": "resourceGeoMatchSetDelete"
        },
        "aws_waf_ipset": {
          "create_method": "resourceIPSetCreate",
          "read_method": "resourceIPSetRead",
          "update_method": "resourceIPSetUpdate",
          "delete_method": "resourceIPSetDelete"
        },
        "aws_waf_rate_based_rule": {
          "create_method": "resourceRateBasedRuleCreate",
          "read_method": "resourceRateBasedRuleRead",
          "update_method": "resourceRateBasedRuleUpdate",
          "delete_method": "resourceRateBasedRuleDelete"
        },
        "aws_waf_regex_match_set": {
          "create_method": "resourceRegexMatchSetCreate",
          "read_method": "resourceRegexMatchSetRead",
          "update_method": "resourceRegexMatchSetUpdate",
          "delete_method": "resourceRegexMatchSetDelete"
        },
        "aws_waf_regex_pattern_set": {
          "create_method": "resourceRegexPatternSetCreate",
          "read_method": "resourceRegexPatternSetRead",
          "update_method": "resourceRegexPatternSetUpdate",
          "delete_method": "resourceRegexPatternSetDelete"
        },
        "aws_waf_rule": {
          "create_method": "resourceRuleCreate",
          "read_method": "resourceRuleRead",
          "update_method": "resourceRuleUpdate",
          "delete_method": "resourceRuleDelete"
        },
        "aws_waf_rule_group": {
          "create_method": "resourceRuleGroupCreate",
          "read_method": "resourceRuleGroupRead",
          "update_method": "resourceRuleGroupUpdate",
          "delete_method": "resourceRuleGroupDelete"
        },
        "aws_waf_size_constraint_set": {
          "create_method": "resourceSizeConstraintSetCreate",
          "read_method": "resourceSizeConstraintSetRead",
          "update_method": "resourceSizeConstraintSetUpdate",
          "delete_method": "resourceSizeConstraintSetDelete"
        },
        "aws_waf_sql_injection_match_set": {
          "create_method": "resourceSQLInjectionMatchSetCreate",
          "read_method": "resourceSQLInjectionMatchSetRead",
          "update_method": "resourceSQLInjectionMatchSetUpdate",
          "delete_method": "resourceSQLInjectionMatchSetDelete"
        },
        "aws_waf_web_acl": {
          "create_method": "resourceWebACLCreate",
          "read_method": "resourceWebACLRead",
          "update_method": "resourceWebACLUpdate",
          "delete_method": "resourceWebACLDelete"
        },
        "aws_waf_xss_match_set": {
          "create_method": "resourceXSSMatchSetCreate",
          "read_method": "resourceXSSMatchSetRead",
          "update_method": "resourceXSSMatchSetUpdate",
          "delete_method": "resourceXSSMatchSetDelete"
        }
      },
      "data_source_methods": {
        "aws_waf_ipset": {
          "read_method": "dataSourceIPSetRead"
        },
        "aws_waf_rate_based_rule": {
          "read_method": "dataSourceRateBasedRuleRead"
        },
        "aws_waf_rule": {
          "read_method": "dataSourceRuleRead"
        },
        "aws_waf_subscribed_rule_group": {
          "read_method": "dataSourceSubscribedRuleGroupRead"
        },
        "aws_waf_web_acl": {
          "read_method": "dataSourceWebACLRead"
        }
      }
    },
    {
      "service_name": "wafregional",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/wafregional",
      "aws_sdk_resources": {
        "aws_wafregional_byte_match_set": {
          "terraform_type": "aws_wafregional_byte_match_set",
          "factory_function": "resourceWafregionalByteMatchSet",
          "name": "Byte Match Set",
          "sdk_type": "sdk"
        },
        "aws_wafregional_geo_match_set": {
          "terraform_type": "aws_wafregional_geo_match_set",
          "factory_function": "resourceWafregionalGeoMatchSet",
          "name": "Geo Match Set",
          "sdk_type": "sdk"
        },
        "aws_wafregional_ipset": {
          "terraform_type": "aws_wafregional_ipset",
          "factory_function": "resourceWafregionalIpset",
          "name": "IPSet",
          "sdk_type": "sdk"
        },
        "aws_wafregional_rate_based_rule": {
          "terraform_type": "aws_wafregional_rate_based_rule",
          "factory_function": "resourceWafregionalRateBasedRule",
          "name": "Rate Based Rule",
          "sdk_type": "sdk"
        },
        "aws_wafregional_regex_match_set": {
          "terraform_type": "aws_wafregional_regex_match_set",
          "factory_function": "resourceWafregionalRegexMatchSet",
          "name": "Regex Match Set",
          "sdk_type": "sdk"
        },
        "aws_wafregional_regex_pattern_set": {
          "terraform_type": "aws_wafregional_regex_pattern_set",
          "factory_function": "resourceWafregionalRegexPatternSet",
          "name": "Regex Pattern Set",
          "sdk_type": "sdk"
        },
        "aws_wafregional_rule": {
          "terraform_type": "aws_wafregional_rule",
          "factory_function": "resourceWafregionalRule",
          "name": "Rule",
          "sdk_type": "sdk"
        },
        "aws_wafregional_rule_group": {
          "terraform_type": "aws_wafregional_rule_group",
          "factory_function": "resourceWafregionalRuleGroup",
          "name": "Rule Group",
          "sdk_type": "sdk"
        },
        "aws_wafregional_size_constraint_set": {
          "terraform_type": "aws_wafregional_size_constraint_set",
          "factory_function": "resourceWafregionalSizeConstraintSet",
          "name": "Size Constraint Set",
          "sdk_type": "sdk"
        },
        "aws_wafregional_sql_injection_match_set": {
          "terraform_type": "aws_wafregional_sql_injection_match_set",
          "factory_function": "resourceWafregionalSqlInjectionMatchSet",
          "name": "SQL Injection Match Set",
          "sdk_type": "sdk"
        },
        "aws_wafregional_web_acl": {
          "terraform_type": "aws_wafregional_web_acl",
          "factory_function": "resourceWafregionalWebAcl",
          "name": "Web ACL",
          "sdk_type": "sdk"
        },
        "aws_wafregional_web_acl_association": {
          "terraform_type": "aws_wafregional_web_acl_association",
          "factory_function": "resourceWafregionalWebAclAssociation",
          "name": "Web ACL Association",
          "sdk_type": "sdk"
        },
        "aws_wafregional_xss_match_set": {
          "terraform_type": "aws_wafregional_xss_match_set",
          "factory_function": "resourceWafregionalXssMatchSet",
          "name": "XSS Match Set",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_wafregional_ipset": {
          "terraform_type": "aws_wafregional_ipset",
          "factory_function": "dataSourceWafregionalIpset",
          "name": "IPSet",
          "sdk_type": "sdk"
        },
        "aws_wafregional_rate_based_rule": {
          "terraform_type": "aws_wafregional_rate_based_rule",
          "factory_function": "dataSourceWafregionalRateBasedRule",
          "name": "Rate Based Rule",
          "sdk_type": "sdk"
        },
        "aws_wafregional_rule": {
          "terraform_type": "aws_wafregional_rule",
          "factory_function": "dataSourceWafregionalRule",
          "name": "Rule",
          "sdk_type": "sdk"
        },
        "aws_wafregional_subscribed_rule_group": {
          "terraform_type": "aws_wafregional_subscribed_rule_group",
          "factory_function": "dataSourceWafregionalSubscribedRuleGroup",
          "name": "Subscribed Rule Group",
          "sdk_type": "sdk"
        },
        "aws_wafregional_web_acl": {
          "terraform_type": "aws_wafregional_web_acl",
          "factory_function": "dataSourceWafregionalWebAcl",
          "name": "Web ACL",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {},
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_crud_methods": {
        "aws_wafregional_byte_match_set": {
          "create_method": "resourceByteMatchSetCreate",
          "read_method": "resourceByteMatchSetRead",
          "update_method": "resourceByteMatchSetUpdate",
          "delete_method": "resourceByteMatchSetDelete"
        },
        "aws_wafregional_geo_match_set": {
          "create_method": "resourceGeoMatchSetCreate",
          "read_method": "resourceGeoMatchSetRead",
          "update_method": "resourceGeoMatchSetUpdate",
          "delete_method": "resourceGeoMatchSetDelete"
        },
        "aws_wafregional_ipset": {
          "create_method": "resourceIPSetCreate",
          "read_method": "resourceIPSetRead",
          "update_method": "resourceIPSetUpdate",
          "delete_method": "resourceIPSetDelete"
        },
        "aws_wafregional_rate_based_rule": {
          "create_method": "resourceRateBasedRuleCreate",
          "read_method": "resourceRateBasedRuleRead",
          "update_method": "resourceRateBasedRuleUpdate",
          "delete_method": "resourceRateBasedRuleDelete"
        },
        "aws_wafregional_regex_match_set": {
          "create_method": "resourceRegexMatchSetCreate",
          "read_method": "resourceRegexMatchSetRead",
          "update_method": "resourceRegexMatchSetUpdate",
          "delete_method": "resourceRegexMatchSetDelete"
        },
        "aws_wafregional_regex_pattern_set": {
          "create_method": "resourceRegexPatternSetCreate",
          "read_method": "resourceRegexPatternSetRead",
          "update_method": "resourceRegexPatternSetUpdate",
          "delete_method": "resourceRegexPatternSetDelete"
        },
        "aws_wafregional_rule": {
          "create_method": "resourceRuleCreate",
          "read_method": "resourceRuleRead",
          "update_method": "resourceRuleUpdate",
          "delete_method": "resourceRuleDelete"
        },
        "aws_wafregional_rule_group": {
          "create_method": "resourceRuleGroupCreate",
          "read_method": "resourceRuleGroupRead",
          "update_method": "resourceRuleGroupUpdate",
          "delete_method": "resourceRuleGroupDelete"
        },
        "aws_wafregional_size_constraint_set": {
          "create_method": "resourceSizeConstraintSetCreate",
          "read_method": "resourceSizeConstraintSetRead",
          "update_method": "resourceSizeConstraintSetUpdate",
          "delete_method": "resourceSizeConstraintSetDelete"
        },
        "aws_wafregional_sql_injection_match_set": {
          "create_method": "resourceSQLInjectionMatchSetCreate",
          "read_method": "resourceSQLInjectionMatchSetRead",
          "update_method": "resourceSQLInjectionMatchSetUpdate",
          "delete_method": "resourceSQLInjectionMatchSetDelete"
        },
        "aws_wafregional_web_acl": {
          "create_method": "resourceWebACLCreate",
          "read_method": "resourceWebACLRead",
          "update_method": "resourceWebACLUpdate",
          "delete_method": "resourceWebACLDelete"
        },
        "aws_wafregional_web_acl_association": {
          "create_method": "resourceWebACLAssociationCreate",
          "read_method": "resourceWebACLAssociationRead",
          "delete_method": "resourceWebACLAssociationDelete"
        },
        "aws_wafregional_xss_match_set": {
          "create_method": "resourceXSSMatchSetCreate",
          "read_method": "resourceXSSMatchSetRead",
          "update_method": "resourceXSSMatchSetUpdate",
          "delete_method": "resourceXSSMatchSetDelete"
        }
      },
      "data_source_methods": {
        "aws_wafregional_ipset": {
          "read_method": "dataSourceIPSetRead"
        },
        "aws_wafregional_rate_based_rule": {
          "read_method": "dataSourceRateBasedRuleRead"
        },
        "aws_wafregional_rule": {
          "read_method": "dataSourceRuleRead"
        },
        "aws_wafregional_subscribed_rule_group": {
          "read_method": "dataSourceSubscribedRuleGroupRead"
        },
        "aws_wafregional_web_acl": {
          "read_method": "dataSourceWebACLRead"
        }
      }
    },
    {
      "service_name": "wafv2",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/wafv2",
      "aws_sdk_resources": {
        "aws_wafv2_ip_set": {
          "terraform_type": "aws_wafv2_ip_set",
          "factory_function": "resourceWafv2IpSet",
          "name": "IP Set",
          "sdk_type": "sdk"
        },
        "aws_wafv2_regex_pattern_set": {
          "terraform_type": "aws_wafv2_regex_pattern_set",
          "factory_function": "resourceWafv2RegexPatternSet",
          "name": "Regex Pattern Set",
          "sdk_type": "sdk"
        },
        "aws_wafv2_rule_group": {
          "terraform_type": "aws_wafv2_rule_group",
          "factory_function": "resourceWafv2RuleGroup",
          "name": "Rule Group",
          "sdk_type": "sdk"
        },
        "aws_wafv2_web_acl": {
          "terraform_type": "aws_wafv2_web_acl",
          "factory_function": "resourceWafv2WebAcl",
          "name": "Web ACL",
          "sdk_type": "sdk"
        },
        "aws_wafv2_web_acl_association": {
          "terraform_type": "aws_wafv2_web_acl_association",
          "factory_function": "resourceWafv2WebAclAssociation",
          "name": "Web ACL Association",
          "sdk_type": "sdk"
        },
        "aws_wafv2_web_acl_logging_configuration": {
          "terraform_type": "aws_wafv2_web_acl_logging_configuration",
          "factory_function": "resourceWafv2WebAclLoggingConfiguration",
          "name": "Web ACL Logging Configuration",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_wafv2_ip_set": {
          "terraform_type": "aws_wafv2_ip_set",
          "factory_function": "dataSourceWafv2IpSet",
          "name": "IP Set",
          "sdk_type": "sdk"
        },
        "aws_wafv2_regex_pattern_set": {
          "terraform_type": "aws_wafv2_regex_pattern_set",
          "factory_function": "dataSourceWafv2RegexPatternSet",
          "name": "Regex Pattern Set",
          "sdk_type": "sdk"
        },
        "aws_wafv2_rule_group": {
          "terraform_type": "aws_wafv2_rule_group",
          "factory_function": "dataSourceWafv2RuleGroup",
          "name": "Rule Group",
          "sdk_type": "sdk"
        },
        "aws_wafv2_web_acl": {
          "terraform_type": "aws_wafv2_web_acl",
          "factory_function": "dataSourceWafv2WebAcl",
          "name": "Web ACL",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_wafv2_api_key": {
          "terraform_type": "aws_wafv2_api_key",
          "factory_function": "newWafv2ApiKeyResource",
          "name": "API Key",
          "sdk_type": "framework",
          "struct_type": "apiKeyResource"
        },
        "aws_wafv2_web_acl_rule_group_association": {
          "terraform_type": "aws_wafv2_web_acl_rule_group_association",
          "factory_function": "newWafv2WebAclRuleGroupAssociationResource",
          "name": "Web ACL Rule Group Association",
          "sdk_type": "framework",
          "struct_type": "resourceWebACLRuleGroupAssociation"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "apiKeyResource": "aws_wafv2_api_key",
        "resourceWebACLRuleGroupAssociation": "aws_wafv2_web_acl_rule_group_association"
      },
      "resource_crud_methods": {
        "aws_wafv2_ip_set": {
          "create_method": "resourceIPSetCreate",
          "read_method": "resourceIPSetRead",
          "update_method": "resourceIPSetUpdate",
          "delete_method": "resourceIPSetDelete"
        },
        "aws_wafv2_regex_pattern_set": {
          "create_method": "resourceRegexPatternSetCreate",
          "read_method": "resourceRegexPatternSetRead",
          "update_method": "resourceRegexPatternSetUpdate",
          "delete_method": "resourceRegexPatternSetDelete"
        },
        "aws_wafv2_rule_group": {
          "create_method": "resourceRuleGroupCreate",
          "read_method": "resourceRuleGroupRead",
          "update_method": "resourceRuleGroupUpdate",
          "delete_method": "resourceRuleGroupDelete"
        },
        "aws_wafv2_web_acl": {
          "create_method": "resourceWebACLCreate",
          "read_method": "resourceWebACLRead",
          "update_method": "resourceWebACLUpdate",
          "delete_method": "resourceWebACLDelete"
        },
        "aws_wafv2_web_acl_association": {
          "create_method": "resourceWebACLAssociationCreate",
          "read_method": "resourceWebACLAssociationRead",
          "delete_method": "resourceWebACLAssociationDelete"
        },
        "aws_wafv2_web_acl_logging_configuration": {
          "create_method": "resourceWebACLLoggingConfigurationPut",
          "read_method": "resourceWebACLLoggingConfigurationRead",
          "update_method": "resourceWebACLLoggingConfigurationPut",
          "delete_method": "resourceWebACLLoggingConfigurationDelete"
        }
      },
      "data_source_methods": {
        "aws_wafv2_ip_set": {
          "read_method": "dataSourceIPSetRead"
        },
        "aws_wafv2_regex_pattern_set": {
          "read_method": "dataSourceRegexPatternSetRead"
        },
        "aws_wafv2_rule_group": {
          "read_method": "dataSourceRuleGroupRead"
        },
        "aws_wafv2_web_acl": {
          "read_method": "dataSourceWebACLRead"
        }
      }
    },
    {
      "service_name": "workspaces",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/workspaces",
      "aws_sdk_resources": {
        "aws_workspaces_directory": {
          "terraform_type": "aws_workspaces_directory",
          "factory_function": "resourceWorkspacesDirectory",
          "name": "Directory",
          "sdk_type": "sdk"
        },
        "aws_workspaces_ip_group": {
          "terraform_type": "aws_workspaces_ip_group",
          "factory_function": "resourceWorkspacesIpGroup",
          "name": "IP Group",
          "sdk_type": "sdk"
        },
        "aws_workspaces_workspace": {
          "terraform_type": "aws_workspaces_workspace",
          "factory_function": "resourceWorkspacesWorkspace",
          "name": "Workspace",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {
        "aws_workspaces_bundle": {
          "terraform_type": "aws_workspaces_bundle",
          "factory_function": "dataSourceWorkspacesBundle",
          "name": "Bundle",
          "sdk_type": "sdk"
        },
        "aws_workspaces_directory": {
          "terraform_type": "aws_workspaces_directory",
          "factory_function": "dataSourceWorkspacesDirectory",
          "name": "Directory",
          "sdk_type": "sdk"
        },
        "aws_workspaces_image": {
          "terraform_type": "aws_workspaces_image",
          "factory_function": "dataSourceWorkspacesImage",
          "name": "Image",
          "sdk_type": "sdk"
        },
        "aws_workspaces_workspace": {
          "terraform_type": "aws_workspaces_workspace",
          "factory_function": "dataSourceWorkspacesWorkspace",
          "name": "Workspace",
          "sdk_type": "sdk"
        }
      },
      "aws_framework_resources": {
        "aws_workspaces_connection_alias": {
          "terraform_type": "aws_workspaces_connection_alias",
          "factory_function": "newWorkspacesConnectionAliasResource",
          "name": "Connection Alias",
          "sdk_type": "framework",
          "struct_type": "connectionAliasResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "connectionAliasResource": "aws_workspaces_connection_alias"
      },
      "resource_crud_methods": {
        "aws_workspaces_directory": {
          "create_method": "resourceDirectoryCreate",
          "read_method": "resourceDirectoryRead",
          "update_method": "resourceDirectoryUpdate",
          "delete_method": "resourceDirectoryDelete"
        },
        "aws_workspaces_ip_group": {
          "create_method": "resourceIPGroupCreate",
          "read_method": "resourceIPGroupRead",
          "update_method": "resourceIPGroupUpdate",
          "delete_method": "resourceIPGroupDelete"
        },
        "aws_workspaces_workspace": {
          "create_method": "resourceWorkspaceCreate",
          "read_method": "resourceWorkspaceRead",
          "update_method": "resourceWorkspaceUpdate",
          "delete_method": "resourceWorkspaceDelete"
        }
      },
      "data_source_methods": {
        "aws_workspaces_bundle": {
          "read_method": "dataSourceWorkspaceBundleRead"
        },
        "aws_workspaces_directory": {
          "read_method": "dataSourceDirectoryRead"
        },
        "aws_workspaces_image": {
          "read_method": "dataSourceImageRead"
        },
        "aws_workspaces_workspace": {
          "read_method": "dataSourceWorkspaceRead"
        }
      }
    },
    {
      "service_name": "workspacesweb",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/workspacesweb",
      "aws_sdk_resources": {},
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_workspacesweb_browser_settings": {
          "terraform_type": "aws_workspacesweb_browser_settings",
          "factory_function": "newWorkspaceswebBrowserSettingsResource",
          "name": "Browser Settings",
          "sdk_type": "framework",
          "struct_type": "browserSettingsResource"
        },
        "aws_workspacesweb_browser_settings_association": {
          "terraform_type": "aws_workspacesweb_browser_settings_association",
          "factory_function": "newWorkspaceswebBrowserSettingsAssociationResource",
          "name": "Browser Settings Association",
          "sdk_type": "framework",
          "struct_type": "browserSettingsAssociationResource"
        },
        "aws_workspacesweb_data_protection_settings": {
          "terraform_type": "aws_workspacesweb_data_protection_settings",
          "factory_function": "newWorkspaceswebDataProtectionSettingsResource",
          "name": "Data Protection Settings",
          "sdk_type": "framework",
          "struct_type": "dataProtectionSettingsResource"
        },
        "aws_workspacesweb_data_protection_settings_association": {
          "terraform_type": "aws_workspacesweb_data_protection_settings_association",
          "factory_function": "newWorkspaceswebDataProtectionSettingsAssociationResource",
          "name": "Data Protection Settings Association",
          "sdk_type": "framework",
          "struct_type": "dataProtectionSettingsAssociationResource"
        },
        "aws_workspacesweb_identity_provider": {
          "terraform_type": "aws_workspacesweb_identity_provider",
          "factory_function": "newWorkspaceswebIdentityProviderResource",
          "name": "Identity Provider",
          "sdk_type": "framework",
          "struct_type": "identityProviderResource"
        },
        "aws_workspacesweb_ip_access_settings": {
          "terraform_type": "aws_workspacesweb_ip_access_settings",
          "factory_function": "newWorkspaceswebIpAccessSettingsResource",
          "name": "IP Access Settings",
          "sdk_type": "framework",
          "struct_type": "ipAccessSettingsResource"
        },
        "aws_workspacesweb_ip_access_settings_association": {
          "terraform_type": "aws_workspacesweb_ip_access_settings_association",
          "factory_function": "newWorkspaceswebIpAccessSettingsAssociationResource",
          "name": "IP Access Settings Association",
          "sdk_type": "framework",
          "struct_type": "ipAccessSettingsAssociationResource"
        },
        "aws_workspacesweb_network_settings": {
          "terraform_type": "aws_workspacesweb_network_settings",
          "factory_function": "newWorkspaceswebNetworkSettingsResource",
          "name": "Network Settings",
          "sdk_type": "framework",
          "struct_type": "networkSettingsResource"
        },
        "aws_workspacesweb_network_settings_association": {
          "terraform_type": "aws_workspacesweb_network_settings_association",
          "factory_function": "newWorkspaceswebNetworkSettingsAssociationResource",
          "name": "Network Settings Association",
          "sdk_type": "framework",
          "struct_type": "networkSettingsAssociationResource"
        },
        "aws_workspacesweb_portal": {
          "terraform_type": "aws_workspacesweb_portal",
          "factory_function": "newWorkspaceswebPortalResource",
          "name": "Portal",
          "sdk_type": "framework",
          "struct_type": "portalResource"
        },
        "aws_workspacesweb_session_logger": {
          "terraform_type": "aws_workspacesweb_session_logger",
          "factory_function": "newWorkspaceswebSessionLoggerResource",
          "name": "Session Logger",
          "sdk_type": "framework",
          "struct_type": "sessionLoggerResource"
        },
        "aws_workspacesweb_session_logger_association": {
          "terraform_type": "aws_workspacesweb_session_logger_association",
          "factory_function": "newWorkspaceswebSessionLoggerAssociationResource",
          "name": "Session Logger Association",
          "sdk_type": "framework",
          "struct_type": "sessionLoggerAssociationResource"
        },
        "aws_workspacesweb_trust_store": {
          "terraform_type": "aws_workspacesweb_trust_store",
          "factory_function": "newWorkspaceswebTrustStoreResource",
          "name": "Trust Store",
          "sdk_type": "framework",
          "struct_type": "trustStoreResource"
        },
        "aws_workspacesweb_trust_store_association": {
          "terraform_type": "aws_workspacesweb_trust_store_association",
          "factory_function": "newWorkspaceswebTrustStoreAssociationResource",
          "name": "Trust Store Association",
          "sdk_type": "framework",
          "struct_type": "trustStoreAssociationResource"
        },
        "aws_workspacesweb_user_access_logging_settings": {
          "terraform_type": "aws_workspacesweb_user_access_logging_settings",
          "factory_function": "newWorkspaceswebUserAccessLoggingSettingsResource",
          "name": "User Access Logging Settings",
          "sdk_type": "framework",
          "struct_type": "userAccessLoggingSettingsResource"
        },
        "aws_workspacesweb_user_access_logging_settings_association": {
          "terraform_type": "aws_workspacesweb_user_access_logging_settings_association",
          "factory_function": "newWorkspaceswebUserAccessLoggingSettingsAssociationResource",
          "name": "User Access Logging Settings Association",
          "sdk_type": "framework",
          "struct_type": "userAccessLoggingSettingsAssociationResource"
        },
        "aws_workspacesweb_user_settings": {
          "terraform_type": "aws_workspacesweb_user_settings",
          "factory_function": "newWorkspaceswebUserSettingsResource",
          "name": "User Settings",
          "sdk_type": "framework",
          "struct_type": "userSettingsResource"
        },
        "aws_workspacesweb_user_settings_association": {
          "terraform_type": "aws_workspacesweb_user_settings_association",
          "factory_function": "newWorkspaceswebUserSettingsAssociationResource",
          "name": "User Settings Association",
          "sdk_type": "framework",
          "struct_type": "userSettingsAssociationResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "browserSettingsAssociationResource": "aws_workspacesweb_browser_settings_association",
        "browserSettingsResource": "aws_workspacesweb_browser_settings",
        "dataProtectionSettingsAssociationResource": "aws_workspacesweb_data_protection_settings_association",
        "dataProtectionSettingsResource": "aws_workspacesweb_data_protection_settings",
        "identityProviderResource": "aws_workspacesweb_identity_provider",
        "ipAccessSettingsAssociationResource": "aws_workspacesweb_ip_access_settings_association",
        "ipAccessSettingsResource": "aws_workspacesweb_ip_access_settings",
        "networkSettingsAssociationResource": "aws_workspacesweb_network_settings_association",
        "networkSettingsResource": "aws_workspacesweb_network_settings",
        "portalResource": "aws_workspacesweb_portal",
        "sessionLoggerAssociationResource": "aws_workspacesweb_session_logger_association",
        "sessionLoggerResource": "aws_workspacesweb_session_logger",
        "trustStoreAssociationResource": "aws_workspacesweb_trust_store_association",
        "trustStoreResource": "aws_workspacesweb_trust_store",
        "userAccessLoggingSettingsAssociationResource": "aws_workspacesweb_user_access_logging_settings_association",
        "userAccessLoggingSettingsResource": "aws_workspacesweb_user_access_logging_settings",
        "userSettingsAssociationResource": "aws_workspacesweb_user_settings_association",
        "userSettingsResource": "aws_workspacesweb_user_settings"
      }
    },
    {
      "service_name": "xray",
      "package_path": "github.com/hashicorp/terraform-provider-aws/internal/service/xray",
      "aws_sdk_resources": {
        "aws_xray_encryption_config": {
          "terraform_type": "aws_xray_encryption_config",
          "factory_function": "resourceXrayEncryptionConfig",
          "name": "Encryption Config",
          "sdk_type": "sdk"
        },
        "aws_xray_group": {
          "terraform_type": "aws_xray_group",
          "factory_function": "resourceXrayGroup",
          "name": "Group",
          "sdk_type": "sdk"
        },
        "aws_xray_sampling_rule": {
          "terraform_type": "aws_xray_sampling_rule",
          "factory_function": "resourceXraySamplingRule",
          "name": "Sampling Rule",
          "sdk_type": "sdk"
        }
      },
      "aws_sdk_data_sources": {},
      "aws_framework_resources": {
        "aws_xray_resource_policy": {
          "terraform_type": "aws_xray_resource_policy",
          "factory_function": "newXrayResourcePolicyResource",
          "name": "Resource Policy",
          "sdk_type": "framework",
          "struct_type": "resourcePolicyResource"
        }
      },
      "aws_framework_data_sources": {},
      "aws_ephemeral_resources": {},
      "resource_terraform_types": {
        "resourcePolicyResource": "aws_xray_resource_policy"
      },
      "resource_crud_methods": {
        "aws_xray_encryption_config": {
          "create_method": "resourceEncryptionPutConfig",
          "read_method": "resourceEncryptionConfigRead",
          "update_method": "resourceEncryptionPutConfig"
        },
        "aws_xray_group": {
          "create_method": "resourceGroupCreate",
          "read_method": "resourceGroupRead",
          "update_method": "resourceGroupUpdate",
          "delete_method": "resourceGroupDelete"
        },
        "aws_xray_sampling_rule": {
          "create_method": "resourceSamplingRuleCreate",
          "read_method": "resourceSamplingRuleRead",
          "update_method": "resourceSamplingRuleUpdate",
          "delete_method": "resourceSamplingRuleDelete"
        }
      }
    }
  ],
  "statistics": {
    "service_count": 234,
    "total_data_sources": 626,
    "total_resources": 1554,
    "legacy_resources": 0,
    "modern_resources": 0,
    "ephemeral_resources": 3
  }
}