package github.com/hashicorp/terraform-provider-aws/internal/tfresource
import (
	"context"
	"fmt"
	"math/rand"
	"time"

	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	sdkretry "github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-provider-aws/internal/backoff"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/retry"
)
func Retry(ctx context.Context, timeout time.Duration, f func(context.Context) *RetryError, optFns ...OptionsFunc) error {
	options := Options{
		MinPollInterval: 500 * time.Millisecond, //nolint:mnd // 500ms is the Plugin SDKv2 default
	}
	for _, fn := range optFns {
		fn(&options)
	}

	_, err := retryWhen(ctx, timeout,
		func(ctx context.Context) (any, error) {
			return nil, f(ctx)
		},
		func(err error) (bool, error) {
			if err, ok := errs.As[*RetryError](err); ok {
				if err != nil {
					return err.isRetryable, err.err
				}
				return false, nil
			}

			return false, err
		},
		backoff.WithDelay(backoff.SDKv2HelperRetryCompatibleDelay(options.Delay, options.PollInterval, options.MinPollInterval)),
	)

	return err
}
