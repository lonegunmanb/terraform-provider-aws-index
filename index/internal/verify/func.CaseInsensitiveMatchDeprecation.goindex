package github.com/hashicorp/terraform-provider-aws/internal/verify
import (
	"encoding/json"
	"fmt"
	"net"
	"regexp"
	"slices"
	"strconv"
	"strings"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws/arn"
	basevalidation "github.com/hashicorp/aws-sdk-go-base/v2/validation"
	"github.com/hashicorp/go-cty/cty"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/structure"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	tfmaps "github.com/hashicorp/terraform-provider-aws/internal/maps"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/types/timestamp"
)
func CaseInsensitiveMatchDeprecation(valid []string) schema.SchemaValidateDiagFunc {
	return func(v any, path cty.Path) diag.Diagnostics {
		var diags diag.Diagnostics
		s := v.(string)

		for _, item := range valid {
			if s != item && strings.EqualFold(s, item) {
				diags = append(diags, diag.Diagnostic{
					Severity: diag.Warning,
					Summary:  "Case Insensitive Matching Deprecated",
					Detail: fmt.Sprintf("Expected an exact match to %q, got %q. ", item, v) +
						"Case insensitive matching is deprecated for this argument. Update the value " +
						"to an exact match to suppress this warning and avoid breaking changes " +
						"in a future major version.",
					AttributePath: path,
				})
			}
		}

		return diags
	}
}
