package github.com/hashicorp/terraform-provider-aws/internal/verify
import (
	"bytes"
	"encoding/json"
	"fmt"
	"log"
	"reflect"
	"strings"

	"github.com/YakDriver/regexache"
	awspolicy "github.com/hashicorp/awspolicyequivalence"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/structure"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
)
func LegacyPolicyNormalize(policy any) (string, error) {
	if policy == nil || policy.(string) == "" {
		return "", nil
	}

	np, err := structure.NormalizeJsonString(policy)
	if err != nil {
		return policy.(string), fmt.Errorf("legacy policy (%s) is invalid JSON: %w", policy, err)
	}

	m := regexache.MustCompile(`(?s)^(\{\n?)(.*?)(,\s*)?(  )?("Version":\s*"2012-10-17")(,)?(\n)?(.*?)(\})`)

	n := m.ReplaceAllString(np, `$1$4$5$3$2$6$7$8$9`)

	_, err = structure.NormalizeJsonString(n)
	if err != nil {
		return policy.(string), fmt.Errorf("LegacyPolicyNormalize created a policy (%s) that is invalid JSON: %w", n, err)
	}

	return n, nil
}
