package github.com/hashicorp/terraform-provider-aws/internal/acctest
import (
	"crypto/ecdsa"
	"crypto/elliptic"
	"crypto/md5"
	"crypto/rand"
	"crypto/rsa"
	"crypto/sha1"
	"crypto/x509"
	"crypto/x509/pkix"
	"encoding/hex"
	"encoding/pem"
	"math/big"
	"strings"
	"testing"
	"time"
)
func TLSRSAX509CertificateRequestPEM(t *testing.T, keyBits int, commonName string) (string, string) {
	t.Helper()

	keyBytes, err := rsa.GenerateKey(rand.Reader, keyBits)

	if err != nil {
		t.Fatal(err)
	}

	csr := x509.CertificateRequest{
		Subject: pkix.Name{
			CommonName:   commonName,
			Organization: []string{"ACME Examples, Inc"},
		},
		SignatureAlgorithm: x509.SHA256WithRSA,
	}

	csrBytes, err := x509.CreateCertificateRequest(rand.Reader, &csr, keyBytes)

	if err != nil {
		t.Fatal(err)
	}

	csrBlock := &pem.Block{
		Bytes: csrBytes,
		Type:  PEMBlockTypeCertificateRequest,
	}

	keyBlock := &pem.Block{
		Bytes: x509.MarshalPKCS1PrivateKey(keyBytes),
		Type:  PEMBlockTypeRSAPrivateKey,
	}

	return string(pem.EncodeToMemory(csrBlock)), string(pem.EncodeToMemory(keyBlock))
}
