package github.com/hashicorp/terraform-provider-aws/internal/acctest
import (
	"context"
	"fmt"
	"log"
	"strings"

	"github.com/hashicorp/terraform-plugin-framework/path"
	fwresource "github.com/hashicorp/terraform-plugin-framework/resource"
	rschema "github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/tfsdk"
	"github.com/hashicorp/terraform-plugin-go/tftypes"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
	"github.com/hashicorp/terraform-plugin-testing/terraform"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/fwdiag"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func rootStringStateFunc() func(ctx context.Context, state *tfsdk.State, is *terraform.InstanceState) error {
	return func(ctx context.Context, state *tfsdk.State, is *terraform.InstanceState) error {
		for name, v := range is.Attributes {
			if name == "%" || strings.Contains(name, ".") {
				continue
			}

			if err := fwdiag.DiagnosticsError(state.SetAttribute(ctx, path.Root(name), v)); err != nil {
				log.Printf("[WARN] %s(%s): %s", name, v, err)
			}
		}
		return nil
	}
}
