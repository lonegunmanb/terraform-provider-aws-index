package github.com/hashicorp/terraform-provider-aws/internal/function
import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws/arn"
	"github.com/hashicorp/terraform-plugin-framework/attr"
	"github.com/hashicorp/terraform-plugin-framework/function"
	"github.com/hashicorp/terraform-plugin-framework/types"
)
func (f arnParseFunction) Run(ctx context.Context, req function.RunRequest, resp *function.RunResponse) {
	var arg string

	resp.Error = function.ConcatFuncErrors(req.Arguments.Get(ctx, &arg))
	if resp.Error != nil {
		return
	}

	parts, err := arn.Parse(arg)
	if err != nil {
		resp.Error = function.ConcatFuncErrors(resp.Error, function.NewFuncError(err.Error()))
		return
	}

	value := map[string]attr.Value{
		"partition":  types.StringValue(parts.Partition),
		"service":    types.StringValue(parts.Service),
		"region":     types.StringValue(parts.Region),
		"account_id": types.StringValue(parts.AccountID),
		"resource":   types.StringValue(parts.Resource),
	}

	result, d := types.ObjectValue(arnParseResultAttrTypes, value)
	if d.HasError() {
		resp.Error = function.ConcatFuncErrors(resp.Error, function.FuncErrorFromDiags(ctx, d))
		return
	}

	resp.Error = function.ConcatFuncErrors(resp.Result.Set(ctx, result))
}
