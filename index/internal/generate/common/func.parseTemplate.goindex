package github.com/hashicorp/terraform-provider-aws/internal/generate/common
import (
	"bytes"
	"fmt"
	"go/format"
	"maps"
	"os"
	"os/exec"
	"path"
	"strings"
	"text/template"
	"unicode"
	"unicode/utf8"

	"github.com/hashicorp/cli"
	"golang.org/x/text/cases"
	"golang.org/x/text/language"
)
func parseTemplate(templateName, templateBody string, templateData any, funcMaps ...template.FuncMap) ([]byte, error) {
	funcMap := template.FuncMap{
		// FirstUpper returns a string with the first character as upper case.
		"FirstUpper": func(s string) string {
			if s == "" {
				return ""
			}
			r, n := utf8.DecodeRuneInString(s)
			return string(unicode.ToUpper(r)) + s[n:]
		},
		// Title returns a string with the first character of each word as upper case.
		"Title": cases.Title(language.Und, cases.NoLower).String,
	}
	for _, v := range funcMaps {
		maps.Copy(funcMap, v) // Extras overwrite defaults.
	}
	tmpl, err := template.New(templateName).Funcs(funcMap).Parse(templateBody)

	if err != nil {
		return nil, fmt.Errorf("parsing function template: %w", err)
	}

	return executeTemplate(tmpl, templateData)
}
