package github.com/hashicorp/terraform-provider-aws/internal/generate/common
import (
	"bytes"
	"fmt"
	"go/format"
	"maps"
	"os"
	"os/exec"
	"path"
	"strings"
	"text/template"
	"unicode"
	"unicode/utf8"

	"github.com/hashicorp/cli"
	"golang.org/x/text/cases"
	"golang.org/x/text/language"
)
func (d *fileDestination) Write() error {
	var flags int
	if d.append {
		flags = os.O_APPEND | os.O_CREATE | os.O_WRONLY
	} else {
		flags = os.O_TRUNC | os.O_CREATE | os.O_WRONLY
	}

	f, err := os.OpenFile(d.filename, flags, 0644) //nolint:mnd // good protection for new files
	if err != nil {
		return fmt.Errorf("opening file (%s): %w", d.filename, err)
	}
	defer f.Close()

	content := d.buffer.String()
	if d.writeFormatter != nil {
		formattedContent, err := d.writeFormatter([]byte(content))
		if err != nil {
			return fmt.Errorf("formatting written template:\n%s\n%w", content, err)
		}
		content = string(formattedContent)
	}

	_, err = f.WriteString(content)
	if err != nil {
		return fmt.Errorf("writing to file (%s): %w", d.filename, err)
	}

	return nil
}
