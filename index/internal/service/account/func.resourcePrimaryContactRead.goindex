package github.com/hashicorp/terraform-provider-aws/internal/service/account
import (
	"context"
	"log"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/account"
	"github.com/aws/aws-sdk-go-v2/service/account/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/retry"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func resourcePrimaryContactRead(ctx context.Context, d *schema.ResourceData, meta any) diag.Diagnostics {
	var diags diag.Diagnostics

	conn := meta.(*conns.AWSClient).AccountClient(ctx)

	contactInformation, err := findContactInformation(ctx, conn, d.Get(names.AttrAccountID).(string))

	if !d.IsNewResource() && retry.NotFound(err) {
		log.Printf("[WARN] Account Primary Contact (%s) not found, removing from state", d.Id())
		d.SetId("")
		return diags
	}

	if err != nil {
		return sdkdiag.AppendErrorf(diags, "reading Account Primary Contact (%s): %s", d.Id(), err)
	}

	d.Set(names.AttrAccountID, d.Get(names.AttrAccountID))
	d.Set("address_line_1", contactInformation.AddressLine1)
	d.Set("address_line_2", contactInformation.AddressLine2)
	d.Set("address_line_3", contactInformation.AddressLine3)
	d.Set("city", contactInformation.City)
	d.Set("company_name", contactInformation.CompanyName)
	d.Set("country_code", contactInformation.CountryCode)
	d.Set("district_or_county", contactInformation.DistrictOrCounty)
	d.Set("full_name", contactInformation.FullName)
	d.Set("phone_number", contactInformation.PhoneNumber)
	d.Set("postal_code", contactInformation.PostalCode)
	d.Set("state_or_region", contactInformation.StateOrRegion)
	d.Set("website_url", contactInformation.WebsiteUrl)

	return diags
}
