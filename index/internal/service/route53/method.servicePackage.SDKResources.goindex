package github.com/hashicorp/terraform-provider-aws/internal/service/route53
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/service/route53"
	"github.com/hashicorp/aws-sdk-go-base/v2/endpoints"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) SDKResources(ctx context.Context) []*inttypes.ServicePackageSDKResource {
	return []*inttypes.ServicePackageSDKResource{
		{
			Factory:  resourceDelegationSet,
			TypeName: "aws_route53_delegation_set",
			Name:     "Reusable Delegation Set",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  resourceHealthCheck,
			TypeName: "aws_route53_health_check",
			Name:     "Health Check",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrID,
				ResourceType:        "healthcheck",
			}),
			Region: unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  resourceHostedZoneDNSSEC,
			TypeName: "aws_route53_hosted_zone_dnssec",
			Name:     "Hosted Zone DNSSEC",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  resourceKeySigningKey,
			TypeName: "aws_route53_key_signing_key",
			Name:     "Key Signing Key",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  resourceQueryLog,
			TypeName: "aws_route53_query_log",
			Name:     "Query Logging Config",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  resourceRecord,
			TypeName: "aws_route53_record",
			Name:     "Record",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
			Identity: inttypes.GlobalParameterizedIdentity([]inttypes.IdentityAttribute{
				inttypes.StringIdentityAttribute("zone_id", true),
				inttypes.StringIdentityAttribute(names.AttrName, true),
				inttypes.StringIdentityAttribute(names.AttrType, true),
				inttypes.StringIdentityAttribute("set_identifier", false),
			},
				inttypes.WithMutableIdentity(),
			),
			Import: inttypes.SDKv2Import{
				WrappedImport: true,
				ImportID:      recordImportID{},
			},
		},
		{
			Factory:  resourceTrafficPolicy,
			TypeName: "aws_route53_traffic_policy",
			Name:     "Traffic Policy",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  resourceTrafficPolicyInstance,
			TypeName: "aws_route53_traffic_policy_instance",
			Name:     "Traffic Policy Instance",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  resourceVPCAssociationAuthorization,
			TypeName: "aws_route53_vpc_association_authorization",
			Name:     "VPC Association Authorization",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  resourceZone,
			TypeName: "aws_route53_zone",
			Name:     "Hosted Zone",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: "zone_id",
				ResourceType:        "hostedzone",
			}),
			Region: unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  resourceZoneAssociation,
			TypeName: "aws_route53_zone_association",
			Name:     "Zone Association",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
	}
}
