package github.com/hashicorp/terraform-provider-aws/internal/service/route53
import (
	"context"
	"encoding/json"
	"strconv"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandDataTrafficPolicyRuleDoc(tfMap map[string]any) *trafficPolicyRule {
	if tfMap == nil {
		return nil
	}

	apiObject := &trafficPolicyRule{}

	if v, ok := tfMap[names.AttrType]; ok && v.(string) != "" {
		apiObject.RuleType = v.(string)
	}
	if v, ok := tfMap["primary"]; ok && len(v.([]any)) > 0 {
		apiObject.Primary = expandDataTrafficPolicyFailOverDoc(v.([]any))
	}
	if v, ok := tfMap["secondary"]; ok && len(v.([]any)) > 0 {
		apiObject.Secondary = expandDataTrafficPolicyFailOverDoc(v.([]any))
	}
	if v, ok := tfMap[names.AttrLocation]; ok && len(v.(*schema.Set).List()) > 0 {
		apiObject.Locations = expandDataTrafficPolicyLocationsDoc(v.(*schema.Set).List())
	}
	if v, ok := tfMap["geo_proximity_location"]; ok && len(v.(*schema.Set).List()) > 0 {
		apiObject.GeoProximityLocations = expandDataTrafficPolicyProximitiesDoc(v.(*schema.Set).List())
	}
	if v, ok := tfMap[names.AttrRegion]; ok && len(v.(*schema.Set).List()) > 0 {
		apiObject.Regions = expandDataTrafficPolicyRegionsDoc(v.(*schema.Set).List())
	}
	if v, ok := tfMap["items"]; ok && len(v.(*schema.Set).List()) > 0 {
		apiObject.Items = expandDataTrafficPolicyItemsDoc(v.(*schema.Set).List())
	}

	return apiObject
}
