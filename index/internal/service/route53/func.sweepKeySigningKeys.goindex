package github.com/hashicorp/terraform-provider-aws/internal/service/route53
import (
	"fmt"
	"log"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/route53"
	"github.com/hashicorp/aws-sdk-go-base/v2/endpoints"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep/awsv2"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func sweepKeySigningKeys(region string) error {
	ctx := sweep.Context(region)
	client, err := sweep.SharedRegionalSweepClient(ctx, region)
	if err != nil {
		return fmt.Errorf("getting client: %w", err)
	}
	conn := client.Route53Client(ctx)
	input := &route53.ListHostedZonesInput{}
	sweepResources := make([]sweep.Sweepable, 0)

	pages := route53.NewListHostedZonesPaginator(conn, input)
	for pages.HasMorePages() {
		page, err := pages.NextPage(ctx)

		if awsv2.SkipSweepError(err) {
			log.Printf("[WARN] Skipping Route53 Key-Signing Key sweep for %s: %s", region, err)
			return nil
		}

		if err != nil {
			return fmt.Errorf("listing Route 53 Hosted Zones (%s): %w", region, err)
		}

	MAIN:
		for _, v := range page.HostedZones {
			zoneID := aws.ToString(v.Id)

			for _, domain := range hostedZonesToPreserve() {
				if strings.Contains(aws.ToString(v.Name), domain) {
					log.Printf("[DEBUG] Skipping Route53 Hosted Zone (%s): %s", domain, zoneID)
					continue MAIN
				}
			}

			output, err := findHostedZoneDNSSECByZoneID(ctx, conn, zoneID)

			if err != nil {
				continue
			}

			for _, v := range output.KeySigningKeys {
				r := resourceKeySigningKey()
				d := r.Data(nil)
				d.SetId(zoneID)
				d.Set(names.AttrHostedZoneID, zoneID)
				d.Set(names.AttrName, v.Name)
				d.Set(names.AttrStatus, v.Status)

				sweepResources = append(sweepResources, sweep.NewSweepResource(r, d, client))
			}
		}
	}

	err = sweep.SweepOrchestrator(ctx, sweepResources)

	if err != nil {
		return fmt.Errorf("sweeping Route 53 Key-Signing Keys (%s): %w", region, err)
	}

	return nil
}
