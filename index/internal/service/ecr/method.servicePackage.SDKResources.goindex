package github.com/hashicorp/terraform-provider-aws/internal/service/ecr
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/service/ecr"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) SDKResources(ctx context.Context) []*inttypes.ServicePackageSDKResource {
	return []*inttypes.ServicePackageSDKResource{
		{
			Factory:  resourceLifecyclePolicy,
			TypeName: "aws_ecr_lifecycle_policy",
			Name:     "Lifecycle Policy",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourcePullThroughCacheRule,
			TypeName: "aws_ecr_pull_through_cache_rule",
			Name:     "Pull Through Cache Rule",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceRegistryPolicy,
			TypeName: "aws_ecr_registry_policy",
			Name:     "Registry Policy",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceRegistryScanningConfiguration,
			TypeName: "aws_ecr_registry_scanning_configuration",
			Name:     "Registry Scanning Configuration",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceReplicationConfiguration,
			TypeName: "aws_ecr_replication_configuration",
			Name:     "Replication Configuration",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceRepository,
			TypeName: "aws_ecr_repository",
			Name:     "Repository",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceRepositoryCreationTemplate,
			TypeName: "aws_ecr_repository_creation_template",
			Name:     "Repository Creation Template",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceRepositoryPolicy,
			TypeName: "aws_ecr_repository_policy",
			Name:     "Repsitory Policy",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
	}
}
