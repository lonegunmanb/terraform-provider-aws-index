package github.com/hashicorp/terraform-provider-aws/internal/service/ecr
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ecr"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) FrameworkDataSources(ctx context.Context) []*inttypes.ServicePackageFrameworkDataSource {
	return []*inttypes.ServicePackageFrameworkDataSource{
		{
			Factory:  newImagesDataSource,
			TypeName: "aws_ecr_images",
			Name:     "Images",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newLifecyclePolicyDocumentDataSource,
			TypeName: "aws_ecr_lifecycle_policy_document",
			Name:     "Lifecycle Policy Document",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  newRepositoriesDataSource,
			TypeName: "aws_ecr_repositories",
			Name:     "Repositories",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
	}
}
