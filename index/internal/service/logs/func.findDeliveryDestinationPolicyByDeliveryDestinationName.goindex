package github.com/hashicorp/terraform-provider-aws/internal/service/logs
import (
	"context"
	"fmt"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cloudwatchlogs"
	awstypes "github.com/aws/aws-sdk-go-v2/service/cloudwatchlogs/types"
	"github.com/hashicorp/terraform-plugin-framework/path"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/fwdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwflex "github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/retry"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
)
func findDeliveryDestinationPolicyByDeliveryDestinationName(ctx context.Context, conn *cloudwatchlogs.Client, name string) (*awstypes.Policy, error) {
	input := cloudwatchlogs.GetDeliveryDestinationPolicyInput{
		DeliveryDestinationName: aws.String(name),
	}
	output, err := findDeliveryDestinationPolicy(ctx, conn, &input)

	if err != nil {
		return nil, err
	}

	if output.DeliveryDestinationPolicy == nil {
		return nil, tfresource.NewEmptyResultError(input)
	}

	return output, err
}
