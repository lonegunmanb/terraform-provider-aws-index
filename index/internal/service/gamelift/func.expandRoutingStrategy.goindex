package github.com/hashicorp/terraform-provider-aws/internal/service/gamelift
import (
	"context"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/gamelift"
	awstypes "github.com/aws/aws-sdk-go-v2/service/gamelift/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandRoutingStrategy(tfList []any) *awstypes.RoutingStrategy {
	if len(tfList) < 1 {
		return nil
	}

	tfMap := tfList[0].(map[string]any)

	apiObject := &awstypes.RoutingStrategy{
		Type: awstypes.RoutingStrategyType(tfMap[names.AttrType].(string)),
	}

	if v, ok := tfMap["fleet_id"].(string); ok && len(v) > 0 {
		apiObject.FleetId = aws.String(v)
	}

	if v, ok := tfMap[names.AttrMessage].(string); ok && len(v) > 0 {
		apiObject.Message = aws.String(v)
	}

	return apiObject
}
