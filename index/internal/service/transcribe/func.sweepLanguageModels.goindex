package github.com/hashicorp/terraform-provider-aws/internal/service/transcribe
import (
	"fmt"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/transcribe"
	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep/awsv2"
)
func sweepLanguageModels(region string) error {
	ctx := sweep.Context(region)
	client, err := sweep.SharedRegionalSweepClient(ctx, region)
	if err != nil {
		return fmt.Errorf("getting client: %w", err)
	}

	conn := client.TranscribeClient(ctx)
	sweepResources := make([]sweep.Sweepable, 0)
	in := &transcribe.ListLanguageModelsInput{}

	pages := transcribe.NewListLanguageModelsPaginator(conn, in)

	for pages.HasMorePages() {
		page, err := pages.NextPage(ctx)

		if awsv2.SkipSweepError(err) {
			log.Printf("[WARN] Skipping Transcribe Language Models sweep for %s: %s", region, err)
			return nil
		}

		if err != nil {
			return fmt.Errorf("error retrieving Transcribe Language Models: %w", err)
		}

		for _, model := range page.Models {
			name := aws.ToString(model.ModelName)
			log.Printf("[INFO] Deleting Transcribe Language Model: %s", name)

			r := ResourceLanguageModel()
			d := r.Data(nil)
			d.SetId(name)

			sweepResources = append(sweepResources, sweep.NewSweepResource(r, d, client))
		}
	}

	if err := sweep.SweepOrchestrator(ctx, sweepResources); err != nil {
		return fmt.Errorf("error sweeping Transcribe Language Models for %s: %w", region, err)
	}

	return nil
}
