package github.com/hashicorp/terraform-provider-aws/internal/service/transcribe
import (
	"context"
	"errors"
	"fmt"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/transcribe"
	awstypes "github.com/aws/aws-sdk-go-v2/service/transcribe/types"
	"github.com/hashicorp/terraform-plugin-framework/action"
	"github.com/hashicorp/terraform-plugin-framework/action/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/actionwait"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (a *startTranscriptionJobAction) Schema(ctx context.Context, req action.SchemaRequest, resp *action.SchemaResponse) {
	resp.Schema = schema.Schema{
		Description: "Starts an Amazon Transcribe transcription job to transcribe audio from a media file. The media file must be uploaded to an Amazon S3 bucket before starting the transcription job.",
		Attributes: map[string]schema.Attribute{
			"transcription_job_name": schema.StringAttribute{
				Description: "A unique name for the transcription job within your AWS account.",
				Required:    true,
			},
			"media_file_uri": schema.StringAttribute{
				Description: "The Amazon S3 location of the media file to transcribe (e.g., s3://bucket-name/file.mp3).",
				Required:    true,
			},
			names.AttrLanguageCode: schema.StringAttribute{
				CustomType:  fwtypes.StringEnumType[awstypes.LanguageCode](),
				Description: "The language code for the language used in the input media file. Required if identify_language and identify_multiple_languages are both false.",
				Optional:    true,
			},
			"identify_language": schema.BoolAttribute{
				Description: "Enable automatic language identification for single-language media files. Cannot be used with identify_multiple_languages.",
				Optional:    true,
			},
			"identify_multiple_languages": schema.BoolAttribute{
				Description: "Enable automatic language identification for multi-language media files. Cannot be used with identify_language.",
				Optional:    true,
			},
			"media_format": schema.StringAttribute{
				CustomType:  fwtypes.StringEnumType[awstypes.MediaFormat](),
				Description: "The format of the input media file. If not specified, Amazon Transcribe will attempt to determine the format automatically.",
				Optional:    true,
			},
			"media_sample_rate_hertz": schema.Int64Attribute{
				Description: "The sample rate of the input media file in Hertz. If not specified, Amazon Transcribe will attempt to determine the sample rate automatically.",
				Optional:    true,
			},
			"output_bucket_name": schema.StringAttribute{
				Description: "The name of the Amazon S3 bucket where you want your transcription output stored. If not specified, output is stored in a service-managed bucket.",
				Optional:    true,
			},
			"output_key": schema.StringAttribute{
				Description: "The Amazon S3 object key for your transcription output. If not specified, a default key is generated.",
				Optional:    true,
			},
			names.AttrTimeout: schema.Int64Attribute{
				Description: "Maximum time in seconds to wait for the transcription job to start. Defaults to 300 seconds (5 minutes).",
				Optional:    true,
			},
		},
	}
}
