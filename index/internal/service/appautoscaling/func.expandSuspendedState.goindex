package github.com/hashicorp/terraform-provider-aws/internal/service/appautoscaling
import (
	"context"
	"fmt"
	"log"
	"strings"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/applicationautoscaling"
	awstypes "github.com/aws/aws-sdk-go-v2/service/applicationautoscaling/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandSuspendedState(tfList []any) *awstypes.SuspendedState {
	if len(tfList) == 0 || tfList[0] == nil {
		return nil
	}

	apiObject := &awstypes.SuspendedState{}
	tfMap := tfList[0].(map[string]any)

	if v, ok := tfMap["dynamic_scaling_in_suspended"]; ok {
		apiObject.DynamicScalingInSuspended = aws.Bool(v.(bool))
	}
	if v, ok := tfMap["dynamic_scaling_out_suspended"]; ok {
		apiObject.DynamicScalingOutSuspended = aws.Bool(v.(bool))
	}
	if v, ok := tfMap["scheduled_scaling_suspended"]; ok {
		apiObject.ScheduledScalingSuspended = aws.Bool(v.(bool))
	}

	return apiObject
}
