package github.com/hashicorp/terraform-provider-aws/internal/service/appautoscaling
import (
	"context"
	"fmt"
	"log"
	"strings"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/applicationautoscaling"
	awstypes "github.com/aws/aws-sdk-go-v2/service/applicationautoscaling/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenSuspendedState(apiObject *awstypes.SuspendedState) []any {
	if apiObject == nil {
		return []any{}
	}

	tfMap := make(map[string]any)

	if v := apiObject.DynamicScalingInSuspended; v != nil {
		tfMap["dynamic_scaling_in_suspended"] = aws.ToBool(v)
	}
	if v := apiObject.DynamicScalingOutSuspended; v != nil {
		tfMap["dynamic_scaling_out_suspended"] = aws.ToBool(v)
	}
	if v := apiObject.ScheduledScalingSuspended; v != nil {
		tfMap["scheduled_scaling_suspended"] = aws.ToBool(v)
	}

	return []any{tfMap}
}
