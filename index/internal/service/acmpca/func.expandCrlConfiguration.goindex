package github.com/hashicorp/terraform-provider-aws/internal/service/acmpca
import (
	"context"
	"errors"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/acmpca"
	"github.com/aws/aws-sdk-go-v2/service/acmpca/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/provider/sdkv2/importer"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandCrlConfiguration(l []any) *types.CrlConfiguration {
	if len(l) == 0 {
		return nil
	}

	m := l[0].(map[string]any)

	crlEnabled := m[names.AttrEnabled].(bool)

	config := &types.CrlConfiguration{
		Enabled: aws.Bool(crlEnabled),
	}

	if crlEnabled {
		if v, ok := m["custom_cname"]; ok && v.(string) != "" {
			config.CustomCname = aws.String(v.(string))
		}
		if v, ok := m["expiration_in_days"]; ok && v.(int) > 0 {
			config.ExpirationInDays = aws.Int32(int32(v.(int)))
		}
		if v, ok := m[names.AttrS3BucketName]; ok && v.(string) != "" {
			config.S3BucketName = aws.String(v.(string))
		}
		if v, ok := m["s3_object_acl"]; ok && v.(string) != "" {
			config.S3ObjectAcl = types.S3ObjectAcl(v.(string))
		}
	}

	return config
}
