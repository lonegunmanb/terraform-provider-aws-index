package github.com/hashicorp/terraform-provider-aws/internal/service/acmpca
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/acmpca"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) SDKResources(ctx context.Context) []*inttypes.ServicePackageSDKResource {
	return []*inttypes.ServicePackageSDKResource{
		{
			Factory:  resourceCertificate,
			TypeName: "aws_acmpca_certificate",
			Name:     "Certificate",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
			Identity: inttypes.RegionalARNIdentity(
				inttypes.WithIdentityDuplicateAttrs(names.AttrID),
				inttypes.WithV6_0SDKv2Fix(),
			),
			Import: inttypes.SDKv2Import{
				CustomImport: true,
			},
		},
		{
			Factory:  resourceCertificateAuthority,
			TypeName: "aws_acmpca_certificate_authority",
			Name:     "Certificate Authority",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
			Identity: inttypes.RegionalARNIdentity(
				inttypes.WithIdentityDuplicateAttrs(names.AttrID),
				inttypes.WithV6_0SDKv2Fix(),
			),
			Import: inttypes.SDKv2Import{
				CustomImport: true,
			},
		},
		{
			Factory:  resourceCertificateAuthorityCertificate,
			TypeName: "aws_acmpca_certificate_authority_certificate",
			Name:     "Certificate Authority Certificate",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
			Identity: inttypes.RegionalARNIdentityNamed("certificate_authority_arn",
				inttypes.WithIdentityDuplicateAttrs(names.AttrID),
				inttypes.WithV6_0SDKv2Fix(),
			),
			Import: inttypes.SDKv2Import{
				WrappedImport: true,
			},
		},
		{
			Factory:  resourcePermission,
			TypeName: "aws_acmpca_permission",
			Name:     "Permission",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourcePolicy,
			TypeName: "aws_acmpca_policy",
			Name:     "Policy",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
			Identity: inttypes.RegionalARNIdentityNamed(names.AttrResourceARN,
				inttypes.WithIdentityDuplicateAttrs(names.AttrID),
				inttypes.WithV6_0SDKv2Fix(),
			),
			Import: inttypes.SDKv2Import{
				WrappedImport: true,
			},
		},
	}
}
