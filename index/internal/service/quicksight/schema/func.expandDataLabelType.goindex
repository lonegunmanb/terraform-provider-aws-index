package github.com/hashicorp/terraform-provider-aws/internal/service/quicksight/schema
import (
	"sync"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/quicksight/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandDataLabelType(tfMap map[string]any) *awstypes.DataLabelType {
	if tfMap == nil {
		return nil
	}

	apiObject := &awstypes.DataLabelType{}

	if v, ok := tfMap["data_path_label_type"].([]any); ok && len(v) > 0 {
		apiObject.DataPathLabelType = expandDataPathLabelType(v)
	}
	if v, ok := tfMap["field_label_type"].([]any); ok && len(v) > 0 {
		apiObject.FieldLabelType = expandFieldLabelType(v)
	}
	if v, ok := tfMap["maximum_label_type"].([]any); ok && len(v) > 0 {
		apiObject.MaximumLabelType = expandMaximumLabelType(v)
	}
	if v, ok := tfMap["minimum_label_type"].([]any); ok && len(v) > 0 {
		apiObject.MinimumLabelType = expandMinimumLabelType(v)
	}
	if v, ok := tfMap["range_ends_label_type"].([]any); ok && len(v) > 0 {
		apiObject.RangeEndsLabelType = expandRangeEndsLabelType(v)
	}

	return apiObject
}
