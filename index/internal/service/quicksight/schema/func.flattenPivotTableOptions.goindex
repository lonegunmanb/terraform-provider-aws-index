package github.com/hashicorp/terraform-provider-aws/internal/service/quicksight/schema
import (
	"sync"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/quicksight/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenPivotTableOptions(apiObject *awstypes.PivotTableOptions) []any {
	if apiObject == nil {
		return nil
	}

	tfMap := map[string]any{
		"collapsed_row_dimensions_visibility": apiObject.CollapsedRowDimensionsVisibility,
		"column_names_visibility":             apiObject.ColumnNamesVisibility,
		"metric_placement":                    apiObject.MetricPlacement,
		"single_metric_visibility":            apiObject.SingleMetricVisibility,
		"toggle_buttons_visibility":           apiObject.ToggleButtonsVisibility,
	}

	if apiObject.CellStyle != nil {
		tfMap["cell_style"] = flattenTableCellStyle(apiObject.CellStyle)
	}
	if apiObject.ColumnHeaderStyle != nil {
		tfMap["column_header_style"] = flattenTableCellStyle(apiObject.ColumnHeaderStyle)
	}
	if apiObject.RowAlternateColorOptions != nil {
		tfMap["row_alternate_color_options"] = flattenRowAlternateColorOptions(apiObject.RowAlternateColorOptions)
	}
	if apiObject.RowFieldNamesStyle != nil {
		tfMap["row_field_names_style"] = flattenTableCellStyle(apiObject.RowFieldNamesStyle)
	}
	if apiObject.RowHeaderStyle != nil {
		tfMap["row_header_style"] = flattenTableCellStyle(apiObject.RowHeaderStyle)
	}

	return []any{tfMap}
}
