package github.com/hashicorp/terraform-provider-aws/internal/service/quicksight/schema
import (
	"sync"

	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/quicksight/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandPanelConfiguration(tfList []any) *awstypes.PanelConfiguration {
	if len(tfList) == 0 || tfList[0] == nil {
		return nil
	}

	tfMap, ok := tfList[0].(map[string]any)
	if !ok {
		return nil
	}

	apiObject := &awstypes.PanelConfiguration{}

	if v, ok := tfMap["background_color"].(string); ok && v != "" {
		apiObject.BackgroundColor = aws.String(v)
	}
	if v, ok := tfMap["background_visibility"].(string); ok && v != "" {
		apiObject.BackgroundVisibility = awstypes.Visibility(v)
	}
	if v, ok := tfMap["border_color"].(string); ok && v != "" {
		apiObject.BorderColor = aws.String(v)
	}
	if v, ok := tfMap["border_style"].(string); ok && v != "" {
		apiObject.BorderStyle = awstypes.PanelBorderStyle(v)
	}
	if v, ok := tfMap["border_thickness"].(string); ok && v != "" {
		apiObject.BorderThickness = aws.String(v)
	}
	if v, ok := tfMap["border_visibility"].(string); ok && v != "" {
		apiObject.BorderVisibility = awstypes.Visibility(v)
	}
	if v, ok := tfMap["gutter_spacing"].(string); ok && v != "" {
		apiObject.GutterSpacing = aws.String(v)
	}
	if v, ok := tfMap["gutter_visibility"].(string); ok && v != "" {
		apiObject.GutterVisibility = awstypes.Visibility(v)
	}
	if v, ok := tfMap["title"].([]any); ok && len(v) > 0 {
		apiObject.Title = expandPanelTitleOptions(v)
	}

	return apiObject
}
