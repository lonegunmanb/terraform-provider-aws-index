package github.com/hashicorp/terraform-provider-aws/internal/service/quicksight/schema
import (
	"sync"

	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/quicksight/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandParameterSliderControl(tfList []any) *awstypes.ParameterSliderControl {
	if len(tfList) == 0 || tfList[0] == nil {
		return nil
	}

	tfMap, ok := tfList[0].(map[string]any)
	if !ok {
		return nil
	}

	apiObject := &awstypes.ParameterSliderControl{}

	if v, ok := tfMap["parameter_control_id"].(string); ok && v != "" {
		apiObject.ParameterControlId = aws.String(v)
	}
	if v, ok := tfMap["source_parameter_name"].(string); ok && v != "" {
		apiObject.SourceParameterName = aws.String(v)
	}
	if v, ok := tfMap["title"].(string); ok && v != "" {
		apiObject.Title = aws.String(v)
	}
	if v, ok := tfMap["maximum_value"].(float64); ok {
		apiObject.MaximumValue = v
	}
	if v, ok := tfMap["minimum_value"].(float64); ok {
		apiObject.MinimumValue = v
	}
	if v, ok := tfMap["step_size"].(float64); ok {
		apiObject.StepSize = v
	}
	if v, ok := tfMap["display_options"].([]any); ok && len(v) > 0 {
		apiObject.DisplayOptions = expandSliderControlDisplayOptions(v)
	}

	return apiObject
}
