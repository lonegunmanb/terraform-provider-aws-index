package github.com/hashicorp/terraform-provider-aws/internal/service/quicksight/schema
import (
	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/quicksight/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/sdkv2"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandJoinInstruction(tfMap map[string]any) *awstypes.JoinInstruction {
	if tfMap == nil {
		return nil
	}

	apiObject := &awstypes.JoinInstruction{}

	if v, ok := tfMap["left_operand"].(string); ok {
		apiObject.LeftOperand = aws.String(v)
	}
	if v, ok := tfMap["on_clause"].(string); ok {
		apiObject.OnClause = aws.String(v)
	}
	if v, ok := tfMap["right_operand"].(string); ok {
		apiObject.RightOperand = aws.String(v)
	}
	if v, ok := tfMap[names.AttrType].(string); ok {
		apiObject.Type = awstypes.JoinType(v)
	}
	if v, ok := tfMap["left_join_key_properties"].(map[string]any); ok {
		apiObject.LeftJoinKeyProperties = expandJoinKeyProperties(v)
	}
	if v, ok := tfMap["right_join_key_properties"].(map[string]any); ok {
		apiObject.RightJoinKeyProperties = expandJoinKeyProperties(v)
	}

	return apiObject
}
