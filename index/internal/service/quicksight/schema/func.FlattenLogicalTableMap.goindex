package github.com/hashicorp/terraform-provider-aws/internal/service/quicksight/schema
import (
	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/quicksight/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/sdkv2"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func FlattenLogicalTableMap(apiObjects map[string]awstypes.LogicalTable) []any {
	if len(apiObjects) == 0 {
		return nil
	}

	var tfList []any

	for k, apiObject := range apiObjects {
		tfMap := map[string]any{
			"logical_table_map_id": k,
		}

		if apiObject.Alias != nil {
			tfMap[names.AttrAlias] = aws.ToString(apiObject.Alias)
		}
		if apiObject.DataTransforms != nil {
			tfMap["data_transforms"] = flattenTransformOperations(apiObject.DataTransforms)
		}
		if apiObject.Source != nil {
			tfMap[names.AttrSource] = flattenLogicalTableSource(apiObject.Source)
		}

		tfList = append(tfList, tfMap)
	}

	return tfList
}
