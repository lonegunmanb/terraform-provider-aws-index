package github.com/hashicorp/terraform-provider-aws/internal/service/quicksight/schema
import (
	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/quicksight/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/sdkv2"
)
func flattenUIColorPalette(apiObject *awstypes.UIColorPalette) []any {
	if apiObject == nil {
		return nil
	}

	tfMap := map[string]any{}

	if apiObject.Accent != nil {
		tfMap["accent"] = aws.ToString(apiObject.Accent)
	}
	if apiObject.AccentForeground != nil {
		tfMap["accent_foreground"] = aws.ToString(apiObject.AccentForeground)
	}
	if apiObject.Danger != nil {
		tfMap["danger"] = aws.ToString(apiObject.Danger)
	}
	if apiObject.DangerForeground != nil {
		tfMap["danger_foreground"] = aws.ToString(apiObject.DangerForeground)
	}
	if apiObject.Dimension != nil {
		tfMap["dimension"] = aws.ToString(apiObject.Dimension)
	}
	if apiObject.DimensionForeground != nil {
		tfMap["dimension_foreground"] = aws.ToString(apiObject.DimensionForeground)
	}
	if apiObject.Measure != nil {
		tfMap["measure"] = aws.ToString(apiObject.Measure)
	}
	if apiObject.MeasureForeground != nil {
		tfMap["measure_foreground"] = aws.ToString(apiObject.MeasureForeground)
	}
	if apiObject.PrimaryBackground != nil {
		tfMap["primary_background"] = aws.ToString(apiObject.PrimaryBackground)
	}
	if apiObject.PrimaryForeground != nil {
		tfMap["primary_foreground"] = aws.ToString(apiObject.PrimaryForeground)
	}
	if apiObject.SecondaryBackground != nil {
		tfMap["secondary_background"] = aws.ToString(apiObject.SecondaryBackground)
	}
	if apiObject.SecondaryForeground != nil {
		tfMap["secondary_foreground"] = aws.ToString(apiObject.SecondaryForeground)
	}
	if apiObject.Success != nil {
		tfMap["success"] = aws.ToString(apiObject.Success)
	}
	if apiObject.SuccessForeground != nil {
		tfMap["success_foreground"] = aws.ToString(apiObject.SuccessForeground)
	}
	if apiObject.Warning != nil {
		tfMap["warning"] = aws.ToString(apiObject.Warning)
	}
	if apiObject.WarningForeground != nil {
		tfMap["warning_foreground"] = aws.ToString(apiObject.WarningForeground)
	}

	return []any{tfMap}
}
