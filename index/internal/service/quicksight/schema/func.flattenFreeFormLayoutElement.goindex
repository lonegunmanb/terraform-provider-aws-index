package github.com/hashicorp/terraform-provider-aws/internal/service/quicksight/schema
import (
	"sync"

	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/quicksight/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/sdkv2/types/nullable"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenFreeFormLayoutElement(apiObjects []awstypes.FreeFormLayoutElement) []any {
	if len(apiObjects) == 0 {
		return nil
	}

	var tfList []any

	for _, apiObject := range apiObjects {
		tfMap := map[string]any{
			"element_id":      aws.ToString(apiObject.ElementId),
			"element_type":    apiObject.ElementType,
			"height":          aws.ToString(apiObject.Height),
			"width":           aws.ToString(apiObject.Width),
			"x_axis_location": aws.ToString(apiObject.XAxisLocation),
			"y_axis_location": aws.ToString(apiObject.YAxisLocation),
		}

		if apiObject.BackgroundStyle != nil {
			tfMap["background_style"] = flattenFreeFormLayoutElementBackgroundStyle(apiObject.BackgroundStyle)
		}
		if apiObject.BorderStyle != nil {
			tfMap["border_style"] = flattenFreeFormLayoutElementBorderStyle(apiObject.BorderStyle)
		}
		if apiObject.LoadingAnimation != nil {
			tfMap["loading_animation"] = flattenLoadingAnimation(apiObject.LoadingAnimation)
		}
		if apiObject.RenderingRules != nil {
			tfMap["rendering_rules"] = flattenSheetElementRenderingRule(apiObject.RenderingRules)
		}
		if apiObject.SelectedBorderStyle != nil {
			tfMap["selected_border_style"] = flattenFreeFormLayoutElementBorderStyle(apiObject.SelectedBorderStyle)
		}
		tfMap["visibility"] = apiObject.Visibility

		tfList = append(tfList, tfMap)
	}

	return tfList
}
