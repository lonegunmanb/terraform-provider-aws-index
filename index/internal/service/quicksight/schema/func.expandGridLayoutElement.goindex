package github.com/hashicorp/terraform-provider-aws/internal/service/quicksight/schema
import (
	"sync"

	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/quicksight/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/sdkv2/types/nullable"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandGridLayoutElement(tfMap map[string]any) *awstypes.GridLayoutElement {
	if tfMap == nil {
		return nil
	}

	apiObject := &awstypes.GridLayoutElement{}

	if v, ok := tfMap["element_id"].(string); ok && v != "" {
		apiObject.ElementId = aws.String(v)
	}
	if v, ok := tfMap["element_type"].(string); ok && v != "" {
		apiObject.ElementType = awstypes.LayoutElementType(v)
	}
	if v, ok := tfMap["column_span"].(int); ok && v != 0 {
		apiObject.ColumnSpan = aws.Int32(int32(v))
	}
	if v, ok := tfMap["row_span"].(int); ok && v != 0 {
		apiObject.RowSpan = aws.Int32(int32(v))
	}
	if v, ok := tfMap["column_index"].(string); ok && v != "" {
		if i, null, _ := nullable.Int(v).ValueInt32(); !null {
			apiObject.ColumnIndex = aws.Int32(i)
		}
	}
	if v, ok := tfMap["row_index"].(string); ok && v != "" {
		if i, null, _ := nullable.Int(v).ValueInt32(); !null {
			apiObject.RowIndex = aws.Int32(i)
		}
	}

	return apiObject
}
