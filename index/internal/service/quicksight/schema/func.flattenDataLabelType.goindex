package github.com/hashicorp/terraform-provider-aws/internal/service/quicksight/schema
import (
	"sync"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/quicksight/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenDataLabelType(apiObjects []awstypes.DataLabelType) []any {
	if len(apiObjects) == 0 {
		return nil
	}

	var tfList []any

	for _, apiObject := range apiObjects {
		tfMap := map[string]any{}

		if apiObject.DataPathLabelType != nil {
			tfMap["data_path_label_type"] = flattenDataPathLabelType(apiObject.DataPathLabelType)
		}
		if apiObject.FieldLabelType != nil {
			tfMap["field_label_type"] = flattenFieldLabelType(apiObject.FieldLabelType)
		}
		if apiObject.MaximumLabelType != nil {
			tfMap["maximum_label_type"] = flattenMaximumLabelType(apiObject.MaximumLabelType)
		}
		if apiObject.MinimumLabelType != nil {
			tfMap["minimum_label_type"] = flattenMinimumLabelType(apiObject.MinimumLabelType)
		}
		if apiObject.RangeEndsLabelType != nil {
			tfMap["range_ends_label_type"] = flattenRangeEndsLabelType(apiObject.RangeEndsLabelType)
		}

		tfList = append(tfList, tfMap)
	}

	return tfList
}
