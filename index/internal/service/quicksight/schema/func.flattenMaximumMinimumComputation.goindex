package github.com/hashicorp/terraform-provider-aws/internal/service/quicksight/schema
import (
	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/quicksight/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenMaximumMinimumComputation(apiObject *awstypes.MaximumMinimumComputation) []any {
	if apiObject == nil {
		return nil
	}

	tfMap := map[string]any{}

	if apiObject.ComputationId != nil {
		tfMap["computation_id"] = aws.ToString(apiObject.ComputationId)
	}
	if apiObject.Time != nil {
		tfMap["time"] = flattenDimensionField(apiObject.Time)
	}
	tfMap[names.AttrType] = apiObject.Type
	if apiObject.Name != nil {
		tfMap[names.AttrName] = aws.ToString(apiObject.Name)
	}
	if apiObject.Value != nil {
		tfMap[names.AttrValue] = flattenMeasureField(apiObject.Value)
	}

	return []any{tfMap}
}
