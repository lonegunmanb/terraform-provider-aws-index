package github.com/hashicorp/terraform-provider-aws/internal/service/quicksight/schema
import (
	"reflect"
	"sync"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/quicksight/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func utcTimestampStringSchema(handling attrHandling) *schema.Schema {
	s, ok := utcTimestampStringSchemaCache.Load(handling)
	if ok {
		return s
	}

	// Use a separate `LoadOrStore` to avoid allocation if item is already in the cache
	// Use `LoadOrStore` instead of `Store` in case there is a race
	s, _ = utcTimestampStringSchemaCache.LoadOrStore(
		handling,
		&schema.Schema{
			Type:         schema.TypeString,
			Required:     handling.isRequired(),
			Optional:     handling.isOptional(),
			Computed:     handling.isComputed(),
			ValidateFunc: verify.ValidUTCTimestamp,
		},
	)
	return s
}
