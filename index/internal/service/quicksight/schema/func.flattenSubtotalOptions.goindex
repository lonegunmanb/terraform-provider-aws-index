package github.com/hashicorp/terraform-provider-aws/internal/service/quicksight/schema
import (
	"sync"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/quicksight/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenSubtotalOptions(apiObject *awstypes.SubtotalOptions) []any {
	if apiObject == nil {
		return nil
	}

	tfMap := map[string]any{
		"field_level":       apiObject.FieldLevel,
		"totals_visibility": apiObject.TotalsVisibility,
	}

	if apiObject.CustomLabel != nil {
		tfMap["custom_label"] = aws.ToString(apiObject.CustomLabel)
	}
	if apiObject.FieldLevelOptions != nil {
		tfMap["field_level_options"] = flattenPivotTableFieldSubtotalOptions(apiObject.FieldLevelOptions)
	}
	if apiObject.MetricHeaderCellStyle != nil {
		tfMap["metric_header_cell_style"] = flattenTableCellStyle(apiObject.MetricHeaderCellStyle)
	}
	if apiObject.TotalCellStyle != nil {
		tfMap["total_cell_style"] = flattenTableCellStyle(apiObject.TotalCellStyle)
	}
	if apiObject.ValueCellStyle != nil {
		tfMap["value_cell_style"] = flattenTableCellStyle(apiObject.ValueCellStyle)
	}

	return []any{tfMap}
}
