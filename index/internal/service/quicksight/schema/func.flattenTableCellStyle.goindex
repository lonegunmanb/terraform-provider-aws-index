package github.com/hashicorp/terraform-provider-aws/internal/service/quicksight/schema
import (
	"sync"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/quicksight/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenTableCellStyle(apiObject *awstypes.TableCellStyle) []any {
	if apiObject == nil {
		return nil
	}

	tfMap := map[string]any{
		"horizontal_text_alignment": apiObject.HorizontalTextAlignment,
		"text_wrap":                 apiObject.TextWrap,
		"vertical_text_alignment":   apiObject.VerticalTextAlignment,
		"visibility":                apiObject.Visibility,
	}

	if apiObject.BackgroundColor != nil {
		tfMap["background_color"] = aws.ToString(apiObject.BackgroundColor)
	}
	if apiObject.Border != nil {
		tfMap["border"] = flattenGlobalTableBorderOptions(apiObject.Border)
	}
	if apiObject.FontConfiguration != nil {
		tfMap["font_configuration"] = flattenFontConfiguration(apiObject.FontConfiguration)
	}
	if apiObject.Height != nil {
		tfMap["height"] = aws.ToInt32(apiObject.Height)
	}

	return []any{tfMap}
}
