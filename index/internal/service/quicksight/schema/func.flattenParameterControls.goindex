package github.com/hashicorp/terraform-provider-aws/internal/service/quicksight/schema
import (
	"sync"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/quicksight/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenParameterControls(apiObjects []awstypes.ParameterControl) []any {
	if len(apiObjects) == 0 {
		return nil
	}

	var tfList []any

	for _, apiObject := range apiObjects {
		tfMap := map[string]any{}

		if apiObject.DateTimePicker != nil {
			tfMap["date_time_picker"] = flattenParameterDateTimePickerControl(apiObject.DateTimePicker)
		}
		if apiObject.Dropdown != nil {
			tfMap["dropdown"] = flattenParameterDropDownControl(apiObject.Dropdown)
		}
		if apiObject.List != nil {
			tfMap["list"] = flattenParameterListControl(apiObject.List)
		}
		if apiObject.Slider != nil {
			tfMap["slider"] = flattenParameterSliderControl(apiObject.Slider)
		}
		if apiObject.TextArea != nil {
			tfMap["text_area"] = flattenParameterTextAreaControl(apiObject.TextArea)
		}
		if apiObject.TextField != nil {
			tfMap["text_field"] = flattenParameterTextFieldControl(apiObject.TextField)
		}

		tfList = append(tfList, tfMap)
	}

	return tfList
}
