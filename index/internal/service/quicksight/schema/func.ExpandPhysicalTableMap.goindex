package github.com/hashicorp/terraform-provider-aws/internal/service/quicksight/schema
import (
	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/quicksight/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/sdkv2"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func ExpandPhysicalTableMap(tfList []any) map[string]awstypes.PhysicalTable {
	apiObjects := make(map[string]awstypes.PhysicalTable)

	for _, tfMapRaw := range tfList {
		tfMap, ok := tfMapRaw.(map[string]any)
		if !ok {
			continue
		}

		var apiObject awstypes.PhysicalTable

		if v, ok := tfMap["custom_sql"].([]any); ok && len(v) > 0 && v[0] != nil {
			if v := expandCustomSQL(v[0].(map[string]any)); v != nil {
				apiObject = &awstypes.PhysicalTableMemberCustomSql{
					Value: *v,
				}
			}
		}
		if v, ok := tfMap["relational_table"].([]any); ok && len(v) > 0 && v[0] != nil {
			if v := expandRelationalTable(v[0].(map[string]any)); v != nil {
				apiObject = &awstypes.PhysicalTableMemberRelationalTable{
					Value: *v,
				}
			}
		}
		if v, ok := tfMap["s3_source"].([]any); ok && len(v) > 0 && v[0] != nil {
			if v := expandS3Source(v[0].(map[string]any)); v != nil {
				apiObject = &awstypes.PhysicalTableMemberS3Source{
					Value: *v,
				}
			}
		}

		apiObjects[tfMap["physical_table_map_id"].(string)] = apiObject
	}

	return apiObjects
}
