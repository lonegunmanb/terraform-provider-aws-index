package github.com/hashicorp/terraform-provider-aws/internal/service/quicksight/schema
import (
	"sync"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/quicksight/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandRelativeDatesFilter(tfList []any) *awstypes.RelativeDatesFilter {
	if len(tfList) == 0 || tfList[0] == nil {
		return nil
	}

	tfMap, ok := tfList[0].(map[string]any)
	if !ok {
		return nil
	}

	apiObject := &awstypes.RelativeDatesFilter{}

	if v, ok := tfMap["filter_id"].(string); ok && v != "" {
		apiObject.FilterId = aws.String(v)
	}
	if v, ok := tfMap["column"].([]any); ok && len(v) > 0 {
		apiObject.Column = expandColumnIdentifier(v)
	}
	if v, ok := tfMap["null_option"].(string); ok && v != "" {
		apiObject.NullOption = awstypes.FilterNullOption(v)
	}
	if v, ok := tfMap["relative_date_type"].(string); ok && v != "" {
		apiObject.RelativeDateType = awstypes.RelativeDateType(v)
	}
	if v, ok := tfMap["time_granularity"].(string); ok && v != "" {
		apiObject.TimeGranularity = awstypes.TimeGranularity(v)
	}
	if v, ok := tfMap["minimum_granularity"].(string); ok && v != "" {
		apiObject.MinimumGranularity = awstypes.TimeGranularity(v)
	}
	if v, ok := tfMap["parameter_name"].(string); ok && v != "" {
		apiObject.ParameterName = aws.String(v)
	}
	if v, ok := tfMap["relative_date_value"].(int); ok {
		apiObject.RelativeDateValue = aws.Int32(int32(v))
	}
	if v, ok := tfMap["anchor_date_configuration"].([]any); ok && len(v) > 0 {
		apiObject.AnchorDateConfiguration = expandAnchorDateConfiguration(v)
	}
	if v, ok := tfMap["exclude_period_configuration"].([]any); ok && len(v) > 0 {
		apiObject.ExcludePeriodConfiguration = expandExcludePeriodConfiguration(v)
	}

	return apiObject
}
