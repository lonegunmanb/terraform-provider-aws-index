package github.com/hashicorp/terraform-provider-aws/internal/service/quicksight/schema
import (
	"sync"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/quicksight/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenVisuals(apiObjects []awstypes.Visual) []any {
	if len(apiObjects) == 0 {
		return nil
	}

	var tfList []any

	for _, apiObject := range apiObjects {
		tfMap := map[string]any{}

		if apiObject.BarChartVisual != nil {
			tfMap["bar_chart_visual"] = flattenBarChartVisual(apiObject.BarChartVisual)
		}
		if apiObject.BoxPlotVisual != nil {
			tfMap["box_plot_visual"] = flattenBoxPlotVisual(apiObject.BoxPlotVisual)
		}
		if apiObject.ComboChartVisual != nil {
			tfMap["combo_chart_visual"] = flattenComboChartVisual(apiObject.ComboChartVisual)
		}
		if apiObject.CustomContentVisual != nil {
			tfMap["custom_content_visual"] = flattenCustomContentVisual(apiObject.CustomContentVisual)
		}
		if apiObject.EmptyVisual != nil {
			tfMap["empty_visual"] = flattenEmptyVisual(apiObject.EmptyVisual)
		}
		if apiObject.FilledMapVisual != nil {
			tfMap["filled_map_visual"] = flattenFilledMapVisual(apiObject.FilledMapVisual)
		}
		if apiObject.FunnelChartVisual != nil {
			tfMap["funnel_chart_visual"] = flattenFunnelChartVisual(apiObject.FunnelChartVisual)
		}
		if apiObject.GaugeChartVisual != nil {
			tfMap["gauge_chart_visual"] = flattenGaugeChartVisual(apiObject.GaugeChartVisual)
		}
		if apiObject.GeospatialMapVisual != nil {
			tfMap["geospatial_map_visual"] = flattenGeospatialMapVisual(apiObject.GeospatialMapVisual)
		}
		if apiObject.HeatMapVisual != nil {
			tfMap["heat_map_visual"] = flattenHeatMapVisual(apiObject.HeatMapVisual)
		}
		if apiObject.HistogramVisual != nil {
			tfMap["histogram_visual"] = flattenHistogramVisual(apiObject.HistogramVisual)
		}
		if apiObject.InsightVisual != nil {
			tfMap["insight_visual"] = flattenInsightVisual(apiObject.InsightVisual)
		}
		if apiObject.KPIVisual != nil {
			tfMap["kpi_visual"] = flattenKPIVisual(apiObject.KPIVisual)
		}
		if apiObject.LineChartVisual != nil {
			tfMap["line_chart_visual"] = flattenLineChartVisual(apiObject.LineChartVisual)
		}
		if apiObject.PieChartVisual != nil {
			tfMap["pie_chart_visual"] = flattenPieChartVisual(apiObject.PieChartVisual)
		}
		if apiObject.PivotTableVisual != nil {
			tfMap["pivot_table_visual"] = flattenPivotTableVisual(apiObject.PivotTableVisual)
		}
		if apiObject.RadarChartVisual != nil {
			tfMap["radar_chart_visual"] = flattenRadarChartVisual(apiObject.RadarChartVisual)
		}
		if apiObject.SankeyDiagramVisual != nil {
			tfMap["sankey_diagram_visual"] = flattenSankeyDiagramVisual(apiObject.SankeyDiagramVisual)
		}
		if apiObject.ScatterPlotVisual != nil {
			tfMap["scatter_plot_visual"] = flattenScatterPlotVisual(apiObject.ScatterPlotVisual)
		}
		if apiObject.TableVisual != nil {
			tfMap["table_visual"] = flattenTableVisual(apiObject.TableVisual)
		}
		if apiObject.TreeMapVisual != nil {
			tfMap["tree_map_visual"] = flattenTreeMapVisual(apiObject.TreeMapVisual)
		}
		if apiObject.WaterfallVisual != nil {
			tfMap["waterfall_visual"] = flattenWaterfallVisual(apiObject.WaterfallVisual)
		}
		if apiObject.WordCloudVisual != nil {
			tfMap["word_cloud_visual"] = flattenWordCloudVisual(apiObject.WordCloudVisual)
		}

		tfList = append(tfList, tfMap)
	}

	return tfList
}
