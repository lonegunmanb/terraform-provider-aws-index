package github.com/hashicorp/terraform-provider-aws/internal/service/quicksight/schema
import (
	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/quicksight/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/sdkv2"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenUploadSettings(apiObject *awstypes.UploadSettings) []any {
	if apiObject == nil {
		return nil
	}

	tfMap := map[string]any{}

	if apiObject.ContainsHeader != nil {
		tfMap["contains_header"] = aws.ToBool(apiObject.ContainsHeader)
	}
	if apiObject.Delimiter != nil {
		tfMap["delimiter"] = aws.ToString(apiObject.Delimiter)
	}
	tfMap[names.AttrFormat] = apiObject.Format
	if apiObject.StartFromRow != nil {
		tfMap["start_from_row"] = aws.ToInt32(apiObject.StartFromRow)
	}
	tfMap["text_qualifier"] = apiObject.TextQualifier

	return []any{tfMap}
}
