package github.com/hashicorp/terraform-provider-aws/internal/service/quicksight/schema
import (
	"sync"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/quicksight/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandFilterListConfiguration(tfList []any) *awstypes.FilterListConfiguration {
	if len(tfList) == 0 || tfList[0] == nil {
		return nil
	}

	tfMap, ok := tfList[0].(map[string]any)
	if !ok {
		return nil
	}

	apiObject := &awstypes.FilterListConfiguration{}

	if v, ok := tfMap["category_values"].([]any); ok && len(v) > 0 {
		apiObject.CategoryValues = flex.ExpandStringValueList(v)
	}
	if v, ok := tfMap["match_operator"].(string); ok && v != "" {
		apiObject.MatchOperator = awstypes.CategoryFilterMatchOperator(v)
	}
	if v, ok := tfMap["select_all_options"].(string); ok && v != "" {
		apiObject.SelectAllOptions = awstypes.CategoryFilterSelectAllOptions(v)
	}

	return apiObject
}
