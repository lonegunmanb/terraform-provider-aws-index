package github.com/hashicorp/terraform-provider-aws/internal/service/quicksight/schema
import (
	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/quicksight/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/sdkv2"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func FlattenPhysicalTableMap(apiObjects map[string]awstypes.PhysicalTable) []any {
	var tfList []any

	for k, apiObject := range apiObjects {
		tfMap := map[string]any{
			"physical_table_map_id": k,
		}

		switch v := apiObject.(type) {
		case *awstypes.PhysicalTableMemberCustomSql:
			tfMap["custom_sql"] = flattenCustomSQL(&v.Value)
		case *awstypes.PhysicalTableMemberRelationalTable:
			tfMap["relational_table"] = flattenRelationalTable(&v.Value)
		case *awstypes.PhysicalTableMemberS3Source:
			tfMap["s3_source"] = flattenS3Source(&v.Value)
		default:
			continue
		}

		tfList = append(tfList, tfMap)
	}

	return tfList
}
