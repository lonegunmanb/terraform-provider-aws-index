package github.com/hashicorp/terraform-provider-aws/internal/service/quicksight/schema
import (
	"sync"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/quicksight/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/names"
)
var dataLabelOptionsSchema = sync.OnceValue(func() *schema.Schema {
	return &schema.Schema{ // https://docs.aws.amazon.com/quicksight/latest/APIReference/API_DataLabelOptions.html
		Type:     schema.TypeList,
		MinItems: 1,
		MaxItems: 1,
		Optional: true,
		Elem: &schema.Resource{
			Schema: map[string]*schema.Schema{
				"category_label_visibility": stringEnumSchema[awstypes.Visibility](attrOptional),
				"data_label_types": { // https://docs.aws.amazon.com/quicksight/latest/APIReference/API_DataLabelType.html
					Type:     schema.TypeList,
					MinItems: 1,
					MaxItems: 100,
					Optional: true,
					Elem: &schema.Resource{
						Schema: map[string]*schema.Schema{
							"data_path_label_type": { // https://docs.aws.amazon.com/quicksight/latest/APIReference/API_DataPathLabelType.html
								Type:     schema.TypeList,
								MinItems: 1,
								MaxItems: 1,
								Optional: true,
								Elem: &schema.Resource{
									Schema: map[string]*schema.Schema{
										"field_id":    stringLenBetweenSchema(attrOptional, 1, 512),
										"field_value": stringLenBetweenSchema(attrOptional, 1, 2048),
										"visibility":  stringEnumSchema[awstypes.Visibility](attrOptional),
									},
								},
							},
							"field_label_type": { // https://docs.aws.amazon.com/quicksight/latest/APIReference/API_FieldLabelType.html
								Type:     schema.TypeList,
								MinItems: 1,
								MaxItems: 1,
								Optional: true,
								Elem: &schema.Resource{
									Schema: map[string]*schema.Schema{
										"field_id":   stringLenBetweenSchema(attrOptional, 1, 512),
										"visibility": stringEnumSchema[awstypes.Visibility](attrOptional),
									},
								},
							},
							"maximum_label_type": { // https://docs.aws.amazon.com/quicksight/latest/APIReference/API_MaximumLabelType.html
								Type:     schema.TypeList,
								MinItems: 1,
								MaxItems: 1,
								Optional: true,
								Elem: &schema.Resource{
									Schema: map[string]*schema.Schema{
										"visibility": stringEnumSchema[awstypes.Visibility](attrOptional),
									},
								},
							},
							"minimum_label_type": { // https://docs.aws.amazon.com/quicksight/latest/APIReference/API_MinimumLabelType.html
								Type:     schema.TypeList,
								MinItems: 1,
								MaxItems: 1,
								Optional: true,
								Elem: &schema.Resource{
									Schema: map[string]*schema.Schema{
										"visibility": stringEnumSchema[awstypes.Visibility](attrOptional),
									},
								},
							},
							"range_ends_label_type": { // https://docs.aws.amazon.com/quicksight/latest/APIReference/API_RangeEndsLabelType.html
								Type:     schema.TypeList,
								MinItems: 1,
								MaxItems: 1,
								Optional: true,
								Elem: &schema.Resource{
									Schema: map[string]*schema.Schema{
										"visibility": stringEnumSchema[awstypes.Visibility](attrOptional),
									},
								},
							},
						},
					},
				},
				"label_color":              hexColorSchema(attrOptional),
				"label_content":            stringEnumSchema[awstypes.DataLabelContent](attrOptional),
				"label_font_configuration": fontConfigurationSchema(), // https://docs.aws.amazon.com/quicksight/latest/APIReference/API_FontConfiguration.html
				"measure_label_visibility": stringEnumSchema[awstypes.Visibility](attrOptional),
				"overlap":                  stringEnumSchema[awstypes.DataLabelOverlap](attrOptional),
				"position":                 stringEnumSchema[awstypes.DataLabelPosition](attrOptional),
				"visibility":               stringEnumSchema[awstypes.Visibility](attrOptional),
			},
		},
	}
})
