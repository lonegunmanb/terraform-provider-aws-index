package github.com/hashicorp/terraform-provider-aws/internal/service/quicksight/schema
import (
	"reflect"
	"sync"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/quicksight/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func columnSchema(required bool) *schema.Schema {
	s, ok := columnSchemaCache.Load(required)
	if ok {
		return s
	}

	// Use a separate `LoadOrStore` to avoid allocation if item is already in the cache
	// Use `LoadOrStore` instead of `Store` in case there is a race
	s, _ = columnSchemaCache.LoadOrStore(
		required,
		&schema.Schema{ // https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ColumnIdentifier.html
			Type:     schema.TypeList,
			MinItems: 1,
			MaxItems: 1,
			Required: required,
			Optional: !required,
			Elem: &schema.Resource{
				Schema: map[string]*schema.Schema{
					"column_name":         stringLenBetweenSchema(attrRequired, 1, 128),
					"data_set_identifier": stringLenBetweenSchema(attrRequired, 1, 2048),
				},
			},
		},
	)
	return s
}
