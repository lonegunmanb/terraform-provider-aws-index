package github.com/hashicorp/terraform-provider-aws/internal/service/quicksight/schema
import (
	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/quicksight/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func DataSourceCredentialsSchema() *schema.Schema {
	return &schema.Schema{
		Type:     schema.TypeList,
		Optional: true,
		MaxItems: 1,
		Elem: &schema.Resource{
			Schema: map[string]*schema.Schema{
				"copy_source_arn": {
					Type:          schema.TypeString,
					Optional:      true,
					ValidateFunc:  verify.ValidARN,
					ConflictsWith: []string{"credentials.0.credential_pair", "credentials.0.secret_arn"},
				},
				"credential_pair": {
					Type:     schema.TypeList,
					Optional: true,
					MaxItems: 1,
					Elem: &schema.Resource{
						Schema: map[string]*schema.Schema{
							names.AttrPassword: {
								Type:     schema.TypeString,
								Required: true,
								ValidateFunc: validation.All(
									validation.NoZeroValues,
									validation.StringLenBetween(1, 1024),
								),
								Sensitive: true,
							},
							names.AttrUsername: {
								Type:     schema.TypeString,
								Required: true,
								ValidateFunc: validation.All(
									validation.NoZeroValues,
									validation.StringLenBetween(1, 64),
								),
								Sensitive: true,
							},
						},
					},
					ConflictsWith: []string{"credentials.0.copy_source_arn", "credentials.0.secret_arn"},
				},
				"secret_arn": {
					Type:          schema.TypeString,
					Optional:      true,
					ConflictsWith: []string{"credentials.0.credential_pair", "credentials.0.copy_source_arn"},
				},
			},
		},
	}
}
