package github.com/hashicorp/terraform-provider-aws/internal/service/quicksight/schema
import (
	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/quicksight/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandKPIOptions(tfList []any) *awstypes.KPIOptions {
	if len(tfList) == 0 || tfList[0] == nil {
		return nil
	}

	tfMap, ok := tfList[0].(map[string]any)
	if !ok {
		return nil
	}

	apiObject := &awstypes.KPIOptions{}

	if v, ok := tfMap["primary_value_display_type"].(string); ok && v != "" {
		apiObject.PrimaryValueDisplayType = awstypes.PrimaryValueDisplayType(v)
	}
	if v, ok := tfMap["comparison"].([]any); ok && len(v) > 0 {
		apiObject.Comparison = expandComparisonConfiguration(v)
	}
	if v, ok := tfMap["primary_value_font_configuration"].([]any); ok && len(v) > 0 {
		apiObject.PrimaryValueFontConfiguration = expandFontConfiguration(v)
	}
	if v, ok := tfMap["progress_bar"].([]any); ok && len(v) > 0 {
		apiObject.ProgressBar = expandProgressBarOptions(v)
	}
	if v, ok := tfMap["secondary_value"].([]any); ok && len(v) > 0 {
		apiObject.SecondaryValue = expandSecondaryValueOptions(v)
	}
	if v, ok := tfMap["secondary_value_font_configuration"].([]any); ok && len(v) > 0 {
		apiObject.SecondaryValueFontConfiguration = expandFontConfiguration(v)
	}
	if v, ok := tfMap["sparkline"].([]any); ok && len(v) > 0 {
		apiObject.Sparkline = expandKPISparklineOptions(v)
	}
	if v, ok := tfMap["trend_arrows"].([]any); ok && len(v) > 0 {
		apiObject.TrendArrows = expandTrendArrowOptions(v)
	}
	if v, ok := tfMap["visual_layout_options"].([]any); ok && len(v) > 0 {
		apiObject.VisualLayoutOptions = expandKPIVisualLayoutOptions(v)
	}

	return apiObject
}
