package github.com/hashicorp/terraform-provider-aws/internal/service/quicksight/schema
import (
	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/quicksight/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/sdkv2"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func ExpandLogicalTableMap(tfList []any) map[string]awstypes.LogicalTable {
	if len(tfList) == 0 {
		return nil
	}

	apiObjects := make(map[string]awstypes.LogicalTable)

	for _, tfMapRaw := range tfList {
		tfMap, ok := tfMapRaw.(map[string]any)
		if !ok {
			continue
		}

		apiObject := awstypes.LogicalTable{}

		if v, ok := tfMap[names.AttrAlias].(string); ok {
			apiObject.Alias = aws.String(v)
		}
		if v, ok := tfMap[names.AttrSource].([]any); ok {
			apiObject.Source = expandLogicalTableSource(v[0].(map[string]any))
		}
		if v, ok := tfMap["data_transforms"].([]any); ok {
			apiObject.DataTransforms = expandTransformOperations(v)
		}

		apiObjects[tfMap["logical_table_map_id"].(string)] = apiObject
	}

	return apiObjects
}
