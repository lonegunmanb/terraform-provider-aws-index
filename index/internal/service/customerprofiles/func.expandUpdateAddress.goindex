package github.com/hashicorp/terraform-provider-aws/internal/service/customerprofiles
import (
	"context"
	"fmt"
	"log"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/customerprofiles"
	"github.com/aws/aws-sdk-go-v2/service/customerprofiles/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/retry"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandUpdateAddress(tfMap []any) *types.UpdateAddress {
	if tfMap == nil || tfMap[0] == nil {
		return nil
	}

	tfList, ok := tfMap[0].(map[string]any)
	if !ok {
		return nil
	}

	apiObject := &types.UpdateAddress{}

	if v, ok := tfList["address_1"]; ok {
		apiObject.Address1 = aws.String(v.(string))
	}

	if v, ok := tfList["address_2"]; ok {
		apiObject.Address2 = aws.String(v.(string))
	}

	if v, ok := tfList["address_3"]; ok {
		apiObject.Address3 = aws.String(v.(string))
	}

	if v, ok := tfList["address_4"]; ok {
		apiObject.Address4 = aws.String(v.(string))
	}

	if v, ok := tfList["city"]; ok {
		apiObject.City = aws.String(v.(string))
	}

	if v, ok := tfList["country"]; ok {
		apiObject.Country = aws.String(v.(string))
	}

	if v, ok := tfList["county"]; ok {
		apiObject.County = aws.String(v.(string))
	}

	if v, ok := tfList["postal_code"]; ok {
		apiObject.PostalCode = aws.String(v.(string))
	}

	if v, ok := tfList["province"]; ok {
		apiObject.Province = aws.String(v.(string))
	}

	if v, ok := tfList[names.AttrState]; ok {
		apiObject.State = aws.String(v.(string))
	}

	return apiObject
}
