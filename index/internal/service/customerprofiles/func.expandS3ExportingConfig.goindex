package github.com/hashicorp/terraform-provider-aws/internal/service/customerprofiles
import (
	"context"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/customerprofiles"
	"github.com/aws/aws-sdk-go-v2/service/customerprofiles/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandS3ExportingConfig(tfMap []any) *types.S3ExportingConfig {
	if len(tfMap) == 0 {
		return nil
	}

	tfList, ok := tfMap[0].(map[string]any)
	if !ok {
		return nil
	}

	apiObject := &types.S3ExportingConfig{}

	if v, ok := tfList[names.AttrS3BucketName]; ok {
		apiObject.S3BucketName = aws.String(v.(string))
	}

	if v, ok := tfList["s3_key_name"]; ok {
		apiObject.S3KeyName = aws.String(v.(string))
	}

	return apiObject
}
