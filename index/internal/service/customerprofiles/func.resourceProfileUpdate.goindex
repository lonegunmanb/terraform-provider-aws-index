package github.com/hashicorp/terraform-provider-aws/internal/service/customerprofiles
import (
	"context"
	"fmt"
	"log"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/customerprofiles"
	"github.com/aws/aws-sdk-go-v2/service/customerprofiles/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/retry"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func resourceProfileUpdate(ctx context.Context, d *schema.ResourceData, meta any) diag.Diagnostics {
	var diags diag.Diagnostics
	conn := meta.(*conns.AWSClient).CustomerProfilesClient(ctx)

	input := &customerprofiles.UpdateProfileInput{
		DomainName: aws.String(d.Get(names.AttrDomainName).(string)),
		ProfileId:  aws.String(d.Id()),
	}

	if d.HasChange("account_number") {
		input.AccountNumber = aws.String(d.Get("account_number").(string))
	}

	if d.HasChange("additional_information") {
		input.AdditionalInformation = aws.String(d.Get("additional_information").(string))
	}

	if d.HasChange(names.AttrAddress) {
		input.Address = expandUpdateAddress(d.Get(names.AttrAddress).([]any))
	}

	if d.HasChange(names.AttrAttributes) {
		input.Attributes = flex.ExpandStringValueMap(d.Get(names.AttrAttributes).(map[string]any))
	}

	if d.HasChange("billing_address") {
		input.BillingAddress = expandUpdateAddress(d.Get("billing_address").([]any))
	}

	if d.HasChange("additional_information") {
		input.AdditionalInformation = aws.String(d.Get("additional_information").(string))
	}

	if d.HasChange("birth_date") {
		input.BirthDate = aws.String(d.Get("birth_date").(string))
	}

	if d.HasChange("business_email_address") {
		input.BusinessEmailAddress = aws.String(d.Get("business_email_address").(string))
	}

	if d.HasChange("business_name") {
		input.BusinessName = aws.String(d.Get("business_name").(string))
	}

	if d.HasChange("business_phone_number") {
		input.BusinessPhoneNumber = aws.String(d.Get("business_phone_number").(string))
	}

	if d.HasChange("email_address") {
		input.EmailAddress = aws.String(d.Get("email_address").(string))
	}

	if d.HasChange("first_name") {
		input.FirstName = aws.String(d.Get("first_name").(string))
	}

	if d.HasChange("gender_string") {
		input.GenderString = aws.String(d.Get("gender_string").(string))
	}

	if d.HasChange("home_phone_number") {
		input.HomePhoneNumber = aws.String(d.Get("home_phone_number").(string))
	}

	if d.HasChange("last_name") {
		input.LastName = aws.String(d.Get("last_name").(string))
	}

	if d.HasChange("mailing_address") {
		input.MailingAddress = expandUpdateAddress(d.Get("mailing_address").([]any))
	}

	if d.HasChange("middle_name") {
		input.MiddleName = aws.String(d.Get("middle_name").(string))
	}

	if d.HasChange("mobile_phone_number") {
		input.MobilePhoneNumber = aws.String(d.Get("mobile_phone_number").(string))
	}

	if d.HasChange("party_type_string") {
		input.PartyTypeString = aws.String(d.Get("party_type_string").(string))
	}

	if d.HasChange("personal_email_address") {
		input.PersonalEmailAddress = aws.String(d.Get("personal_email_address").(string))
	}

	if d.HasChange("phone_number") {
		input.PhoneNumber = aws.String(d.Get("phone_number").(string))
	}

	if d.HasChange("shipping_address") {
		input.ShippingAddress = expandUpdateAddress(d.Get("shipping_address").([]any))
	}

	_, err := conn.UpdateProfile(ctx, input)

	if err != nil {
		return sdkdiag.AppendErrorf(diags, "updating Customer Profiles Profile (%s): %s", d.Id(), err)
	}

	return append(diags, resourceProfileRead(ctx, d, meta)...)
}
