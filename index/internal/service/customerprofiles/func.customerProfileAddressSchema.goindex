package github.com/hashicorp/terraform-provider-aws/internal/service/customerprofiles
import (
	"context"
	"fmt"
	"log"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/customerprofiles"
	"github.com/aws/aws-sdk-go-v2/service/customerprofiles/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/retry"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func customerProfileAddressSchema() *schema.Schema {
	return &schema.Schema{
		Type:     schema.TypeList,
		MaxItems: 1,
		Optional: true,
		Elem: &schema.Resource{
			Schema: map[string]*schema.Schema{
				"address_1": {
					Type:     schema.TypeString,
					Optional: true,
				},
				"address_2": {
					Type:     schema.TypeString,
					Optional: true,
				},
				"address_3": {
					Type:     schema.TypeString,
					Optional: true,
				},
				"address_4": {
					Type:     schema.TypeString,
					Optional: true,
				},
				"city": {
					Type:     schema.TypeString,
					Optional: true,
				},
				"country": {
					Type:     schema.TypeString,
					Optional: true,
				},
				"county": {
					Type:     schema.TypeString,
					Optional: true,
				},
				"postal_code": {
					Type:     schema.TypeString,
					Optional: true,
				},
				"province": {
					Type:     schema.TypeString,
					Optional: true,
				},
				names.AttrState: {
					Type:     schema.TypeString,
					Optional: true,
				},
			},
		},
	}
}
