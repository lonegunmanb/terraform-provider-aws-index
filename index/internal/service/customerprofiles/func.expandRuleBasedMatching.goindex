package github.com/hashicorp/terraform-provider-aws/internal/service/customerprofiles
import (
	"context"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/customerprofiles"
	"github.com/aws/aws-sdk-go-v2/service/customerprofiles/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/retry"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandRuleBasedMatching(tfMap []any) *types.RuleBasedMatchingRequest {
	if len(tfMap) == 0 {
		return nil
	}

	tfList, ok := tfMap[0].(map[string]any)
	if !ok {
		return nil
	}

	apiObject := &types.RuleBasedMatchingRequest{}

	if v, ok := tfList[names.AttrEnabled]; ok {
		apiObject.Enabled = aws.Bool(v.(bool))
	}

	if v, ok := tfList["attribute_types_selector"]; ok {
		apiObject.AttributeTypesSelector = expandAttributesTypesSelector(v.([]any))
	}

	if v, ok := tfList["conflict_resolution"]; ok {
		apiObject.ConflictResolution = expandConflictResolution(v.([]any))
	}

	if v, ok := tfList["exporting_config"]; ok {
		apiObject.ExportingConfig = expandExportingConfig(v.([]any))
	}

	if v, ok := tfList["matching_rules"]; ok {
		apiObject.MatchingRules = expandMatchingRules(v.(*schema.Set).List())
	}

	if v, ok := tfList["max_allowed_rule_level_for_matching"]; ok {
		apiObject.MaxAllowedRuleLevelForMatching = aws.Int32(int32(v.(int)))
	}

	if v, ok := tfList["max_allowed_rule_level_for_merging"]; ok {
		apiObject.MaxAllowedRuleLevelForMerging = aws.Int32(int32(v.(int)))
	}

	return apiObject
}
