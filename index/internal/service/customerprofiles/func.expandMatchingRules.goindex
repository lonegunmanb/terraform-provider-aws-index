package github.com/hashicorp/terraform-provider-aws/internal/service/customerprofiles
import (
	"context"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/customerprofiles"
	"github.com/aws/aws-sdk-go-v2/service/customerprofiles/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandMatchingRules(tfMap []any) []types.MatchingRule {
	if len(tfMap) == 0 {
		return nil
	}

	apiArray := make([]types.MatchingRule, 0, len(tfMap))

	for _, object := range tfMap {
		if object == nil {
			continue
		}

		matchingRule := object.(map[string]any)

		apiObject := types.MatchingRule{}

		if v, ok := matchingRule[names.AttrRule]; ok {
			apiObject.Rule = flex.ExpandStringValueList(v.([]any))
		}

		apiArray = append(apiArray, apiObject)
	}

	return apiArray
}
