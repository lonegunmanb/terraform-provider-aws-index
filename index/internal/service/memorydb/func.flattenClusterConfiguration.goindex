package github.com/hashicorp/terraform-provider-aws/internal/service/memorydb
import (
	"context"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/memorydb"
	awstypes "github.com/aws/aws-sdk-go-v2/service/memorydb/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenClusterConfiguration(apiObject *awstypes.ClusterConfiguration) []any {
	if apiObject == nil {
		return []any{}
	}

	tfMap := map[string]any{
		names.AttrDescription:        aws.ToString(apiObject.Description),
		names.AttrEngine:             aws.ToString(apiObject.Engine),
		names.AttrEngineVersion:      aws.ToString(apiObject.EngineVersion),
		"maintenance_window":         aws.ToString(apiObject.MaintenanceWindow),
		names.AttrName:               aws.ToString(apiObject.Name),
		"node_type":                  aws.ToString(apiObject.NodeType),
		"num_shards":                 aws.ToInt32(apiObject.NumShards),
		names.AttrParameterGroupName: aws.ToString(apiObject.ParameterGroupName),
		names.AttrPort:               aws.ToInt32(apiObject.Port),
		"snapshot_retention_limit":   aws.ToInt32(apiObject.SnapshotRetentionLimit),
		"snapshot_window":            aws.ToString(apiObject.SnapshotWindow),
		"subnet_group_name":          aws.ToString(apiObject.SubnetGroupName),
		names.AttrTopicARN:           aws.ToString(apiObject.TopicArn),
		names.AttrVPCID:              aws.ToString(apiObject.VpcId),
	}

	return []any{tfMap}
}
