package github.com/hashicorp/terraform-provider-aws/internal/service/memorydb
import (
	"context"
	"fmt"
	"log"
	"strconv"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/memorydb"
	awstypes "github.com/aws/aws-sdk-go-v2/service/memorydb/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/sdkv2"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenShards(apiObjects []awstypes.Shard) *schema.Set {
	tfSet := schema.NewSet(clusterShardHash, nil)

	for _, apiObject := range apiObjects {
		nodeSet := schema.NewSet(clusterShardNodeHash, nil)

		for _, apiObject := range apiObject.Nodes {
			nodeSet.Add(map[string]any{
				names.AttrAvailabilityZone: aws.ToString(apiObject.AvailabilityZone),
				names.AttrCreateTime:       aws.ToTime(apiObject.CreateTime).Format(time.RFC3339),
				names.AttrEndpoint:         flattenEndpoint(apiObject.Endpoint),
				names.AttrName:             aws.ToString(apiObject.Name),
			})
		}

		tfSet.Add(map[string]any{
			names.AttrName: aws.ToString(apiObject.Name),
			"num_nodes":    aws.ToInt32(apiObject.NumberOfNodes),
			"nodes":        nodeSet,
			"slots":        aws.ToString(apiObject.Slots),
		})
	}

	return tfSet
}
