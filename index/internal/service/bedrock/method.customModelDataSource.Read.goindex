package github.com/hashicorp/terraform-provider-aws/internal/service/bedrock
import (
	"context"
	"fmt"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/hashicorp/terraform-plugin-framework-timetypes/timetypes"
	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwflex "github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (d *customModelDataSource) Read(ctx context.Context, request datasource.ReadRequest, response *datasource.ReadResponse) {
	var data customModelDataSourceModel
	response.Diagnostics.Append(request.Config.Get(ctx, &data)...)
	if response.Diagnostics.HasError() {
		return
	}

	conn := d.Meta().BedrockClient(ctx)

	modelID := data.ModelID.ValueString()
	outputGM, err := findCustomModelByID(ctx, conn, modelID)

	if err != nil {
		response.Diagnostics.AddError(fmt.Sprintf("reading Bedrock Custom Model (%s)", modelID), err.Error())

		return
	}

	jobARN := aws.ToString(outputGM.JobArn)
	outputGJ, err := findModelCustomizationJobByID(ctx, conn, jobARN)

	if err != nil {
		response.Diagnostics.AddError(fmt.Sprintf("reading Bedrock Custom Model customization job (%s)", jobARN), err.Error())

		return
	}

	response.Diagnostics.Append(fwflex.Flatten(ctx, outputGM, &data)...)
	if response.Diagnostics.HasError() {
		return
	}

	// Some fields are only available in GetModelCustomizationJobOutput.
	var dataFromGetModelCustomizationJob customModelResourceModel
	response.Diagnostics.Append(fwflex.Flatten(ctx, outputGJ, &dataFromGetModelCustomizationJob)...)
	if response.Diagnostics.HasError() {
		return
	}

	data.ID = types.StringValue(modelID)
	data.JobName = dataFromGetModelCustomizationJob.JobName
	data.ValidationDataConfig = dataFromGetModelCustomizationJob.ValidationDataConfig

	jobTags, err := listTags(ctx, conn, jobARN)

	if err != nil {
		response.Diagnostics.AddError(fmt.Sprintf("reading Bedrock Custom Model customization job (%s) tags", jobARN), err.Error())

		return
	}

	data.JobTags = tftags.FlattenStringValueMap(ctx, jobTags.IgnoreAWS().Map())

	modelARN := aws.ToString(outputGM.ModelArn)
	modelTags, err := listTags(ctx, conn, modelARN)

	if err != nil {
		response.Diagnostics.AddError(fmt.Sprintf("reading Bedrock Custom Model (%s) tags", modelARN), err.Error())

		return
	}

	data.ModelTags = tftags.FlattenStringValueMap(ctx, modelTags.IgnoreAWS().Map())

	response.Diagnostics.Append(response.State.Set(ctx, &data)...)
}
