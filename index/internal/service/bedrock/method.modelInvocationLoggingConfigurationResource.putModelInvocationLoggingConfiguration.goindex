package github.com/hashicorp/terraform-provider-aws/internal/service/bedrock
import (
	"context"
	"fmt"

	"github.com/aws/aws-sdk-go-v2/service/bedrock"
	awstypes "github.com/aws/aws-sdk-go-v2/service/bedrock/types"
	"github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/path"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/fwdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwflex "github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (r *modelInvocationLoggingConfigurationResource) putModelInvocationLoggingConfiguration(ctx context.Context, data *modelInvocationLoggingConfigurationResourceModel) diag.Diagnostics {
	var diags diag.Diagnostics
	conn := r.Meta().BedrockClient(ctx)

	input := &bedrock.PutModelInvocationLoggingConfigurationInput{}
	diags.Append(fwflex.Expand(ctx, data, input)...)
	if diags.HasError() {
		return diags
	}

	// Example:
	//   ValidationException: Failed to validate permissions for log group: <group>, with role: <role>. Verify
	//   the IAM role permissions are correct.
	_, err := tfresource.RetryWhenIsAErrorMessageContains[*awstypes.ValidationException](ctx, propagationTimeout,
		func() (any, error) {
			return conn.PutModelInvocationLoggingConfiguration(ctx, input)
		},
		"Failed to validate permissions for log group",
	)

	if err != nil {
		diags.AddError("putting Bedrock Model Invocation Logging Configuration", err.Error())

		return diags
	}

	return diags
}
