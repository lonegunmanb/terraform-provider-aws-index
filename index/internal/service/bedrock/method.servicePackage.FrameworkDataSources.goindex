package github.com/hashicorp/terraform-provider-aws/internal/service/bedrock
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/service/bedrock"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) FrameworkDataSources(ctx context.Context) []*inttypes.ServicePackageFrameworkDataSource {
	return []*inttypes.ServicePackageFrameworkDataSource{
		{
			Factory:  newCustomModelDataSource,
			TypeName: "aws_bedrock_custom_model",
			Name:     "Custom Model",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newCustomModelsDataSource,
			TypeName: "aws_bedrock_custom_models",
			Name:     "Custom Models",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newFoundationModelDataSource,
			TypeName: "aws_bedrock_foundation_model",
			Name:     "Foundation Model",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newFoundationModelsDataSource,
			TypeName: "aws_bedrock_foundation_models",
			Name:     "Foundation Models",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newInferenceProfileDataSource,
			TypeName: "aws_bedrock_inference_profile",
			Name:     "Inference Profile",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newInferenceProfilesDataSource,
			TypeName: "aws_bedrock_inference_profiles",
			Name:     "Inference Profiles",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
	}
}
