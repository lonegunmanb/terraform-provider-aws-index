package github.com/hashicorp/terraform-provider-aws/internal/service/bedrock
import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func upgradeLoggingConfigModelFromV0(ctx context.Context, old fwtypes.ObjectValueOf[loggingConfigModelV0], diags *diag.Diagnostics) fwtypes.ListNestedObjectValueOf[loggingConfigModel] {
	if old.IsNull() {
		return fwtypes.NewListNestedObjectValueOfNull[loggingConfigModel](ctx)
	}

	var loggingConfigV0 loggingConfigModelV0
	diags.Append(old.As(ctx, &loggingConfigV0, basetypes.ObjectAsOptions{})...)

	newList := []loggingConfigModel{
		{
			CloudWatchConfig:             upgradeCloudWatchConfigModelFromV0(ctx, loggingConfigV0.CloudWatchConfig, diags),
			EmbeddingDataDeliveryEnabled: loggingConfigV0.EmbeddingDataDeliveryEnabled,
			ImageDataDeliveryEnabled:     loggingConfigV0.ImageDataDeliveryEnabled,
			S3Config:                     upgradeS3ConfigModel(ctx, loggingConfigV0.S3Config, diags),
			TextDataDeliveryEnabled:      loggingConfigV0.TextDataDeliveryEnabled,
			VideoDataDeliveryEnabled:     loggingConfigV0.VideoDataDeliveryEnabled,
		},
	}

	result, d := fwtypes.NewListNestedObjectValueOfValueSlice(ctx, newList)
	diags.Append(d...)

	return result
}
