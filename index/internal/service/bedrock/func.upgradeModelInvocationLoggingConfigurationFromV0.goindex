package github.com/hashicorp/terraform-provider-aws/internal/service/bedrock
import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func upgradeModelInvocationLoggingConfigurationFromV0(ctx context.Context, request resource.UpgradeStateRequest, response *resource.UpgradeStateResponse) {
	var schemaDataV0 modelInvocationLoggingConfigurationResourceModelV0
	response.Diagnostics.Append(request.State.Get(ctx, &schemaDataV0)...)
	if response.Diagnostics.HasError() {
		return
	}

	schemaDataV1 := modelInvocationLoggingConfigurationResourceModel{
		ID:            schemaDataV0.ID,
		LoggingConfig: upgradeLoggingConfigModelFromV0(ctx, schemaDataV0.LoggingConfig, &response.Diagnostics),
	}

	response.Diagnostics.Append(response.State.Set(ctx, schemaDataV1)...)
}
