package github.com/hashicorp/terraform-provider-aws/internal/service/cloudfrontkeyvaluestore
import (
	"context"
	"slices"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cloudfrontkeyvaluestore"
	awstypes "github.com/aws/aws-sdk-go-v2/service/cloudfrontkeyvaluestore/types"
	"github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/path"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/int64default"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/int64planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/fwdiag"
	intflex "github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	"github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func FindResourceKeyValuePairsForKeyValueStore(ctx context.Context, conn *cloudfrontkeyvaluestore.Client, kvsARN string) (*cloudfrontkeyvaluestore.DescribeKeyValueStoreOutput, []awstypes.ListKeysResponseListItem, error) {
	kvs, err := FindKeyValueStoreByARN(ctx, conn, kvsARN)
	if err != nil {
		return nil, nil, err
	}

	input := &cloudfrontkeyvaluestore.ListKeysInput{
		KvsARN: aws.String(kvsARN),
	}

	var keyValuePairs []awstypes.ListKeysResponseListItem

	paginator := cloudfrontkeyvaluestore.NewListKeysPaginator(conn, input)
	for paginator.HasMorePages() {
		page, err := paginator.NextPage(ctx)

		if err != nil {
			return nil, nil, err
		}

		if page != nil {
			keyValuePairs = append(keyValuePairs, page.Items...)
		}
	}

	return kvs, keyValuePairs, nil
}
