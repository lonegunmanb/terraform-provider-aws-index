package github.com/hashicorp/terraform-provider-aws/internal/service/fis
import (
	"context"
	"errors"
	"log"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/fis"
	awstypes "github.com/aws/aws-sdk-go-v2/service/fis/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	sdkid "github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandExperimentTemplateLogConfiguration(l []any) *awstypes.CreateExperimentTemplateLogConfigurationInput {
	if len(l) == 0 {
		return nil
	}

	raw := l[0].(map[string]any)

	config := awstypes.CreateExperimentTemplateLogConfigurationInput{
		LogSchemaVersion: aws.Int32(int32(raw["log_schema_version"].(int))),
	}

	if v, ok := raw["cloudwatch_logs_configuration"].([]any); ok && len(v) > 0 {
		config.CloudWatchLogsConfiguration = expandExperimentTemplateCloudWatchLogsConfiguration(v)
	}

	if v, ok := raw["s3_configuration"].([]any); ok && len(v) > 0 {
		config.S3Configuration = expandExperimentTemplateS3Configuration(v)
	}

	return &config
}
