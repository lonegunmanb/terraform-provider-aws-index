package github.com/hashicorp/terraform-provider-aws/internal/service/fis
import (
	"context"
	"errors"
	"log"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/fis"
	awstypes "github.com/aws/aws-sdk-go-v2/service/fis/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	sdkid "github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandExperimentTemplateReportConfigurationDataSourcesInput(tfMap map[string]any) *awstypes.ExperimentTemplateReportConfigurationDataSourcesInput {
	if tfMap == nil {
		return nil
	}

	apiObject := &awstypes.ExperimentTemplateReportConfigurationDataSourcesInput{}

	if v, ok := tfMap["cloudwatch_dashboard"].([]any); ok && len(v) > 0 {
		dashboards := make([]awstypes.ReportConfigurationCloudWatchDashboardInput, 0, len(v))

		for _, tfMapRaw := range v {
			tfMap, ok := tfMapRaw.(map[string]any)
			if !ok {
				continue
			}

			if v, ok := tfMap["dashboard_arn"].(string); ok && v != "" {
				dashboards = append(dashboards, awstypes.ReportConfigurationCloudWatchDashboardInput{
					DashboardIdentifier: aws.String(v),
				})
			}
		}

		apiObject.CloudWatchDashboards = dashboards
	}

	return apiObject
}
