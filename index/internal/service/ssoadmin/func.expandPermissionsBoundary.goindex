package github.com/hashicorp/terraform-provider-aws/internal/service/ssoadmin
import (
	"context"
	"fmt"
	"log"
	"strings"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ssoadmin"
	awstypes "github.com/aws/aws-sdk-go-v2/service/ssoadmin/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandPermissionsBoundary(tfMap map[string]any) *awstypes.PermissionsBoundary {
	if tfMap == nil {
		return nil
	}

	apiObject := &awstypes.PermissionsBoundary{}

	if v, ok := tfMap["customer_managed_policy_reference"].([]any); ok && len(v) > 0 {
		if cmpr, ok := v[0].(map[string]any); ok {
			apiObject.CustomerManagedPolicyReference = expandCustomerManagedPolicyReference(cmpr)
		}
	}
	if v, ok := tfMap["managed_policy_arn"].(string); ok && v != "" {
		apiObject.ManagedPolicyArn = aws.String(v)
	}

	return apiObject
}
