package github.com/hashicorp/terraform-provider-aws/internal/service/ssoadmin
import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/ssoadmin"
	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwflex "github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (d *permissionSetsDataSource) Read(ctx context.Context, request datasource.ReadRequest, response *datasource.ReadResponse) {
	var data permissionSetsDataSourceModel
	response.Diagnostics.Append(request.Config.Get(ctx, &data)...)
	if response.Diagnostics.HasError() {
		return
	}

	conn := d.Meta().SSOAdminClient(ctx)

	var arns []string
	input := &ssoadmin.ListPermissionSetsInput{
		InstanceArn: fwflex.StringFromFramework(ctx, data.InstanceARN),
	}
	pages := ssoadmin.NewListPermissionSetsPaginator(conn, input)
	for pages.HasMorePages() {
		page, err := pages.NextPage(ctx)

		if err != nil {
			response.Diagnostics.AddError("listing SSO Permission Sets", err.Error())

			return
		}

		arns = append(arns, page.PermissionSets...)
	}

	data.ID = fwflex.StringValueToFramework(ctx, data.InstanceARN.ValueString())
	data.ARNs = fwflex.FlattenFrameworkStringValueListOfString(ctx, arns)

	response.Diagnostics.Append(response.State.Set(ctx, &data)...)
}
