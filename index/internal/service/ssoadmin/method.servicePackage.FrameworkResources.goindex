package github.com/hashicorp/terraform-provider-aws/internal/service/ssoadmin
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ssoadmin"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) FrameworkResources(ctx context.Context) []*inttypes.ServicePackageFrameworkResource {
	return []*inttypes.ServicePackageFrameworkResource{
		{
			Factory:  newApplicationResource,
			TypeName: "aws_ssoadmin_application",
			Name:     "Application",
			Tags:     unique.Make(inttypes.ServicePackageResourceTags{}),
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
			Identity: inttypes.RegionalResourceWithGlobalARNFormat(inttypes.WithIdentityDuplicateAttrs(names.AttrID, "application_arn"),
				inttypes.WithIdentityFix(),
			),
			Import: inttypes.FrameworkImport{
				WrappedImport: true,
			},
		},
		{
			Factory:  newApplicationAccessScopeResource,
			TypeName: "aws_ssoadmin_application_access_scope",
			Name:     "Application Access Scope",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newApplicationAssignmentResource,
			TypeName: "aws_ssoadmin_application_assignment",
			Name:     "Application Assignment",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newApplicationAssignmentConfigurationResource,
			TypeName: "aws_ssoadmin_application_assignment_configuration",
			Name:     "Application Assignment Configuration",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
			Identity: inttypes.RegionalResourceWithGlobalARNFormatNamed("application_arn", inttypes.WithIdentityDuplicateAttrs(names.AttrID)),
			Import: inttypes.FrameworkImport{
				WrappedImport: true,
			},
		},
		{
			Factory:  newTrustedTokenIssuerResource,
			TypeName: "aws_ssoadmin_trusted_token_issuer",
			Name:     "Trusted Token Issuer",
			Tags:     unique.Make(inttypes.ServicePackageResourceTags{}),
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
			Identity: inttypes.RegionalResourceWithGlobalARNFormat(inttypes.WithIdentityDuplicateAttrs(names.AttrID)),
			Import: inttypes.FrameworkImport{
				WrappedImport: true,
			},
		},
	}
}
