package github.com/hashicorp/terraform-provider-aws/internal/service/ssoadmin
import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ssoadmin"
	awstypes "github.com/aws/aws-sdk-go-v2/service/ssoadmin/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func dataSourceInstancesRead(ctx context.Context, d *schema.ResourceData, meta any) diag.Diagnostics {
	var diags diag.Diagnostics
	conn := meta.(*conns.AWSClient).SSOAdminClient(ctx)

	output, err := findInstanceMetadatas(ctx, conn)

	if err != nil {
		return sdkdiag.AppendErrorf(diags, "reading SSO Instances: %s", err)
	}

	var identityStoreIDs, arns []string

	for _, v := range output {
		identityStoreIDs = append(identityStoreIDs, aws.ToString(v.IdentityStoreId))
		arns = append(arns, aws.ToString(v.InstanceArn))
	}

	d.SetId(meta.(*conns.AWSClient).Region(ctx))
	d.Set(names.AttrARNs, arns)
	d.Set("identity_store_ids", identityStoreIDs)

	return diags
}
