package github.com/hashicorp/terraform-provider-aws/internal/service/codepipeline
import (
	"context"
	"crypto/sha256"
	"encoding/hex"
	"errors"
	"fmt"
	"log"
	"strings"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/codepipeline"
	"github.com/aws/aws-sdk-go-v2/service/codepipeline/types"
	"github.com/hashicorp/go-cty/cty"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/sdkv2"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenConditionRule(apiObjects types.RuleDeclaration) map[string]any {
	tfMap := map[string]any{}

	if v := apiObjects.Name; v != nil {
		tfMap[names.AttrName] = aws.ToString(v)
	}

	if v := apiObjects.RuleTypeId; v != nil {
		tfMap["rule_type_id"] = []any{flattenConditionRuleTypeId(v)}
	}

	if v := apiObjects.Commands; v != nil {
		var tfList []any
		for _, command := range apiObjects.Commands {
			tfList = append(tfList, command)
		}
		tfMap["commands"] = tfList
	}

	if v := apiObjects.Configuration; v != nil {
		tfMap[names.AttrConfiguration] = v
	}

	if v := apiObjects.InputArtifacts; v != nil {
		tfMap["input_artifacts"] = flattenInputArtifacts(v)
	}

	if v := apiObjects.Region; v != nil {
		tfMap[names.AttrRegion] = aws.ToString(v)
	}

	if v := apiObjects.RoleArn; v != nil {
		tfMap[names.AttrRoleARN] = aws.ToString(v)
	}

	if v := apiObjects.TimeoutInMinutes; v != nil {
		tfMap["timeout_in_minutes"] = aws.ToInt32(v)
	}

	return tfMap
}
