package github.com/hashicorp/terraform-provider-aws/internal/service/rds
import (
	"context"
	"log"
	"slices"
	"strings"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/rds"
	"github.com/aws/aws-sdk-go-v2/service/rds/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandOptionConfigurations(tfList []any) []types.OptionConfiguration {
	var apiObjects []types.OptionConfiguration

	for _, tfMapRaw := range tfList {
		tfMap := tfMapRaw.(map[string]any)

		apiObject := types.OptionConfiguration{
			OptionName: aws.String(tfMap["option_name"].(string)),
		}

		if v, ok := tfMap["db_security_group_memberships"].(*schema.Set); ok && v.Len() > 0 {
			apiObject.DBSecurityGroupMemberships = flex.ExpandStringValueSet(v)
		}

		if v, ok := tfMap["option_settings"].(*schema.Set); ok && v.Len() > 0 {
			apiObject.OptionSettings = expandOptionSettings(v.List())
		}

		if v, ok := tfMap[names.AttrPort].(int); ok && v != 0 {
			apiObject.Port = aws.Int32(int32(v))
		}

		if v, ok := tfMap[names.AttrVersion].(string); ok && v != "" {
			apiObject.OptionVersion = aws.String(v)
		}

		if v, ok := tfMap["vpc_security_group_memberships"].(*schema.Set); ok && v.Len() > 0 {
			apiObject.VpcSecurityGroupMemberships = flex.ExpandStringValueSet(v)
		}

		apiObjects = append(apiObjects, apiObject)
	}

	return apiObjects
}
