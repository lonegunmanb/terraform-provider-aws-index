package github.com/hashicorp/terraform-provider-aws/internal/service/rds
import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	"github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/smerr"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (d *dataSourceGlobalCluster) Schema(ctx context.Context, _ datasource.SchemaRequest, response *datasource.SchemaResponse) {
	response.Schema = schema.Schema{
		Attributes: map[string]schema.Attribute{
			names.AttrARN: framework.ARNAttributeComputedOnly(),
			names.AttrDatabaseName: schema.StringAttribute{
				Computed: true,
			},
			names.AttrDeletionProtection: schema.BoolAttribute{
				Computed: true,
			},
			names.AttrEndpoint: schema.StringAttribute{
				Computed: true,
			},
			names.AttrEngine: schema.StringAttribute{
				Computed: true,
			},
			"engine_lifecycle_support": schema.StringAttribute{
				Computed: true,
			},
			names.AttrEngineVersion: schema.StringAttribute{
				Computed: true,
			},
			names.AttrIdentifier: schema.StringAttribute{
				Required: true,
			},
			"members": schema.ListAttribute{
				CustomType: fwtypes.NewListNestedObjectTypeOf[globalClusterMembersModel](ctx),
				Computed:   true,
			},
			names.AttrResourceID: schema.StringAttribute{
				Computed: true,
			},
			names.AttrStorageEncrypted: schema.BoolAttribute{
				Computed: true,
			},
			names.AttrTags: tftags.TagsAttributeComputedOnly(),
		},
	}
}
