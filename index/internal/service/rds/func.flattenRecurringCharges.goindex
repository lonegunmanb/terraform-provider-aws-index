package github.com/hashicorp/terraform-provider-aws/internal/service/rds
import (
	"context"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/rds"
	"github.com/aws/aws-sdk-go-v2/service/rds/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenRecurringCharges(apiObjects []types.RecurringCharge) []any {
	if len(apiObjects) == 0 {
		return []any{}
	}

	var tfList []any
	for _, apiObject := range apiObjects {
		tfMap := map[string]any{
			"recurring_charge_amount":    aws.ToFloat64(apiObject.RecurringChargeAmount),
			"recurring_charge_frequency": aws.ToString(apiObject.RecurringChargeFrequency),
		}

		tfList = append(tfList, tfMap)
	}

	return tfList
}
