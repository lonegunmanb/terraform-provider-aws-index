package github.com/hashicorp/terraform-provider-aws/internal/service/rds
import (
	"context"
	"fmt"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/rds"
	"github.com/aws/aws-sdk-go-v2/service/rds/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (o *blueGreenOrchestrator) CleanUp(ctx context.Context) {
	if len(o.cleanupWaiters) == 0 {
		return
	}

	waiter, waiters := o.cleanupWaiters[0], o.cleanupWaiters[1:]
	waiter(ctx, o.conn)
	for _, waiter := range waiters {
		// Skip the delay for subsequent waiters. Since we're waiting for all of the waiters
		// to complete, we don't need to run them concurrently, saving on network traffic.
		waiter(ctx, o.conn, tfresource.WithDelay(0))
	}
}
