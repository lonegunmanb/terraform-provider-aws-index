package github.com/hashicorp/terraform-provider-aws/internal/service/rds
import (
	"context"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/rds"
	"github.com/aws/aws-sdk-go-v2/service/rds/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandConnectionPoolConfiguration(tfMap map[string]any) *types.ConnectionPoolConfiguration {
	if tfMap == nil {
		return nil
	}

	apiObject := &types.ConnectionPoolConfiguration{
		ConnectionBorrowTimeout:   aws.Int32(int32(tfMap["connection_borrow_timeout"].(int))),
		MaxConnectionsPercent:     aws.Int32(int32(tfMap["max_connections_percent"].(int))),
		MaxIdleConnectionsPercent: aws.Int32(int32(tfMap["max_idle_connections_percent"].(int))),
	}

	if v, ok := tfMap["init_query"].(string); ok && v != "" {
		apiObject.InitQuery = aws.String(v)
	}

	if v, ok := tfMap["session_pinning_filters"].(*schema.Set); ok && v.Len() > 0 {
		apiObject.SessionPinningFilters = flex.ExpandStringValueSet(v)
	}

	return apiObject
}
