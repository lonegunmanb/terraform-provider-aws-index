package github.com/hashicorp/terraform-provider-aws/internal/service/rds
import (
	"context"
	"fmt"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/rds"
	"github.com/aws/aws-sdk-go-v2/service/rds/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (h *instanceHandler) modifyTarget(ctx context.Context, identifier string, d *schema.ResourceData, timeout time.Duration, operation string) error {
	modifyInput := &rds.ModifyDBInstanceInput{
		ApplyImmediately:     aws.Bool(true),
		DBInstanceIdentifier: aws.String(identifier),
	}

	needsModify, diags := dbInstancePopulateModify(modifyInput, d)
	if diags.HasError() {
		return fmt.Errorf("populating modify input: %s", sdkdiag.DiagnosticsString(diags))
	}

	if needsModify {
		log.Printf("[DEBUG] %s: Updating Green environment", operation)

		err := dbInstanceModify(ctx, h.conn, d.Id(), modifyInput, timeout)
		if err != nil {
			return fmt.Errorf("updating Green environment: %w", err)
		}
	}

	return nil
}
