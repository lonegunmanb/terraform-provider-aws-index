package github.com/hashicorp/terraform-provider-aws/internal/service/rds
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/service/rds"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) SDKDataSources(ctx context.Context) []*inttypes.ServicePackageSDKDataSource {
	return []*inttypes.ServicePackageSDKDataSource{
		{
			Factory:  dataSourceClusterSnapshot,
			TypeName: "aws_db_cluster_snapshot",
			Name:     "DB Cluster Snapshot",
			Tags:     unique.Make(inttypes.ServicePackageResourceTags{}),
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  dataSourceEventCategories,
			TypeName: "aws_db_event_categories",
			Name:     "Event Categories",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  dataSourceInstance,
			TypeName: "aws_db_instance",
			Name:     "DB Instance",
			Tags:     unique.Make(inttypes.ServicePackageResourceTags{}),
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  dataSourceInstances,
			TypeName: "aws_db_instances",
			Name:     "DB Instances",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  dataSourceParameterGroup,
			TypeName: "aws_db_parameter_group",
			Name:     "DB Parameter Group",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  dataSourceProxy,
			TypeName: "aws_db_proxy",
			Name:     "DB Proxy",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  dataSourceSnapshot,
			TypeName: "aws_db_snapshot",
			Name:     "DB Snapshot",
			Tags:     unique.Make(inttypes.ServicePackageResourceTags{}),
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  dataSourceSubnetGroup,
			TypeName: "aws_db_subnet_group",
			Name:     "DB Subnet Group",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  dataSourceCertificate,
			TypeName: "aws_rds_certificate",
			Name:     "Certificate",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  dataSourceCluster,
			TypeName: "aws_rds_cluster",
			Name:     "Cluster",
			Tags:     unique.Make(inttypes.ServicePackageResourceTags{}),
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  dataSourceClusters,
			TypeName: "aws_rds_clusters",
			Name:     "Clusters",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  dataSourceEngineVersion,
			TypeName: "aws_rds_engine_version",
			Name:     "Engine Version",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  dataSourceOrderableInstance,
			TypeName: "aws_rds_orderable_db_instance",
			Name:     "Orderable DB Instance",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  dataSourceReservedOffering,
			TypeName: "aws_rds_reserved_instance_offering",
			Name:     "Reserved Instance Offering",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
	}
}
