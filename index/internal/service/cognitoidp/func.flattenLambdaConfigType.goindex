package github.com/hashicorp/terraform-provider-aws/internal/service/cognitoidp
import (
	"bytes"
	"context"
	"fmt"
	"log"
	"reflect"
	"strings"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cognitoidentityprovider"
	awstypes "github.com/aws/aws-sdk-go-v2/service/cognitoidentityprovider/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenLambdaConfigType(apiObject *awstypes.LambdaConfigType) []any {
	if apiObject == nil {
		return nil
	}

	tfMap := map[string]any{}

	if apiObject.CreateAuthChallenge != nil {
		tfMap["create_auth_challenge"] = aws.ToString(apiObject.CreateAuthChallenge)
	}

	if apiObject.CustomEmailSender != nil {
		tfMap["custom_email_sender"] = flattenCustomEmailLambdaVersionConfigType(apiObject.CustomEmailSender)
	}

	if apiObject.CustomMessage != nil {
		tfMap["custom_message"] = aws.ToString(apiObject.CustomMessage)
	}

	if apiObject.CustomSMSSender != nil {
		tfMap["custom_sms_sender"] = flattenCustomSMSLambdaVersionConfigType(apiObject.CustomSMSSender)
	}

	if apiObject.DefineAuthChallenge != nil {
		tfMap["define_auth_challenge"] = aws.ToString(apiObject.DefineAuthChallenge)
	}

	if apiObject.KMSKeyID != nil {
		tfMap[names.AttrKMSKeyID] = aws.ToString(apiObject.KMSKeyID)
	}

	if apiObject.PostAuthentication != nil {
		tfMap["post_authentication"] = aws.ToString(apiObject.PostAuthentication)
	}

	if apiObject.PostConfirmation != nil {
		tfMap["post_confirmation"] = aws.ToString(apiObject.PostConfirmation)
	}

	if apiObject.PreAuthentication != nil {
		tfMap["pre_authentication"] = aws.ToString(apiObject.PreAuthentication)
	}

	if apiObject.PreSignUp != nil {
		tfMap["pre_sign_up"] = aws.ToString(apiObject.PreSignUp)
	}

	if apiObject.PreTokenGeneration != nil {
		tfMap["pre_token_generation"] = aws.ToString(apiObject.PreTokenGeneration)
	}

	if apiObject.PreTokenGenerationConfig != nil {
		tfMap["pre_token_generation_config"] = flattenPreTokenGenerationVersionConfigType(apiObject.PreTokenGenerationConfig)
	}

	if apiObject.UserMigration != nil {
		tfMap["user_migration"] = aws.ToString(apiObject.UserMigration)
	}

	if apiObject.VerifyAuthChallengeResponse != nil {
		tfMap["verify_auth_challenge_response"] = aws.ToString(apiObject.VerifyAuthChallengeResponse)
	}

	if len(tfMap) > 0 {
		return []any{tfMap}
	}

	return []any{}
}
