package github.com/hashicorp/terraform-provider-aws/internal/service/cognitoidp
import (
	"context"
	"fmt"

	"github.com/hashicorp/terraform-plugin-framework-timetypes/timetypes"
	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwflex "github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (d *userPoolDataSource) Schema(ctx context.Context, request datasource.SchemaRequest, response *datasource.SchemaResponse) {
	response.Schema = schema.Schema{
		Attributes: map[string]schema.Attribute{
			"account_recovery_setting": framework.DataSourceComputedListOfObjectAttribute[accountRecoverySettingTypeModel](ctx),
			"admin_create_user_config": framework.DataSourceComputedListOfObjectAttribute[adminCreateUserConfigTypeModel](ctx),
			names.AttrARN: schema.StringAttribute{
				Computed: true,
			},
			"auto_verified_attributes": schema.ListAttribute{
				CustomType:  fwtypes.ListOfStringType,
				ElementType: types.StringType,
				Computed:    true,
			},
			names.AttrCreationDate: schema.StringAttribute{
				CustomType: timetypes.RFC3339Type{},
				Computed:   true,
			},
			"custom_domain": schema.StringAttribute{
				Computed: true,
			},
			names.AttrDeletionProtection: schema.StringAttribute{
				Computed: true,
			},
			"device_configuration": framework.DataSourceComputedListOfObjectAttribute[deviceConfigurationTypeModel](ctx),
			names.AttrDomain: schema.StringAttribute{
				Computed: true,
			},
			"email_configuration": framework.DataSourceComputedListOfObjectAttribute[emailConfigurationTypeModel](ctx),
			"estimated_number_of_users": schema.Int64Attribute{
				Computed: true,
			},
			names.AttrID:    framework.IDAttribute(),
			"lambda_config": framework.DataSourceComputedListOfObjectAttribute[lambdaConfigTypeModel](ctx),
			"last_modified_date": schema.StringAttribute{
				CustomType: timetypes.RFC3339Type{},
				Computed:   true,
			},
			"mfa_configuration": schema.StringAttribute{
				Computed: true,
			},
			names.AttrName: schema.StringAttribute{
				Computed: true,
			},
			"schema_attributes": framework.DataSourceComputedListOfObjectAttribute[schemaAttributeTypeModel](ctx),
			"sms_authentication_message": schema.StringAttribute{
				Computed: true,
			},
			"sms_configuration_failure": schema.StringAttribute{
				Computed: true,
			},
			"sms_verification_message": schema.StringAttribute{
				Computed: true,
			},
			names.AttrTags:      tftags.TagsAttributeComputedOnly(),
			"user_pool_add_ons": framework.DataSourceComputedListOfObjectAttribute[userPoolAddOnTypeModel](ctx),
			names.AttrUserPoolID: schema.StringAttribute{
				Required: true,
			},
			"user_pool_tags": deprecateMapAttribute(
				tftags.TagsAttributeComputedOnly(),
				`Use the attribute "tags" instead`,
			),
			"username_attributes": schema.ListAttribute{
				Computed:    true,
				CustomType:  fwtypes.ListOfStringType,
				ElementType: types.StringType,
			},
		},
	}
}
