package github.com/hashicorp/terraform-provider-aws/internal/service/cognitoidp
import (
	"context"
	"fmt"
	"log"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cognitoidentityprovider"
	awstypes "github.com/aws/aws-sdk-go-v2/service/cognitoidentityprovider/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattemNotifyConfigurationType(apiObject *awstypes.NotifyConfigurationType) []any {
	if apiObject == nil {
		return nil
	}

	tfMap := map[string]any{}

	if v := apiObject.BlockEmail; v != nil {
		tfMap["block_email"] = flattenNotifyEmailType(v)
	}

	if v := apiObject.From; v != nil {
		tfMap["from"] = aws.ToString(v)
	}

	if v := apiObject.MfaEmail; v != nil {
		tfMap["mfa_email"] = flattenNotifyEmailType(v)
	}

	if v := apiObject.NoActionEmail; v != nil {
		tfMap["no_action_email"] = flattenNotifyEmailType(v)
	}

	if v := apiObject.ReplyTo; v != nil {
		tfMap["reply_to"] = aws.ToString(v)
	}

	if v := apiObject.SourceArn; v != nil {
		tfMap["source_arn"] = aws.ToString(v)
	}

	return []any{tfMap}
}
