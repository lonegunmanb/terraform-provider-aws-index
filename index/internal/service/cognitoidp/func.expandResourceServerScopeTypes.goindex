package github.com/hashicorp/terraform-provider-aws/internal/service/cognitoidp
import (
	"context"
	"fmt"
	"log"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cognitoidentityprovider"
	awstypes "github.com/aws/aws-sdk-go-v2/service/cognitoidentityprovider/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandResourceServerScopeTypes(tfList []any) []awstypes.ResourceServerScopeType {
	apiObjects := make([]awstypes.ResourceServerScopeType, len(tfList))

	for i, tfMapRaw := range tfList {
		tfMap := tfMapRaw.(map[string]any)
		apiObject := awstypes.ResourceServerScopeType{}

		if v, ok := tfMap["scope_description"]; ok {
			apiObject.ScopeDescription = aws.String(v.(string))
		}

		if v, ok := tfMap["scope_name"]; ok {
			apiObject.ScopeName = aws.String(v.(string))
		}

		apiObjects[i] = apiObject
	}

	return apiObjects
}
