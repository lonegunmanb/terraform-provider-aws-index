package github.com/hashicorp/terraform-provider-aws/internal/service/cognitoidp
import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/arn"
	"github.com/aws/aws-sdk-go-v2/service/cognitoidentityprovider"
	awstypes "github.com/aws/aws-sdk-go-v2/service/cognitoidentityprovider/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func findUserPoolDescriptionTypesByName(ctx context.Context, conn *cognitoidentityprovider.Client, name string) ([]awstypes.UserPoolDescriptionType, error) {
	input := &cognitoidentityprovider.ListUserPoolsInput{
		MaxResults: aws.Int32(60),
	}
	var output []awstypes.UserPoolDescriptionType

	pages := cognitoidentityprovider.NewListUserPoolsPaginator(conn, input)
	for pages.HasMorePages() {
		page, err := pages.NextPage(ctx)

		if err != nil {
			return nil, err
		}

		for _, v := range page.UserPools {
			if aws.ToString(v.Name) == name {
				output = append(output, v)
			}
		}
	}

	return output, nil
}
