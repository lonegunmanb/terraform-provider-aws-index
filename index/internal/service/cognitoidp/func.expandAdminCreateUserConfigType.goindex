package github.com/hashicorp/terraform-provider-aws/internal/service/cognitoidp
import (
	"bytes"
	"context"
	"fmt"
	"log"
	"reflect"
	"strings"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cognitoidentityprovider"
	awstypes "github.com/aws/aws-sdk-go-v2/service/cognitoidentityprovider/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandAdminCreateUserConfigType(tfMap map[string]any) *awstypes.AdminCreateUserConfigType {
	apiObject := &awstypes.AdminCreateUserConfigType{}

	if v, ok := tfMap["allow_admin_create_user_only"]; ok {
		apiObject.AllowAdminCreateUserOnly = v.(bool)
	}

	if v, ok := tfMap["invite_message_template"]; ok {
		if tfList := v.([]any); len(tfList) > 0 {
			if tfMap, ok := tfList[0].(map[string]any); ok {
				imt := &awstypes.MessageTemplateType{}

				if v, ok := tfMap["email_message"]; ok {
					imt.EmailMessage = aws.String(v.(string))
				}

				if v, ok := tfMap["email_subject"]; ok {
					imt.EmailSubject = aws.String(v.(string))
				}

				if v, ok := tfMap["sms_message"]; ok {
					imt.SMSMessage = aws.String(v.(string))
				}

				apiObject.InviteMessageTemplate = imt
			}
		}
	}

	return apiObject
}
