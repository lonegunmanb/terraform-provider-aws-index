package github.com/hashicorp/terraform-provider-aws/internal/service/cognitoidp
import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/cognitoidentityprovider/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func dataSourceUserPoolClient() *schema.Resource {
	return &schema.Resource{
		ReadWithoutTimeout: dataSourceUserPoolClientRead,

		Schema: map[string]*schema.Schema{
			"access_token_validity": {
				Type:     schema.TypeInt,
				Computed: true,
			},
			"allowed_oauth_flows": {
				Type:     schema.TypeSet,
				Computed: true,
				Elem: &schema.Schema{
					Type: schema.TypeString,
				},
			},
			"allowed_oauth_flows_user_pool_client": {
				Type:     schema.TypeBool,
				Computed: true,
			},
			"allowed_oauth_scopes": {
				Type:     schema.TypeSet,
				Computed: true,
				Elem: &schema.Schema{
					Type: schema.TypeString,
				},
			},
			"analytics_configuration": {
				Type:     schema.TypeList,
				Computed: true,
				Elem: &schema.Resource{
					Schema: map[string]*schema.Schema{
						names.AttrApplicationID: {
							Type:     schema.TypeString,
							Computed: true,
						},
						"application_arn": {
							Type:     schema.TypeString,
							Computed: true,
						},
						names.AttrExternalID: {
							Type:     schema.TypeString,
							Computed: true,
						},
						names.AttrRoleARN: {
							Type:     schema.TypeString,
							Computed: true,
						},
						"user_data_shared": {
							Type:     schema.TypeBool,
							Computed: true,
						},
					},
				},
			},
			"callback_urls": {
				Type:     schema.TypeSet,
				Computed: true,
				Elem: &schema.Schema{
					Type: schema.TypeString,
				},
			},
			names.AttrClientID: {
				Type:     schema.TypeString,
				Required: true,
			},
			names.AttrClientSecret: {
				Type:      schema.TypeString,
				Computed:  true,
				Sensitive: true,
			},
			"default_redirect_uri": {
				Type:     schema.TypeString,
				Computed: true,
			},
			"enable_token_revocation": {
				Type:     schema.TypeBool,
				Computed: true,
			},
			"enable_propagate_additional_user_context_data": {
				Type:     schema.TypeBool,
				Computed: true,
			},
			"explicit_auth_flows": {
				Type:     schema.TypeSet,
				Computed: true,
				Elem: &schema.Schema{
					Type: schema.TypeString,
				},
			},
			"generate_secret": {
				Type:     schema.TypeBool,
				Computed: true,
			},
			"id_token_validity": {
				Type:     schema.TypeInt,
				Computed: true,
			},
			"logout_urls": {
				Type:     schema.TypeSet,
				Computed: true,
				Elem: &schema.Schema{
					Type: schema.TypeString,
				},
			},
			names.AttrName: {
				Type:     schema.TypeString,
				Computed: true,
			},
			"prevent_user_existence_errors": {
				Type:     schema.TypeString,
				Computed: true,
			},
			"read_attributes": {
				Type:     schema.TypeSet,
				Computed: true,
				Elem: &schema.Schema{
					Type: schema.TypeString,
				},
			},
			"refresh_token_rotation": {
				Type:     schema.TypeList,
				Computed: true,
				Elem: &schema.Resource{
					Schema: map[string]*schema.Schema{
						"feature": {
							Type:     schema.TypeString,
							Computed: true,
						},
						"retry_grace_period_seconds": {
							Type:     schema.TypeInt,
							Computed: true,
						},
					},
				},
			},
			"refresh_token_validity": {
				Type:     schema.TypeInt,
				Computed: true,
			},
			"supported_identity_providers": {
				Type:     schema.TypeSet,
				Computed: true,
				Elem: &schema.Schema{
					Type: schema.TypeString,
				},
			},
			"token_validity_units": {
				Type:     schema.TypeList,
				Computed: true,
				Elem: &schema.Resource{
					Schema: map[string]*schema.Schema{
						"access_token": {
							Type:     schema.TypeString,
							Computed: true,
						},
						"id_token": {
							Type:     schema.TypeString,
							Computed: true,
						},
						"refresh_token": {
							Type:     schema.TypeString,
							Computed: true,
						},
					},
				},
			},
			names.AttrUserPoolID: {
				Type:     schema.TypeString,
				Required: true,
			},
			"write_attributes": {
				Type:     schema.TypeSet,
				Computed: true,
				Elem: &schema.Schema{
					Type: schema.TypeString,
				},
			},
		},
	}
}
