package github.com/hashicorp/terraform-provider-aws/internal/service/cognitoidp
import (
	"context"
	"fmt"
	"log"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cognitoidentityprovider"
	awstypes "github.com/aws/aws-sdk-go-v2/service/cognitoidentityprovider/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandNotifyConfigurationType(tfList []any) *awstypes.NotifyConfigurationType {
	if len(tfList) == 0 || tfList[0] == nil {
		return nil
	}

	tfMap := tfList[0].(map[string]any)
	apiObject := &awstypes.NotifyConfigurationType{}

	if v, ok := tfMap["block_email"].([]any); ok && len(v) > 0 {
		apiObject.BlockEmail = expandNotifyEmailType(v)
	}

	if v, ok := tfMap["from"].(string); ok && v != "" {
		apiObject.From = aws.String(v)
	}

	if v, ok := tfMap["mfa_email"].([]any); ok && len(v) > 0 {
		apiObject.MfaEmail = expandNotifyEmailType(v)
	}

	if v, ok := tfMap["no_action_email"].([]any); ok && len(v) > 0 {
		apiObject.NoActionEmail = expandNotifyEmailType(v)
	}

	if v, ok := tfMap["reply_to"].(string); ok && v != "" {
		apiObject.ReplyTo = aws.String(v)
	}

	if v, ok := tfMap["source_arn"].(string); ok && v != "" {
		apiObject.SourceArn = aws.String(v)
	}

	return apiObject
}
