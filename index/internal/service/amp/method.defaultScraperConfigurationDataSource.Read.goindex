package github.com/hashicorp/terraform-provider-aws/internal/service/amp
import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/amp"
	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwflex "github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (d *defaultScraperConfigurationDataSource) Read(ctx context.Context, request datasource.ReadRequest, response *datasource.ReadResponse) {
	var data defaultScraperConfigurationDataSourceModel
	response.Diagnostics.Append(request.Config.Get(ctx, &data)...)
	if response.Diagnostics.HasError() {
		return
	}

	conn := d.Meta().AMPClient(ctx)

	out, err := findDefaultScraperConfiguration(ctx, conn)

	if err != nil {
		response.Diagnostics.AddError("reading Prometheus Default Scraper Configuration", err.Error())

		return
	}

	data.Configuration = fwflex.StringValueToFramework(ctx, string(out))

	response.Diagnostics.Append(response.State.Set(ctx, &data)...)
}
