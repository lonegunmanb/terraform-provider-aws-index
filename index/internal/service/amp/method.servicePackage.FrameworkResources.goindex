package github.com/hashicorp/terraform-provider-aws/internal/service/amp
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/amp"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) FrameworkResources(ctx context.Context) []*inttypes.ServicePackageFrameworkResource {
	return []*inttypes.ServicePackageFrameworkResource{
		{
			Factory:  newQueryLoggingConfigurationResource,
			TypeName: "aws_prometheus_query_logging_configuration",
			Name:     "QueryLoggingConfiguration",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newResourcePolicyResource,
			TypeName: "aws_prometheus_resource_policy",
			Name:     "Resource Policy",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newScraperResource,
			TypeName: "aws_prometheus_scraper",
			Name:     "Scraper",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newWorkspaceConfigurationResource,
			TypeName: "aws_prometheus_workspace_configuration",
			Name:     "WorkspaceConfiguration",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
	}
}
