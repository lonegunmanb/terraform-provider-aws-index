package github.com/hashicorp/terraform-provider-aws/internal/service/ses
import (
	"context"
	"fmt"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ses"
	awstypes "github.com/aws/aws-sdk-go-v2/service/ses/types"
	"github.com/hashicorp/terraform-plugin-framework/action"
	"github.com/hashicorp/terraform-plugin-framework/action/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwflex "github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (a *sendEmailAction) Schema(ctx context.Context, req action.SchemaRequest, resp *action.SchemaResponse) {
	resp.Schema = schema.Schema{
		Description: "Sends an email using Amazon SES. This action allows for imperative email sending with full control over recipients, content, and formatting.",
		Attributes: map[string]schema.Attribute{
			names.AttrSource: schema.StringAttribute{
				Description: "The email address that is sending the email. This address must be either individually verified with Amazon SES, or from a domain that has been verified with Amazon SES.",
				Required:    true,
			},
			"to_addresses": schema.ListAttribute{
				CustomType:  fwtypes.ListOfStringType,
				ElementType: types.StringType,
				Description: "The To: field(s) of the message.",
				Optional:    true,
			},
			"cc_addresses": schema.ListAttribute{
				CustomType:  fwtypes.ListOfStringType,
				ElementType: types.StringType,
				Description: "The CC: field(s) of the message.",
				Optional:    true,
			},
			"bcc_addresses": schema.ListAttribute{
				CustomType:  fwtypes.ListOfStringType,
				ElementType: types.StringType,
				Description: "The BCC: field(s) of the message.",
				Optional:    true,
			},
			"subject": schema.StringAttribute{
				Description: "The subject of the message: A short summary of the content, which will appear in the recipient's inbox.",
				Required:    true,
			},
			"text_body": schema.StringAttribute{
				Description: "The message body in text format. Either text_body or html_body must be specified.",
				Optional:    true,
			},
			"html_body": schema.StringAttribute{
				Description: "The message body in HTML format. Either text_body or html_body must be specified.",
				Optional:    true,
			},
			"reply_to_addresses": schema.ListAttribute{
				CustomType:  fwtypes.ListOfStringType,
				ElementType: types.StringType,
				Description: "The reply-to email address(es) for the message. If the recipient replies to the message, each reply-to address will receive the reply.",
				Optional:    true,
			},
			"return_path": schema.StringAttribute{
				Description: "The email address that bounces and complaints will be forwarded to when feedback forwarding is enabled.",
				Optional:    true,
			},
		},
	}
}
