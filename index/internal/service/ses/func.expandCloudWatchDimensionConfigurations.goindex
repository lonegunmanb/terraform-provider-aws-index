package github.com/hashicorp/terraform-provider-aws/internal/service/ses
import (
	"context"
	"fmt"
	"log"
	"strings"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/arn"
	"github.com/aws/aws-sdk-go-v2/service/ses"
	awstypes "github.com/aws/aws-sdk-go-v2/service/ses/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandCloudWatchDimensionConfigurations(tfList []any) []awstypes.CloudWatchDimensionConfiguration {
	apiObjects := make([]awstypes.CloudWatchDimensionConfiguration, 0)

	for _, tfMapRaw := range tfList {
		tfMap := tfMapRaw.(map[string]any)
		apiObject := awstypes.CloudWatchDimensionConfiguration{
			DefaultDimensionValue: aws.String(tfMap[names.AttrDefaultValue].(string)),
			DimensionName:         aws.String(tfMap["dimension_name"].(string)),
			DimensionValueSource:  awstypes.DimensionValueSource(tfMap["value_source"].(string)),
		}
		apiObjects = append(apiObjects, apiObject)
	}

	return apiObjects
}
