package github.com/hashicorp/terraform-provider-aws/internal/service/ses
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/service/ses"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) SDKResources(ctx context.Context) []*inttypes.ServicePackageSDKResource {
	return []*inttypes.ServicePackageSDKResource{
		{
			Factory:  resourceActiveReceiptRuleSet,
			TypeName: "aws_ses_active_receipt_rule_set",
			Name:     "Active Receipt Rule Set",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceConfigurationSet,
			TypeName: "aws_ses_configuration_set",
			Name:     "Configuration Set",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceDomainDKIM,
			TypeName: "aws_ses_domain_dkim",
			Name:     "Domain DKIM",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceDomainIdentity,
			TypeName: "aws_ses_domain_identity",
			Name:     "Domain Identity",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceDomainIdentityVerification,
			TypeName: "aws_ses_domain_identity_verification",
			Name:     "Domain Identity Verification",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceDomainMailFrom,
			TypeName: "aws_ses_domain_mail_from",
			Name:     "MAIL FROM Domain",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceEmailIdentity,
			TypeName: "aws_ses_email_identity",
			Name:     "Email Identity",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceEventDestination,
			TypeName: "aws_ses_event_destination",
			Name:     "Configuration Set Event Destination",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceIdentityNotificationTopic,
			TypeName: "aws_ses_identity_notification_topic",
			Name:     "Identity Notification Topic",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceIdentityPolicy,
			TypeName: "aws_ses_identity_policy",
			Name:     "Identity Policy",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceReceiptFilter,
			TypeName: "aws_ses_receipt_filter",
			Name:     "Receipt Filter",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceReceiptRule,
			TypeName: "aws_ses_receipt_rule",
			Name:     "Receipt Rule",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceReceiptRuleSet,
			TypeName: "aws_ses_receipt_rule_set",
			Name:     "Receipt Rule Set",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceTemplate,
			TypeName: "aws_ses_template",
			Name:     "Template",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
	}
}
