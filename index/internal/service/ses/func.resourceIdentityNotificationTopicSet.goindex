package github.com/hashicorp/terraform-provider-aws/internal/service/ses
import (
	"context"
	"fmt"
	"log"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ses"
	awstypes "github.com/aws/aws-sdk-go-v2/service/ses/types"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func resourceIdentityNotificationTopicSet(ctx context.Context, d *schema.ResourceData, meta any) diag.Diagnostics {
	var diags diag.Diagnostics
	conn := meta.(*conns.AWSClient).SESClient(ctx)

	identity := d.Get("identity").(string)
	notificationType := awstypes.NotificationType(d.Get("notification_type").(string))
	id := identityNotificationTopicCreateResourceID(identity, notificationType)
	inputSINT := &ses.SetIdentityNotificationTopicInput{
		Identity:         aws.String(identity),
		NotificationType: notificationType,
	}

	if v, ok := d.GetOk(names.AttrTopicARN); ok {
		inputSINT.SnsTopic = aws.String(v.(string))
	}

	_, err := conn.SetIdentityNotificationTopic(ctx, inputSINT)

	if err != nil {
		return sdkdiag.AppendErrorf(diags, "setting SES Identity Notification Topic (%s): %s", id, err)
	}

	if d.IsNewResource() {
		d.SetId(id)
	}

	inputSIHINE := &ses.SetIdentityHeadersInNotificationsEnabledInput{
		Enabled:          d.Get("include_original_headers").(bool),
		Identity:         aws.String(identity),
		NotificationType: notificationType,
	}

	_, err = conn.SetIdentityHeadersInNotificationsEnabled(ctx, inputSIHINE)

	if err != nil {
		return sdkdiag.AppendErrorf(diags, "setting SES Identity Notification Topic (%s) headers in notification: %s", d.Id(), err)
	}

	return append(diags, resourceIdentityNotificationTopicRead(ctx, d, meta)...)
}
