package github.com/hashicorp/terraform-provider-aws/internal/service/wafregional
import (
	"context"
	"fmt"
	"log"
	"slices"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/arn"
	"github.com/aws/aws-sdk-go-v2/service/wafregional"
	awstypes "github.com/aws/aws-sdk-go-v2/service/wafregional/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandActivatedRule(rule map[string]any) *awstypes.ActivatedRule {
	r := &awstypes.ActivatedRule{
		Priority: aws.Int32(int32(rule[names.AttrPriority].(int))),
		RuleId:   aws.String(rule["rule_id"].(string)),
		Type:     awstypes.WafRuleType(rule[names.AttrType].(string)),
	}

	if a, ok := rule[names.AttrAction].([]any); ok && len(a) > 0 {
		m := a[0].(map[string]any)
		r.Action = &awstypes.WafAction{
			Type: awstypes.WafActionType(m[names.AttrType].(string)),
		}
	}
	return r
}
