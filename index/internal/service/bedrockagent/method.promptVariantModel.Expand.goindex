package github.com/hashicorp/terraform-provider-aws/internal/service/bedrockagent
import (
	"context"
	"fmt"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/bedrockagent"
	"github.com/aws/aws-sdk-go-v2/service/bedrockagent/document"
	awstypes "github.com/aws/aws-sdk-go-v2/service/bedrockagent/types"
	"github.com/hashicorp/terraform-plugin-framework-jsontypes/jsontypes"
	"github.com/hashicorp/terraform-plugin-framework-timetypes/timetypes"
	"github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/path"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	sdkid "github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/fwdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwflex "github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	smithyjson "github.com/hashicorp/terraform-provider-aws/internal/json"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (m promptVariantModel) Expand(ctx context.Context) (any, diag.Diagnostics) {
	var result any
	var diags diag.Diagnostics

	var r awstypes.PromptVariant
	diags.Append(fwflex.Expand(ctx, m.GenAIResource, &r.GenAiResource)...)
	diags.Append(fwflex.Expand(ctx, m.InferenceConfiguration, &r.InferenceConfiguration)...)
	diags.Append(fwflex.Expand(ctx, m.Metadata, &r.Metadata)...)
	diags.Append(fwflex.Expand(ctx, m.ModelID, &r.ModelId)...)
	diags.Append(fwflex.Expand(ctx, m.Name, &r.Name)...)
	diags.Append(fwflex.Expand(ctx, m.TemplateConfiguration, &r.TemplateConfiguration)...)
	diags.Append(fwflex.Expand(ctx, m.TemplateType, &r.TemplateType)...)
	if diags.HasError() {
		return nil, diags
	}

	if !m.AdditionalModelRequestFields.IsNull() {
		json, err := smithyjson.SmithyDocumentFromString(fwflex.StringValueFromFramework(ctx, m.AdditionalModelRequestFields), document.NewLazyDocument)
		if err != nil {
			diags.Append(diag.NewErrorDiagnostic(
				"Decoding JSON",
				err.Error(),
			))

			return nil, diags
		}

		r.AdditionalModelRequestFields = json
	}

	result = &r

	return result, diags
}
