package github.com/hashicorp/terraform-provider-aws/internal/service/keyspaces
import (
	"context"
	"fmt"
	"log"
	"strings"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/keyspaces"
	"github.com/aws/aws-sdk-go-v2/service/keyspaces/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/customdiff"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenSchemaDefinition(apiObject *types.SchemaDefinition) map[string]any {
	if apiObject == nil {
		return nil
	}

	tfMap := map[string]any{}

	if v := apiObject.AllColumns; v != nil {
		tfMap["column"] = flattenColumnDefinitions(v)
	}

	if v := apiObject.ClusteringKeys; v != nil {
		tfMap["clustering_key"] = flattenClusteringKeys(v)
	}

	if v := apiObject.PartitionKeys; v != nil {
		tfMap["partition_key"] = flattenPartitionKeys(v)
	}

	if v := apiObject.StaticColumns; v != nil {
		tfMap["static_column"] = flattenStaticColumns(v)
	}

	return tfMap
}
