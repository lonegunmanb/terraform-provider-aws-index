package github.com/hashicorp/terraform-provider-aws/internal/service/autoscaling
import (
	"context"
	"fmt"
	"log"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/autoscaling"
	awstypes "github.com/aws/aws-sdk-go-v2/service/autoscaling/types"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/sdkv2/types/nullable"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenPredictiveScalingMetricSpecifications(apiObjects []awstypes.PredictiveScalingMetricSpecification) []any {
	tfMap := map[string]any{}
	if len(apiObjects) < 1 {
		return []any{tfMap}
	}

	apiObject := apiObjects[0]
	if v := apiObject.CustomizedCapacityMetricSpecification; v != nil {
		tfMap["customized_capacity_metric_specification"] = flattenPredictiveScalingCustomizedCapacityMetric(v)
	}
	if v := apiObject.CustomizedLoadMetricSpecification; v != nil {
		tfMap["customized_load_metric_specification"] = flattenPredictiveScalingCustomizedLoadMetric(v)
	}
	if v := apiObject.CustomizedScalingMetricSpecification; v != nil {
		tfMap["customized_scaling_metric_specification"] = flattenPredictiveScalingCustomizedScalingMetric(v)
	}
	if v := apiObject.PredefinedLoadMetricSpecification; v != nil {
		tfMap["predefined_load_metric_specification"] = flattenPredictiveScalingPredefinedLoadMetric(v)
	}
	if v := apiObject.PredefinedMetricPairSpecification; v != nil {
		tfMap["predefined_metric_pair_specification"] = flattenPredictiveScalingPredefinedMetricPair(v)
	}
	if v := apiObject.PredefinedScalingMetricSpecification; v != nil {
		tfMap["predefined_scaling_metric_specification"] = flattenPredictiveScalingPredefinedScalingMetric(v)
	}
	if v := apiObject.TargetValue; v != nil {
		tfMap["target_value"] = aws.ToFloat64(v)
	}

	return []any{tfMap}
}
