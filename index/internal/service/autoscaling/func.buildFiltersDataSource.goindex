package github.com/hashicorp/terraform-provider-aws/internal/service/autoscaling
import (
	"context"
	"slices"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/autoscaling"
	awstypes "github.com/aws/aws-sdk-go-v2/service/autoscaling/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func buildFiltersDataSource(set *schema.Set) []awstypes.Filter {
	var filters []awstypes.Filter
	for _, v := range set.List() {
		m := v.(map[string]any)
		var filterValues []string
		for _, e := range m[names.AttrValues].([]any) {
			filterValues = append(filterValues, e.(string))
		}

		// In previous iterations, users were expected to provide "key" and "value" tag names.
		// With the addition of asgs filters, the signature is "tag-key" and "tag-value", so these conditions prevent breaking changes.
		// https://docs.aws.amazon.com/sdk-for-go/api/service/autoscaling/#Filter
		name := m[names.AttrName].(string)
		if name == names.AttrKey {
			name = "tag-key"
		}
		if name == names.AttrValue {
			name = "tag-value"
		}
		filters = append(filters, awstypes.Filter{
			Name:   aws.String(name),
			Values: filterValues,
		})
	}
	return filters
}
