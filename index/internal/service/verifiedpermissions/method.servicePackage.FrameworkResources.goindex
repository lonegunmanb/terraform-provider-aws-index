package github.com/hashicorp/terraform-provider-aws/internal/service/verifiedpermissions
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/verifiedpermissions"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) FrameworkResources(ctx context.Context) []*inttypes.ServicePackageFrameworkResource {
	return []*inttypes.ServicePackageFrameworkResource{
		{
			Factory:  newIdentitySourceResource,
			TypeName: "aws_verifiedpermissions_identity_source",
			Name:     "Identity Source",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newPolicyResource,
			TypeName: "aws_verifiedpermissions_policy",
			Name:     "Policy",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newPolicyStoreResource,
			TypeName: "aws_verifiedpermissions_policy_store",
			Name:     "Policy Store",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newPolicyTemplateResource,
			TypeName: "aws_verifiedpermissions_policy_template",
			Name:     "Policy Template",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newSchemaResource,
			TypeName: "aws_verifiedpermissions_schema",
			Name:     "Schema",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
	}
}
