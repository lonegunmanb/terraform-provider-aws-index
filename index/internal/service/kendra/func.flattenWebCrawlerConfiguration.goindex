package github.com/hashicorp/terraform-provider-aws/internal/service/kendra
import (
	"context"
	"encoding/json"
	"errors"
	"fmt"
	"log"
	"strings"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/arn"
	"github.com/aws/aws-sdk-go-v2/service/kendra"
	"github.com/aws/aws-sdk-go-v2/service/kendra/document"
	"github.com/aws/aws-sdk-go-v2/service/kendra/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/customdiff"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/sdkv2"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenWebCrawlerConfiguration(apiObject *types.WebCrawlerConfiguration) []any {
	if apiObject == nil {
		return nil
	}

	tfMap := map[string]any{
		"crawl_depth": aws.ToInt32(apiObject.CrawlDepth),
		"urls":        flattenURLs(apiObject.Urls),
	}

	if v := apiObject.AuthenticationConfiguration; v != nil {
		tfMap["authentication_configuration"] = flattenAuthenticationConfiguration(v)
	}

	if v := apiObject.MaxContentSizePerPageInMegaBytes; v != nil {
		tfMap["max_content_size_per_page_in_mega_bytes"] = aws.ToFloat32(v)
	}

	if v := apiObject.MaxLinksPerPage; v != nil {
		tfMap["max_links_per_page"] = aws.ToInt32(v)
	}

	if v := apiObject.MaxUrlsPerMinuteCrawlRate; v != nil {
		tfMap["max_urls_per_minute_crawl_rate"] = aws.ToInt32(v)
	}

	if v := apiObject.ProxyConfiguration; v != nil {
		tfMap["proxy_configuration"] = flattenProxyConfiguration(v)
	}

	if v := apiObject.UrlExclusionPatterns; v != nil {
		tfMap["url_exclusion_patterns"] = flex.FlattenStringValueSet(v)
	}

	if v := apiObject.UrlInclusionPatterns; v != nil {
		tfMap["url_inclusion_patterns"] = flex.FlattenStringValueSet(v)
	}

	return []any{tfMap}
}
