package github.com/hashicorp/terraform-provider-aws/internal/service/kendra
import (
	"context"
	"errors"
	"fmt"
	"log"
	"strings"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/arn"
	"github.com/aws/aws-sdk-go-v2/service/kendra"
	"github.com/aws/aws-sdk-go-v2/service/kendra/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandSearch(search []any) *types.Search {
	if len(search) == 0 || search[0] == nil {
		return nil
	}

	tfMap, ok := search[0].(map[string]any)
	if !ok {
		return nil
	}

	result := &types.Search{}

	if v, ok := tfMap["displayable"].(bool); ok {
		result.Displayable = v
	}

	if v, ok := tfMap["facetable"].(bool); ok {
		result.Facetable = v
	}

	if v, ok := tfMap["searchable"].(bool); ok {
		result.Searchable = v
	}

	if v, ok := tfMap["sortable"].(bool); ok {
		result.Sortable = v
	}

	return result
}
