package github.com/hashicorp/terraform-provider-aws/internal/service/kendra
import (
	"context"
	"encoding/json"
	"errors"
	"fmt"
	"log"
	"strings"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/arn"
	"github.com/aws/aws-sdk-go-v2/service/kendra"
	"github.com/aws/aws-sdk-go-v2/service/kendra/document"
	"github.com/aws/aws-sdk-go-v2/service/kendra/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/customdiff"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/sdkv2"
	tfsmithy "github.com/hashicorp/terraform-provider-aws/internal/smithy"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandWebCrawlerConfiguration(tfList []any) *types.WebCrawlerConfiguration {
	if len(tfList) == 0 || tfList[0] == nil {
		return nil
	}

	tfMap, ok := tfList[0].(map[string]any)
	if !ok {
		return nil
	}

	apiObject := &types.WebCrawlerConfiguration{
		Urls: expandURLs(tfMap["urls"].([]any)),
	}

	if v, ok := tfMap["authentication_configuration"].([]any); ok && len(v) > 0 {
		apiObject.AuthenticationConfiguration = expandAuthenticationConfiguration(v)
	}

	if v, ok := tfMap["crawl_depth"].(int); ok {
		apiObject.CrawlDepth = aws.Int32(int32(v))
	}

	if v, ok := tfMap["max_content_size_per_page_in_mega_bytes"].(float32); ok {
		apiObject.MaxContentSizePerPageInMegaBytes = aws.Float32(v)
	}

	if v, ok := tfMap["max_links_per_page"].(int); ok {
		apiObject.MaxLinksPerPage = aws.Int32(int32(v))
	}

	if v, ok := tfMap["max_urls_per_minute_crawl_rate"].(int); ok {
		apiObject.MaxUrlsPerMinuteCrawlRate = aws.Int32(int32(v))
	}

	if v, ok := tfMap["proxy_configuration"].([]any); ok && len(v) > 0 {
		apiObject.ProxyConfiguration = expandProxyConfiguration(v)
	}

	if v, ok := tfMap["url_exclusion_patterns"]; ok && v.(*schema.Set).Len() >= 0 {
		apiObject.UrlExclusionPatterns = flex.ExpandStringValueSet(v.(*schema.Set))
	}

	if v, ok := tfMap["url_inclusion_patterns"]; ok && v.(*schema.Set).Len() >= 0 {
		apiObject.UrlInclusionPatterns = flex.ExpandStringValueSet(v.(*schema.Set))
	}

	return apiObject
}
