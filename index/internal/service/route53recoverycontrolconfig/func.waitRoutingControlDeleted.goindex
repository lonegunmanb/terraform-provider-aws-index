package github.com/hashicorp/terraform-provider-aws/internal/service/route53recoverycontrolconfig
import (
	"context"
	"time"

	r53rcc "github.com/aws/aws-sdk-go-v2/service/route53recoverycontrolconfig"
	awstypes "github.com/aws/aws-sdk-go-v2/service/route53recoverycontrolconfig/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
)
func waitRoutingControlDeleted(ctx context.Context, conn *r53rcc.Client, routingControlArn string) (*awstypes.RoutingControl, error) {
	stateConf := &retry.StateChangeConf{
		Pending:        enum.Slice(awstypes.StatusPendingDeletion),
		Target:         []string{},
		Refresh:        statusRoutingControl(ctx, conn, routingControlArn),
		Timeout:        timeout,
		Delay:          minTimeout,
		NotFoundChecks: 1,
	}

	outputRaw, err := stateConf.WaitForStateContext(ctx)

	if output, ok := outputRaw.(*awstypes.RoutingControl); ok {
		return output, err
	}

	return nil, err
}
