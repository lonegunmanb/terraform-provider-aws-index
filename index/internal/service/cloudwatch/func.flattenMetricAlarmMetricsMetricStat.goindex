package github.com/hashicorp/terraform-provider-aws/internal/service/cloudwatch
import (
	"context"
	"errors"
	"log"

	"github.com/YakDriver/regexache"
	"github.com/YakDriver/smarterr"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cloudwatch"
	"github.com/aws/aws-sdk-go-v2/service/cloudwatch/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/customdiff"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/smerr"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenMetricAlarmMetricsMetricStat(apiObject *types.MetricStat) map[string]any {
	if apiObject == nil {
		return nil
	}

	tfMap := map[string]any{
		"period":       aws.ToInt32(apiObject.Period),
		"stat":         aws.ToString(apiObject.Stat),
		names.AttrUnit: apiObject.Unit,
	}

	if v := apiObject.Metric; v != nil {
		tfMap["dimensions"] = flattenMetricAlarmDimensions(v.Dimensions)
		tfMap[names.AttrMetricName] = aws.ToString(v.MetricName)
		tfMap[names.AttrNamespace] = aws.ToString(v.Namespace)
	}

	return tfMap
}
