package github.com/hashicorp/terraform-provider-aws/internal/service/macie2
import (
	"context"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/macie2"
	awstypes "github.com/aws/aws-sdk-go-v2/service/macie2/types"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
)
func GetOrganizationAdminAccount(ctx context.Context, conn *macie2.Client, adminAccountID string) (*awstypes.AdminAccount, error) {
	input := &macie2.ListOrganizationAdminAccountsInput{}

	pages := macie2.NewListOrganizationAdminAccountsPaginator(conn, input)
	for pages.HasMorePages() {
		page, err := pages.NextPage(ctx)
		if err != nil {
			return nil, err
		}

		for _, adminAccount := range page.AdminAccounts {
			if aws.ToString(adminAccount.AccountId) == adminAccountID {
				return &adminAccount, nil
			}
		}
	}

	return nil, tfresource.NewEmptyResultError(input)
}
