package github.com/hashicorp/terraform-provider-aws/internal/service/macie2
import (
	"context"
	"fmt"
	"log"
	"strings"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/macie2"
	awstypes "github.com/aws/aws-sdk-go-v2/service/macie2/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func resourceClassificationJobCustomizeDiff(_ context.Context, diff *schema.ResourceDiff, meta any) error {
	//TagScopeTerm() enforces the `target` key even though documentation marks it as optional.
	//ClassificationJobs criteria and scoping cannot be updated.
	//The API as of Aug 7, 2022 returns an empty string (even if a target was sent), causing a diff on new plans.
	//The following will clear the diff for these keys if the object exists already in the state.
	if diff.Id() != "" {
		for _, key := range diff.GetChangedKeysPrefix("s3_job_definition.0.scoping.0.excludes") {
			if strings.Contains(key, "tag_scope_term") && strings.Contains(key, names.AttrTarget) {
				err := diff.Clear(key)
				if err != nil {
					return err
				}
			}
		}
		for _, key := range diff.GetChangedKeysPrefix("s3_job_definition.0.scoping.0.includes") {
			if strings.Contains(key, "tag_scope_term") && strings.Contains(key, names.AttrTarget) {
				err := diff.Clear(key)
				if err != nil {
					return err
				}
			}
		}
	}
	return nil
}
