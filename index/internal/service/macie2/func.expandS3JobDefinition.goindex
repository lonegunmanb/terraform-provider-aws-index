package github.com/hashicorp/terraform-provider-aws/internal/service/macie2
import (
	"context"
	"fmt"
	"log"
	"strings"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/macie2"
	awstypes "github.com/aws/aws-sdk-go-v2/service/macie2/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandS3JobDefinition(s3JobDefinitionObj []any) *awstypes.S3JobDefinition {
	if len(s3JobDefinitionObj) == 0 {
		return nil
	}

	var s3JobDefinition awstypes.S3JobDefinition

	s3JobMap := s3JobDefinitionObj[0].(map[string]any)

	if v1, ok1 := s3JobMap["bucket_criteria"]; ok1 && len(v1.([]any)) > 0 {
		s3JobDefinition.BucketCriteria = expandS3BucketCriteriaForJob(v1.([]any))
	}
	if v1, ok1 := s3JobMap["bucket_definitions"]; ok1 && len(v1.([]any)) > 0 {
		s3JobDefinition.BucketDefinitions = expandBucketDefinitions(v1.([]any))
	}
	if v1, ok1 := s3JobMap["scoping"]; ok1 && len(v1.([]any)) > 0 {
		s3JobDefinition.Scoping = expandScoping(v1.([]any))
	}

	return &s3JobDefinition
}
