package github.com/hashicorp/terraform-provider-aws/internal/service/macie2
import (
	"context"
	"fmt"
	"log"
	"strings"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/macie2"
	awstypes "github.com/aws/aws-sdk-go-v2/service/macie2/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func resourceClassificationJobUpdate(ctx context.Context, d *schema.ResourceData, meta any) diag.Diagnostics {
	var diags diag.Diagnostics
	conn := meta.(*conns.AWSClient).Macie2Client(ctx)

	if d.HasChange("job_status") {
		jobStatus := awstypes.JobStatus(d.Get("job_status").(string))

		if jobStatus == awstypes.JobStatusCancelled {
			return sdkdiag.AppendErrorf(diags, "updating Macie Classification Job (%s): %s", d.Id(), fmt.Errorf("%s status cannot be set", awstypes.JobStatusCancelled))
		}

		input := macie2.UpdateClassificationJobInput{
			JobId:     aws.String(d.Id()),
			JobStatus: jobStatus,
		}

		_, err := conn.UpdateClassificationJob(ctx, &input)

		if err != nil {
			return sdkdiag.AppendErrorf(diags, "updating Macie Classification Job (%s): %s", d.Id(), err)
		}
	}

	return append(diags, resourceClassificationJobRead(ctx, d, meta)...)
}
