package github.com/hashicorp/terraform-provider-aws/internal/service/macie2
import (
	"context"
	"fmt"
	"log"
	"strings"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/macie2"
	awstypes "github.com/aws/aws-sdk-go-v2/service/macie2/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandS3BucketCriteriaForJob(criteria []any) *awstypes.S3BucketCriteriaForJob {
	if len(criteria) == 0 {
		return nil
	}

	var criteriaObj awstypes.S3BucketCriteriaForJob

	criteriaMap := criteria[0].(map[string]any)

	if v, ok := criteriaMap["excludes"]; ok && len(v.([]any)) > 0 {
		v1 := v.([]any)
		andMap := v1[0].(map[string]any)
		if v2, ok1 := andMap["and"]; ok1 && len(v2.([]any)) > 0 {
			criteriaObj.Excludes = &awstypes.CriteriaBlockForJob{
				And: expandCriteriaBlockForJob(v2.([]any)),
			}
		}
	}
	if v, ok := criteriaMap["includes"]; ok && len(v.([]any)) > 0 {
		v1 := v.([]any)
		andMap := v1[0].(map[string]any)
		if v2, ok1 := andMap["and"]; ok1 && len(v2.([]any)) > 0 {
			criteriaObj.Includes = &awstypes.CriteriaBlockForJob{
				And: expandCriteriaBlockForJob(v2.([]any)),
			}
		}
	}

	return &criteriaObj
}
