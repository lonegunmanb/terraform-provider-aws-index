package github.com/hashicorp/terraform-provider-aws/internal/service/appfabric
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/service/appfabric"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) FrameworkResources(ctx context.Context) []*inttypes.ServicePackageFrameworkResource {
	return []*inttypes.ServicePackageFrameworkResource{
		{
			Factory:  newAppAuthorizationResource,
			TypeName: "aws_appfabric_app_authorization",
			Name:     "App Authorization",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newAppAuthorizationConnectionResource,
			TypeName: "aws_appfabric_app_authorization_connection",
			Name:     "App Authorization Connection",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newAppBundleResource,
			TypeName: "aws_appfabric_app_bundle",
			Name:     "App Bundle",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrID,
			}),
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
			Identity: inttypes.RegionalARNIdentity(inttypes.WithIdentityDuplicateAttrs(names.AttrID)),
			Import: inttypes.Import{
				WrappedImport: true,
			},
		},
		{
			Factory:  newIngestionResource,
			TypeName: "aws_appfabric_ingestion",
			Name:     "Ingestion",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newIngestionDestinationResource,
			TypeName: "aws_appfabric_ingestion_destination",
			Name:     "Ingestion Destination",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
	}
}
