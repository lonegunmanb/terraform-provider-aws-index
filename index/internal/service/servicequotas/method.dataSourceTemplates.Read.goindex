package github.com/hashicorp/terraform-provider-aws/internal/service/servicequotas
import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/servicequotas"
	awstypes "github.com/aws/aws-sdk-go-v2/service/servicequotas/types"
	"github.com/hashicorp/terraform-plugin-framework-validators/datasourcevalidator"
	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/path"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwflex "github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (d *dataSourceTemplates) Read(ctx context.Context, request datasource.ReadRequest, response *datasource.ReadResponse) {
	var data templatesDataSourceModel
	response.Diagnostics.Append(request.Config.Get(ctx, &data)...)
	if response.Diagnostics.HasError() {
		return
	}

	conn := d.Meta().ServiceQuotasClient(ctx)

	region := fwflex.StringValueFromFramework(ctx, data.AWSRegion)
	if region == "" {
		region = fwflex.StringValueFromFramework(ctx, data.Region)
	}
	input := servicequotas.ListServiceQuotaIncreaseRequestsInTemplateInput{
		AwsRegion: aws.String(region),
	}
	output, err := findTemplates(ctx, conn, &input)

	if err != nil {
		response.Diagnostics.AddError("reading Service Quotas Templates", err.Error())

		return
	}

	response.Diagnostics.Append(fwflex.Flatten(ctx, output, &data.Templates)...)
	if response.Diagnostics.HasError() {
		return
	}

	// Additional fields.
	data.ID = fwflex.StringValueToFramework(ctx, region)

	response.Diagnostics.Append(response.State.Set(ctx, &data)...)
}
