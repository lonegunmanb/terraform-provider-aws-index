package github.com/hashicorp/terraform-provider-aws/internal/service/servicequotas
import (
	"context"
	"fmt"
	"log"
	"strings"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/servicequotas"
	awstypes "github.com/aws/aws-sdk-go-v2/service/servicequotas/types"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenMetricInfo(apiObject *awstypes.MetricInfo) []any {
	if apiObject == nil {
		return []any{}
	}

	var tfList []any
	var tfListMetricDimensions []any

	if apiObject.MetricDimensions != nil && apiObject.MetricDimensions["Service"] != "" {
		tfListMetricDimensions = append(tfListMetricDimensions, map[string]any{
			"class":        apiObject.MetricDimensions["Class"],
			"resource":     apiObject.MetricDimensions["Resource"],
			"service":      apiObject.MetricDimensions["Service"],
			names.AttrType: apiObject.MetricDimensions["Type"],
		})
	} else {
		tfListMetricDimensions = append(tfListMetricDimensions, map[string]any{})
	}

	tfList = append(tfList, map[string]any{
		"metric_dimensions":               tfListMetricDimensions,
		names.AttrMetricName:              apiObject.MetricName,
		"metric_namespace":                apiObject.MetricNamespace,
		"metric_statistic_recommendation": apiObject.MetricStatisticRecommendation,
	})

	return tfList
}
