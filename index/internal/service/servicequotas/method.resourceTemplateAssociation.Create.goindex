package github.com/hashicorp/terraform-provider-aws/internal/service/servicequotas
import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/servicequotas"
	awstypes "github.com/aws/aws-sdk-go-v2/service/servicequotas/types"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/fwdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwflex "github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (r *resourceTemplateAssociation) Create(ctx context.Context, request resource.CreateRequest, response *resource.CreateResponse) {
	var data templateAssociationResourceModel
	response.Diagnostics.Append(request.Plan.Get(ctx, &data)...)
	if response.Diagnostics.HasError() {
		return
	}

	conn := r.Meta().ServiceQuotasClient(ctx)

	var input servicequotas.AssociateServiceQuotaTemplateInput
	_, err := conn.AssociateServiceQuotaTemplate(ctx, &input)

	if err != nil {
		response.Diagnostics.AddError("associating Service Quotas Template", err.Error())

		return
	}

	// Set values for unknowns.
	data.ID = fwflex.StringValueToFramework(ctx, r.Meta().AccountID(ctx))
	data.Status = fwflex.StringValueToFramework(ctx, awstypes.ServiceQuotaTemplateAssociationStatusAssociated)

	response.Diagnostics.Append(response.State.Set(ctx, data)...)
}
