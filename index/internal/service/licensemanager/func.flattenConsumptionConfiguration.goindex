package github.com/hashicorp/terraform-provider-aws/internal/service/licensemanager
import (
	"context"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/licensemanager"
	awstypes "github.com/aws/aws-sdk-go-v2/service/licensemanager/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenConsumptionConfiguration(apiObject *awstypes.ConsumptionConfiguration) map[string]any {
	if apiObject == nil {
		return nil
	}

	tfMap := map[string]any{}

	if v := apiObject.BorrowConfiguration; v != nil {
		tfMap["borrow_configuration"] = map[string]any{
			"allow_early_check_in":        aws.ToBool(v.AllowEarlyCheckIn),
			"max_time_to_live_in_minutes": aws.ToInt32(v.MaxTimeToLiveInMinutes),
		}
	}

	if v := apiObject.ProvisionalConfiguration.MaxTimeToLiveInMinutes; v != nil {
		tfMap["provisional_configuration"] = []any{map[string]any{
			"max_time_to_live_in_minutes": aws.ToInt32(v),
		}}
	}

	tfMap["renew_type"] = apiObject.RenewType

	return tfMap
}
