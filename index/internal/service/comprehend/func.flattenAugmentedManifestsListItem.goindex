package github.com/hashicorp/terraform-provider-aws/internal/service/comprehend
import (
	"context"
	"strings"
	"sync"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/comprehend/types"
	"github.com/aws/aws-sdk-go-v2/service/ec2"
	ec2types "github.com/aws/aws-sdk-go-v2/service/ec2/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tfec2 "github.com/hashicorp/terraform-provider-aws/internal/service/ec2"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenAugmentedManifestsListItem(apiObject *types.AugmentedManifestsListItem) map[string]any {
	if apiObject == nil {
		return nil
	}

	m := map[string]any{
		"attribute_names": flex.FlattenStringValueList(apiObject.AttributeNames),
		"s3_uri":          aws.ToString(apiObject.S3Uri),
		"document_type":   apiObject.DocumentType,
		"split":           apiObject.Split,
	}

	if v := apiObject.AnnotationDataS3Uri; v != nil {
		m["annotation_data_s3_uri"] = aws.ToString(v)
	}

	if v := apiObject.SourceDocumentsS3Uri; v != nil {
		m["source_documents_s3_uri"] = aws.ToString(v)
	}

	return m
}
