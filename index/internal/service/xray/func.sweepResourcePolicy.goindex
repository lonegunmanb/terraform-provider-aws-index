package github.com/hashicorp/terraform-provider-aws/internal/service/xray
import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/xray"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep/awsv2"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep/framework"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func sweepResourcePolicy(ctx context.Context, client *conns.AWSClient) ([]sweep.Sweepable, error) {
	conn := client.XRayClient(ctx)
	input := xray.ListResourcePoliciesInput{}

	sweepResources := make([]sweep.Sweepable, 0)

	pages := xray.NewListResourcePoliciesPaginator(conn, &input)
	for pages.HasMorePages() {
		page, err := pages.NextPage(ctx)
		if err != nil {
			return nil, err
		}

		for _, v := range page.ResourcePolicies {
			name := aws.ToString(v.PolicyName)

			sweepResources = append(sweepResources, framework.NewSweepResource(newResourcePolicyResource, client, framework.NewAttribute("policy_name", name)))
		}
	}

	return sweepResources, nil
}
