package github.com/hashicorp/terraform-provider-aws/internal/service/ssmincidents
import (
	"context"
	"errors"
	"fmt"
	"log"
	"strings"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/arn"
	"github.com/aws/aws-sdk-go-v2/service/ssmincidents"
	awstypes "github.com/aws/aws-sdk-go-v2/service/ssmincidents/types"
	"github.com/hashicorp/go-cty/cty"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenRegionInfos(apiObjects map[string]awstypes.RegionInfo) []any {
	if len(apiObjects) == 0 {
		return nil
	}

	tfList := make([]any, 0)
	for k, apiObject := range apiObjects {
		tfMap := make(map[string]any)

		tfMap[names.AttrKMSKeyARN] = aws.ToString(apiObject.SseKmsKeyId)
		tfMap[names.AttrName] = k
		tfMap[names.AttrStatus] = apiObject.Status

		if v := apiObject.StatusMessage; v != nil {
			tfMap[names.AttrStatusMessage] = aws.ToString(v)
		}

		tfList = append(tfList, tfMap)
	}

	return tfList
}
