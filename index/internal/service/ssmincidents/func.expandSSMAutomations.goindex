package github.com/hashicorp/terraform-provider-aws/internal/service/ssmincidents
import (
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ssmincidents/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandSSMAutomations(automations []any) []types.Action {
	var result []types.Action
	for _, automation := range automations {
		ssmAutomation := types.SsmAutomation{}
		automationData := automation.(map[string]any)

		if v, ok := automationData["document_name"].(string); ok {
			ssmAutomation.DocumentName = aws.String(v)
		}

		if v, ok := automationData[names.AttrRoleARN].(string); ok {
			ssmAutomation.RoleArn = aws.String(v)
		}

		if v, ok := automationData["document_version"].(string); ok {
			ssmAutomation.DocumentVersion = aws.String(v)
		}

		if v, ok := automationData["target_account"].(string); ok {
			ssmAutomation.TargetAccount = types.SsmTargetAccount(v)
		}

		if v, ok := automationData[names.AttrParameter].(*schema.Set); ok {
			ssmAutomation.Parameters = expandParameters(v)
		}

		if v, ok := automationData["dynamic_parameters"].(map[string]any); ok {
			ssmAutomation.DynamicParameters = expandDynamicParameters(v)
		}

		result = append(
			result,
			&types.ActionMemberSsmAutomation{Value: ssmAutomation},
		)
	}
	return result
}
