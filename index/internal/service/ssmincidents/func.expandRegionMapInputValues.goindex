package github.com/hashicorp/terraform-provider-aws/internal/service/ssmincidents
import (
	"context"
	"errors"
	"fmt"
	"log"
	"strings"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/arn"
	"github.com/aws/aws-sdk-go-v2/service/ssmincidents"
	awstypes "github.com/aws/aws-sdk-go-v2/service/ssmincidents/types"
	"github.com/hashicorp/go-cty/cty"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandRegionMapInputValues(tfList []any) map[string]awstypes.RegionMapInputValue {
	if len(tfList) == 0 {
		return nil
	}

	apiObjects := make(map[string]awstypes.RegionMapInputValue)

	for _, tfMapRaw := range tfList {
		tfMap := tfMapRaw.(map[string]any)

		apiObject := awstypes.RegionMapInputValue{}

		if kmsKey := tfMap[names.AttrKMSKeyARN].(string); kmsKey != "DefaultKey" {
			apiObject.SseKmsKeyId = aws.String(kmsKey)
		}

		apiObjects[tfMap[names.AttrName].(string)] = apiObject
	}

	return apiObjects
}
