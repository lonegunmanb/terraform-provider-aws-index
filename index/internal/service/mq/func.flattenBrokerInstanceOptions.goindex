package github.com/hashicorp/terraform-provider-aws/internal/service/mq
import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/mq"
	"github.com/aws/aws-sdk-go-v2/service/mq/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenBrokerInstanceOptions(bios []types.BrokerInstanceOption) []any {
	if len(bios) == 0 {
		return nil
	}

	var tfList []any

	for _, bio := range bios {
		tfMap := map[string]any{
			"engine_type":                bio.EngineType,
			names.AttrStorageType:        bio.StorageType,
			"supported_deployment_modes": bio.SupportedDeploymentModes,
			"supported_engine_versions":  bio.SupportedEngineVersions,
		}

		if bio.HostInstanceType != nil {
			tfMap["host_instance_type"] = aws.ToString(bio.HostInstanceType)
		}

		if bio.AvailabilityZones != nil {
			tfMap[names.AttrAvailabilityZones] = flattenAvailabilityZones(bio.AvailabilityZones)
		}

		tfList = append(tfList, tfMap)
	}

	return tfList
}
