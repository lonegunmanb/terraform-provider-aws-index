package github.com/hashicorp/terraform-provider-aws/internal/service/secretsmanager
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/secretsmanager"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) SDKDataSources(ctx context.Context) []*inttypes.ServicePackageSDKDataSource {
	return []*inttypes.ServicePackageSDKDataSource{
		{
			Factory:  dataSourceRandomPassword,
			TypeName: "aws_secretsmanager_random_password",
			Name:     "Random Password",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  dataSourceSecret,
			TypeName: "aws_secretsmanager_secret",
			Name:     "Secret",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  dataSourceSecretRotation,
			TypeName: "aws_secretsmanager_secret_rotation",
			Name:     "Secret Rotation",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  dataSourceSecretVersion,
			TypeName: "aws_secretsmanager_secret_version",
			Name:     "Secret Version",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  dataSourceSecrets,
			TypeName: "aws_secretsmanager_secrets",
			Name:     "Secrets",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
	}
}
