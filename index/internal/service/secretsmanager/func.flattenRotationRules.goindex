package github.com/hashicorp/terraform-provider-aws/internal/service/secretsmanager
import (
	"context"
	"log"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/secretsmanager"
	"github.com/aws/aws-sdk-go-v2/service/secretsmanager/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenRotationRules(rules *types.RotationRulesType) []any {
	if rules == nil {
		return nil
	}

	m := map[string]any{}

	// If ScheduleExpression is set, AutomaticallyAfterDays will be the result of AWS calculating the number of days between rotations
	if v := rules.ScheduleExpression; v != nil && aws.ToString(v) != "" {
		m[names.AttrScheduleExpression] = aws.ToString(v)
	} else if v := rules.AutomaticallyAfterDays; v != nil && aws.ToInt64(v) != 0 {
		// Only populate automatically_after_days if schedule_expression is not set, otherwise we won't be able to update the resource
		m["automatically_after_days"] = int(aws.ToInt64(v))
	}

	if v := rules.Duration; v != nil {
		m[names.AttrDuration] = aws.ToString(v)
	}

	return []any{m}
}
