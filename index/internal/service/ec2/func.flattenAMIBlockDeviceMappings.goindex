package github.com/hashicorp/terraform-provider-aws/internal/service/ec2
import (
	"context"
	"slices"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ec2"
	awstypes "github.com/aws/aws-sdk-go-v2/service/ec2/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenAMIBlockDeviceMappings(apiObjects []awstypes.BlockDeviceMapping) []any {
	if len(apiObjects) == 0 {
		return nil
	}

	var tfList []any

	for _, apiObject := range apiObjects {
		tfMap := map[string]any{
			names.AttrDeviceName:  aws.ToString(apiObject.DeviceName),
			names.AttrVirtualName: aws.ToString(apiObject.VirtualName),
		}

		if apiObject := apiObject.Ebs; apiObject != nil {
			ebs := map[string]any{
				names.AttrDeleteOnTermination: flex.BoolToStringValue(apiObject.DeleteOnTermination),
				names.AttrEncrypted:           flex.BoolToStringValue(apiObject.Encrypted),
				names.AttrIOPS:                flex.Int32ToStringValue(apiObject.Iops),
				names.AttrSnapshotID:          aws.ToString(apiObject.SnapshotId),
				names.AttrThroughput:          flex.Int32ToStringValue(apiObject.Throughput),
				"volume_initialization_rate":  flex.Int32ToStringValue(apiObject.VolumeInitializationRate),
				names.AttrVolumeSize:          flex.Int32ToStringValue(apiObject.VolumeSize),
				names.AttrVolumeType:          apiObject.VolumeType,
			}

			tfMap["ebs"] = ebs
		}

		tfList = append(tfList, tfMap)
	}

	return tfList
}
