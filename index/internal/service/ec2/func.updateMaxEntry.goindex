package github.com/hashicorp/terraform-provider-aws/internal/service/ec2
import (
	"context"
	"fmt"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ec2"
	awstypes "github.com/aws/aws-sdk-go-v2/service/ec2/types"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/customdiff"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func updateMaxEntry(ctx context.Context, conn *ec2.Client, id string, maxEntries int32) error {
	input := ec2.ModifyManagedPrefixListInput{
		PrefixListId: aws.String(id),
		MaxEntries:   aws.Int32(maxEntries),
	}
	_, err := conn.ModifyManagedPrefixList(ctx, &input)

	if err != nil {
		return fmt.Errorf("updating MaxEntries for EC2 Managed Prefix List (%s): %w", id, err)
	}

	_, err = waitManagedPrefixListModified(ctx, conn, id)

	if err != nil {
		return fmt.Errorf("waiting for EC2 Managed Prefix List (%s) MaxEntries update: %w", id, err)
	}

	return nil
}
