package github.com/hashicorp/terraform-provider-aws/internal/service/ec2
import (
	"context"
	"fmt"
	"slices"
	"strconv"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ec2"
	awstypes "github.com/aws/aws-sdk-go-v2/service/ec2/types"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func findCreateSnapshotCreateVolumePermissionByTwoPartKey(ctx context.Context, conn *ec2.Client, snapshotID, accountID string) (awstypes.CreateVolumePermission, error) {
	input := ec2.DescribeSnapshotAttributeInput{
		Attribute:  awstypes.SnapshotAttributeNameCreateVolumePermission,
		SnapshotId: aws.String(snapshotID),
	}

	output, err := findSnapshotAttribute(ctx, conn, &input)

	if err != nil {
		return awstypes.CreateVolumePermission{}, err
	}

	for _, v := range output.CreateVolumePermissions {
		if aws.ToString(v.UserId) == accountID {
			return v, nil
		}
	}

	return awstypes.CreateVolumePermission{}, &retry.NotFoundError{LastRequest: input}
}
