package github.com/hashicorp/terraform-provider-aws/internal/service/ec2
import (
	"bytes"
	"context"
	"fmt"
	"log"
	"strconv"
	"strings"

	awstypes "github.com/aws/aws-sdk-go-v2/service/ec2/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-plugin-sdk/v2/terraform"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func readV0BlockDevices(is *terraform.InstanceState) (map[string]map[string]string, error) {
	oldBds := make(map[string]map[string]string)
	for k, v := range is.Attributes {
		if !strings.HasPrefix(k, "block_device.") {
			continue
		}
		path := strings.Split(k, ".")
		if len(path) != 3 {
			return oldBds, fmt.Errorf("Found unexpected block_device field: %#v", k)
		}
		hashcode, attribute := path[1], path[2]
		oldBd, ok := oldBds[hashcode]
		if !ok {
			oldBd = make(map[string]string)
			oldBds[hashcode] = oldBd
		}
		oldBd[attribute] = v
		delete(is.Attributes, k)
	}
	return oldBds, nil
}
