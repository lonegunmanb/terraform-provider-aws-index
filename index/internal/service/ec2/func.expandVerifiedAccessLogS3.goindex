package github.com/hashicorp/terraform-provider-aws/internal/service/ec2
import (
	"context"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ec2"
	awstypes "github.com/aws/aws-sdk-go-v2/service/ec2/types"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/go-uuid"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandVerifiedAccessLogS3(s3 []any) *awstypes.VerifiedAccessLogS3DestinationOptions {
	if len(s3) == 0 || s3[0] == nil {
		return nil
	}

	tfMap, ok := s3[0].(map[string]any)
	if !ok {
		return nil
	}

	result := &awstypes.VerifiedAccessLogS3DestinationOptions{
		Enabled: aws.Bool(tfMap[names.AttrEnabled].(bool)),
	}

	if v, ok := tfMap[names.AttrBucketName].(string); ok && v != "" {
		result.BucketName = aws.String(v)
	}

	// if enabled is true, pass bucket owner, otherwise don't pass it
	// api error InvalidParameterCombination: The parameter AccessLogs.S3.BucketOwner cannot be used when AccessLogs.S3.Enabled is false
	if v, ok := tfMap[names.AttrEnabled].(bool); ok && v {
		if v, ok := tfMap["bucket_owner"].(string); ok && v != "" {
			result.BucketOwner = aws.String(v)
		}
	}

	if v, ok := tfMap[names.AttrPrefix].(string); ok && v != "" {
		result.Prefix = aws.String(v)
	}

	return result
}
