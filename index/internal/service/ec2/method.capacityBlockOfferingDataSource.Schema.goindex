package github.com/hashicorp/terraform-provider-aws/internal/service/ec2
import (
	"context"
	"fmt"

	"github.com/aws/aws-sdk-go-v2/service/ec2"
	"github.com/hashicorp/terraform-plugin-framework-timetypes/timetypes"
	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwflex "github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (d *capacityBlockOfferingDataSource) Schema(_ context.Context, _ datasource.SchemaRequest, response *datasource.SchemaResponse) {
	response.Schema = schema.Schema{
		Attributes: map[string]schema.Attribute{
			names.AttrAvailabilityZone: schema.StringAttribute{
				Computed: true,
			},
			"capacity_block_offering_id": framework.IDAttribute(),
			"capacity_duration_hours": schema.Int64Attribute{
				Required: true,
			},
			"currency_code": schema.StringAttribute{
				Computed: true,
			},
			"end_date_range": schema.StringAttribute{
				CustomType: timetypes.RFC3339Type{},
				Optional:   true,
				Computed:   true,
			},
			names.AttrInstanceCount: schema.Int64Attribute{
				Required: true,
			},
			names.AttrInstanceType: schema.StringAttribute{
				Required: true,
			},
			"start_date_range": schema.StringAttribute{
				CustomType: timetypes.RFC3339Type{},
				Optional:   true,
				Computed:   true,
			},
			"tenancy": schema.StringAttribute{
				Computed: true,
			},
			"upfront_fee": schema.StringAttribute{
				Computed: true,
			},
		},
	}
}
