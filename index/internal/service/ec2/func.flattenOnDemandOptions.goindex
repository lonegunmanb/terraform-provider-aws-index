package github.com/hashicorp/terraform-provider-aws/internal/service/ec2
import (
	"context"
	"errors"
	"fmt"
	"log"
	"strconv"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/arn"
	"github.com/aws/aws-sdk-go-v2/service/ec2"
	awstypes "github.com/aws/aws-sdk-go-v2/service/ec2/types"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenOnDemandOptions(apiObject *awstypes.OnDemandOptions) map[string]any {
	if apiObject == nil {
		return nil
	}

	tfMap := map[string]any{}

	if v := apiObject.AllocationStrategy; v != "" {
		tfMap["allocation_strategy"] = v
	}

	if v := apiObject.CapacityReservationOptions; v != nil {
		tfMap["capacity_reservation_options"] = []any{flattenCapacityReservationsOptions(v)}
	}

	if v := apiObject.MaxTotalPrice; v != nil {
		tfMap["max_total_price"] = aws.ToString(v)
	}

	if v := apiObject.MinTargetCapacity; v != nil {
		tfMap["min_target_capacity"] = aws.ToInt32(v)
	}

	if v := apiObject.SingleAvailabilityZone; v != nil {
		tfMap["single_availability_zone"] = aws.ToBool(v)
	}

	if v := apiObject.SingleInstanceType; v != nil {
		tfMap["single_instance_type"] = aws.ToBool(v)
	}

	return tfMap
}
