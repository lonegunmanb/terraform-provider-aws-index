package github.com/hashicorp/terraform-provider-aws/internal/service/ec2
import (
	"context"
	"fmt"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ec2"
	awstypes "github.com/aws/aws-sdk-go-v2/service/ec2/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func modifyAvailabilityZoneOptInStatus(ctx context.Context, conn *ec2.Client, groupName, optInStatus string) error {
	input := ec2.ModifyAvailabilityZoneGroupInput{
		GroupName:   aws.String(groupName),
		OptInStatus: awstypes.ModifyAvailabilityZoneOptInStatus(optInStatus),
	}

	if _, err := conn.ModifyAvailabilityZoneGroup(ctx, &input); err != nil {
		return err
	}

	waiter := waitAvailabilityZoneGroupOptedIn
	if optInStatus == string(awstypes.AvailabilityZoneOptInStatusNotOptedIn) {
		waiter = waitAvailabilityZoneGroupNotOptedIn
	}

	if _, err := waiter(ctx, conn, groupName); err != nil {
		return fmt.Errorf("waiting for completion: %w", err)
	}

	return nil
}
