package github.com/hashicorp/terraform-provider-aws/internal/service/ec2
import (
	"context"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func dataSourceInstanceType() *schema.Resource {
	return &schema.Resource{
		ReadWithoutTimeout: dataSourceInstanceTypeRead,

		Timeouts: &schema.ResourceTimeout{
			Read: schema.DefaultTimeout(20 * time.Minute),
		},

		Schema: map[string]*schema.Schema{
			"auto_recovery_supported": {
				Type:     schema.TypeBool,
				Computed: true,
			},
			"bandwidth_weightings": {
				Type:     schema.TypeSet,
				Computed: true,
				Elem:     &schema.Schema{Type: schema.TypeString},
			},
			"bare_metal": {
				Type:     schema.TypeBool,
				Computed: true,
			},
			"boot_modes": {
				Type:     schema.TypeSet,
				Computed: true,
				Elem:     &schema.Schema{Type: schema.TypeString},
			},
			"burstable_performance_supported": {
				Type:     schema.TypeBool,
				Computed: true,
			},
			"current_generation": {
				Type:     schema.TypeBool,
				Computed: true,
			},
			"dedicated_hosts_supported": {
				Type:     schema.TypeBool,
				Computed: true,
			},
			"default_cores": {
				Type:     schema.TypeInt,
				Computed: true,
			},
			"default_network_card_index": {
				Type:     schema.TypeInt,
				Computed: true,
			},
			"default_threads_per_core": {
				Type:     schema.TypeInt,
				Computed: true,
			},
			"default_vcpus": {
				Type:     schema.TypeInt,
				Computed: true,
			},
			"ebs_encryption_support": {
				Type:     schema.TypeString,
				Computed: true,
			},
			"ebs_nvme_support": {
				Type:     schema.TypeString,
				Computed: true,
			},
			"ebs_optimized_support": {
				Type:     schema.TypeString,
				Computed: true,
			},
			"ebs_performance_baseline_bandwidth": {
				Type:     schema.TypeInt,
				Computed: true,
			},
			"ebs_performance_baseline_throughput": {
				Type:     schema.TypeFloat,
				Computed: true,
			},
			"ebs_performance_baseline_iops": {
				Type:     schema.TypeInt,
				Computed: true,
			},
			"ebs_performance_maximum_bandwidth": {
				Type:     schema.TypeInt,
				Computed: true,
			},
			"ebs_performance_maximum_throughput": {
				Type:     schema.TypeFloat,
				Computed: true,
			},
			"ebs_performance_maximum_iops": {
				Type:     schema.TypeInt,
				Computed: true,
			},
			"efa_supported": {
				Type:     schema.TypeBool,
				Computed: true,
			},
			"efa_maximum_interfaces": {
				Type:     schema.TypeInt,
				Computed: true,
			},
			"ena_srd_supported": {
				Type:     schema.TypeBool,
				Computed: true,
			},
			"ena_support": {
				Type:     schema.TypeString,
				Computed: true,
			},
			"encryption_in_transit_supported": {
				Type:     schema.TypeBool,
				Computed: true,
			},
			"fpgas": {
				Type:     schema.TypeSet,
				Computed: true,
				Elem: &schema.Resource{
					Schema: map[string]*schema.Schema{
						"count": {
							Type:     schema.TypeInt,
							Computed: true,
						},
						"manufacturer": {
							Type:     schema.TypeString,
							Computed: true,
						},
						"memory_size": {
							Type:     schema.TypeInt,
							Computed: true,
						},
						names.AttrName: {
							Type:     schema.TypeString,
							Computed: true,
						},
					},
				},
			},
			"free_tier_eligible": {
				Type:     schema.TypeBool,
				Computed: true,
			},
			"gpus": {
				Type:     schema.TypeSet,
				Computed: true,
				Elem: &schema.Resource{
					Schema: map[string]*schema.Schema{
						"count": {
							Type:     schema.TypeInt,
							Computed: true,
						},
						"manufacturer": {
							Type:     schema.TypeString,
							Computed: true,
						},
						"memory_size": {
							Type:     schema.TypeInt,
							Computed: true,
						},
						names.AttrName: {
							Type:     schema.TypeString,
							Computed: true,
						},
					},
				},
			},
			"hibernation_supported": {
				Type:     schema.TypeBool,
				Computed: true,
			},
			"hypervisor": {
				Type:     schema.TypeString,
				Computed: true,
			},
			"inference_accelerators": {
				Type:     schema.TypeSet,
				Computed: true,
				Elem: &schema.Resource{
					Schema: map[string]*schema.Schema{
						"count": {
							Type:     schema.TypeInt,
							Computed: true,
						},
						"manufacturer": {
							Type:     schema.TypeString,
							Computed: true,
						},
						"memory_size": {
							Type:     schema.TypeInt,
							Computed: true,
						},
						names.AttrName: {
							Type:     schema.TypeString,
							Computed: true,
						},
					},
				},
			},
			"instance_disks": {
				Type:     schema.TypeSet,
				Computed: true,
				Elem: &schema.Resource{
					Schema: map[string]*schema.Schema{
						"count": {
							Type:     schema.TypeInt,
							Computed: true,
						},
						names.AttrSize: {
							Type:     schema.TypeInt,
							Computed: true,
						},
						names.AttrType: {
							Type:     schema.TypeString,
							Computed: true,
						},
					},
				},
			},
			"instance_storage_supported": {
				Type:     schema.TypeBool,
				Computed: true,
			},
			names.AttrInstanceType: {
				Type:     schema.TypeString,
				Required: true,
			},
			"ipv6_supported": {
				Type:     schema.TypeBool,
				Computed: true,
			},
			"maximum_ipv4_addresses_per_interface": {
				Type:     schema.TypeInt,
				Computed: true,
			},
			"maximum_ipv6_addresses_per_interface": {
				Type:     schema.TypeInt,
				Computed: true,
			},
			"maximum_network_cards": {
				Type:     schema.TypeInt,
				Computed: true,
			},
			"maximum_network_interfaces": {
				Type:     schema.TypeInt,
				Computed: true,
			},
			"media_accelerators": {
				Type:     schema.TypeSet,
				Computed: true,
				Elem: &schema.Resource{
					Schema: map[string]*schema.Schema{
						"count": {
							Type:     schema.TypeInt,
							Computed: true,
						},
						"manufacturer": {
							Type:     schema.TypeString,
							Computed: true,
						},
						"memory_size": {
							Type:     schema.TypeInt,
							Computed: true,
						},
						names.AttrName: {
							Type:     schema.TypeString,
							Computed: true,
						},
					},
				},
			},
			"memory_size": {
				Type:     schema.TypeInt,
				Computed: true,
			},
			"network_cards": {
				Type:     schema.TypeSet,
				Computed: true,
				Elem: &schema.Resource{
					Schema: map[string]*schema.Schema{
						"baseline_bandwidth": {
							Type:     schema.TypeFloat,
							Computed: true,
						},
						"index": {
							Type:     schema.TypeInt,
							Computed: true,
						},
						"maximum_interfaces": {
							Type:     schema.TypeInt,
							Computed: true,
						},
						"performance": {
							Type:     schema.TypeString,
							Computed: true,
						},
						"peak_bandwidth": {
							Type:     schema.TypeFloat,
							Computed: true,
						},
					},
				},
			},
			"network_performance": {
				Type:     schema.TypeString,
				Computed: true,
			},
			"neuron_devices": {
				Type:     schema.TypeSet,
				Computed: true,
				Elem: &schema.Resource{
					Schema: map[string]*schema.Schema{
						"core_count": {
							Type:     schema.TypeInt,
							Computed: true,
						},
						"core_version": {
							Type:     schema.TypeInt,
							Computed: true,
						},
						"count": {
							Type:     schema.TypeInt,
							Computed: true,
						},
						"memory_size": {
							Type:     schema.TypeInt,
							Computed: true,
						},
						names.AttrName: {
							Type:     schema.TypeString,
							Computed: true,
						},
					},
				},
			},
			"nitro_enclaves_support": {
				Type:     schema.TypeString,
				Computed: true,
			},
			"nitro_tpm_support": {
				Type:     schema.TypeString,
				Computed: true,
			},
			"nitro_tpm_supported_versions": {
				Type:     schema.TypeSet,
				Computed: true,
				Elem:     &schema.Schema{Type: schema.TypeString},
			},
			"phc_support": {
				Type:     schema.TypeString,
				Computed: true,
			},
			"supported_architectures": {
				Type:     schema.TypeList,
				Computed: true,
				Elem:     &schema.Schema{Type: schema.TypeString},
			},
			"supported_cpu_features": {
				Type:     schema.TypeSet,
				Computed: true,
				Elem:     &schema.Schema{Type: schema.TypeString},
			},
			"supported_placement_strategies": {
				Type:     schema.TypeList,
				Computed: true,
				Elem:     &schema.Schema{Type: schema.TypeString},
			},
			"supported_root_device_types": {
				Type:     schema.TypeList,
				Computed: true,
				Elem:     &schema.Schema{Type: schema.TypeString},
			},
			"supported_usages_classes": {
				Type:     schema.TypeList,
				Computed: true,
				Elem:     &schema.Schema{Type: schema.TypeString},
			},
			"supported_virtualization_types": {
				Type:     schema.TypeList,
				Computed: true,
				Elem:     &schema.Schema{Type: schema.TypeString},
			},
			"sustained_clock_speed": {
				Type:     schema.TypeFloat,
				Computed: true,
			},
			"total_fpga_memory": {
				Type:     schema.TypeInt,
				Computed: true,
			},
			"total_gpu_memory": {
				Type:     schema.TypeInt,
				Computed: true,
			},
			"total_inference_memory": {
				Type:     schema.TypeInt,
				Computed: true,
			},
			"total_instance_storage": {
				Type:     schema.TypeInt,
				Computed: true,
			},
			"total_media_memory": {
				Type:     schema.TypeInt,
				Computed: true,
			},
			"total_neuron_device_memory": {
				Type:     schema.TypeInt,
				Computed: true,
			},
			"valid_cores": {
				Type:     schema.TypeList,
				Computed: true,
				Elem:     &schema.Schema{Type: schema.TypeInt},
			},
			"valid_threads_per_core": {
				Type:     schema.TypeList,
				Computed: true,
				Elem:     &schema.Schema{Type: schema.TypeInt},
			},
		},
	}
}
