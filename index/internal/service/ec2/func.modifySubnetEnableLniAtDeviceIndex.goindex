package github.com/hashicorp/terraform-provider-aws/internal/service/ec2
import (
	"context"
	"fmt"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ec2"
	awstypes "github.com/aws/aws-sdk-go-v2/service/ec2/types"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/logging"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func modifySubnetEnableLniAtDeviceIndex(ctx context.Context, conn *ec2.Client, subnetID string, deviceIndex int32) error {
	input := &ec2.ModifySubnetAttributeInput{
		EnableLniAtDeviceIndex: aws.Int32(deviceIndex),
		SubnetId:               aws.String(subnetID),
	}

	if _, err := conn.ModifySubnetAttribute(ctx, input); err != nil {
		return fmt.Errorf("modifying EC2 Subnet (%s) EnableLniAtDeviceIndex: %w", subnetID, err)
	}

	if _, err := waitSubnetEnableLniAtDeviceIndexUpdated(ctx, conn, subnetID, deviceIndex); err != nil {
		return fmt.Errorf("waiting for EC2 Subnet (%s) EnableLniAtDeviceIndex update: %w", subnetID, err)
	}

	return nil
}
