package github.com/hashicorp/terraform-provider-aws/internal/service/ec2
import (
	"context"

	awstypes "github.com/aws/aws-sdk-go-v2/service/ec2/types"
	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwflex "github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (d *ipamDataSource) Schema(ctx context.Context, request datasource.SchemaRequest, response *datasource.SchemaResponse) {
	response.Schema = schema.Schema{
		Attributes: map[string]schema.Attribute{
			names.AttrARN: framework.ARNAttributeComputedOnly(),
			"default_resource_discovery_association_id": schema.StringAttribute{
				Computed: true,
			},
			"default_resource_discovery_id": schema.StringAttribute{
				Computed: true,
			},
			names.AttrDescription: schema.StringAttribute{
				Computed: true,
			},
			"enable_private_gua": schema.BoolAttribute{
				Computed: true,
			},
			names.AttrID: schema.StringAttribute{
				Required: true,
			},
			"ipam_region": schema.StringAttribute{
				Computed: true,
			},
			"operating_regions": framework.DataSourceComputedListOfObjectAttribute[ipamOperatingRegionModel](ctx),
			names.AttrOwnerID: schema.StringAttribute{
				Computed: true,
			},
			"private_default_scope_id": schema.StringAttribute{
				Computed: true,
			},
			"public_default_scope_id": schema.StringAttribute{
				Computed: true,
			},
			"resource_discovery_association_count": schema.Int32Attribute{
				Computed: true,
			},
			"scope_count": schema.Int32Attribute{
				Computed: true,
			},
			names.AttrState: schema.StringAttribute{
				CustomType: fwtypes.StringEnumType[awstypes.IpamState](),
				Computed:   true,
			},
			"state_message": schema.StringAttribute{
				Computed: true,
			},
			names.AttrTags: tftags.TagsAttributeComputedOnly(),
			"tier": schema.StringAttribute{
				CustomType: fwtypes.StringEnumType[awstypes.IpamTier](),
				Computed:   true,
			},
		},
	}
}
