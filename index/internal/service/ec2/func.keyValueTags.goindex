package github.com/hashicorp/terraform-provider-aws/internal/service/ec2
import (
	"context"
	"fmt"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ec2"
	awstypes "github.com/aws/aws-sdk-go-v2/service/ec2/types"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/logging"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/types/option"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func keyValueTags(ctx context.Context, tags any) tftags.KeyValueTags {
	switch tags := tags.(type) {
	case []awstypes.Tag:
		m := make(map[string]*string, len(tags))

		for _, tag := range tags {
			m[aws.ToString(tag.Key)] = tag.Value
		}

		return tftags.New(ctx, m)
	case []awstypes.TagDescription:
		m := make(map[string]*string, len(tags))

		for _, tag := range tags {
			m[aws.ToString(tag.Key)] = tag.Value
		}

		return tftags.New(ctx, m)
	default:
		return tftags.New(ctx, nil)
	}
}
