package github.com/hashicorp/terraform-provider-aws/internal/service/ec2
import (
	"cmp"
	"context"
	"encoding/xml"
	"fmt"
	"log"
	"net"
	"slices"
	"strconv"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ec2"
	awstypes "github.com/aws/aws-sdk-go-v2/service/ec2/types"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenCloudWatchLogOptions(apiObject *awstypes.CloudWatchLogOptions) map[string]any {
	if apiObject == nil {
		return nil
	}

	tfMap := map[string]any{}

	if v := apiObject.LogEnabled; v != nil {
		enabled := aws.ToBool(v)
		tfMap["log_enabled"] = enabled

		// No ARN or format if not enabled.
		if enabled {
			if v := apiObject.LogGroupArn; v != nil {
				tfMap["log_group_arn"] = aws.ToString(v)
			}

			if v := apiObject.LogOutputFormat; v != nil {
				tfMap["log_output_format"] = aws.ToString(v)
			}
		}
	}

	return tfMap
}
