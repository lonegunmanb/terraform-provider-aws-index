package github.com/hashicorp/terraform-provider-aws/internal/service/ec2
import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/ec2"
	awstypes "github.com/aws/aws-sdk-go-v2/service/ec2/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func resourceEBSSnapshotBlockPublicAccessPut(ctx context.Context, d *schema.ResourceData, meta any) diag.Diagnostics {
	var diags diag.Diagnostics
	conn := meta.(*conns.AWSClient).EC2Client(ctx)

	state := d.Get(names.AttrState).(string)
	input := ec2.EnableSnapshotBlockPublicAccessInput{
		State: awstypes.SnapshotBlockPublicAccessState(state),
	}

	_, err := conn.EnableSnapshotBlockPublicAccess(ctx, &input)

	if err != nil {
		return sdkdiag.AppendErrorf(diags, "enabling EBS Snapshot Block Public Access (%s): %s", state, err)
	}

	if d.IsNewResource() {
		d.SetId(meta.(*conns.AWSClient).Region(ctx))
	}

	return append(diags, resourceEBSSnapshotBlockPublicAccessRead(ctx, d, meta)...)
}
