package github.com/hashicorp/terraform-provider-aws/internal/service/ec2
import (
	"context"
	"fmt"
	"log"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ec2"
	"github.com/aws/aws-sdk-go-v2/service/ec2/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func resourceNetworkPerformanceMetricSubscription() *schema.Resource {
	return &schema.Resource{
		CreateWithoutTimeout: resourceNetworkPerformanceMetricSubscriptionCreate,
		ReadWithoutTimeout:   resourceNetworkPerformanceMetricSubscriptionRead,
		DeleteWithoutTimeout: resourceNetworkPerformanceMetricSubscriptionDelete,

		Schema: map[string]*schema.Schema{
			names.AttrDestination: {
				Type:     schema.TypeString,
				Required: true,
				ForceNew: true,
			},
			"metric": {
				Type:             schema.TypeString,
				Optional:         true,
				ForceNew:         true,
				Default:          types.MetricTypeAggregateLatency,
				ValidateDiagFunc: enum.Validate[types.MetricType](),
			},
			"period": {
				Type:     schema.TypeString,
				Computed: true,
			},
			names.AttrSource: {
				Type:     schema.TypeString,
				Required: true,
				ForceNew: true,
			},
			"statistic": {
				Type:             schema.TypeString,
				Optional:         true,
				ForceNew:         true,
				Default:          types.StatisticTypeP50,
				ValidateDiagFunc: enum.Validate[types.StatisticType](),
			},
		},
	}
}
