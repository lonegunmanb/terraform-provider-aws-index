package github.com/hashicorp/terraform-provider-aws/internal/service/ec2
import (
	"context"
	"errors"
	"fmt"
	"strconv"
	"strings"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ec2"
	awstypes "github.com/aws/aws-sdk-go-v2/service/ec2/types"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
)
func waitLaunchTemplateReady(ctx context.Context, conn *ec2.Client, id string, idIsName bool, timeout time.Duration) error {
	stateConf := &retry.StateChangeConf{
		Pending:                   []string{""},
		Target:                    enum.Slice(launchTemplateFoundStatus),
		Refresh:                   statusLaunchTemplate(ctx, conn, id, idIsName),
		Timeout:                   timeout,
		Delay:                     5 * time.Second,
		NotFoundChecks:            5,
		ContinuousTargetOccurence: 3,
	}

	_, err := stateConf.WaitForStateContext(ctx)

	return err
}
