package github.com/hashicorp/terraform-provider-aws/internal/service/ec2
import (
	"context"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ec2"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func resourceSpotDataFeedSubscriptionCreate(ctx context.Context, d *schema.ResourceData, meta any) diag.Diagnostics {
	var diags diag.Diagnostics
	conn := meta.(*conns.AWSClient).EC2Client(ctx)

	input := ec2.CreateSpotDatafeedSubscriptionInput{
		Bucket: aws.String(d.Get(names.AttrBucket).(string)),
	}

	if v, ok := d.GetOk(names.AttrPrefix); ok {
		input.Prefix = aws.String(v.(string))
	}

	_, err := conn.CreateSpotDatafeedSubscription(ctx, &input)

	if err != nil {
		return sdkdiag.AppendErrorf(diags, "creating EC2 Spot Datafeed Subscription: %s", err)
	}

	d.SetId("spot-datafeed-subscription")

	return append(diags, resourceSpotDataFeedSubscriptionRead(ctx, d, meta)...)
}
