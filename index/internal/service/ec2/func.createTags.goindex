package github.com/hashicorp/terraform-provider-aws/internal/service/ec2
import (
	"context"
	"fmt"
	"time"

	"github.com/aws/aws-sdk-go-v2/service/ec2"
	awstypes "github.com/aws/aws-sdk-go-v2/service/ec2/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
)
func createTags(ctx context.Context, conn *ec2.Client, identifier string, tags []awstypes.Tag, optFns ...func(*ec2.Options)) error {
	if len(tags) == 0 {
		return nil
	}

	newTagsMap := keyValueTags(ctx, tags)

	_, err := tfresource.RetryWhenAWSErrCodeContains(ctx, eventualConsistencyTimeout, func() (any, error) {
		return nil, updateTags(ctx, conn, identifier, nil, newTagsMap, optFns...)
	}, ".NotFound")

	if err != nil {
		return fmt.Errorf("tagging resource (%s): %w", identifier, err)
	}

	return nil
}
