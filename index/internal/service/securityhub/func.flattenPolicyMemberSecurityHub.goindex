package github.com/hashicorp/terraform-provider-aws/internal/service/securityhub
import (
	"context"
	"errors"
	"log"
	"math"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/securityhub"
	"github.com/aws/aws-sdk-go-v2/service/securityhub/types"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenPolicyMemberSecurityHub(apiObject *types.PolicyMemberSecurityHub) map[string]any { // nosemgrep:ci.securityhub-in-func-name
	if apiObject == nil {
		return nil
	}

	tfMap := map[string]any{
		"enabled_standard_arns":           apiObject.Value.EnabledStandardIdentifiers,
		"security_controls_configuration": flattenSecurityControlsConfiguration(apiObject.Value.SecurityControlsConfiguration),
	}

	if v := apiObject.Value.ServiceEnabled; v != nil {
		tfMap["service_enabled"] = aws.ToBool(v)
	}

	return tfMap
}
