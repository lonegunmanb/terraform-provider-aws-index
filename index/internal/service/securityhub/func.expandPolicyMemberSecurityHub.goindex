package github.com/hashicorp/terraform-provider-aws/internal/service/securityhub
import (
	"context"
	"errors"
	"log"
	"math"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/securityhub"
	"github.com/aws/aws-sdk-go-v2/service/securityhub/types"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandPolicyMemberSecurityHub(tfMap map[string]any) *types.PolicyMemberSecurityHub { // nosemgrep:ci.securityhub-in-func-name
	if tfMap == nil {
		return nil
	}

	apiObject := types.SecurityHubPolicy{
		SecurityControlsConfiguration: expandSecurityControlsConfiguration(tfMap["security_controls_configuration"]),
	}

	if v, ok := tfMap["service_enabled"].(bool); ok {
		apiObject.ServiceEnabled = aws.Bool(v)

		if v {
			if v, ok := tfMap["enabled_standard_arns"].(*schema.Set); ok {
				apiObject.EnabledStandardIdentifiers = flex.ExpandStringValueSet(v)
			}
		}
	}

	return &types.PolicyMemberSecurityHub{
		Value: apiObject,
	}
}
