package github.com/hashicorp/terraform-provider-aws/internal/service/securityhub
import (
	"context"
	"errors"
	"log"
	"math"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/securityhub"
	"github.com/aws/aws-sdk-go-v2/service/securityhub/types"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenSecurityControlCustomParameter(apiObject types.SecurityControlCustomParameter) map[string]any {
	tfMap := map[string]any{}

	if v := apiObject.SecurityControlId; v != nil {
		tfMap["security_control_id"] = aws.ToString(v)
	}

	var tfList []any

	for name, apiObject := range apiObject.Parameters {
		tfMap := map[string]any{
			names.AttrName: name,
			"value_type":   apiObject.ValueType,
		}

		switch apiObject := apiObject.Value.(type) {
		case *types.ParameterValueMemberBoolean:
			tfMap["bool"] = []any{
				map[string]any{
					names.AttrValue: apiObject.Value,
				},
			}
		case *types.ParameterValueMemberDouble:
			tfMap["double"] = []any{
				map[string]any{
					names.AttrValue: apiObject.Value,
				},
			}
		case *types.ParameterValueMemberEnum:
			tfMap["enum"] = []any{
				map[string]any{
					names.AttrValue: apiObject.Value,
				},
			}
		case *types.ParameterValueMemberEnumList:
			tfMap["enum_list"] = []any{
				map[string]any{
					names.AttrValue: apiObject.Value,
				},
			}
		case *types.ParameterValueMemberInteger:
			tfMap["int"] = []any{
				map[string]any{
					names.AttrValue: apiObject.Value,
				},
			}
		case *types.ParameterValueMemberIntegerList:
			tfMap["int_list"] = []any{
				map[string]any{
					names.AttrValue: apiObject.Value,
				},
			}
		case *types.ParameterValueMemberString:
			tfMap["string"] = []any{
				map[string]any{
					names.AttrValue: apiObject.Value,
				},
			}
		case *types.ParameterValueMemberStringList:
			tfMap["string_list"] = []any{
				map[string]any{
					names.AttrValue: apiObject.Value,
				},
			}
		}

		tfList = append(tfList, tfMap)
	}

	tfMap[names.AttrParameter] = tfList

	return tfMap
}
