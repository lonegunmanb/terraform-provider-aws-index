package github.com/hashicorp/terraform-provider-aws/internal/service/securityhub
import (
	"context"
	"fmt"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/securityhub"
	awstypes "github.com/aws/aws-sdk-go-v2/service/securityhub/types"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/terraform-plugin-framework-timetypes/timetypes"
	"github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
	"github.com/hashicorp/terraform-plugin-framework-validators/setvalidator"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/fwdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwflex "github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (r *automationRuleResource) Update(ctx context.Context, request resource.UpdateRequest, response *resource.UpdateResponse) {
	var old, new automationRuleResourceModel
	response.Diagnostics.Append(request.Plan.Get(ctx, &new)...)
	if response.Diagnostics.HasError() {
		return
	}
	response.Diagnostics.Append(request.State.Get(ctx, &old)...)
	if response.Diagnostics.HasError() {
		return
	}

	conn := r.Meta().SecurityHubClient(ctx)

	if !new.Actions.Equal(old.Actions) ||
		!new.Criteria.Equal(old.Criteria) ||
		!new.Description.Equal(old.Description) ||
		!new.IsTerminal.Equal(old.IsTerminal) ||
		!new.RuleName.Equal(old.RuleName) ||
		!new.RuleOrder.Equal(old.RuleOrder) ||
		!new.RuleStatus.Equal(old.RuleStatus) {
		item := awstypes.UpdateAutomationRulesRequestItem{}
		response.Diagnostics.Append(fwflex.Expand(ctx, new, &item)...)
		if response.Diagnostics.HasError() {
			return
		}

		input := &securityhub.BatchUpdateAutomationRulesInput{
			UpdateAutomationRulesRequestItems: []awstypes.UpdateAutomationRulesRequestItem{item},
		}

		_, err := conn.BatchUpdateAutomationRules(ctx, input)

		if err != nil {
			response.Diagnostics.AddError(fmt.Sprintf("updating Security Hub Automation Rule (%s)", aws.ToString(item.RuleArn)), err.Error())

			return
		}
	}

	response.Diagnostics.Append(response.State.Set(ctx, &new)...)
}
