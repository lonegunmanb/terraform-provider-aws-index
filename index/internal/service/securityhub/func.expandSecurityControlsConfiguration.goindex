package github.com/hashicorp/terraform-provider-aws/internal/service/securityhub
import (
	"context"
	"errors"
	"log"
	"math"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/securityhub"
	"github.com/aws/aws-sdk-go-v2/service/securityhub/types"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandSecurityControlsConfiguration(tfListRaw any) *types.SecurityControlsConfiguration {
	var apiObject *types.SecurityControlsConfiguration

	if v, ok := tfListRaw.([]any); ok && len(v) > 0 && v[0] != nil {
		tfMap := v[0].(map[string]any)
		apiObject = &types.SecurityControlsConfiguration{}

		if v, ok := tfMap["disabled_control_identifiers"].(*schema.Set); ok && v.Len() > 0 {
			apiObject.DisabledSecurityControlIdentifiers = flex.ExpandStringValueSet(v)
		}

		if v, ok := tfMap["enabled_control_identifiers"].(*schema.Set); ok && v.Len() > 0 {
			apiObject.EnabledSecurityControlIdentifiers = flex.ExpandStringValueSet(v)
		}

		if v, ok := tfMap["security_control_custom_parameter"].([]any); ok && len(v) > 0 {
			for _, tfMapRaw := range v {
				tfMap, ok := tfMapRaw.(map[string]any)
				if !ok {
					continue
				}

				apiObject.SecurityControlCustomParameters = append(apiObject.SecurityControlCustomParameters, expandSecurityControlCustomParameter(tfMap))
			}
		}
	} else if ok && len(v) > 0 && v[0] == nil { // resource defined, but with defaults
		apiObject = &types.SecurityControlsConfiguration{}
	} // else resource undefined yields nil

	return apiObject
}
