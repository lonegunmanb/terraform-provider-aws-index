package github.com/hashicorp/terraform-provider-aws/internal/service/cloud9
import (
	"context"
	"fmt"
	"log"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cloud9"
	"github.com/aws/aws-sdk-go-v2/service/cloud9/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func resourceEnvironmentMembershipCreate(ctx context.Context, d *schema.ResourceData, meta any) diag.Diagnostics {
	var diags diag.Diagnostics
	conn := meta.(*conns.AWSClient).Cloud9Client(ctx)

	envID := d.Get("environment_id").(string)
	userARN := d.Get("user_arn").(string)
	id := environmentMembershipCreateResourceID(envID, userARN)
	input := &cloud9.CreateEnvironmentMembershipInput{
		EnvironmentId: aws.String(envID),
		Permissions:   types.MemberPermissions(d.Get(names.AttrPermissions).(string)),
		UserArn:       aws.String(userARN),
	}

	_, err := conn.CreateEnvironmentMembership(ctx, input)

	if err != nil {
		return sdkdiag.AppendErrorf(diags, "creating Cloud9 Environment Membership (%s): %s", id, err)
	}

	d.SetId(id)

	return append(diags, resourceEnvironmentMembershipRead(ctx, d, meta)...)
}
