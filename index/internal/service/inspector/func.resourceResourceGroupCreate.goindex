package github.com/hashicorp/terraform-provider-aws/internal/service/inspector
import (
	"context"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/inspector"
	awstypes "github.com/aws/aws-sdk-go-v2/service/inspector/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func resourceResourceGroupCreate(ctx context.Context, d *schema.ResourceData, meta any) diag.Diagnostics {
	var diags diag.Diagnostics
	conn := meta.(*conns.AWSClient).InspectorClient(ctx)

	req := &inspector.CreateResourceGroupInput{
		ResourceGroupTags: expandResourceGroupTags(d.Get(names.AttrTags).(map[string]any)),
	}
	log.Printf("[DEBUG] Creating Inspector Classic Resource Group: %#v", req)
	resp, err := conn.CreateResourceGroup(ctx, req)

	if err != nil {
		return sdkdiag.AppendErrorf(diags, "creating Inspector Classic Resource Group: %s", err)
	}

	d.SetId(aws.ToString(resp.ResourceGroupArn))

	return append(diags, resourceResourceGroupRead(ctx, d, meta)...)
}
