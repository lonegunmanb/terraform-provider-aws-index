package github.com/hashicorp/terraform-provider-aws/internal/service/inspector
import (
	"context"
	"slices"

	"github.com/aws/aws-sdk-go-v2/service/inspector"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func dataSourceRulesPackagesRead(ctx context.Context, d *schema.ResourceData, meta any) diag.Diagnostics {
	var diags diag.Diagnostics
	conn := meta.(*conns.AWSClient).InspectorClient(ctx)

	output, err := findRulesPackageARNs(ctx, conn)

	if err != nil {
		return sdkdiag.AppendErrorf(diags, "reading Inspector Classic Rules Packages: %s", err)
	}
	arns := output
	slices.Sort(arns)

	d.SetId(meta.(*conns.AWSClient).Region(ctx))
	d.Set(names.AttrARNs, arns)

	return diags
}
