package github.com/hashicorp/terraform-provider-aws/internal/service/inspector
import (
	"context"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/inspector"
	awstypes "github.com/aws/aws-sdk-go-v2/service/inspector/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func FindAssessmentTargetByID(ctx context.Context, conn *inspector.Client, arn string) (*awstypes.AssessmentTarget, error) {
	input := &inspector.DescribeAssessmentTargetsInput{
		AssessmentTargetArns: []string{arn},
	}

	output, err := conn.DescribeAssessmentTargets(ctx, input)

	if errs.IsA[*awstypes.InvalidInputException](err) {
		return nil, nil
	}

	if err != nil {
		return nil, err
	}

	for _, target := range output.AssessmentTargets {
		if aws.ToString(target.Arn) == arn {
			return &target, nil
		}
	}

	return nil, &retry.NotFoundError{
		LastRequest: input,
	}
}
