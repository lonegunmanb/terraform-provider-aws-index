package github.com/hashicorp/terraform-provider-aws/internal/service/ssm
import (
	"context"
	"errors"
	"log"
	"strings"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/arn"
	"github.com/aws/aws-sdk-go-v2/service/ssm"
	awstypes "github.com/aws/aws-sdk-go-v2/service/ssm/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tfmaps "github.com/hashicorp/terraform-provider-aws/internal/maps"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandAssociationOutputLocation(tfList []any) *awstypes.InstanceAssociationOutputLocation {
	if tfList == nil {
		return nil
	}

	//We only allow 1 Item so we can grab the first in the list only
	tfMap := tfList[0].(map[string]any)

	s3OutputLocation := &awstypes.S3OutputLocation{
		OutputS3BucketName: aws.String(tfMap[names.AttrS3BucketName].(string)),
	}

	if v, ok := tfMap[names.AttrS3KeyPrefix]; ok {
		s3OutputLocation.OutputS3KeyPrefix = aws.String(v.(string))
	}

	if v, ok := tfMap["s3_region"].(string); ok && v != "" {
		s3OutputLocation.OutputS3Region = aws.String(v)
	}

	return &awstypes.InstanceAssociationOutputLocation{
		S3Location: s3OutputLocation,
	}
}
