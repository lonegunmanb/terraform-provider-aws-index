package github.com/hashicorp/terraform-provider-aws/internal/service/ssm
import (
	"context"
	"fmt"
	"log"
	"slices"
	"strings"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/arn"
	"github.com/aws/aws-sdk-go-v2/service/ssm"
	awstypes "github.com/aws/aws-sdk-go-v2/service/ssm/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tfmaps "github.com/hashicorp/terraform-provider-aws/internal/maps"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenTaskInvocationRunCommandParameters(apiObject *awstypes.MaintenanceWindowRunCommandParameters) []any {
	tfMap := make(map[string]any)

	if apiObject.CloudWatchOutputConfig != nil {
		tfMap["cloudwatch_config"] = flattenTaskInvocationRunCommandParametersCloudWatchConfig(apiObject.CloudWatchOutputConfig)
	}
	if apiObject.Comment != nil {
		tfMap[names.AttrComment] = aws.ToString(apiObject.Comment)
	}
	if apiObject.DocumentHash != nil {
		tfMap["document_hash"] = aws.ToString(apiObject.DocumentHash)
	}
	tfMap["document_hash_type"] = apiObject.DocumentHashType
	if apiObject.DocumentVersion != nil {
		tfMap["document_version"] = aws.ToString(apiObject.DocumentVersion)
	}
	if apiObject.NotificationConfig != nil {
		tfMap["notification_config"] = flattenTaskInvocationRunCommandParametersNotificationConfig(apiObject.NotificationConfig)
	}
	if apiObject.OutputS3BucketName != nil {
		tfMap["output_s3_bucket"] = aws.ToString(apiObject.OutputS3BucketName)
	}
	if apiObject.OutputS3KeyPrefix != nil {
		tfMap["output_s3_key_prefix"] = aws.ToString(apiObject.OutputS3KeyPrefix)
	}
	if apiObject.Parameters != nil {
		tfMap[names.AttrParameter] = flattenTaskInvocationCommonParameters(apiObject.Parameters)
	}
	if apiObject.ServiceRoleArn != nil {
		tfMap[names.AttrServiceRoleARN] = aws.ToString(apiObject.ServiceRoleArn)
	}
	if apiObject.TimeoutSeconds != nil {
		tfMap["timeout_seconds"] = aws.ToInt32(apiObject.TimeoutSeconds)
	}

	return []any{tfMap}
}
