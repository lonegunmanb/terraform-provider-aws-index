package github.com/hashicorp/terraform-provider-aws/internal/service/ssm
import (
	"context"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ssm"
	awstypes "github.com/aws/aws-sdk-go-v2/service/ssm/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenResourceDataSyncS3Destination(apiObject *awstypes.ResourceDataSyncS3Destination) []any {
	tfMap := make(map[string]any)

	tfMap[names.AttrBucketName] = aws.ToString(apiObject.BucketName)
	tfMap[names.AttrRegion] = aws.ToString(apiObject.Region)
	tfMap["sync_format"] = apiObject.SyncFormat
	if apiObject.AWSKMSKeyARN != nil {
		tfMap[names.AttrKMSKeyARN] = aws.ToString(apiObject.AWSKMSKeyARN)
	}
	if apiObject.Prefix != nil {
		tfMap[names.AttrPrefix] = aws.ToString(apiObject.Prefix)
	}

	return []any{tfMap}
}
