package github.com/hashicorp/terraform-provider-aws/internal/service/lexv2models
import (
	"context"
	"slices"

	"github.com/hashicorp/terraform-plugin-framework/diag"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
)
func evalValueElicitationSetting[T valueElicitationSettinger](ctx context.Context, oldValueElicitationSetting, newValueElicitationSetting T) (bool, diag.Diagnostics) {
	var diags diag.Diagnostics

	switch oldSetting := any(oldValueElicitationSetting).(type) {
	case *ValueElicitationSettingData:
		newSetting := any(newValueElicitationSetting).(*ValueElicitationSettingData)
		if !oldSetting.DefaultValueSpecification.Equal(newSetting.DefaultValueSpecification) ||
			!oldSetting.SlotConstraint.Equal(newSetting.SlotConstraint) ||
			!oldSetting.SlotResolutionSetting.Equal(newSetting.SlotResolutionSetting) ||
			!oldSetting.SampleUtterance.Equal(newSetting.SampleUtterance) ||
			!oldSetting.WaitAndContinueSpecification.Equal(newSetting.WaitAndContinueSpecification) {
			return false, diags
		}

		return evaluatePromptSpecification(ctx, oldSetting.PromptSpecification, newSetting.PromptSpecification)
	case *SubSlotValueElicitationSettingData:
		newSetting := any(newValueElicitationSetting).(*SubSlotValueElicitationSettingData)
		if !oldSetting.DefaultValueSpecification.Equal(newSetting.DefaultValueSpecification) ||
			!oldSetting.SampleUtterance.Equal(newSetting.SampleUtterance) ||
			!oldSetting.WaitAndContinueSpecification.Equal(newSetting.WaitAndContinueSpecification) {
			return false, diags
		}

		return evaluatePromptSpecification(ctx, oldSetting.PromptSpecification, newSetting.PromptSpecification)
	}

	return false, diags
}
