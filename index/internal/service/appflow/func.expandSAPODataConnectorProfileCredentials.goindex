package github.com/hashicorp/terraform-provider-aws/internal/service/appflow
import (
	"context"
	"log"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/appflow"
	"github.com/aws/aws-sdk-go-v2/service/appflow/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandSAPODataConnectorProfileCredentials(m map[string]any) *types.SAPODataConnectorProfileCredentials {
	credentials := &types.SAPODataConnectorProfileCredentials{}

	if v, ok := m["basic_auth_credentials"].([]any); ok && len(v) > 0 && v[0] != nil {
		credentials.BasicAuthCredentials = expandBasicAuthCredentials(v[0].(map[string]any))
	}
	if v, ok := m["oauth_credentials"].([]any); ok && len(v) > 0 && v[0] != nil {
		credentials.OAuthCredentials = expandOAuthCredentials(v[0].(map[string]any))
	}

	return credentials
}
