package github.com/hashicorp/terraform-provider-aws/internal/service/appflow
import (
	"context"
	"log"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/appflow"
	"github.com/aws/aws-sdk-go-v2/service/appflow/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenSAPODataConnectorProfileProperties(properties *types.SAPODataConnectorProfileProperties) []any {
	m := make(map[string]any)

	m["application_host_url"] = aws.ToString(properties.ApplicationHostUrl)
	m["application_service_path"] = aws.ToString(properties.ApplicationServicePath)
	m["client_number"] = aws.ToString(properties.ClientNumber)
	m["port_number"] = aws.ToInt32(properties.PortNumber)

	if properties.LogonLanguage != nil {
		m["logon_language"] = aws.ToString(properties.LogonLanguage)
	}

	if properties.OAuthProperties != nil {
		m["oauth_properties"] = flattenOAuthProperties(properties.OAuthProperties)
	}

	if properties.PrivateLinkServiceName != nil {
		m["private_link_service_name"] = aws.ToString(properties.PrivateLinkServiceName)
	}

	return []any{m}
}
