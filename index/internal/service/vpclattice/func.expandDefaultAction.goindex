package github.com/hashicorp/terraform-provider-aws/internal/service/vpclattice
import (
	"context"
	"fmt"
	"log"
	"strings"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/vpclattice"
	"github.com/aws/aws-sdk-go-v2/service/vpclattice/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	sdkid "github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandDefaultAction(tfList []any) types.RuleAction {
	if len(tfList) == 0 || tfList[0] == nil {
		return nil
	}

	tfMapRaw := tfList[0].(map[string]any)

	if v, ok := tfMapRaw["forward"].([]any); ok && len(v) > 0 {
		return &types.RuleActionMemberForward{
			Value: expandDefaultActionForwardAction(v),
		}
	} else if v, ok := tfMapRaw["fixed_response"].([]any); ok && len(v) > 0 {
		return &types.RuleActionMemberFixedResponse{
			Value: expandDefaultActionFixedResponseStatus(v),
		}
	}

	return nil
}
