package github.com/hashicorp/terraform-provider-aws/internal/service/fsx
import (
	"context"
	"errors"
	"fmt"
	"log"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/fsx"
	awstypes "github.com/aws/aws-sdk-go-v2/service/fsx/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/sdkv2/types/nullable"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandTieringPolicy(tfMap map[string]any) *awstypes.TieringPolicy {
	if tfMap == nil {
		return nil
	}

	apiObject := &awstypes.TieringPolicy{}

	// Cooling period only accepts a minimum of 2 but int will return 0 not nil if unset.
	// Therefore we only set it if it is 2 or more.
	if tfMap[names.AttrName].(string) == string(awstypes.TieringPolicyNameAuto) || tfMap[names.AttrName].(string) == string(awstypes.TieringPolicyNameSnapshotOnly) {
		if v, ok := tfMap["cooling_period"].(int); ok && v >= minTieringPolicyCoolingPeriod {
			apiObject.CoolingPeriod = aws.Int32(int32(v))
		}
	}

	if v, ok := tfMap[names.AttrName].(string); ok && v != "" {
		apiObject.Name = awstypes.TieringPolicyName(v)
	}

	return apiObject
}
