package github.com/hashicorp/terraform-provider-aws/internal/service/fsx
import (
	"context"
	"fmt"
	"log"
	"slices"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/fsx"
	awstypes "github.com/aws/aws-sdk-go-v2/service/fsx/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/customdiff"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func validateDiskConfigurationIOPS(_ context.Context, d *schema.ResourceDiff, meta any) error {
	deploymentType := d.Get("deployment_type").(string)

	if diskConfiguration, ok := d.GetOk("disk_iops_configuration"); ok {
		if len(diskConfiguration.([]any)) > 0 {
			m := diskConfiguration.([]any)[0].(map[string]any)

			if v, ok := m[names.AttrIOPS].(int); ok {
				if deploymentType == string(awstypes.OpenZFSDeploymentTypeSingleAz1) {
					if v < 0 || v > 160000 {
						return fmt.Errorf("expected disk_iops_configuration.0.iops to be in the range (0 - 160000) when deployment_type (%s), got %d", awstypes.OpenZFSDeploymentTypeSingleAz1, v)
					}
				} else if deploymentType == string(awstypes.OpenZFSDeploymentTypeSingleAz2) {
					if v < 0 || v > 400000 {
						return fmt.Errorf("expected disk_iops_configuration.0.iops to be in the range (0 - 400000) when deployment_type (%s), got %d", awstypes.OpenZFSDeploymentTypeSingleAz2, v)
					}
				}
			}
		}
	}

	return nil
}
