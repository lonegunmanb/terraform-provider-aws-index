package github.com/hashicorp/terraform-provider-aws/internal/service/fsx
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/fsx"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) SDKDataSources(ctx context.Context) []*inttypes.ServicePackageSDKDataSource {
	return []*inttypes.ServicePackageSDKDataSource{
		{
			Factory:  dataSourceONTAPFileSystem,
			TypeName: "aws_fsx_ontap_file_system",
			Name:     "ONTAP File System",
			Tags:     unique.Make(inttypes.ServicePackageResourceTags{}),
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  dataSourceONTAPStorageVirtualMachine,
			TypeName: "aws_fsx_ontap_storage_virtual_machine",
			Name:     "ONTAP Storage Virtual Machine",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  dataSourceONTAPStorageVirtualMachines,
			TypeName: "aws_fsx_ontap_storage_virtual_machines",
			Name:     "ONTAP Storage Virtual Machines",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  dataSourceOpenzfsSnapshot,
			TypeName: "aws_fsx_openzfs_snapshot",
			Name:     "OpenZFS Snapshot",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  dataSourceWindowsFileSystem,
			TypeName: "aws_fsx_windows_file_system",
			Name:     "Windows File System",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
	}
}
