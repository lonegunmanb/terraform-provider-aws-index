package github.com/hashicorp/terraform-provider-aws/internal/service/fsx
import (
	"context"
	"fmt"
	"log"
	"slices"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/fsx"
	awstypes "github.com/aws/aws-sdk-go-v2/service/fsx/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/customdiff"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandOpenZFSCreateRootVolumeConfiguration(tfList []any) *awstypes.OpenZFSCreateRootVolumeConfiguration {
	if len(tfList) < 1 {
		return nil
	}

	tfMap := tfList[0].(map[string]any)
	apiObject := &awstypes.OpenZFSCreateRootVolumeConfiguration{}

	if v, ok := tfMap["copy_tags_to_snapshots"].(bool); ok {
		apiObject.CopyTagsToSnapshots = aws.Bool(v)
	}

	if v, ok := tfMap["data_compression_type"].(string); ok {
		apiObject.DataCompressionType = awstypes.OpenZFSDataCompressionType(v)
	}

	if v, ok := tfMap["nfs_exports"].([]any); ok {
		apiObject.NfsExports = expandOpenZFSNfsExports(v)
	}

	if v, ok := tfMap["read_only"].(bool); ok {
		apiObject.ReadOnly = aws.Bool(v)
	}

	if v, ok := tfMap["record_size_kib"].(int); ok {
		apiObject.RecordSizeKiB = aws.Int32(int32(v))
	}

	if v, ok := tfMap["user_and_group_quotas"]; ok {
		apiObject.UserAndGroupQuotas = expandOpenZFSUserOrGroupQuotas(v.(*schema.Set).List())
	}

	return apiObject
}
