package github.com/hashicorp/terraform-provider-aws/internal/service/fsx
import (
	"context"
	"fmt"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/fsx"
	awstypes "github.com/aws/aws-sdk-go-v2/service/fsx/types"
	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep/awsv2"
)
func RegisterSweepers() {
	resource.AddTestSweepers("aws_fsx_backup", &resource.Sweeper{
		Name: "aws_fsx_backup",
		F:    sweepBackups,
	})

	resource.AddTestSweepers("aws_fsx_lustre_file_system", &resource.Sweeper{
		Name: "aws_fsx_lustre_file_system",
		F:    sweepLustreFileSystems,
		Dependencies: []string{
			"aws_datasync_location",
			"aws_m2_environment",
		},
	})

	resource.AddTestSweepers("aws_fsx_ontap_file_system", &resource.Sweeper{
		Name: "aws_fsx_ontap_file_system",
		F:    sweepONTAPFileSystems,
		Dependencies: []string{
			"aws_datasync_location",
			"aws_fsx_ontap_storage_virtual_machine",
			"aws_m2_environment",
		},
	})

	resource.AddTestSweepers("aws_fsx_ontap_storage_virtual_machine", &resource.Sweeper{
		Name: "aws_fsx_ontap_storage_virtual_machine",
		F:    sweepONTAPStorageVirtualMachine,
		Dependencies: []string{
			"aws_fsx_ontap_volume",
		},
	})

	awsv2.Register("aws_fsx_ontap_volume", sweepONTAPVolumes)

	resource.AddTestSweepers("aws_fsx_openzfs_file_system", &resource.Sweeper{
		Name: "aws_fsx_openzfs_file_system",
		F:    sweepOpenZFSFileSystems,
		Dependencies: []string{
			"aws_datasync_location",
			"aws_fsx_openzfs_volume",
			"aws_m2_environment",
		},
	})

	resource.AddTestSweepers("aws_fsx_openzfs_volume", &resource.Sweeper{
		Name: "aws_fsx_openzfs_volume",
		F:    sweepOpenZFSVolume,
	})

	resource.AddTestSweepers("aws_fsx_windows_file_system", &resource.Sweeper{
		Name: "aws_fsx_windows_file_system",
		F:    sweepWindowsFileSystems,
		Dependencies: []string{
			"aws_datasync_location",
			"aws_m2_environment",
			"aws_storagegateway_file_system_association",
		},
	})
}
