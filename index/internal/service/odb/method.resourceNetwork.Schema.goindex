package github.com/hashicorp/terraform-provider-aws/internal/service/odb
import (
	"context"
	"errors"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/odb"
	odbtypes "github.com/aws/aws-sdk-go-v2/service/odb/types"
	"github.com/hashicorp/terraform-plugin-framework-timeouts/resource/timeouts"
	"github.com/hashicorp/terraform-plugin-framework-timetypes/timetypes"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/path"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/fwdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	"github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (r *resourceNetwork) Schema(ctx context.Context, req resource.SchemaRequest, resp *resource.SchemaResponse) {
	statusType := fwtypes.StringEnumType[odbtypes.ResourceStatus]()
	stringLengthBetween1And255Validator := []validator.String{
		stringvalidator.LengthBetween(1, 255),
	}
	resp.Schema = schema.Schema{
		Attributes: map[string]schema.Attribute{
			names.AttrARN: framework.ARNAttributeComputedOnly(),
			names.AttrID:  framework.IDAttribute(),
			names.AttrDisplayName: schema.StringAttribute{
				Required:    true,
				Description: "The user-friendly name for the odb network. Changing this will force terraform to create a new resource.",
				PlanModifiers: []planmodifier.String{
					stringplanmodifier.RequiresReplace(),
				},
			},
			names.AttrAvailabilityZone: schema.StringAttribute{
				Optional: true,
				Computed: true,
				PlanModifiers: []planmodifier.String{
					stringplanmodifier.RequiresReplace(),
					stringplanmodifier.UseStateForUnknown(),
				},
				Description: "The name of the Availability Zone (AZ) where the odb network is located. Changing this will force terraform to create new resource",
			},
			"availability_zone_id": schema.StringAttribute{
				Required: true,
				PlanModifiers: []planmodifier.String{
					stringplanmodifier.RequiresReplace(),
				},
				Description: "The AZ ID of the AZ where the ODB network is located. Changing this will force terraform to create new resource.",
			},
			"client_subnet_cidr": schema.StringAttribute{
				Required:   true,
				Validators: stringLengthBetween1And255Validator,
				PlanModifiers: []planmodifier.String{
					stringplanmodifier.RequiresReplace(),
				},
				Description: "The CIDR notation for the network resource. Changing this will force terraform to create new resource.\n" +
					" Constraints:\n  " +
					"\t - Must not overlap with the CIDR range of the backup subnet.\n   " +
					"\t- Must not overlap with the CIDR ranges of the VPCs that are connected to the\n  " +
					" ODB network.\n  " +
					"\t- Must not use the following CIDR ranges that are reserved by OCI:\n  " +
					"\t - 100.106.0.0/16 and 100.107.0.0/16\n  " +
					"\t - 169.254.0.0/16\n   " +
					"\t- 224.0.0.0 - 239.255.255.255\n   " +
					"\t- 240.0.0.0 - 255.255.255.255",
			},
			"backup_subnet_cidr": schema.StringAttribute{
				Required:   true,
				Validators: stringLengthBetween1And255Validator,
				PlanModifiers: []planmodifier.String{
					stringplanmodifier.RequiresReplace(),
				},
				Description: "The CIDR range of the backup subnet for the ODB network. Changing this will force terraform to create new resource.\n" +
					"\tConstraints:\n" +
					"\t   - Must not overlap with the CIDR range of the client subnet.\n" +
					"\t   - Must not overlap with the CIDR ranges of the VPCs that are connected to the\n" +
					"\t   ODB network.\n" +
					"\t   - Must not use the following CIDR ranges that are reserved by OCI:\n" +
					"\t   - 100.106.0.0/16 and 100.107.0.0/16\n" +
					"\t   - 169.254.0.0/16\n" +
					"\t   - 224.0.0.0 - 239.255.255.255\n" +
					"\t   - 240.0.0.0 - 255.255.255.255",
			},

			"custom_domain_name": schema.StringAttribute{
				Optional:   true,
				Validators: stringLengthBetween1And255Validator,
				PlanModifiers: []planmodifier.String{
					stringplanmodifier.RequiresReplace(),
				},
				Description: "The name of the custom domain that the network is located. custom_domain_name and default_dns_prefix both can't be given.",
			},
			"default_dns_prefix": schema.StringAttribute{
				Optional: true,
				PlanModifiers: []planmodifier.String{
					stringplanmodifier.RequiresReplace(),
				},
				Description: "The default DNS prefix for the network resource. Changing this will force terraform to create new resource.",
			},
			"s3_access": schema.StringAttribute{
				Required:    true,
				CustomType:  fwtypes.StringEnumType[odbtypes.Access](),
				Description: "Specifies the configuration for Amazon S3 access from the ODB network.",
			},
			"zero_etl_access": schema.StringAttribute{
				Required:    true,
				CustomType:  fwtypes.StringEnumType[odbtypes.Access](),
				Description: "Specifies the configuration for Zero-ETL access from the ODB network.",
			},
			"s3_policy_document": schema.StringAttribute{
				Optional: true,
				PlanModifiers: []planmodifier.String{
					stringplanmodifier.UseStateForUnknown(),
				},
				Description: "Specifies the endpoint policy for Amazon S3 access from the ODB network.",
			},
			"oci_dns_forwarding_configs": schema.ListAttribute{
				CustomType:  fwtypes.NewListNestedObjectTypeOf[odbNwkOciDnsForwardingConfigResourceModel](ctx),
				Computed:    true,
				Description: "The DNS resolver endpoint in OCI for forwarding DNS queries for the ociPrivateZone domain.",
			},
			"peered_cidrs": schema.SetAttribute{
				CustomType:  fwtypes.SetOfStringType,
				ElementType: types.StringType,
				Computed:    true,
				Description: "The list of CIDR ranges from the peered VPC that are allowed access to the ODB network. Please refer odb network peering documentation.",
			},
			"oci_network_anchor_id": schema.StringAttribute{
				Computed:    true,
				Description: "The unique identifier of the OCI network anchor for the ODB network.",
			},
			"oci_network_anchor_url": schema.StringAttribute{
				Computed:    true,
				Description: "The URL of the OCI network anchor for the ODB network.",
			},
			"oci_resource_anchor_name": schema.StringAttribute{
				Computed:    true,
				Description: "The name of the OCI resource anchor for the ODB network.",
			},
			"oci_vcn_id": schema.StringAttribute{
				Computed:    true,
				Description: "The unique identifier  Oracle Cloud ID (OCID) of the OCI VCN for the ODB network.",
			},
			"oci_vcn_url": schema.StringAttribute{
				Computed:    true,
				Description: "The URL of the OCI VCN for the ODB network.",
			},
			"percent_progress": schema.Float32Attribute{
				Computed:    true,
				Description: "The amount of progress made on the current operation on the ODB network, expressed as a percentage.",
			},
			names.AttrStatus: schema.StringAttribute{
				CustomType:  statusType,
				Computed:    true,
				Description: "The status of the network resource.",
			},
			names.AttrStatusReason: schema.StringAttribute{
				Computed:    true,
				Description: "Additional information about the current status of the ODB network.",
			},
			names.AttrCreatedAt: schema.StringAttribute{
				Computed:    true,
				CustomType:  timetypes.RFC3339Type{},
				Description: "The date and time when the ODB network was created.",
			},
			"managed_services": schema.ListAttribute{
				Computed:    true,
				CustomType:  fwtypes.NewListNestedObjectTypeOf[odbNetworkManagedServicesResourceModel](ctx),
				Description: "The managed services configuration for the ODB network.",
			},
			names.AttrTags:    tftags.TagsAttribute(),
			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
		},
		Blocks: map[string]schema.Block{
			names.AttrTimeouts: timeouts.Block(ctx, timeouts.Opts{
				Create: true,
				Update: true,
				Delete: true,
			}),
		},
	}
}
