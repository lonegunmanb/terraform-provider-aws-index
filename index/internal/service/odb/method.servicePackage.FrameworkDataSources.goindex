package github.com/hashicorp/terraform-provider-aws/internal/service/odb
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/odb"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) FrameworkDataSources(ctx context.Context) []*inttypes.ServicePackageFrameworkDataSource {
	return []*inttypes.ServicePackageFrameworkDataSource{
		{
			Factory:  newDataSourceCloudAutonomousVmCluster,
			TypeName: "aws_odb_cloud_autonomous_vm_cluster",
			Name:     "Cloud Autonomous Vm Cluster",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newDataSourceCloudExadataInfrastructure,
			TypeName: "aws_odb_cloud_exadata_infrastructure",
			Name:     "Cloud Exadata Infrastructure",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newDataSourceCloudVmCluster,
			TypeName: "aws_odb_cloud_vm_cluster",
			Name:     "Cloud Vm Cluster",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newDataSourceDBNode,
			TypeName: "aws_odb_db_node",
			Name:     "Db Node",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newDataSourceDBNodes,
			TypeName: "aws_odb_db_nodes",
			Name:     "Db Nodes",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newDataSourceDBServer,
			TypeName: "aws_odb_db_server",
			Name:     "Db Server",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newDataSourceDBServers,
			TypeName: "aws_odb_db_servers",
			Name:     "Db Servers",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newDataSourceDBSystemShapes,
			TypeName: "aws_odb_db_system_shapes",
			Name:     "Db System Shapes",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newDataSourceGiVersions,
			TypeName: "aws_odb_gi_versions",
			Name:     "Gi Versions",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newDataSourceNetwork,
			TypeName: "aws_odb_network",
			Name:     "Network",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newDataSourceNetworkPeeringConnection,
			TypeName: "aws_odb_network_peering_connection",
			Name:     "Network Peering Connection",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
	}
}
