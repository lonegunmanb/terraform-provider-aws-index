package github.com/hashicorp/terraform-provider-aws/internal/service/scheduler
import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/scheduler/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenTarget(ctx context.Context, apiObject *types.Target) map[string]any {
	if apiObject == nil {
		return nil
	}

	m := map[string]any{}

	if v := apiObject.Arn; v != nil {
		m[names.AttrARN] = aws.ToString(v)
	}

	if v := apiObject.DeadLetterConfig; v != nil {
		m["dead_letter_config"] = []any{flattenDeadLetterConfig(v)}
	}

	if v := apiObject.EcsParameters; v != nil {
		m["ecs_parameters"] = []any{flattenECSParameters(ctx, v)}
	}

	if v := apiObject.EventBridgeParameters; v != nil {
		m["eventbridge_parameters"] = []any{flattenEventBridgeParameters(v)}
	}

	if v := apiObject.Input; v != nil {
		m["input"] = aws.ToString(v)
	}

	if v := apiObject.KinesisParameters; v != nil {
		m["kinesis_parameters"] = []any{flattenKinesisParameters(v)}
	}

	if v := apiObject.RoleArn; v != nil {
		m[names.AttrRoleARN] = aws.ToString(v)
	}

	if v := apiObject.RetryPolicy; v != nil {
		m["retry_policy"] = []any{flattenRetryPolicy(v)}
	}

	if v := apiObject.SageMakerPipelineParameters; v != nil {
		m["sagemaker_pipeline_parameters"] = []any{flattenSageMakerPipelineParameters(v)}
	}

	if v := apiObject.SqsParameters; v != nil {
		m["sqs_parameters"] = []any{flattenSQSParameters(v)}
	}

	return m
}
