package github.com/hashicorp/terraform-provider-aws/internal/service/identitystore
import (
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/identitystore/document"
	"github.com/aws/aws-sdk-go-v2/service/identitystore/types"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenAddress(apiObject *types.Address) map[string]any {
	if apiObject == nil {
		return nil
	}

	tfMap := map[string]any{}

	if v := apiObject.Country; v != nil {
		tfMap["country"] = aws.ToString(v)
	}

	if v := apiObject.Formatted; v != nil {
		tfMap["formatted"] = aws.ToString(v)
	}

	if v := apiObject.Locality; v != nil {
		tfMap["locality"] = aws.ToString(v)
	}

	if v := apiObject.PostalCode; v != nil {
		tfMap["postal_code"] = aws.ToString(v)
	}

	tfMap["primary"] = apiObject.Primary

	if v := apiObject.Region; v != nil {
		tfMap[names.AttrRegion] = aws.ToString(v)
	}

	if v := apiObject.StreetAddress; v != nil {
		tfMap["street_address"] = aws.ToString(v)
	}

	if v := apiObject.Type; v != nil {
		tfMap[names.AttrType] = aws.ToString(v)
	}

	return tfMap
}
