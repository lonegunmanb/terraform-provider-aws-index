package github.com/hashicorp/terraform-provider-aws/internal/service/identitystore
import (
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/identitystore/document"
	"github.com/aws/aws-sdk-go-v2/service/identitystore/types"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandAddress(tfMap map[string]any) *types.Address {
	if tfMap == nil {
		return nil
	}

	apiObject := &types.Address{}

	if v, ok := tfMap["country"].(string); ok && v != "" {
		apiObject.Country = aws.String(v)
	}

	if v, ok := tfMap["formatted"].(string); ok && v != "" {
		apiObject.Formatted = aws.String(v)
	}

	if v, ok := tfMap["locality"].(string); ok && v != "" {
		apiObject.Locality = aws.String(v)
	}

	if v, ok := tfMap["postal_code"].(string); ok && v != "" {
		apiObject.PostalCode = aws.String(v)
	}

	apiObject.Primary = tfMap["primary"].(bool)

	if v, ok := tfMap[names.AttrRegion].(string); ok && v != "" {
		apiObject.Region = aws.String(v)
	}

	if v, ok := tfMap["street_address"].(string); ok && v != "" {
		apiObject.StreetAddress = aws.String(v)
	}

	if v, ok := tfMap[names.AttrType].(string); ok && v != "" {
		apiObject.Type = aws.String(v)
	}

	return apiObject
}
