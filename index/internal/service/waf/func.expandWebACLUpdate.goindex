package github.com/hashicorp/terraform-provider-aws/internal/service/waf
import (
	"context"
	"log"
	"slices"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/waf"
	awstypes "github.com/aws/aws-sdk-go-v2/service/waf/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandWebACLUpdate(updateAction string, aclRule map[string]any) awstypes.WebACLUpdate {
	var rule *awstypes.ActivatedRule

	switch aclRule[names.AttrType].(string) {
	case string(awstypes.WafRuleTypeGroup):
		rule = &awstypes.ActivatedRule{
			OverrideAction: expandOverrideAction(aclRule["override_action"].([]any)),
			Priority:       aws.Int32(int32(aclRule[names.AttrPriority].(int))),
			RuleId:         aws.String(aclRule["rule_id"].(string)),
			Type:           awstypes.WafRuleType(aclRule[names.AttrType].(string)),
		}
	default:
		rule = &awstypes.ActivatedRule{
			Action:   expandAction(aclRule[names.AttrAction].([]any)),
			Priority: aws.Int32(int32(aclRule[names.AttrPriority].(int))),
			RuleId:   aws.String(aclRule["rule_id"].(string)),
			Type:     awstypes.WafRuleType(aclRule[names.AttrType].(string)),
		}
	}

	update := awstypes.WebACLUpdate{
		Action:        awstypes.ChangeAction(updateAction),
		ActivatedRule: rule,
	}

	return update
}
