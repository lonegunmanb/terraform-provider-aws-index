package github.com/hashicorp/terraform-provider-aws/internal/service/waf
import (
	"context"
	"fmt"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/waf"
	awstypes "github.com/aws/aws-sdk-go-v2/service/waf/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func updateRateBasedRule(ctx context.Context, conn *waf.Client, id string, oldP, newP []any, rateLimit any) error {
	input := &waf.UpdateRateBasedRuleInput{
		RateLimit: aws.Int64(int64(rateLimit.(int))),
		RuleId:    aws.String(id),
		Updates:   diffRulePredicates(oldP, newP),
	}

	_, err := newRetryer(conn).RetryWithToken(ctx, func(token *string) (any, error) {
		input.ChangeToken = token

		return conn.UpdateRateBasedRule(ctx, input)
	})

	if err != nil {
		return fmt.Errorf("updating WAF Rate Based Rule (%s): %w", id, err)
	}

	return nil
}
