package github.com/hashicorp/terraform-provider-aws/internal/service/waf
import (
	"context"
	"fmt"
	"log"
	"slices"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/waf"
	awstypes "github.com/aws/aws-sdk-go-v2/service/waf/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func diffRegexPatternSetPatternStrings(oldPatterns, newPatterns []any) []awstypes.RegexPatternSetUpdate {
	updates := make([]awstypes.RegexPatternSetUpdate, 0)

	for _, op := range oldPatterns {
		if idx := tfslices.IndexOf(newPatterns, op.(string)); idx > -1 {
			newPatterns = slices.Delete(newPatterns, idx, idx+1)
			continue
		}

		updates = append(updates, awstypes.RegexPatternSetUpdate{
			Action:             awstypes.ChangeActionDelete,
			RegexPatternString: aws.String(op.(string)),
		})
	}

	for _, np := range newPatterns {
		updates = append(updates, awstypes.RegexPatternSetUpdate{
			Action:             awstypes.ChangeActionInsert,
			RegexPatternString: aws.String(np.(string)),
		})
	}
	return updates
}
