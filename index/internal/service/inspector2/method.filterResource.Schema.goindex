package github.com/hashicorp/terraform-provider-aws/internal/service/inspector2
import (
	"context"
	"fmt"

	"github.com/aws/aws-sdk-go-v2/service/inspector2"
	awstypes "github.com/aws/aws-sdk-go-v2/service/inspector2/types"
	"github.com/hashicorp/terraform-plugin-framework-timetypes/timetypes"
	"github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
	"github.com/hashicorp/terraform-plugin-framework-validators/setvalidator"
	"github.com/hashicorp/terraform-plugin-framework/path"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/fwdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwflex "github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (r *filterResource) Schema(ctx context.Context, request resource.SchemaRequest, response *resource.SchemaResponse) {
	const (
		defaultFilterSchemaMaxSize = 20
	)
	response.Schema = schema.Schema{
		Attributes: map[string]schema.Attribute{
			names.AttrAction: schema.StringAttribute{
				CustomType: fwtypes.StringEnumType[awstypes.FilterAction](),
				Required:   true,
			},
			names.AttrARN: framework.ARNAttributeComputedOnly(),
			names.AttrDescription: schema.StringAttribute{
				Optional: true,
			},
			names.AttrName: schema.StringAttribute{
				Required: true,
				PlanModifiers: []planmodifier.String{
					stringplanmodifier.RequiresReplace(),
				},
			},
			"reason": schema.StringAttribute{
				Optional: true,
			},
			names.AttrTags:    tftags.TagsAttribute(),
			names.AttrTagsAll: tftags.TagsAttributeComputedOnly(),
		},
		Blocks: map[string]schema.Block{
			"filter_criteria": schema.ListNestedBlock{
				CustomType: fwtypes.NewListNestedObjectTypeOf[filterCriteriaModel](ctx),
				Validators: []validator.List{
					listvalidator.IsRequired(),
					listvalidator.SizeAtLeast(1),
				},
				NestedObject: schema.NestedBlockObject{
					Blocks: map[string]schema.Block{
						names.AttrAWSAccountID:               stringFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"code_vulnerability_detector_name":   stringFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"code_vulnerability_detector_tags":   stringFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"code_vulnerability_file_path":       stringFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"component_id":                       stringFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"component_type":                     stringFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"ec2_instance_image_id":              stringFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"ec2_instance_subnet_id":             stringFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"ec2_instance_vpc_id":                stringFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"ecr_image_architecture":             stringFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"ecr_image_hash":                     stringFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"ecr_image_pushed_at":                dateFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"ecr_image_registry":                 stringFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"ecr_image_repository_name":          stringFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"ecr_image_tags":                     stringFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"epss_score":                         numberFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"exploit_available":                  stringFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"finding_arn":                        stringFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"finding_status":                     stringFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"finding_type":                       stringFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"first_observed_at":                  dateFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"fix_available":                      stringFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"inspector_score":                    numberFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"lambda_function_execution_role_arn": stringFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"lambda_function_last_modified_at":   dateFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"lambda_function_layers":             stringFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"lambda_function_name":               stringFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"lambda_function_runtime":            stringFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"last_observed_at":                   dateFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"network_protocol":                   stringFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"port_range":                         portRangeFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"related_vulnerabilities":            stringFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						names.AttrResourceID:                 stringFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						names.AttrResourceTags:               mapFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						names.AttrResourceType:               stringFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"severity":                           stringFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"title":                              stringFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"updated_at":                         dateFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"vendor_severity":                    stringFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"vulnerability_id":                   stringFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"vulnerability_source":               stringFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
						"vulnerable_packages":                packageFilterSchemaFramework(ctx, defaultFilterSchemaMaxSize),
					},
				},
			},
		},
	}
}
