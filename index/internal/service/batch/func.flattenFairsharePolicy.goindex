package github.com/hashicorp/terraform-provider-aws/internal/service/batch
import (
	"context"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/batch"
	awstypes "github.com/aws/aws-sdk-go-v2/service/batch/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenFairsharePolicy(apiObject *awstypes.FairsharePolicy) []any {
	if apiObject == nil {
		return []any{}
	}

	tfMap := map[string]any{
		"compute_reservation": aws.ToInt32(apiObject.ComputeReservation),
		"share_decay_seconds": aws.ToInt32(apiObject.ShareDecaySeconds),
	}

	tfList := []any{}
	for _, apiObject := range apiObject.ShareDistribution {
		tfMap := map[string]any{
			"share_identifier": aws.ToString(apiObject.ShareIdentifier),
			"weight_factor":    flex.Float32ToFloat64Value(apiObject.WeightFactor),
		}
		tfList = append(tfList, tfMap)
	}
	tfMap["share_distribution"] = tfList

	return []any{tfMap}
}
