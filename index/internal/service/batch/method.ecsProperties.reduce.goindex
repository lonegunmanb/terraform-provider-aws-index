package github.com/hashicorp/terraform-provider-aws/internal/service/batch
import (
	"cmp"
	"slices"
	_ "unsafe" // Required for go:linkname

	"github.com/aws/aws-sdk-go-v2/aws"
	_ "github.com/aws/aws-sdk-go-v2/service/batch" // Required for go:linkname
	awstypes "github.com/aws/aws-sdk-go-v2/service/batch/types"
	smithyjson "github.com/aws/smithy-go/encoding/json"
	tfjson "github.com/hashicorp/terraform-provider-aws/internal/json"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
)
func (ep *ecsProperties) reduce() {
	ep.orderContainers()
	ep.orderEnvironmentVariables()
	ep.orderSecrets()

	// Set all empty slices to nil.
	// Deal with special fields which have defaults.
	for i, taskProps := range ep.TaskProperties {
		for j, container := range taskProps.Containers {
			if container.Essential == nil {
				container.Essential = aws.Bool(true)
			}

			if len(container.Command) == 0 {
				container.Command = nil
			}
			if len(container.DependsOn) == 0 {
				container.DependsOn = nil
			}
			if len(container.Environment) == 0 {
				container.Environment = nil
			}
			if container.LogConfiguration != nil && len(container.LogConfiguration.SecretOptions) == 0 {
				container.LogConfiguration.SecretOptions = nil
			}
			if len(container.MountPoints) == 0 {
				container.MountPoints = nil
			}
			if len(container.Secrets) == 0 {
				container.Secrets = nil
			}
			if len(container.Ulimits) == 0 {
				container.Ulimits = nil
			}

			taskProps.Containers[j] = container
		}

		if taskProps.PlatformVersion == nil {
			taskProps.PlatformVersion = aws.String(fargatePlatformVersionLatest)
		}

		if len(taskProps.Volumes) == 0 {
			taskProps.Volumes = nil
		}

		ep.TaskProperties[i] = taskProps
	}
}
