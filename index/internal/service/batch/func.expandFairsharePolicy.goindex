package github.com/hashicorp/terraform-provider-aws/internal/service/batch
import (
	"context"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/batch"
	awstypes "github.com/aws/aws-sdk-go-v2/service/batch/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandFairsharePolicy(tfList []any) *awstypes.FairsharePolicy {
	if len(tfList) == 0 || tfList[0] == nil {
		return nil
	}

	tfMap, ok := tfList[0].(map[string]any)
	if !ok {
		return nil
	}

	apiObject := &awstypes.FairsharePolicy{
		ComputeReservation: aws.Int32(int32(tfMap["compute_reservation"].(int))),
		ShareDecaySeconds:  aws.Int32(int32(tfMap["share_decay_seconds"].(int))),
	}

	for _, tfMapRaw := range tfMap["share_distribution"].(*schema.Set).List() {
		tfMap := tfMapRaw.(map[string]any)
		apiObject.ShareDistribution = append(apiObject.ShareDistribution, awstypes.ShareAttributes{
			ShareIdentifier: aws.String(tfMap["share_identifier"].(string)),
			WeightFactor:    flex.Float64ValueToFloat32(tfMap["weight_factor"].(float64)),
		})
	}

	return apiObject
}
