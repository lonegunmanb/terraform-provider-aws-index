package github.com/hashicorp/terraform-provider-aws/internal/service/batch
import (
	"context"
	"fmt"
	"log"
	"reflect"
	"strings"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/batch"
	awstypes "github.com/aws/aws-sdk-go-v2/service/batch/types"
	"github.com/hashicorp/go-cty/cty"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/structure"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/provider/sdkv2/importer"
	"github.com/hashicorp/terraform-provider-aws/internal/sdkv2"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenEKSVolumes(apiObjects []awstypes.EksVolume) []any {
	var tfList []any

	for _, v := range apiObjects {
		tfMap := map[string]any{}

		if v := v.EmptyDir; v != nil {
			tfMap["empty_dir"] = []map[string]any{{
				"medium":     aws.ToString(v.Medium),
				"size_limit": aws.ToString(v.SizeLimit),
			}}
		}

		if v := v.HostPath; v != nil {
			tfMap["host_path"] = []map[string]any{{
				names.AttrPath: aws.ToString(v.Path),
			}}
		}

		if v := v.Name; v != nil {
			tfMap[names.AttrName] = aws.ToString(v)
		}

		if v := v.Secret; v != nil {
			tfMap["secret"] = []map[string]any{{
				"optional":    aws.ToBool(v.Optional),
				"secret_name": aws.ToString(v.SecretName),
			}}
		}

		tfList = append(tfList, tfMap)
	}

	return tfList
}
