package github.com/hashicorp/terraform-provider-aws/internal/service/batch
import (
	"cmp"
	"slices"
	_ "unsafe" // Required for go:linkname

	"github.com/aws/aws-sdk-go-v2/aws"
	_ "github.com/aws/aws-sdk-go-v2/service/batch" // Required for go:linkname
	awstypes "github.com/aws/aws-sdk-go-v2/service/batch/types"
	tfjson "github.com/hashicorp/terraform-provider-aws/internal/json"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
)
func (ep *eksProperties) orderEnvironmentVariables() {
	for j, container := range ep.PodProperties.Containers {
		// Remove environment variables with empty values.
		container.Env = tfslices.Filter(container.Env, func(kvp awstypes.EksContainerEnvironmentVariable) bool {
			return aws.ToString(kvp.Value) != ""
		})

		slices.SortFunc(container.Env, func(a, b awstypes.EksContainerEnvironmentVariable) int {
			return cmp.Compare(aws.ToString(a.Name), aws.ToString(b.Name))
		})

		ep.PodProperties.Containers[j].Env = container.Env
	}
}
