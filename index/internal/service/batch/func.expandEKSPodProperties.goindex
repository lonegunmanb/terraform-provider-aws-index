package github.com/hashicorp/terraform-provider-aws/internal/service/batch
import (
	"context"
	"fmt"
	"log"
	"reflect"
	"strings"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/batch"
	awstypes "github.com/aws/aws-sdk-go-v2/service/batch/types"
	"github.com/hashicorp/go-cty/cty"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/structure"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/provider/sdkv2/importer"
	"github.com/hashicorp/terraform-provider-aws/internal/sdkv2"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandEKSPodProperties(tfMap map[string]any) *awstypes.EksPodProperties {
	apiObject := &awstypes.EksPodProperties{}

	if v, ok := tfMap["containers"]; ok {
		apiObject.Containers = expandContainers(v.([]any))
	}

	if v, ok := tfMap["dns_policy"].(string); ok && v != "" {
		apiObject.DnsPolicy = aws.String(v)
	}

	if v, ok := tfMap["host_network"]; ok {
		apiObject.HostNetwork = aws.Bool(v.(bool))
	}

	if v, ok := tfMap["image_pull_secret"]; ok {
		apiObject.ImagePullSecrets = expandImagePullSecrets(v.([]any))
	}

	if v, ok := tfMap["init_containers"]; ok {
		apiObject.InitContainers = expandContainers(v.([]any))
	}

	if v, ok := tfMap["metadata"].([]any); ok && len(v) > 0 {
		if v, ok := v[0].(map[string]any)["labels"]; ok {
			apiObject.Metadata = &awstypes.EksMetadata{
				Labels: flex.ExpandStringValueMap(v.(map[string]any)),
			}
		}
	}

	if v, ok := tfMap["service_account_name"].(string); ok && v != "" {
		apiObject.ServiceAccountName = aws.String(v)
	}

	if v, ok := tfMap["share_process_namespace"]; ok {
		apiObject.ShareProcessNamespace = aws.Bool(v.(bool))
	}

	if v, ok := tfMap["volumes"]; ok {
		apiObject.Volumes = expandVolumes(v.([]any))
	}

	return apiObject
}
