package github.com/hashicorp/terraform-provider-aws/internal/service/batch
import (
	"fmt"
	"log"
	"strings"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/arn"
	"github.com/aws/aws-sdk-go-v2/service/batch"
	awstypes "github.com/aws/aws-sdk-go-v2/service/batch/types"
	"github.com/aws/aws-sdk-go-v2/service/iam"
	multierror "github.com/hashicorp/go-multierror"
	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep/awsv2"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep/framework"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep/sdk"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func sweepJobQueues(region string) error {
	ctx := sweep.Context(region)
	client, err := sweep.SharedRegionalSweepClient(ctx, region)
	if err != nil {
		return fmt.Errorf("getting client: %w", err)
	}
	input := batch.DescribeJobQueuesInput{}
	conn := client.BatchClient(ctx)
	var sweepResources []sweep.Sweepable

	for jobQueue, err := range listJobQueues(ctx, conn, &input) {
		if err != nil {
			if awsv2.SkipSweepError(err) {
				log.Printf("[WARN] Skipping Batch Job Queue sweep for %s: %s", region, err)
				return nil
			}
			return fmt.Errorf("error listing Batch Job Queues (%s): %w", region, err)
		}

		id := aws.ToString(jobQueue.JobQueueArn)

		sweepResources = append(sweepResources, framework.NewSweepResource(newJobQueueResource, client,
			framework.NewAttribute(names.AttrID, id),
		))
	}

	err = sweep.SweepOrchestrator(ctx, sweepResources)

	if err != nil {
		return fmt.Errorf("error sweeping Batch Job Queues (%s): %w", region, err)
	}

	return nil
}
