package github.com/hashicorp/terraform-provider-aws/internal/service/batch
import (
	"cmp"
	"slices"
	_ "unsafe" // Required for go:linkname

	"github.com/aws/aws-sdk-go-v2/aws"
	_ "github.com/aws/aws-sdk-go-v2/service/batch" // Required for go:linkname
	awstypes "github.com/aws/aws-sdk-go-v2/service/batch/types"
	smithyjson "github.com/aws/smithy-go/encoding/json"
	tfjson "github.com/hashicorp/terraform-provider-aws/internal/json"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
)
func (ep *ecsProperties) orderEnvironmentVariables() {
	for i, taskProps := range ep.TaskProperties {
		for j, container := range taskProps.Containers {
			// Remove environment variables with empty values.
			container.Environment = tfslices.Filter(container.Environment, func(kvp awstypes.KeyValuePair) bool {
				return aws.ToString(kvp.Value) != ""
			})

			slices.SortFunc(container.Environment, func(a, b awstypes.KeyValuePair) int {
				return cmp.Compare(aws.ToString(a.Name), aws.ToString(b.Name))
			})

			ep.TaskProperties[i].Containers[j].Environment = container.Environment
		}
	}
}
