package github.com/hashicorp/terraform-provider-aws/internal/service/eks
import (
	"context"
	"errors"
	"fmt"
	"log"
	"strings"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/eks"
	"github.com/aws/aws-sdk-go-v2/service/eks/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	sdkid "github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandAddonPodIdentityAssociations(tfList []any) []types.AddonPodIdentityAssociations {
	if len(tfList) == 0 {
		return nil
	}

	var addonPodIdentityAssociations []types.AddonPodIdentityAssociations
	for _, raw := range tfList {
		tfMap, ok := raw.(map[string]any)
		if !ok {
			continue
		}

		pia := types.AddonPodIdentityAssociations{}
		if roleArn, ok := tfMap[names.AttrRoleARN].(string); ok {
			pia.RoleArn = aws.String(roleArn)
		}
		if service_account, ok := tfMap["service_account"].(string); ok {
			pia.ServiceAccount = aws.String(service_account)
		}

		addonPodIdentityAssociations = append(addonPodIdentityAssociations, pia)
	}

	return addonPodIdentityAssociations
}
