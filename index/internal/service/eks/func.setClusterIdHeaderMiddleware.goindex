package github.com/hashicorp/terraform-provider-aws/internal/service/eks
import (
	"context"
	"encoding/base64"
	"encoding/json"
	"errors"
	"fmt"
	"io"
	"net/http"
	"net/url"
	"regexp"
	"strconv"
	"strings"
	"time"

	"github.com/aws/aws-sdk-go-v2/service/sts"
	"github.com/aws/smithy-go/middleware"
	smithyhttp "github.com/aws/smithy-go/transport/http"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func setClusterIdHeaderMiddleware(clusterID string) middleware.BuildMiddleware {
	return middleware.BuildMiddlewareFunc(
		"Test: Set ClusterId",
		func(ctx context.Context, in middleware.BuildInput, next middleware.BuildHandler) (out middleware.BuildOutput, metadata middleware.Metadata, err error) {
			switch req := in.Request.(type) {
			case *smithyhttp.Request:
				req.Header.Add(clusterIDHeader, clusterID)
			default:
				return out, metadata, fmt.Errorf("unknown transport type %T", in.Request)
			}

			return next.HandleBuild(ctx, in)
		},
	)
}
