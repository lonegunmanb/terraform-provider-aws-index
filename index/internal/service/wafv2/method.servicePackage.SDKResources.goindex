package github.com/hashicorp/terraform-provider-aws/internal/service/wafv2
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/wafv2"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) SDKResources(ctx context.Context) []*inttypes.ServicePackageSDKResource {
	return []*inttypes.ServicePackageSDKResource{
		{
			Factory:  resourceIPSet,
			TypeName: "aws_wafv2_ip_set",
			Name:     "IP Set",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceRegexPatternSet,
			TypeName: "aws_wafv2_regex_pattern_set",
			Name:     "Regex Pattern Set",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceRuleGroup,
			TypeName: "aws_wafv2_rule_group",
			Name:     "Rule Group",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceWebACL,
			TypeName: "aws_wafv2_web_acl",
			Name:     "Web ACL",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceWebACLAssociation,
			TypeName: "aws_wafv2_web_acl_association",
			Name:     "Web ACL Association",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceWebACLLoggingConfiguration,
			TypeName: "aws_wafv2_web_acl_logging_configuration",
			Name:     "Web ACL Logging Configuration",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
	}
}
