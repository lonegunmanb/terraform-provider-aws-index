package github.com/hashicorp/terraform-provider-aws/internal/service/wafv2
import (
	"context"
	"log"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/wafv2"
	awstypes "github.com/aws/aws-sdk-go-v2/service/wafv2/types"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep/awsv2"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep/framework"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func sweepAPIKeys(ctx context.Context, client *conns.AWSClient) ([]sweep.Sweepable, error) {
	conn := client.WAFV2Client(ctx)
	var input wafv2.ListAPIKeysInput
	input.Scope = awstypes.ScopeRegional
	sweepResources := make([]sweep.Sweepable, 0)

	err := listAPIKeysPages(ctx, conn, &input, func(page *wafv2.ListAPIKeysOutput, lastPage bool) bool {
		if page == nil {
			return !lastPage
		}

		for _, v := range page.APIKeySummaries {
			sweepResources = append(sweepResources, framework.NewSweepResource(newAPIKeyResource, client,
				framework.NewAttribute("api_key", aws.ToString(v.APIKey)),
				framework.NewAttribute(names.AttrScope, awstypes.ScopeRegional),
			))
		}

		return !lastPage
	})

	if err != nil {
		return nil, err
	}

	return sweepResources, nil
}
