package github.com/hashicorp/terraform-provider-aws/internal/service/wafv2
import (
	"errors"
	"fmt"
	"reflect"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/wafv2/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tfjson "github.com/hashicorp/terraform-provider-aws/internal/json"
	itypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandRateBasedStatementCustomKeys(l []any) []awstypes.RateBasedStatementCustomKey {
	if len(l) == 0 {
		return nil
	}
	out := make([]awstypes.RateBasedStatementCustomKey, 0)
	for _, ck := range l {
		r := awstypes.RateBasedStatementCustomKey{}
		m := ck.(map[string]any)
		if v, ok := m["cookie"]; ok {
			r.Cookie = expandRateLimitCookie(v.([]any))
		}
		if v, ok := m["forwarded_ip"]; ok && len(v.([]any)) > 0 {
			r.ForwardedIP = &awstypes.RateLimitForwardedIP{}
		}
		if v, ok := m["http_method"]; ok && len(v.([]any)) > 0 {
			r.HTTPMethod = &awstypes.RateLimitHTTPMethod{}
		}
		if v, ok := m[names.AttrHeader]; ok {
			r.Header = expandRateLimitHeader(v.([]any))
		}
		if v, ok := m["ip"]; ok && len(v.([]any)) > 0 {
			r.IP = &awstypes.RateLimitIP{}
		}
		if v, ok := m["ja3_fingerprint"]; ok && len(v.([]any)) > 0 {
			r.JA3Fingerprint = expandRateLimitJa3Fingerprint(v.([]any))
		}
		if v, ok := m["ja4_fingerprint"]; ok && len(v.([]any)) > 0 {
			r.JA4Fingerprint = expandRateLimitJa4Fingerprint(v.([]any))
		}
		if v, ok := m["label_namespace"]; ok {
			r.LabelNamespace = expandRateLimitLabelNamespace(v.([]any))
		}
		if v, ok := m["query_argument"]; ok {
			r.QueryArgument = expandRateLimitQueryArgument(v.([]any))
		}
		if v, ok := m["query_string"]; ok {
			r.QueryString = expandRateLimitQueryString(v.([]any))
		}
		if v, ok := m["uri_path"]; ok {
			r.UriPath = expandRateLimitURIPath(v.([]any))
		}
		out = append(out, r)
	}
	return out
}
