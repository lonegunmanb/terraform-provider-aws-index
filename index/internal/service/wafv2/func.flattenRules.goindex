package github.com/hashicorp/terraform-provider-aws/internal/service/wafv2
import (
	"errors"
	"fmt"
	"reflect"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/wafv2/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tfjson "github.com/hashicorp/terraform-provider-aws/internal/json"
	itypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenRules(r []awstypes.Rule) any {
	out := make([]map[string]any, len(r))
	for i, rule := range r {
		m := make(map[string]any)
		m[names.AttrAction] = flattenRuleAction(rule.Action)
		m["captcha_config"] = flattenCaptchaConfig(rule.CaptchaConfig)
		m[names.AttrName] = aws.ToString(rule.Name)
		m[names.AttrPriority] = rule.Priority
		m["rule_label"] = flattenRuleLabels(rule.RuleLabels)
		m["statement"] = flattenRuleGroupRootStatement(rule.Statement)
		m["visibility_config"] = flattenVisibilityConfig(rule.VisibilityConfig)
		out[i] = m
	}

	return out
}
