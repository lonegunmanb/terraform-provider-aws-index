package github.com/hashicorp/terraform-provider-aws/internal/service/meta
import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwflex "github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (d *arnDataSource) Read(ctx context.Context, request datasource.ReadRequest, response *datasource.ReadResponse) {
	var data arnDataSourceModel
	response.Diagnostics.Append(request.Config.Get(ctx, &data)...)
	if response.Diagnostics.HasError() {
		return
	}

	arn := data.ARN.ValueARN()

	data.Account = fwflex.StringValueToFrameworkLegacy(ctx, arn.AccountID)
	data.ID = fwflex.StringValueToFrameworkLegacy(ctx, arn.String())
	data.Partition = fwflex.StringValueToFrameworkLegacy(ctx, arn.Partition)
	data.Region = fwflex.StringValueToFrameworkLegacy(ctx, arn.Region)
	data.Resource = fwflex.StringValueToFrameworkLegacy(ctx, arn.Resource)
	data.Service = fwflex.StringValueToFrameworkLegacy(ctx, arn.Service)

	response.Diagnostics.Append(response.State.Set(ctx, &data)...)
}
