package github.com/hashicorp/terraform-provider-aws/internal/service/ecs
import (
	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/ecs/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandServiceRegistries(tfList []any) []awstypes.ServiceRegistry {
	apiObjects := make([]awstypes.ServiceRegistry, 0, len(tfList))

	for _, tfMapRaw := range tfList {
		if tfMapRaw == nil {
			continue
		}

		tfMap := tfMapRaw.(map[string]any)
		apiObject := awstypes.ServiceRegistry{
			RegistryArn: aws.String(tfMap["registry_arn"].(string)),
		}

		if v, ok := tfMap["container_name"].(string); ok && v != "" {
			apiObject.ContainerName = aws.String(v)
		}

		if v, ok := tfMap["container_port"].(int); ok && v > 0 {
			apiObject.ContainerPort = aws.Int32(int32(v))
		}

		if v, ok := tfMap[names.AttrPort].(int); ok && v > 0 {
			apiObject.Port = aws.Int32(int32(v))
		}

		apiObjects = append(apiObjects, apiObject)
	}

	return apiObjects
}
