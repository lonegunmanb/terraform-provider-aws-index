package github.com/hashicorp/terraform-provider-aws/internal/service/ecs
import (
	"context"
	"errors"
	"log"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ecs"
	awstypes "github.com/aws/aws-sdk-go-v2/service/ecs/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenAutoScalingGroupProvider(provider *awstypes.AutoScalingGroupProvider) []map[string]any {
	if provider == nil {
		return nil
	}

	p := map[string]any{
		"auto_scaling_group_arn":         aws.ToString(provider.AutoScalingGroupArn),
		"managed_draining":               string(provider.ManagedDraining),
		"managed_scaling":                []map[string]any{},
		"managed_termination_protection": string(provider.ManagedTerminationProtection),
	}

	if provider.ManagedScaling != nil {
		m := map[string]any{
			"instance_warmup_period":    aws.ToInt32(provider.ManagedScaling.InstanceWarmupPeriod),
			"maximum_scaling_step_size": aws.ToInt32(provider.ManagedScaling.MaximumScalingStepSize),
			"minimum_scaling_step_size": aws.ToInt32(provider.ManagedScaling.MinimumScalingStepSize),
			names.AttrStatus:            string(provider.ManagedScaling.Status),
			"target_capacity":           aws.ToInt32(provider.ManagedScaling.TargetCapacity),
		}

		p["managed_scaling"] = []map[string]any{m}
	}

	result := []map[string]any{p}
	return result
}
