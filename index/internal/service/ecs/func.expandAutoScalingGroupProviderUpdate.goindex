package github.com/hashicorp/terraform-provider-aws/internal/service/ecs
import (
	"context"
	"errors"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ecs"
	awstypes "github.com/aws/aws-sdk-go-v2/service/ecs/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandAutoScalingGroupProviderUpdate(configured any) *awstypes.AutoScalingGroupProviderUpdate {
	if configured == nil {
		return nil
	}

	if configured.([]any) == nil || len(configured.([]any)) == 0 {
		return nil
	}

	prov := awstypes.AutoScalingGroupProviderUpdate{}
	p := configured.([]any)[0].(map[string]any)

	if mtp := p["managed_draining"].(string); len(mtp) > 0 {
		prov.ManagedDraining = awstypes.ManagedDraining(mtp)
	}

	prov.ManagedScaling = expandManagedScaling(p["managed_scaling"])

	if mtp := p["managed_termination_protection"].(string); len(mtp) > 0 {
		prov.ManagedTerminationProtection = awstypes.ManagedTerminationProtection(mtp)
	}

	return &prov
}
