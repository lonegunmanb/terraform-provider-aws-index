package github.com/hashicorp/terraform-provider-aws/internal/service/ecs
import (
	"context"
	"errors"
	"log"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ecs"
	awstypes "github.com/aws/aws-sdk-go-v2/service/ecs/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandInstanceLaunchTemplateUpdate(tfList []any) *awstypes.InstanceLaunchTemplateUpdate {
	if len(tfList) == 0 || tfList[0] == nil {
		return nil
	}

	tfMap := tfList[0].(map[string]any)
	apiObject := &awstypes.InstanceLaunchTemplateUpdate{}

	if v, ok := tfMap["ec2_instance_profile_arn"].(string); ok && v != "" {
		apiObject.Ec2InstanceProfileArn = aws.String(v)
	}

	if v, ok := tfMap["instance_requirements"].([]any); ok && len(v) > 0 {
		apiObject.InstanceRequirements = expandInstanceRequirementsRequest(v)
	}

	if v, ok := tfMap["monitoring"].(string); ok && v != "" {
		apiObject.Monitoring = awstypes.ManagedInstancesMonitoringOptions(v)
	}

	if v, ok := tfMap[names.AttrNetworkConfiguration].([]any); ok && len(v) > 0 {
		apiObject.NetworkConfiguration = expandManagedInstancesNetworkConfiguration(v)
	}

	if v, ok := tfMap["storage_configuration"].([]any); ok && len(v) > 0 {
		apiObject.StorageConfiguration = expandManagedInstancesStorageConfiguration(v)
	}

	return apiObject
}
