package github.com/hashicorp/terraform-provider-aws/internal/service/ecs
import (
	"context"
	"fmt"
	"log"
	"math"
	"strconv"
	"strings"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/arn"
	"github.com/aws/aws-sdk-go-v2/service/ecs"
	awstypes "github.com/aws/aws-sdk-go-v2/service/ecs/types"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/customdiff"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/sdkv2"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandServiceManagedEBSVolumeConfiguration(ctx context.Context, tfList []any) *awstypes.ServiceManagedEBSVolumeConfiguration {
	if len(tfList) == 0 {
		return &awstypes.ServiceManagedEBSVolumeConfiguration{}
	}

	tfMap := tfList[0].(map[string]any)
	apiObject := &awstypes.ServiceManagedEBSVolumeConfiguration{}

	if v, ok := tfMap[names.AttrEncrypted].(bool); ok {
		apiObject.Encrypted = aws.Bool(v)
	}
	if v, ok := tfMap["file_system_type"].(string); ok && v != "" {
		apiObject.FilesystemType = awstypes.TaskFilesystemType(v)
	}
	if v, ok := tfMap[names.AttrIOPS].(int); ok && v != 0 {
		apiObject.Iops = aws.Int32(int32(v))
	}
	if v, ok := tfMap[names.AttrKMSKeyID].(string); ok && v != "" {
		apiObject.KmsKeyId = aws.String(v)
	}
	if v, ok := tfMap[names.AttrRoleARN].(string); ok && v != "" {
		apiObject.RoleArn = aws.String(v)
	}
	if v, ok := tfMap["size_in_gb"].(int); ok && v != 0 {
		apiObject.SizeInGiB = aws.Int32(int32(v))
	}
	if v, ok := tfMap[names.AttrSnapshotID].(string); ok && v != "" {
		apiObject.SnapshotId = aws.String(v)
	}
	if v, ok := tfMap["tag_specifications"].([]any); ok && len(v) > 0 {
		apiObject.TagSpecifications = expandEBSTagSpecifications(ctx, v)
	}
	if v, ok := tfMap[names.AttrThroughput].(int); ok && v != 0 {
		apiObject.Throughput = aws.Int32(int32(v))
	}
	if v, ok := tfMap["volume_initialization_rate"].(int); ok && v != 0 {
		apiObject.VolumeInitializationRate = aws.Int32(int32(v))
	}
	if v, ok := tfMap[names.AttrVolumeType].(string); ok && v != "" {
		apiObject.VolumeType = aws.String(v)
	}

	return apiObject
}
