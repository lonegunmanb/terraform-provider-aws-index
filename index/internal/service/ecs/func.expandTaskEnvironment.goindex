package github.com/hashicorp/terraform-provider-aws/internal/service/ecs
import (
	"context"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ecs"
	awstypes "github.com/aws/aws-sdk-go-v2/service/ecs/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandTaskEnvironment(tfSet *schema.Set) []awstypes.KeyValuePair {
	if tfSet.Len() == 0 {
		return nil
	}
	apiObject := make([]awstypes.KeyValuePair, 0)

	for _, item := range tfSet.List() {
		tfMap := item.(map[string]any)
		te := awstypes.KeyValuePair{
			Name:  aws.String(tfMap[names.AttrKey].(string)),
			Value: aws.String(tfMap[names.AttrValue].(string)),
		}
		apiObject = append(apiObject, te)
	}

	return apiObject
}
