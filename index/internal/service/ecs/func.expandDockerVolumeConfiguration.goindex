package github.com/hashicorp/terraform-provider-aws/internal/service/ecs
import (
	"context"
	"fmt"
	"log"
	"net/http"
	"strconv"
	"strings"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/arn"
	"github.com/aws/aws-sdk-go-v2/service/ecs"
	awstypes "github.com/aws/aws-sdk-go-v2/service/ecs/types"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/structure"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/sdkv2"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandDockerVolumeConfiguration(tfList []any) *awstypes.DockerVolumeConfiguration {
	tfMap := tfList[0].(map[string]any)
	apiObject := &awstypes.DockerVolumeConfiguration{}

	if v, ok := tfMap[names.AttrScope].(string); ok && v != "" {
		apiObject.Scope = awstypes.Scope(v)
	}

	if v, ok := tfMap["autoprovision"]; ok && v != "" {
		if apiObject.Scope != awstypes.ScopeTask || v.(bool) {
			apiObject.Autoprovision = aws.Bool(v.(bool))
		}
	}

	if v, ok := tfMap["driver"].(string); ok && v != "" {
		apiObject.Driver = aws.String(v)
	}

	if v, ok := tfMap["driver_opts"].(map[string]any); ok && len(v) > 0 {
		apiObject.DriverOpts = flex.ExpandStringValueMap(v)
	}

	if v, ok := tfMap["labels"].(map[string]any); ok && len(v) > 0 {
		apiObject.Labels = flex.ExpandStringValueMap(v)
	}

	return apiObject
}
