package github.com/hashicorp/terraform-provider-aws/internal/service/ecs
import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/ecs"
	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwflex "github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
)
func (d *clustersDataSource) Read(ctx context.Context, request datasource.ReadRequest, response *datasource.ReadResponse) {
	var data clustersDataSourceModel
	response.Diagnostics.Append(request.Config.Get(ctx, &data)...)
	if response.Diagnostics.HasError() {
		return
	}

	conn := d.Meta().ECSClient(ctx)

	input := ecs.ListClustersInput{}
	arns, err := listClusters(ctx, conn, &input)

	if err != nil {
		response.Diagnostics.AddError("listing ECS Clusters", err.Error())
		return
	}

	data.ClusterARNs = fwflex.FlattenFrameworkStringValueListOfString(ctx, arns)

	response.Diagnostics.Append(response.State.Set(ctx, &data)...)
}
