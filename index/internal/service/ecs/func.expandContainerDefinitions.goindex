package github.com/hashicorp/terraform-provider-aws/internal/service/ecs
import (
	"cmp"
	"fmt"
	"slices"
	_ "unsafe" // Required for go:linkname

	"github.com/aws/aws-sdk-go-v2/aws"
	_ "github.com/aws/aws-sdk-go-v2/service/ecs" // Required for go:linkname
	awstypes "github.com/aws/aws-sdk-go-v2/service/ecs/types"
	smithyjson "github.com/aws/smithy-go/encoding/json"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	tfjson "github.com/hashicorp/terraform-provider-aws/internal/json"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	itypes "github.com/hashicorp/terraform-provider-aws/internal/types"
)
func expandContainerDefinitions(tfString string) ([]awstypes.ContainerDefinition, error) {
	var apiObjects []awstypes.ContainerDefinition

	if err := tfjson.DecodeFromString(tfString, &apiObjects); err != nil {
		return nil, err
	}

	for i, apiObject := range apiObjects {
		if itypes.IsZero(&apiObject) {
			return nil, fmt.Errorf("invalid container definition supplied at index (%d)", i)
		}
		if !isValidVersionConsistency(apiObject) {
			return nil, fmt.Errorf("invalid version consistency value (%[1]s) for container definition supplied at index (%[2]d)", apiObject.VersionConsistency, i)
		}
	}

	containerDefinitions(apiObjects).compactArrays()

	return apiObjects, nil
}
