package github.com/hashicorp/terraform-provider-aws/internal/service/ecs
import (
	"cmp"
	"fmt"
	"slices"
	_ "unsafe" // Required for go:linkname

	"github.com/aws/aws-sdk-go-v2/aws"
	_ "github.com/aws/aws-sdk-go-v2/service/ecs" // Required for go:linkname
	awstypes "github.com/aws/aws-sdk-go-v2/service/ecs/types"
	smithyjson "github.com/aws/smithy-go/encoding/json"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	tfjson "github.com/hashicorp/terraform-provider-aws/internal/json"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	itypes "github.com/hashicorp/terraform-provider-aws/internal/types"
)
func containerDefinitionsAreEquivalent(def1, def2 string, isAWSVPC bool) (bool, error) {
	var obj1 containerDefinitions
	err := tfjson.DecodeFromString(def1, &obj1)
	if err != nil {
		return false, err
	}
	obj1.reduce(isAWSVPC)
	b1, err := tfjson.EncodeToBytes(obj1)
	if err != nil {
		return false, err
	}

	var obj2 containerDefinitions
	err = tfjson.DecodeFromString(def2, &obj2)
	if err != nil {
		return false, err
	}
	obj2.reduce(isAWSVPC)
	b2, err := tfjson.EncodeToBytes(obj2)
	if err != nil {
		return false, err
	}

	return tfjson.EqualBytes(b1, b2), nil
}
