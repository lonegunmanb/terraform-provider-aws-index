package github.com/hashicorp/terraform-provider-aws/internal/service/ecs
import (
	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/ecs/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandTaskSetLoadBalancers(tfList []any) []awstypes.LoadBalancer {
	if len(tfList) == 0 || tfList[0] == nil {
		return nil
	}

	apiObjects := make([]awstypes.LoadBalancer, 0, len(tfList))

	for _, tfMapRaw := range tfList {
		tfMap := tfMapRaw.(map[string]any)

		apiObject := awstypes.LoadBalancer{}

		if v, ok := tfMap["container_name"].(string); ok && v != "" {
			apiObject.ContainerName = aws.String(v)
		}

		if v, ok := tfMap["container_port"].(int); ok {
			apiObject.ContainerPort = aws.Int32(int32(v))
		}

		if v, ok := tfMap["load_balancer_name"]; ok && v.(string) != "" {
			apiObject.LoadBalancerName = aws.String(v.(string))
		}

		if v, ok := tfMap["target_group_arn"]; ok && v.(string) != "" {
			apiObject.TargetGroupArn = aws.String(v.(string))
		}

		apiObjects = append(apiObjects, apiObject)
	}

	return apiObjects
}
