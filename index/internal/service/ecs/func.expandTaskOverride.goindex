package github.com/hashicorp/terraform-provider-aws/internal/service/ecs
import (
	"context"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ecs"
	awstypes "github.com/aws/aws-sdk-go-v2/service/ecs/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandTaskOverride(tfList []any) *awstypes.TaskOverride {
	if len(tfList) == 0 {
		return nil
	}

	apiObject := &awstypes.TaskOverride{}
	tfMap := tfList[0].(map[string]any)

	if v, ok := tfMap["cpu"]; ok {
		apiObject.Cpu = aws.String(v.(string))
	}
	if v, ok := tfMap["memory"]; ok {
		apiObject.Memory = aws.String(v.(string))
	}
	if v, ok := tfMap[names.AttrExecutionRoleARN]; ok {
		apiObject.ExecutionRoleArn = aws.String(v.(string))
	}
	if v, ok := tfMap["task_role_arn"]; ok {
		apiObject.TaskRoleArn = aws.String(v.(string))
	}
	if v, ok := tfMap["container_overrides"]; ok {
		apiObject.ContainerOverrides = expandContainerOverride(v.([]any))
	}

	return apiObject
}
