package github.com/hashicorp/terraform-provider-aws/internal/service/lambda
import (
	"context"
	"crypto/md5"
	"encoding/json"
	"errors"
	"fmt"
	"log"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/lambda"
	awstypes "github.com/aws/aws-sdk-go-v2/service/lambda/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/customdiff"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func getInputChange(d *schema.ResourceData) (map[string]any, map[string]any, error) {
	old, new := d.GetChange("input")
	oldMap, err := getObjectFromJSONString(old.(string))
	if err != nil {
		log.Printf("[ERROR] old input serialization '%s'", old.(string))
		return nil, nil, err
	}
	newMap, err := getObjectFromJSONString(new.(string))
	if err != nil {
		log.Printf("[ERROR] new input serialization '%s'", new.(string))
		return nil, nil, err
	}
	return oldMap, newMap, nil
}
