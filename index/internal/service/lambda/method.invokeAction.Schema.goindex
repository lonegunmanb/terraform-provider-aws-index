package github.com/hashicorp/terraform-provider-aws/internal/service/lambda
import (
	"context"
	"encoding/base64"
	"fmt"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/lambda"
	awstypes "github.com/aws/aws-sdk-go-v2/service/lambda/types"
	"github.com/hashicorp/terraform-plugin-framework/action"
	"github.com/hashicorp/terraform-plugin-framework/action/schema"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/framework/validators"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (a *invokeAction) Schema(ctx context.Context, req action.SchemaRequest, resp *action.SchemaResponse) {
	resp.Schema = schema.Schema{
		Description: "Invokes an AWS Lambda function with the specified payload. This action allows for imperative invocation of Lambda functions with full control over invocation parameters.",
		Attributes: map[string]schema.Attribute{
			"function_name": schema.StringAttribute{
				Description: "The name, ARN, or partial ARN of the Lambda function to invoke. You can specify a function name (e.g., my-function), a qualified function name (e.g., my-function:PROD), or a partial ARN (e.g., 123456789012:function:my-function).",
				Required:    true,
			},
			"payload": schema.StringAttribute{
				Description: "The JSON payload to send to the Lambda function. This should be a valid JSON string that represents the event data for your function.",
				Required:    true,
				Validators: []validator.String{
					validators.JSON(),
				},
			},
			"qualifier": schema.StringAttribute{
				Description: "The version or alias of the Lambda function to invoke. If not specified, the $LATEST version will be invoked.",
				Optional:    true,
			},
			"invocation_type": schema.StringAttribute{
				CustomType:  fwtypes.StringEnumType[awstypes.InvocationType](),
				Description: "The invocation type. Valid values are 'RequestResponse' (synchronous), 'Event' (asynchronous), and 'DryRun' (validate parameters without invoking). Defaults to 'RequestResponse'.",
				Optional:    true,
			},
			"log_type": schema.StringAttribute{
				CustomType:  fwtypes.StringEnumType[awstypes.LogType](),
				Description: "Set to 'Tail' to include the execution log in the response. Only applies to synchronous invocations ('RequestResponse' invocation type). Defaults to 'None'.",
				Optional:    true,
			},
			"client_context": schema.StringAttribute{
				Description: "Up to 3,583 bytes of base64-encoded data about the invoking client to pass to the function in the context object. This is only used for mobile applications.",
				Optional:    true,
			},
		},
	}
}
