package github.com/hashicorp/terraform-provider-aws/internal/service/lambda
import (
	"context"
	"errors"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/lambda"
	awstypes "github.com/aws/aws-sdk-go-v2/service/lambda/types"
	"github.com/hashicorp/terraform-plugin-framework/ephemeral"
	"github.com/hashicorp/terraform-plugin-framework/ephemeral/schema"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	"github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/framework/validators"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (e *invocationEphemeralResource) Schema(ctx context.Context, _ ephemeral.SchemaRequest, response *ephemeral.SchemaResponse) {
	response.Schema = schema.Schema{
		Attributes: map[string]schema.Attribute{
			"client_context": schema.StringAttribute{
				Optional: true,
			},
			"executed_version": schema.StringAttribute{
				Computed: true,
			},
			"function_error": schema.StringAttribute{
				Computed: true,
			},
			"function_name": schema.StringAttribute{
				Required: true,
			},
			"log_result": schema.StringAttribute{
				Computed: true,
			},
			"log_type": schema.StringAttribute{
				CustomType: fwtypes.StringEnumType[awstypes.LogType](),
				Optional:   true,
			},
			"payload": schema.StringAttribute{
				Required: true,
				Validators: []validator.String{
					validators.JSON(),
				},
			},
			"qualifier": schema.StringAttribute{
				Optional: true,
			},
			"result": schema.StringAttribute{
				Computed: true,
			},
			names.AttrStatusCode: schema.Int32Attribute{
				Computed: true,
			},
		},
	}
}
