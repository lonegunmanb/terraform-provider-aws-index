package github.com/hashicorp/terraform-provider-aws/internal/service/lambda
import (
	"context"
	"fmt"
	"log"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/arn"
	"github.com/aws/aws-sdk-go-v2/service/lambda"
	awstypes "github.com/aws/aws-sdk-go-v2/service/lambda/types"
	"github.com/hashicorp/aws-sdk-go-base/v2/endpoints"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/customdiff"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tfio "github.com/hashicorp/terraform-provider-aws/internal/io"
	"github.com/hashicorp/terraform-provider-aws/internal/provider/sdkv2/importer"
	"github.com/hashicorp/terraform-provider-aws/internal/sdkv2"
	tfec2 "github.com/hashicorp/terraform-provider-aws/internal/service/ec2"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandLoggingConfig(tfList []any) *awstypes.LoggingConfig {
	apiObject := &awstypes.LoggingConfig{}

	if len(tfList) == 1 && tfList[0] != nil {
		tfMap := tfList[0].(map[string]any)

		if v := tfMap["application_log_level"].(string); len(v) > 0 {
			apiObject.ApplicationLogLevel = awstypes.ApplicationLogLevel(v)
		}

		if v := tfMap["log_format"].(string); len(v) > 0 {
			apiObject.LogFormat = awstypes.LogFormat(v)
		}

		if v := tfMap["log_group"].(string); len(v) > 0 {
			apiObject.LogGroup = aws.String(v)
		}

		if v := tfMap["system_log_level"].(string); len(v) > 0 {
			apiObject.SystemLogLevel = awstypes.SystemLogLevel(v)
		}
	}

	return apiObject
}
