package github.com/hashicorp/terraform-provider-aws/internal/service/sagemaker
import (
	"context"
	"log"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/sagemaker"
	awstypes "github.com/aws/aws-sdk-go-v2/service/sagemaker/types"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenProjectServiceCatalogProvisioningDetails(scpd *awstypes.ServiceCatalogProvisioningDetails) []map[string]any {
	if scpd == nil {
		return []map[string]any{}
	}

	m := map[string]any{
		"product_id": aws.ToString(scpd.ProductId),
	}

	if scpd.PathId != nil {
		m["path_id"] = aws.ToString(scpd.PathId)
	}

	if scpd.ProvisioningArtifactId != nil {
		m["provisioning_artifact_id"] = aws.ToString(scpd.ProvisioningArtifactId)
	}

	if scpd.ProvisioningParameters != nil {
		m["provisioning_parameter"] = flattenProjectProvisioningParameters(scpd.ProvisioningParameters)
	}

	return []map[string]any{m}
}
