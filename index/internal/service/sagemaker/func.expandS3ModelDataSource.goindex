package github.com/hashicorp/terraform-provider-aws/internal/service/sagemaker
import (
	"context"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/sagemaker"
	awstypes "github.com/aws/aws-sdk-go-v2/service/sagemaker/types"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandS3ModelDataSource(l []any) *awstypes.S3ModelDataSource {
	if len(l) == 0 {
		return nil
	}

	s3ModelDataSource := awstypes.S3ModelDataSource{}

	m := l[0].(map[string]any)

	if v, ok := m["s3_uri"]; ok && v.(string) != "" {
		s3ModelDataSource.S3Uri = aws.String(v.(string))
	}
	if v, ok := m["s3_data_type"]; ok && v.(string) != "" {
		s3ModelDataSource.S3DataType = awstypes.S3ModelDataType(v.(string))
	}
	if v, ok := m["compression_type"]; ok && v.(string) != "" {
		s3ModelDataSource.CompressionType = awstypes.ModelCompressionType(v.(string))
	}

	if v, ok := m["model_access_config"].([]any); ok && len(v) > 0 {
		s3ModelDataSource.ModelAccessConfig = expandModelAccessConfig(v)
	}

	return &s3ModelDataSource
}
