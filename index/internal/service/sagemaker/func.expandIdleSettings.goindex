package github.com/hashicorp/terraform-provider-aws/internal/service/sagemaker
import (
	"context"
	"log"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/sagemaker"
	awstypes "github.com/aws/aws-sdk-go-v2/service/sagemaker/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandIdleSettings(l []any) *awstypes.IdleSettings {
	if len(l) == 0 || l[0] == nil {
		return nil
	}

	m := l[0].(map[string]any)

	config := &awstypes.IdleSettings{}

	if v, ok := m["idle_timeout_in_minutes"].(int); ok {
		config.IdleTimeoutInMinutes = aws.Int32(int32(v))
	}

	if v, ok := m["lifecycle_management"].(string); ok && v != "" {
		config.LifecycleManagement = awstypes.LifecycleManagement(v)
	}

	if v, ok := m["max_idle_timeout_in_minutes"].(int); ok {
		config.MaxIdleTimeoutInMinutes = aws.Int32(int32(v))
	}

	if v, ok := m["min_idle_timeout_in_minutes"].(int); ok {
		config.MinIdleTimeoutInMinutes = aws.Int32(int32(v))
	}

	return config
}
