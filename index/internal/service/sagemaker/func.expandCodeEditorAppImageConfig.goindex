package github.com/hashicorp/terraform-provider-aws/internal/service/sagemaker
import (
	"context"
	"errors"
	"log"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/sagemaker"
	awstypes "github.com/aws/aws-sdk-go-v2/service/sagemaker/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandCodeEditorAppImageConfig(l []any) *awstypes.CodeEditorAppImageConfig {
	if len(l) == 0 {
		return nil
	}

	// Always create a config object even if the block is empty
	config := &awstypes.CodeEditorAppImageConfig{}

	// If the block is nil, return the empty config
	if l[0] == nil {
		return config
	}

	m := l[0].(map[string]any)

	if v, ok := m["container_config"].([]any); ok && len(v) > 0 {
		config.ContainerConfig = expandContainerConfig(v)
	}

	if v, ok := m["file_system_config"].([]any); ok && len(v) > 0 {
		config.FileSystemConfig = expandFileSystemConfig(v)
	}

	return config
}
