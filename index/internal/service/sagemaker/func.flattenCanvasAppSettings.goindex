package github.com/hashicorp/terraform-provider-aws/internal/service/sagemaker
import (
	"context"
	"log"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/sagemaker"
	awstypes "github.com/aws/aws-sdk-go-v2/service/sagemaker/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenCanvasAppSettings(config *awstypes.CanvasAppSettings) []map[string]any {
	if config == nil {
		return []map[string]any{}
	}

	m := map[string]any{
		"direct_deploy_settings":           flattenDirectDeploySettings(config.DirectDeploySettings),
		"emr_serverless_settings":          flattenEMRServerlessSettings(config.EmrServerlessSettings),
		"generative_ai_settings":           flattenGenerativeAiSettings(config.GenerativeAiSettings),
		"identity_provider_oauth_settings": flattenIdentityProviderOAuthSettings(config.IdentityProviderOAuthSettings),
		"kendra_settings":                  flattenKendraSettings(config.KendraSettings),
		"time_series_forecasting_settings": flattenTimeSeriesForecastingSettings(config.TimeSeriesForecastingSettings),
		"model_register_settings":          flattenModelRegisterSettings(config.ModelRegisterSettings),
		"workspace_settings":               flattenWorkspaceSettings(config.WorkspaceSettings),
	}

	return []map[string]any{m}
}
