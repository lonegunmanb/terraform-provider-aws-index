package github.com/hashicorp/terraform-provider-aws/internal/service/sagemaker
import (
	"context"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/sagemaker"
	awstypes "github.com/aws/aws-sdk-go-v2/service/sagemaker/types"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func resourceNotebookInstanceLifeCycleConfigurationUpdate(ctx context.Context, d *schema.ResourceData, meta any) diag.Diagnostics {
	var diags diag.Diagnostics
	conn := meta.(*conns.AWSClient).SageMakerClient(ctx)

	if d.HasChangesExcept(names.AttrTags, names.AttrTagsAll) {
		updateOpts := &sagemaker.UpdateNotebookInstanceLifecycleConfigInput{
			NotebookInstanceLifecycleConfigName: aws.String(d.Get(names.AttrName).(string)),
		}

		if v, ok := d.GetOk("on_create"); ok {
			onCreateHook := awstypes.NotebookInstanceLifecycleHook{Content: aws.String(v.(string))}
			updateOpts.OnCreate = []awstypes.NotebookInstanceLifecycleHook{onCreateHook}
		}

		if v, ok := d.GetOk("on_start"); ok {
			onStartHook := awstypes.NotebookInstanceLifecycleHook{Content: aws.String(v.(string))}
			updateOpts.OnStart = []awstypes.NotebookInstanceLifecycleHook{onStartHook}
		}

		_, err := conn.UpdateNotebookInstanceLifecycleConfig(ctx, updateOpts)
		if err != nil {
			return sdkdiag.AppendErrorf(diags, "updating SageMaker AI Notebook Instance Lifecycle Configuration: %s", err)
		}
	}

	return append(diags, resourceNotebookInstanceLifeCycleConfigurationRead(ctx, d, meta)...)
}
