package github.com/hashicorp/terraform-provider-aws/internal/service/sagemaker
import (
	"context"
	"log"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/sagemaker"
	awstypes "github.com/aws/aws-sdk-go-v2/service/sagemaker/types"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep/awsv2"
)
func sweepUserProfiles(ctx context.Context, client *conns.AWSClient) ([]sweep.Sweepable, error) {
	conn := client.SageMakerClient(ctx)

	var sweepResources []sweep.Sweepable
	r := resourceUserProfile()

	var input sagemaker.ListUserProfilesInput
	pages := sagemaker.NewListUserProfilesPaginator(conn, &input)
	for pages.HasMorePages() {
		page, err := pages.NextPage(ctx)

		if err != nil {
			return nil, err
		}

		for _, v := range page.UserProfiles {
			describeInput := sagemaker.DescribeUserProfileInput{
				DomainId:        v.DomainId,
				UserProfileName: v.UserProfileName,
			}
			userProfile, err := conn.DescribeUserProfile(ctx, &describeInput)
			if err != nil {
				return nil, err
			}

			d := r.Data(nil)
			d.SetId(aws.ToString(userProfile.UserProfileArn))
			d.Set("user_profile_name", userProfile.UserProfileName)
			d.Set("domain_id", userProfile.DomainId)

			sweepResources = append(sweepResources, sweep.NewSweepResource(r, d, client))
		}
	}

	return sweepResources, nil
}
