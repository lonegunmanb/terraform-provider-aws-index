package github.com/hashicorp/terraform-provider-aws/internal/service/ce
import (
	"context"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/costexplorer"
	awstypes "github.com/aws/aws-sdk-go-v2/service/costexplorer/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenExpression(apiObject *awstypes.Expression) map[string]any {
	if apiObject == nil {
		return nil
	}

	tfMap := map[string]any{}
	if len(apiObject.And) > 0 {
		tfMap["and"] = flattenExpressions(apiObject.And)
	}
	tfMap["cost_category"] = flattenCostCategoryValues(apiObject.CostCategories)
	tfMap["dimension"] = flattenDimensionValues(apiObject.Dimensions)
	if apiObject.Not != nil {
		tfMap["not"] = []any{flattenExpression(apiObject.Not)}
	}
	if len(apiObject.Or) > 0 {
		tfMap["or"] = flattenExpressions(apiObject.Or)
	}
	tfMap[names.AttrTags] = flattenTagValues(apiObject.Tags)

	return tfMap
}
