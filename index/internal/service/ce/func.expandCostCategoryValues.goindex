package github.com/hashicorp/terraform-provider-aws/internal/service/ce
import (
	"context"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/costexplorer"
	awstypes "github.com/aws/aws-sdk-go-v2/service/costexplorer/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandCostCategoryValues(tfMap map[string]any) *awstypes.CostCategoryValues {
	if tfMap == nil {
		return nil
	}

	apiObject := &awstypes.CostCategoryValues{}

	if v, ok := tfMap[names.AttrKey].(string); ok && v != "" {
		apiObject.Key = aws.String(v)
	}

	if v, ok := tfMap["match_options"].(*schema.Set); ok && v.Len() > 0 {
		apiObject.MatchOptions = flex.ExpandStringyValueSet[awstypes.MatchOption](v)
	}

	if v, ok := tfMap[names.AttrValues].(*schema.Set); ok && v.Len() > 0 {
		apiObject.Values = flex.ExpandStringValueSet(v)
	}

	return apiObject
}
