package github.com/hashicorp/terraform-provider-aws/internal/service/codeguruprofiler
import (
	"context"
	"time"

	awstypes "github.com/aws/aws-sdk-go-v2/service/codeguruprofiler/types"
	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	"github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (d *profilingGroupDataSource) Schema(ctx context.Context, req datasource.SchemaRequest, resp *datasource.SchemaResponse) {
	computePlatform := fwtypes.StringEnumType[awstypes.ComputePlatform]()

	resp.Schema = schema.Schema{
		Attributes: map[string]schema.Attribute{
			"agent_orchestration_config": schema.ListAttribute{
				CustomType:  fwtypes.NewListNestedObjectTypeOf[dsAgentOrchestrationConfig](ctx),
				Computed:    true,
				ElementType: fwtypes.NewObjectTypeOf[dsAgentOrchestrationConfig](ctx),
			},
			names.AttrARN: framework.ARNAttributeComputedOnly(),
			"compute_platform": schema.StringAttribute{
				CustomType: computePlatform,
				Computed:   true,
			},
			names.AttrCreatedAt: schema.StringAttribute{
				Computed: true,
			},
			names.AttrID: framework.IDAttribute(),
			names.AttrName: schema.StringAttribute{
				Required: true,
			},
			"profiling_status": schema.ListAttribute{
				CustomType:  fwtypes.NewListNestedObjectTypeOf[dsProfilingStatus](ctx),
				Computed:    true,
				ElementType: fwtypes.NewObjectTypeOf[dsProfilingStatus](ctx),
			},
			names.AttrTags: tftags.TagsAttributeComputedOnly(),
			"updated_at": schema.StringAttribute{
				Computed: true,
			},
		},
	}
}
