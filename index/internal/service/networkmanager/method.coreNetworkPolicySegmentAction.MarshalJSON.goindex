package github.com/hashicorp/terraform-provider-aws/internal/service/networkmanager
import (
	"encoding/json"
	"slices"

	"github.com/hashicorp/terraform-provider-aws/internal/flex"
)
func (c coreNetworkPolicySegmentAction) MarshalJSON() ([]byte, error) {
	type Alias coreNetworkPolicySegmentAction
	var share any
	var whenSentTo *coreNetworkPolicySegmentActionWhenSentTo

	if v := c.ShareWith; v != nil {
		v := v.([]string)
		if v[0] == "*" {
			share = v[0]
		} else {
			share = v
		}
	} else if v := c.ShareWithExcept; v != nil {
		share = map[string]any{
			"except": v.([]string),
		}
	}

	if v := c.WhenSentTo; v != nil {
		if s := v.Segments; s != nil {
			s := s.([]string)
			if s[0] == "*" {
				whenSentTo = &coreNetworkPolicySegmentActionWhenSentTo{Segments: s[0]}
			} else {
				whenSentTo = c.WhenSentTo
			}
		}
	}

	return json.Marshal(&Alias{
		Action:                c.Action,
		Mode:                  c.Mode,
		Destinations:          c.Destinations,
		DestinationCidrBlocks: c.DestinationCidrBlocks,
		Segment:               c.Segment,
		ShareWith:             share,
		Via:                   c.Via,
		WhenSentTo:            whenSentTo,
	})
}
