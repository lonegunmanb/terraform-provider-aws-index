package github.com/hashicorp/terraform-provider-aws/internal/service/networkmanager
import (
	"context"
	"encoding/json"
	"fmt"
	"strconv"

	"github.com/YakDriver/regexache"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandDataCoreNetworkPolicyAttachmentPoliciesAction(tfList []any) (*coreNetworkPolicyAttachmentPolicyAction, error) {
	tfMap := tfList[0].(map[string]any)

	associationMethod := tfMap["association_method"].(string)
	apiObject := &coreNetworkPolicyAttachmentPolicyAction{
		AssociationMethod: associationMethod,
	}

	if v, ok := tfMap["segment"].(string); ok && v != "" {
		if associationMethod == "tag" {
			return nil, fmt.Errorf(`cannot set "segment" argument if association_method = "tag"`)
		}
		apiObject.Segment = v
	}

	if v, ok := tfMap["tag_value_of_key"].(string); ok && v != "" {
		if associationMethod == "constant" {
			return nil, fmt.Errorf(`cannot set "tag_value_of_key" argument if association_method = "constant"`)
		}
		apiObject.TagValueOfKey = v
	}

	if v, ok := tfMap["require_acceptance"].(bool); ok {
		apiObject.RequireAcceptance = v
	}

	if v, ok := tfMap["add_to_network_function_group"].(string); ok && v != "" {
		apiObject.AddToNetworkFunctionGroup = v
	}

	return apiObject, nil
}
