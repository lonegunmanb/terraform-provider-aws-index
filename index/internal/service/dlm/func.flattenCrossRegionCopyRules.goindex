package github.com/hashicorp/terraform-provider-aws/internal/service/dlm
import (
	"context"
	"log"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/dlm"
	awstypes "github.com/aws/aws-sdk-go-v2/service/dlm/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenCrossRegionCopyRules(rules []awstypes.CrossRegionCopyRule) []any {
	if len(rules) == 0 {
		return []any{}
	}

	var result []any

	for _, rule := range rules {
		m := map[string]any{
			"cmk_arn":           aws.ToString(rule.CmkArn),
			"copy_tags":         aws.ToBool(rule.CopyTags),
			"deprecate_rule":    flattenCrossRegionCopyRuleDeprecateRule(rule.DeprecateRule),
			names.AttrEncrypted: aws.ToBool(rule.Encrypted),
			"retain_rule":       flattenCrossRegionCopyRuleRetainRule(rule.RetainRule),
			names.AttrTarget:    aws.ToString(rule.Target),
		}

		result = append(result, m)
	}

	return result
}
