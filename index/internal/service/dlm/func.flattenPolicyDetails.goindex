package github.com/hashicorp/terraform-provider-aws/internal/service/dlm
import (
	"context"
	"log"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/dlm"
	awstypes "github.com/aws/aws-sdk-go-v2/service/dlm/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenPolicyDetails(apiObject *awstypes.PolicyDetails) []any {
	tfMap := make(map[string]any)
	tfMap[names.AttrAction] = flattenActions(apiObject.Actions)
	tfMap["copy_tags"] = aws.ToBool(apiObject.CopyTags)
	tfMap["create_interval"] = aws.ToInt32(apiObject.CreateInterval)
	tfMap["event_source"] = flattenEventSource(apiObject.EventSource)
	tfMap["exclusions"] = flattenExclusions(apiObject.Exclusions)
	tfMap["extend_deletion"] = aws.ToBool(apiObject.ExtendDeletion)
	if apiObject.Parameters != nil {
		tfMap[names.AttrParameters] = flattenParameters(apiObject.Parameters)
	}
	tfMap["policy_language"] = apiObject.PolicyLanguage
	tfMap["policy_type"] = apiObject.PolicyType
	tfMap[names.AttrResourceType] = apiObject.ResourceType
	tfMap["resource_types"] = apiObject.ResourceTypes
	tfMap["resource_locations"] = apiObject.ResourceLocations
	tfMap["retain_interval"] = aws.ToInt32(apiObject.RetainInterval)
	tfMap[names.AttrSchedule] = flattenSchedules(apiObject.Schedules)
	tfMap["target_tags"] = flattenTags(apiObject.TargetTags)

	return []any{tfMap}
}
