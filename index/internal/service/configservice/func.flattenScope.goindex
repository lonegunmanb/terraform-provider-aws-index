package github.com/hashicorp/terraform-provider-aws/internal/service/configservice
import (
	"context"
	"log"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/configservice"
	"github.com/aws/aws-sdk-go-v2/service/configservice/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/sdkv2"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenScope(apiObject *types.Scope) []any {
	if apiObject == nil {
		return nil
	}

	tfMap := map[string]any{}

	if apiObject.ComplianceResourceId != nil {
		tfMap["compliance_resource_id"] = aws.ToString(apiObject.ComplianceResourceId)
	}

	if apiObject.ComplianceResourceTypes != nil {
		tfMap["compliance_resource_types"] = apiObject.ComplianceResourceTypes
	}

	if apiObject.TagKey != nil {
		tfMap["tag_key"] = aws.ToString(apiObject.TagKey)
	}

	if apiObject.TagValue != nil {
		tfMap["tag_value"] = aws.ToString(apiObject.TagValue)
	}

	return []any{tfMap}
}
