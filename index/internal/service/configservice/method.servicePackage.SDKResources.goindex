package github.com/hashicorp/terraform-provider-aws/internal/service/configservice
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/service/configservice"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) SDKResources(ctx context.Context) []*inttypes.ServicePackageSDKResource {
	return []*inttypes.ServicePackageSDKResource{
		{
			Factory:  resourceAggregateAuthorization,
			TypeName: "aws_config_aggregate_authorization",
			Name:     "Aggregate Authorization",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  resourceConfigRule,
			TypeName: "aws_config_config_rule",
			Name:     "Config Rule",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceConfigurationAggregator,
			TypeName: "aws_config_configuration_aggregator",
			Name:     "Configuration Aggregator",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceConfigurationRecorder,
			TypeName: "aws_config_configuration_recorder",
			Name:     "Configuration Recorder",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceConfigurationRecorderStatus,
			TypeName: "aws_config_configuration_recorder_status",
			Name:     "Configuration Recorder Status",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceConformancePack,
			TypeName: "aws_config_conformance_pack",
			Name:     "Conformance Pack",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceDeliveryChannel,
			TypeName: "aws_config_delivery_channel",
			Name:     "Delivery Channel",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceOrganizationConformancePack,
			TypeName: "aws_config_organization_conformance_pack",
			Name:     "Organization Conformance Pack",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceOrganizationCustomPolicyRule,
			TypeName: "aws_config_organization_custom_policy_rule",
			Name:     "Organization Custom Policy Rule",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceOrganizationCustomRule,
			TypeName: "aws_config_organization_custom_rule",
			Name:     "Organization Custom Rule",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceOrganizationManagedRule,
			TypeName: "aws_config_organization_managed_rule",
			Name:     "Organization Managed Rule",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceRemediationConfiguration,
			TypeName: "aws_config_remediation_configuration",
			Name:     "Remediation Configuration",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
	}
}
