package github.com/hashicorp/terraform-provider-aws/internal/service/configservice
import (
	"context"
	"log"
	"slices"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/configservice"
	"github.com/aws/aws-sdk-go-v2/service/configservice/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandRemediationParameterValue(tfMap map[string]any) types.RemediationParameterValue {
	apiObject := types.RemediationParameterValue{}

	if v, ok := tfMap["resource_value"].(string); ok && v != "" {
		apiObject.ResourceValue = &types.ResourceValue{
			Value: types.ResourceValueType(v),
		}
	}

	if v, ok := tfMap["static_value"].(string); ok && v != "" {
		apiObject.StaticValue = &types.StaticValue{
			Values: []string{v},
		}
	}

	if v, ok := tfMap["static_values"].([]any); ok && len(v) > 0 && v[0] != nil {
		apiObject.StaticValue = &types.StaticValue{
			Values: flex.ExpandStringValueList(v),
		}
	}

	return apiObject
}
