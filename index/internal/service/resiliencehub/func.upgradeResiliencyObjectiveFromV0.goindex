package github.com/hashicorp/terraform-provider-aws/internal/service/resiliencehub
import (
	"context"

	awstypes "github.com/aws/aws-sdk-go-v2/service/resiliencehub/types"
	"github.com/hashicorp/terraform-plugin-framework-timeouts/resource/timeouts"
	"github.com/hashicorp/terraform-plugin-framework-timetypes/timetypes"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func upgradeResiliencyObjectiveFromV0(ctx context.Context, old fwtypes.ObjectValueOf[resiliencyObjectiveData], diags *diag.Diagnostics) fwtypes.ListNestedObjectValueOf[resiliencyObjectiveData] {
	if old.IsNull() {
		return fwtypes.NewListNestedObjectValueOfNull[resiliencyObjectiveData](ctx)
	}

	var oldObj resiliencyObjectiveData
	diags.Append(old.As(ctx, &oldObj, basetypes.ObjectAsOptions{})...)

	newList := []resiliencyObjectiveData{
		{
			Rpo: oldObj.Rpo,
			Rto: oldObj.Rto,
		},
	}

	result, d := fwtypes.NewListNestedObjectValueOfValueSlice(ctx, newList)
	diags.Append(d...)

	return result
}
