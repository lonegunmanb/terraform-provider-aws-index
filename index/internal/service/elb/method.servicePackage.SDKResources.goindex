package github.com/hashicorp/terraform-provider-aws/internal/service/elb
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/elasticloadbalancing"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) SDKResources(ctx context.Context) []*inttypes.ServicePackageSDKResource {
	return []*inttypes.ServicePackageSDKResource{
		{
			Factory:  resourceAppCookieStickinessPolicy,
			TypeName: "aws_app_cookie_stickiness_policy",
			Name:     "App Cookie Stickiness Policy",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceLoadBalancer,
			TypeName: "aws_elb",
			Name:     "Classic Load Balancer",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrID,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceAttachment,
			TypeName: "aws_elb_attachment",
			Name:     "Attachment",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceCookieStickinessPolicy,
			TypeName: "aws_lb_cookie_stickiness_policy",
			Name:     "LB Cookie Stickiness Policy",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceSSLNegotiationPolicy,
			TypeName: "aws_lb_ssl_negotiation_policy",
			Name:     "SSL Negotiation Policy",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceBackendServerPolicy,
			TypeName: "aws_load_balancer_backend_server_policy",
			Name:     "Backend Server Policy",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceListenerPolicy,
			TypeName: "aws_load_balancer_listener_policy",
			Name:     "Listener Policy",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourcePolicy,
			TypeName: "aws_load_balancer_policy",
			Name:     "Load Balancer Policy",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceProxyProtocolPolicy,
			TypeName: "aws_proxy_protocol_policy",
			Name:     "Proxy Protocol Policy",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
	}
}
