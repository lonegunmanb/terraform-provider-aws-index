package github.com/hashicorp/terraform-provider-aws/internal/service/elb
import (
	"errors"
	"slices"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/elasticloadbalancing/types"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenHealthCheck(apiObject *awstypes.HealthCheck) []any {
	if apiObject == nil {
		return nil
	}

	tfList := make([]any, 0, 1)
	tfMap := make(map[string]any)

	tfMap["unhealthy_threshold"] = aws.ToInt32(apiObject.UnhealthyThreshold)
	tfMap["healthy_threshold"] = aws.ToInt32(apiObject.HealthyThreshold)
	tfMap[names.AttrTarget] = aws.ToString(apiObject.Target)
	tfMap[names.AttrTimeout] = aws.ToInt32(apiObject.Timeout)
	tfMap[names.AttrInterval] = aws.ToInt32(apiObject.Interval)

	tfList = append(tfList, tfMap)

	return tfList
}
