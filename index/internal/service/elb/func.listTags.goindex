package github.com/hashicorp/terraform-provider-aws/internal/service/elb
import (
	"context"
	"fmt"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/elasticloadbalancing"
	awstypes "github.com/aws/aws-sdk-go-v2/service/elasticloadbalancing/types"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/logging"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/types/option"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func listTags(ctx context.Context, conn *elasticloadbalancing.Client, identifier string, optFns ...func(*elasticloadbalancing.Options)) (tftags.KeyValueTags, error) {
	input := elasticloadbalancing.DescribeTagsInput{
		LoadBalancerNames: []string{identifier},
	}

	output, err := conn.DescribeTags(ctx, &input, optFns...)

	if err != nil {
		return tftags.New(ctx, nil), err
	}

	return keyValueTags(ctx, output.TagDescriptions[0].Tags), nil
}
