package github.com/hashicorp/terraform-provider-aws/internal/service/elb
import (
	"errors"
	"slices"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/elasticloadbalancing/types"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenAccessLog(apiObject *awstypes.AccessLog) []any {
	if apiObject == nil {
		return nil
	}

	tfList := make([]any, 0, 1)
	tfMap := make(map[string]any)

	if apiObject.S3BucketName != nil {
		tfMap[names.AttrBucket] = aws.ToString(apiObject.S3BucketName)
	}

	if apiObject.S3BucketPrefix != nil {
		tfMap[names.AttrBucketPrefix] = aws.ToString(apiObject.S3BucketPrefix)
	}

	if apiObject.EmitInterval != nil {
		tfMap[names.AttrInterval] = aws.ToInt32(apiObject.EmitInterval)
	}

	tfMap[names.AttrEnabled] = apiObject.Enabled

	tfList = append(tfList, tfMap)

	return tfList
}
