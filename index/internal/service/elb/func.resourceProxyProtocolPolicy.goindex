package github.com/hashicorp/terraform-provider-aws/internal/service/elb
import (
	"context"
	"fmt"
	"log"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/elasticloadbalancing"
	awstypes "github.com/aws/aws-sdk-go-v2/service/elasticloadbalancing/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tfmaps "github.com/hashicorp/terraform-provider-aws/internal/maps"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
)
func resourceProxyProtocolPolicy() *schema.Resource {
	return &schema.Resource{
		CreateWithoutTimeout: resourceProxyProtocolPolicyCreate,
		ReadWithoutTimeout:   resourceProxyProtocolPolicyRead,
		UpdateWithoutTimeout: resourceProxyProtocolPolicyUpdate,
		DeleteWithoutTimeout: resourceProxyProtocolPolicyDelete,

		Schema: map[string]*schema.Schema{
			"instance_ports": {
				Type:     schema.TypeSet,
				Required: true,
				Elem: &schema.Schema{
					Type:         schema.TypeString,
					ValidateFunc: verify.StringIsInt32,
				},
			},
			"load_balancer": {
				Type:     schema.TypeString,
				Required: true,
			},
		},
	}
}
