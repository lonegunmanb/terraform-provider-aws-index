package github.com/hashicorp/terraform-provider-aws/internal/service/elb
import (
	"context"
	"fmt"
	"log"
	"slices"
	"strings"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/elasticloadbalancing"
	awstypes "github.com/aws/aws-sdk-go-v2/service/elasticloadbalancing/types"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func findLoadBalancerListenerPolicyByThreePartKey(ctx context.Context, conn *elasticloadbalancing.Client, lbName string, lbPort int32, policyName string) (*awstypes.PolicyDescription, error) {
	policy, err := findLoadBalancerPolicyByTwoPartKey(ctx, conn, lbName, policyName)

	if err != nil {
		return nil, err
	}

	lb, err := findLoadBalancerByName(ctx, conn, lbName)

	if err != nil {
		return nil, err
	}

	for _, v := range lb.ListenerDescriptions {
		if v.Listener == nil {
			continue
		}

		if v.Listener.LoadBalancerPort != lbPort {
			continue
		}

		if slices.Contains(v.PolicyNames, policyName) {
			return policy, nil
		}
	}

	return nil, &retry.NotFoundError{}
}
