package github.com/hashicorp/terraform-provider-aws/internal/service/elb
import (
	"context"
	"fmt"
	"log"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/elasticloadbalancing"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func resourceSSLNegotiationPolicyDelete(ctx context.Context, d *schema.ResourceData, meta any) diag.Diagnostics {
	var diags diag.Diagnostics
	conn := meta.(*conns.AWSClient).ELBClient(ctx)

	lbName, lbPort, policyName, err := sslNegotiationPolicyParseResourceID(d.Id())
	if err != nil {
		return sdkdiag.AppendFromErr(diags, err)
	}

	{
		// Perversely, if we Set an empty list of PolicyNames, we detach the
		// policies attached to a listener, which is required to delete the
		// policy itself.
		input := elasticloadbalancing.SetLoadBalancerPoliciesOfListenerInput{
			LoadBalancerName: aws.String(lbName),
			LoadBalancerPort: lbPort,
			PolicyNames:      []string{},
		}

		_, err = conn.SetLoadBalancerPoliciesOfListener(ctx, &input)

		if tfawserr.ErrCodeEquals(err, errCodeLoadBalancerNotFound) {
			return diags
		}

		if err != nil {
			return sdkdiag.AppendErrorf(diags, "setting ELB Classic SSL Negotiation Policy (%s): %s", d.Id(), err)
		}
	}

	{
		log.Printf("[DEBUG] Deleting ELB Classic SSL Negotiation Policy: %s", d.Id())
		input := elasticloadbalancing.DeleteLoadBalancerPolicyInput{
			LoadBalancerName: aws.String(lbName),
			PolicyName:       aws.String(policyName),
		}
		_, err = conn.DeleteLoadBalancerPolicy(ctx, &input)

		if tfawserr.ErrCodeEquals(err, errCodeLoadBalancerNotFound) {
			return diags
		}

		if err != nil {
			return sdkdiag.AppendErrorf(diags, "deleting ELB Classic SSL Negotiation Policy (%s): %s", d.Id(), err)
		}
	}

	return diags
}
