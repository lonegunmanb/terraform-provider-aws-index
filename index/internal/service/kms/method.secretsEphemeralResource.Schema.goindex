package github.com/hashicorp/terraform-provider-aws/internal/service/kms
import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/kms"
	awstypes "github.com/aws/aws-sdk-go-v2/service/kms/types"
	"github.com/hashicorp/terraform-plugin-framework-validators/setvalidator"
	"github.com/hashicorp/terraform-plugin-framework/attr"
	"github.com/hashicorp/terraform-plugin-framework/ephemeral"
	"github.com/hashicorp/terraform-plugin-framework/ephemeral/schema"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwflex "github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	itypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (e *secretsEphemeralResource) Schema(ctx context.Context, _ ephemeral.SchemaRequest, response *ephemeral.SchemaResponse) {
	response.Schema = schema.Schema{
		Attributes: map[string]schema.Attribute{
			"plaintext": schema.MapAttribute{
				CustomType: fwtypes.MapOfStringType,
				Computed:   true,
				Sensitive:  true,
			},
		},
		Blocks: map[string]schema.Block{
			"secret": schema.SetNestedBlock{
				CustomType: fwtypes.NewSetNestedObjectTypeOf[epSecrets](ctx),
				Validators: []validator.Set{
					setvalidator.IsRequired(),
				},
				NestedObject: schema.NestedBlockObject{
					Attributes: map[string]schema.Attribute{
						"context": schema.MapAttribute{
							CustomType: fwtypes.MapOfStringType,
							Optional:   true,
						},
						"encryption_algorithm": schema.StringAttribute{
							CustomType: fwtypes.StringEnumType[awstypes.EncryptionAlgorithmSpec](),
							Optional:   true,
						},
						"grant_tokens": schema.ListAttribute{
							CustomType: fwtypes.ListOfStringType,
							Optional:   true,
						},
						names.AttrKeyID: schema.StringAttribute{
							Optional: true,
						},
						names.AttrName: schema.StringAttribute{
							Required: true,
						},
						"payload": schema.StringAttribute{
							Required: true,
						},
					},
				},
			},
		},
	}
}
