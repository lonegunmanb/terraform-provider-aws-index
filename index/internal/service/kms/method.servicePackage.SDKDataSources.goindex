package github.com/hashicorp/terraform-provider-aws/internal/service/kms
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/service/kms"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) SDKDataSources(ctx context.Context) []*inttypes.ServicePackageSDKDataSource {
	return []*inttypes.ServicePackageSDKDataSource{
		{
			Factory:  dataSourceAlias,
			TypeName: "aws_kms_alias",
			Name:     "Alias",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  dataSourceCiphertext,
			TypeName: "aws_kms_ciphertext",
			Name:     "Ciphertext",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  dataSourceCustomKeyStore,
			TypeName: "aws_kms_custom_key_store",
			Name:     "Custom Key Store",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  dataSourceKey,
			TypeName: "aws_kms_key",
			Name:     "Key",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  dataSourcePublicKey,
			TypeName: "aws_kms_public_key",
			Name:     "Public Key",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  dataSourceSecret,
			TypeName: "aws_kms_secret",
			Name:     "Secret",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  dataSourceSecrets,
			TypeName: "aws_kms_secrets",
			Name:     "Secrets",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
	}
}
