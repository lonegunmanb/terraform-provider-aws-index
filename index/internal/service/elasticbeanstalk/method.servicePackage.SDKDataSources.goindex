package github.com/hashicorp/terraform-provider-aws/internal/service/elasticbeanstalk
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/elasticbeanstalk"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) SDKDataSources(ctx context.Context) []*inttypes.ServicePackageSDKDataSource {
	return []*inttypes.ServicePackageSDKDataSource{
		{
			Factory:  dataSourceApplication,
			TypeName: "aws_elastic_beanstalk_application",
			Name:     "Application",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  dataSourceHostedZone,
			TypeName: "aws_elastic_beanstalk_hosted_zone",
			Name:     "Hosted Zone",
			Region: unique.Make(inttypes.ServicePackageResourceRegion{
				IsOverrideEnabled:             true,
				IsValidateOverrideInPartition: false,
			}),
		},
		{
			Factory:  dataSourceSolutionStack,
			TypeName: "aws_elastic_beanstalk_solution_stack",
			Name:     "Solution Stack",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
	}
}
