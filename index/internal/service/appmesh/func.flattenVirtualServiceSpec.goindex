package github.com/hashicorp/terraform-provider-aws/internal/service/appmesh
import (
	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/appmesh/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenVirtualServiceSpec(spec *awstypes.VirtualServiceSpec) []any {
	if spec == nil {
		return []any{}
	}

	mSpec := map[string]any{}

	if provider := spec.Provider; provider != nil {
		mProvider := map[string]any{}

		switch v := provider.(type) {
		case *awstypes.VirtualServiceProviderMemberVirtualNode:
			mProvider["virtual_node"] = []any{
				map[string]any{
					"virtual_node_name": aws.ToString(v.Value.VirtualNodeName),
				},
			}
		case *awstypes.VirtualServiceProviderMemberVirtualRouter:
			mProvider["virtual_router"] = []any{
				map[string]any{
					"virtual_router_name": aws.ToString(v.Value.VirtualRouterName),
				},
			}
		}

		mSpec["provider"] = []any{mProvider}
	}

	return []any{mSpec}
}
