package github.com/hashicorp/terraform-provider-aws/internal/service/appmesh
import (
	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/appmesh/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenVirtualRouterSpec(spec *awstypes.VirtualRouterSpec) []any {
	if spec == nil {
		return []any{}
	}
	mSpec := make(map[string]any)
	if len(spec.Listeners) > 0 {
		var mListeners []any
		for _, listener := range spec.Listeners {
			mListener := map[string]any{}
			if listener.PortMapping != nil {
				mPortMapping := map[string]any{
					names.AttrPort:     aws.ToInt32(listener.PortMapping.Port),
					names.AttrProtocol: listener.PortMapping.Protocol,
				}
				mListener["port_mapping"] = []any{mPortMapping}
			}
			mListeners = append(mListeners, mListener)
		}
		mSpec["listener"] = mListeners
	}

	return []any{mSpec}
}
