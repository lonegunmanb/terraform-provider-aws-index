package github.com/hashicorp/terraform-provider-aws/internal/service/chatbot
import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/chatbot"
	awstypes "github.com/aws/aws-sdk-go-v2/service/chatbot/types"
	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	"github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func findSlackWorkspaceByName(ctx context.Context, conn *chatbot.Client, slack_team_name string) (*awstypes.SlackWorkspace, error) {
	input := &chatbot.DescribeSlackWorkspacesInput{
		MaxResults: aws.Int32(10),
	}

	for {
		output, err := conn.DescribeSlackWorkspaces(ctx, input)
		if err != nil {
			return nil, err
		}

		for _, workspace := range output.SlackWorkspaces {
			if aws.ToString(workspace.SlackTeamName) == slack_team_name {
				return &workspace, nil
			}
		}

		if output.NextToken == nil {
			break
		}
		input.NextToken = output.NextToken
	}
	// If we are here, then we need to return an error that the slack workspace was not found.
	return nil, create.Error(names.Chatbot, "missing", DSNameSlackWorkspace, slack_team_name, nil)
}
