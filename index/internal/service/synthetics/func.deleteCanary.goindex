package github.com/hashicorp/terraform-provider-aws/internal/service/synthetics
import (
	"context"
	"fmt"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/synthetics"
	awstypes "github.com/aws/aws-sdk-go-v2/service/synthetics/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
)
func deleteCanary(ctx context.Context, conn *synthetics.Client, name string) error {
	_, err := conn.DeleteCanary(ctx, &synthetics.DeleteCanaryInput{
		Name: aws.String(name),
	})

	if errs.IsA[*awstypes.ResourceNotFoundException](err) {
		return nil
	}

	if err != nil {
		return fmt.Errorf("deleting Synthetics Canary (%s): %w", name, err)
	}

	_, err = waitCanaryDeleted(ctx, conn, name)

	if err != nil {
		return fmt.Errorf("waiting for Synthetics Canary (%s) delete: %w", name, err)
	}

	return nil
}
