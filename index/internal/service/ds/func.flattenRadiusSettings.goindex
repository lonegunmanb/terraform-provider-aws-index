package github.com/hashicorp/terraform-provider-aws/internal/service/ds
import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/directoryservice/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenRadiusSettings(apiObject *awstypes.RadiusSettings) map[string]any {
	if apiObject == nil {
		return nil
	}

	tfMap := map[string]any{
		"authentication_protocol": apiObject.AuthenticationProtocol,
		"radius_retries":          apiObject.RadiusRetries,
		"use_same_username":       apiObject.UseSameUsername,
	}

	if v := apiObject.DisplayLabel; v != nil {
		tfMap["display_label"] = aws.ToString(v)
	}

	if v := apiObject.RadiusPort; v != nil {
		tfMap["radius_port"] = aws.ToInt32(v)
	}

	if v := apiObject.RadiusServers; v != nil {
		tfMap["radius_servers"] = v
	}

	if v := apiObject.RadiusTimeout; v != nil {
		tfMap["radius_timeout"] = aws.ToInt32(v)
	}

	return tfMap
}
