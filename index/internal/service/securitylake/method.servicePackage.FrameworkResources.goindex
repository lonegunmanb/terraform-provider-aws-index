package github.com/hashicorp/terraform-provider-aws/internal/service/securitylake
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/service/securitylake"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) FrameworkResources(ctx context.Context) []*inttypes.ServicePackageFrameworkResource {
	return []*inttypes.ServicePackageFrameworkResource{
		{
			Factory:  newAWSLogSourceResource,
			TypeName: "aws_securitylake_aws_log_source",
			Name:     "AWS Log Source",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newCustomLogSourceResource,
			TypeName: "aws_securitylake_custom_log_source",
			Name:     "Custom Log Source",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newDataLakeResource,
			TypeName: "aws_securitylake_data_lake",
			Name:     "Data Lake",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
			Identity: inttypes.RegionalARNIdentity(inttypes.WithIdentityDuplicateAttrs(names.AttrID)),
			Import: inttypes.Import{
				WrappedImport: true,
			},
		},
		{
			Factory:  newSubscriberResource,
			TypeName: "aws_securitylake_subscriber",
			Name:     "Subscriber",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newSubscriberNotificationResource,
			TypeName: "aws_securitylake_subscriber_notification",
			Name:     "Subscriber Notification",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
	}
}
