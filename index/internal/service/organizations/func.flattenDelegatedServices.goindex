package github.com/hashicorp/terraform-provider-aws/internal/service/organizations
import (
	"context"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/organizations"
	awstypes "github.com/aws/aws-sdk-go-v2/service/organizations/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenDelegatedServices(apiObjects []awstypes.DelegatedService) []map[string]any {
	if len(apiObjects) == 0 {
		return nil
	}

	var tfList []map[string]any

	for _, apiObject := range apiObjects {
		tfList = append(tfList, map[string]any{
			"delegation_enabled_date": aws.ToTime(apiObject.DelegationEnabledDate).Format(time.RFC3339),
			"service_principal":       aws.ToString(apiObject.ServicePrincipal),
		})
	}

	return tfList
}
