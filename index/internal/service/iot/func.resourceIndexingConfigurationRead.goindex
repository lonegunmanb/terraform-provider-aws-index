package github.com/hashicorp/terraform-provider-aws/internal/service/iot
import (
	"context"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/iot"
	awstypes "github.com/aws/aws-sdk-go-v2/service/iot/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func resourceIndexingConfigurationRead(ctx context.Context, d *schema.ResourceData, meta any) diag.Diagnostics {
	var diags diag.Diagnostics

	conn := meta.(*conns.AWSClient).IoTClient(ctx)

	output, err := conn.GetIndexingConfiguration(ctx, &iot.GetIndexingConfigurationInput{})

	if err != nil {
		return sdkdiag.AppendErrorf(diags, "reading IoT Indexing Configuration (%s): %s", d.Id(), err)
	}

	if output.ThingGroupIndexingConfiguration != nil {
		if err := d.Set("thing_group_indexing_configuration", []any{flattenThingGroupIndexingConfiguration(output.ThingGroupIndexingConfiguration)}); err != nil {
			return sdkdiag.AppendErrorf(diags, "setting thing_group_indexing_configuration: %s", err)
		}
	} else {
		d.Set("thing_group_indexing_configuration", nil)
	}
	if output.ThingIndexingConfiguration != nil {
		if err := d.Set("thing_indexing_configuration", []any{flattenThingIndexingConfiguration(output.ThingIndexingConfiguration)}); err != nil {
			return sdkdiag.AppendErrorf(diags, "setting thing_indexing_configuration: %s", err)
		}
	} else {
		d.Set("thing_indexing_configuration", nil)
	}

	return diags
}
