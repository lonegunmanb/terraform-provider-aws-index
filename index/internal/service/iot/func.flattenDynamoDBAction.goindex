package github.com/hashicorp/terraform-provider-aws/internal/service/iot
import (
	"context"
	"log"
	"reflect"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/iot"
	awstypes "github.com/aws/aws-sdk-go-v2/service/iot/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenDynamoDBAction(apiObject *awstypes.DynamoDBAction) []any {
	if apiObject == nil {
		return nil
	}

	tfMap := make(map[string]any)

	if v := apiObject.HashKeyField; v != nil {
		tfMap["hash_key_field"] = aws.ToString(v)
	}

	tfMap["hash_key_type"] = apiObject.HashKeyType

	if v := apiObject.HashKeyValue; v != nil {
		tfMap["hash_key_value"] = aws.ToString(v)
	}

	if v := apiObject.PayloadField; v != nil {
		tfMap["payload_field"] = aws.ToString(v)
	}

	if v := apiObject.Operation; v != nil {
		tfMap["operation"] = aws.ToString(v)
	}

	if v := apiObject.RangeKeyField; v != nil {
		tfMap["range_key_field"] = aws.ToString(v)
	}

	tfMap["range_key_type"] = apiObject.RangeKeyType

	if v := apiObject.RangeKeyValue; v != nil {
		tfMap["range_key_value"] = aws.ToString(v)
	}

	if v := apiObject.RoleArn; v != nil {
		tfMap[names.AttrRoleARN] = aws.ToString(v)
	}

	if v := apiObject.TableName; v != nil {
		tfMap[names.AttrTableName] = aws.ToString(v)
	}

	return []any{tfMap}
}
