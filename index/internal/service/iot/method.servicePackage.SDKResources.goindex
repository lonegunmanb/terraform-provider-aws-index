package github.com/hashicorp/terraform-provider-aws/internal/service/iot
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/service/iot"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) SDKResources(ctx context.Context) []*inttypes.ServicePackageSDKResource {
	return []*inttypes.ServicePackageSDKResource{
		{
			Factory:  resourceAuthorizer,
			TypeName: "aws_iot_authorizer",
			Name:     "Authorizer",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceCACertificate,
			TypeName: "aws_iot_ca_certificate",
			Name:     "CA Certificate",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceCertificate,
			TypeName: "aws_iot_certificate",
			Name:     "Certificate",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceDomainConfiguration,
			TypeName: "aws_iot_domain_configuration",
			Name:     "Domain Configuration",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceEventConfigurations,
			TypeName: "aws_iot_event_configurations",
			Name:     "Event Configurations",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
			Identity: inttypes.RegionalSingletonIdentity(
				inttypes.WithV6_0SDKv2Fix(),
			),
			Import: inttypes.SDKv2Import{
				WrappedImport: true,
			},
		},
		{
			Factory:  resourceIndexingConfiguration,
			TypeName: "aws_iot_indexing_configuration",
			Name:     "Indexing Configuration",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
			Identity: inttypes.RegionalSingletonIdentity(
				inttypes.WithV6_0SDKv2Fix(),
			),
			Import: inttypes.SDKv2Import{
				WrappedImport: true,
			},
		},
		{
			Factory:  resourceLoggingOptions,
			TypeName: "aws_iot_logging_options",
			Name:     "Logging Options",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
			Identity: inttypes.RegionalSingletonIdentity(
				inttypes.WithV6_0SDKv2Fix(),
			),
		},
		{
			Factory:  resourcePolicy,
			TypeName: "aws_iot_policy",
			Name:     "Policy",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourcePolicyAttachment,
			TypeName: "aws_iot_policy_attachment",
			Name:     "Policy Attachment",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceProvisioningTemplate,
			TypeName: "aws_iot_provisioning_template",
			Name:     "Provisioning Template",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  ResourceRoleAlias,
			TypeName: "aws_iot_role_alias",
			Name:     "Role Alias",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceThing,
			TypeName: "aws_iot_thing",
			Name:     "Thing",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceThingGroup,
			TypeName: "aws_iot_thing_group",
			Name:     "Thing Group",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceThingGroupMembership,
			TypeName: "aws_iot_thing_group_membership",
			Name:     "Thing Group Membership",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceThingPrincipalAttachment,
			TypeName: "aws_iot_thing_principal_attachment",
			Name:     "Thing Principal Attachment",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceThingType,
			TypeName: "aws_iot_thing_type",
			Name:     "Thing Type",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceTopicRule,
			TypeName: "aws_iot_topic_rule",
			Name:     "Topic Rule",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceTopicRuleDestination,
			TypeName: "aws_iot_topic_rule_destination",
			Name:     "Topic Rule Destination",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
	}
}
