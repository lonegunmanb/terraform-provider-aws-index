package github.com/hashicorp/terraform-provider-aws/internal/service/iot
import (
	"context"
	"log"

	"github.com/aws/aws-sdk-go-v2/service/iot"
	awstypes "github.com/aws/aws-sdk-go-v2/service/iot/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tfmaps "github.com/hashicorp/terraform-provider-aws/internal/maps"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
)
func resourceEventConfigurations() *schema.Resource {
	return &schema.Resource{
		CreateWithoutTimeout: resourceEventConfigurationsPut,
		ReadWithoutTimeout:   resourceEventConfigurationsRead,
		UpdateWithoutTimeout: resourceEventConfigurationsPut,
		DeleteWithoutTimeout: schema.NoopContext,

		Schema: map[string]*schema.Schema{
			"event_configurations": {
				Type:             schema.TypeMap,
				Required:         true,
				Elem:             &schema.Schema{Type: schema.TypeBool},
				ValidateDiagFunc: verify.MapKeysAre(enum.Validate[awstypes.EventType]()),
			},
		},
	}
}
