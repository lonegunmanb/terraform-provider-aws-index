package github.com/hashicorp/terraform-provider-aws/internal/service/cloudtrail
import (
	"context"
	"fmt"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/arn"
	"github.com/aws/aws-sdk-go-v2/service/cloudtrail"
	"github.com/aws/aws-sdk-go-v2/service/cloudtrail/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenAdvancedEventSelectorFieldSelector(configured []types.AdvancedFieldSelector) []map[string]any {
	fieldSelectors := make([]map[string]any, 0, len(configured))

	for _, raw := range configured {
		item := make(map[string]any)
		item[names.AttrField] = aws.ToString(raw.Field)
		if raw.Equals != nil {
			item["equals"] = raw.Equals
		}
		if raw.NotEquals != nil {
			item["not_equals"] = raw.NotEquals
		}
		if raw.StartsWith != nil {
			item["starts_with"] = raw.StartsWith
		}
		if raw.NotStartsWith != nil {
			item["not_starts_with"] = raw.NotStartsWith
		}
		if raw.EndsWith != nil {
			item["ends_with"] = raw.EndsWith
		}
		if raw.NotEndsWith != nil {
			item["not_ends_with"] = raw.NotEndsWith
		}

		fieldSelectors = append(fieldSelectors, item)
	}

	return fieldSelectors
}
