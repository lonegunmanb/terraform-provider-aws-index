package github.com/hashicorp/terraform-provider-aws/internal/service/cloudtrail
import (
	"context"
	"fmt"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/arn"
	"github.com/aws/aws-sdk-go-v2/service/cloudtrail"
	"github.com/aws/aws-sdk-go-v2/service/cloudtrail/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func setLogging(ctx context.Context, conn *cloudtrail.Client, name string, enabled bool) error {
	if enabled {
		input := &cloudtrail.StartLoggingInput{
			Name: aws.String(name),
		}

		if _, err := conn.StartLogging(ctx, input); err != nil {
			return fmt.Errorf("starting CloudTrail Trail (%s) logging: %w", name, err)
		}
	} else {
		input := &cloudtrail.StopLoggingInput{
			Name: aws.String(name),
		}

		if _, err := conn.StopLogging(ctx, input); err != nil {
			return fmt.Errorf("stopping CloudTrail Trail (%s) logging: %w", name, err)
		}
	}

	return nil
}
