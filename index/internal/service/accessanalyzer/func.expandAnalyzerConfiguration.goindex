package github.com/hashicorp/terraform-provider-aws/internal/service/accessanalyzer
import (
	"context"
	"log"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/accessanalyzer"
	"github.com/aws/aws-sdk-go-v2/service/accessanalyzer/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandAnalyzerConfiguration(tfMap map[string]any) types.AnalyzerConfiguration {
	if tfMap == nil {
		return nil
	}

	var apiObject types.AnalyzerConfiguration

	if v, ok := tfMap["internal_access"].([]any); ok && len(v) > 0 && v[0] != nil {
		internalAccess := &types.AnalyzerConfigurationMemberInternalAccess{}
		internalAccess.Value = expandInternalAccessConfiguration(v[0].(map[string]any))
		apiObject = internalAccess
	}
	if v, ok := tfMap["unused_access"].([]any); ok && len(v) > 0 && v[0] != nil {
		unusedAccess := &types.AnalyzerConfigurationMemberUnusedAccess{}
		unusedAccess.Value = expandUnusedAccessConfiguration(v[0].(map[string]any))
		apiObject = unusedAccess
	}

	return apiObject
}
