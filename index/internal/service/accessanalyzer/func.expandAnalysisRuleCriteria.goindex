package github.com/hashicorp/terraform-provider-aws/internal/service/accessanalyzer
import (
	"context"
	"log"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/accessanalyzer"
	"github.com/aws/aws-sdk-go-v2/service/accessanalyzer/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandAnalysisRuleCriteria(tfMap map[string]any) *types.AnalysisRuleCriteria {
	if tfMap == nil {
		return nil
	}

	apiObject := &types.AnalysisRuleCriteria{}

	if tfList, ok := tfMap["account_ids"].([]any); ok && len(tfList) > 0 {
		for _, v := range tfList {
			accountID, ok := v.(string)
			if !ok {
				continue
			}
			apiObject.AccountIds = append(apiObject.AccountIds, accountID)
		}
	}

	if tfList, ok := tfMap[names.AttrResourceTags].([]any); ok && len(tfList) > 0 {
		for _, v := range tfList {
			apiObject.ResourceTags = append(apiObject.ResourceTags, flex.ExpandStringValueMap(v.(map[string]any)))
		}
	}

	return apiObject
}
