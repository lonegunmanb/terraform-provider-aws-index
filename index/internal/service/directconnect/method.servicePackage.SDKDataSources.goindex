package github.com/hashicorp/terraform-provider-aws/internal/service/directconnect
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/directconnect"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) SDKDataSources(ctx context.Context) []*inttypes.ServicePackageSDKDataSource {
	return []*inttypes.ServicePackageSDKDataSource{
		{
			Factory:  dataSourceConnection,
			TypeName: "aws_dx_connection",
			Name:     "Connection",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  dataSourceGateway,
			TypeName: "aws_dx_gateway",
			Name:     "Gateway",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  dataSourceLocation,
			TypeName: "aws_dx_location",
			Name:     "Location",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  dataSourceLocations,
			TypeName: "aws_dx_locations",
			Name:     "Locations",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  dataSourceRouterConfiguration,
			TypeName: "aws_dx_router_configuration",
			Name:     "Router Configuration",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
	}
}
