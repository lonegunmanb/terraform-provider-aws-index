package github.com/hashicorp/terraform-provider-aws/internal/service/elastictranscoder
import (
	"context"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/elastictranscoder"
	awstypes "github.com/aws/aws-sdk-go-v2/service/elastictranscoder/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenETThumbnails(thumbs *awstypes.Thumbnails) []map[string]any {
	if thumbs == nil {
		return nil
	}

	result := map[string]any{
		"aspect_ratio":     aws.ToString(thumbs.AspectRatio),
		names.AttrFormat:   aws.ToString(thumbs.Format),
		names.AttrInterval: aws.ToString(thumbs.Interval),
		"max_height":       aws.ToString(thumbs.MaxHeight),
		"max_width":        aws.ToString(thumbs.MaxWidth),
		"padding_policy":   aws.ToString(thumbs.PaddingPolicy),
		"resolution":       aws.ToString(thumbs.Resolution),
		"sizing_policy":    aws.ToString(thumbs.SizingPolicy),
	}

	return []map[string]any{result}
}
