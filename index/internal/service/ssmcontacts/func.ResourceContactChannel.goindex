package github.com/hashicorp/terraform-provider-aws/internal/service/ssmcontacts
import (
	"context"
	"errors"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ssmcontacts"
	"github.com/aws/aws-sdk-go-v2/service/ssmcontacts/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func ResourceContactChannel() *schema.Resource {
	return &schema.Resource{
		CreateWithoutTimeout: resourceContactChannelCreate,
		ReadWithoutTimeout:   resourceContactChannelRead,
		UpdateWithoutTimeout: resourceContactChannelUpdate,
		DeleteWithoutTimeout: resourceContactChannelDelete,

		Importer: &schema.ResourceImporter{
			StateContext: schema.ImportStatePassthroughContext,
		},

		Schema: map[string]*schema.Schema{
			"activation_status": {
				Type:     schema.TypeString,
				Computed: true,
			},
			names.AttrARN: {
				Type:     schema.TypeString,
				Computed: true,
			},
			"contact_id": {
				ForceNew: true,
				Type:     schema.TypeString,
				Required: true,
			},
			"delivery_address": {
				Type:     schema.TypeList,
				Required: true,
				MaxItems: 1,
				Elem: &schema.Resource{
					Schema: map[string]*schema.Schema{
						"simple_address": {
							Type:     schema.TypeString,
							Required: true,
						},
					},
				},
			},
			names.AttrName: {
				Type:     schema.TypeString,
				Required: true,
			},
			names.AttrType: {
				ForceNew: true,
				Type:     schema.TypeString,
				Required: true,
			},
		},
	}
}
