package github.com/hashicorp/terraform-provider-aws/internal/service/servicecatalog
import (
	"context"
	"errors"
	"fmt"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/servicecatalog"
	awstypes "github.com/aws/aws-sdk-go-v2/service/servicecatalog/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandProvisioningPreferences(tfMap map[string]any) *awstypes.ProvisioningPreferences {
	if tfMap == nil {
		return nil
	}

	apiObject := &awstypes.ProvisioningPreferences{}

	if v, ok := tfMap["accounts"].([]any); ok && len(v) > 0 {
		apiObject.StackSetAccounts = flex.ExpandStringValueList(v)
	}

	if v, ok := tfMap["failure_tolerance_count"].(int); ok && v != 0 {
		apiObject.StackSetFailureToleranceCount = aws.Int32(int32(v))
	}

	if v, ok := tfMap["failure_tolerance_percentage"].(int); ok && v != 0 {
		apiObject.StackSetFailureTolerancePercentage = aws.Int32(int32(v))
	}

	if v, ok := tfMap["max_concurrency_count"].(int); ok && v != 0 {
		apiObject.StackSetMaxConcurrencyCount = aws.Int32(int32(v))
	}

	if v, ok := tfMap["max_concurrency_percentage"].(int); ok && v != 0 {
		apiObject.StackSetMaxConcurrencyPercentage = aws.Int32(int32(v))
	}

	if v, ok := tfMap["regions"].([]any); ok && len(v) > 0 {
		apiObject.StackSetRegions = flex.ExpandStringValueList(v)
	}

	return apiObject
}
