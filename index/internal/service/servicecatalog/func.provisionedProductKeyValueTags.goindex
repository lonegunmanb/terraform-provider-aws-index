package github.com/hashicorp/terraform-provider-aws/internal/service/servicecatalog
import (
	"context"
	"fmt"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/servicecatalog"
	awstypes "github.com/aws/aws-sdk-go-v2/service/servicecatalog/types"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/types/option"
)
func provisionedProductKeyValueTags(ctx context.Context, conn *servicecatalog.Client, identifier string) (tftags.KeyValueTags, error) {
	input := &servicecatalog.DescribeProvisionedProductInput{
		Id: aws.String(identifier),
	}
	output, err := conn.DescribeProvisionedProduct(ctx, input)
	if err != nil {
		return tftags.New(ctx, nil), fmt.Errorf("listing tags for resource (%s): %w", identifier, err)
	}

	detail := output.ProvisionedProductDetail

	recordInput := &servicecatalog.DescribeRecordInput{
		Id: detail.LastProvisioningRecordId,
	}

	recordOutput, err := conn.DescribeRecord(ctx, recordInput)
	if err != nil {
		return tftags.New(ctx, nil), fmt.Errorf("listing tags for resource (%s): %w", identifier, err)
	}

	return recordKeyValueTags(ctx, recordOutput.RecordDetail.RecordTags), nil
}
