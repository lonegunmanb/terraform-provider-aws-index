package github.com/hashicorp/terraform-provider-aws/internal/service/servicecatalog
import (
	"context"
	"log"
	"slices"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/servicecatalog"
	awstypes "github.com/aws/aws-sdk-go-v2/service/servicecatalog/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenProvisioningArtifactParameters(apiObject *servicecatalog.DescribeProvisioningArtifactOutput) []any {
	if apiObject == nil {
		return nil
	}

	m := map[string]any{
		names.AttrDescription:         aws.ToString(apiObject.ProvisioningArtifactDetail.Description),
		"disable_template_validation": false, // set default because it cannot be read
		names.AttrName:                aws.ToString(apiObject.ProvisioningArtifactDetail.Name),
		names.AttrType:                apiObject.ProvisioningArtifactDetail.Type,
	}

	if apiObject.Info != nil {
		if v, ok := apiObject.Info["TemplateUrl"]; ok {
			m["template_url"] = v
		}

		if v, ok := apiObject.Info["PhysicalId"]; ok {
			m["template_physical_id"] = v
		}
	}

	return []any{m}
}
