package github.com/hashicorp/terraform-provider-aws/internal/service/servicecatalog
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/servicecatalog"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) SDKResources(ctx context.Context) []*inttypes.ServicePackageSDKResource {
	return []*inttypes.ServicePackageSDKResource{
		{
			Factory:  resourceBudgetResourceAssociation,
			TypeName: "aws_servicecatalog_budget_resource_association",
			Name:     "Budget Resource Association",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceConstraint,
			TypeName: "aws_servicecatalog_constraint",
			Name:     "Constraint",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceOrganizationsAccess,
			TypeName: "aws_servicecatalog_organizations_access",
			Name:     "Organizations Access",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  resourcePortfolio,
			TypeName: "aws_servicecatalog_portfolio",
			Name:     "Portfolio",
			Tags:     unique.Make(inttypes.ServicePackageResourceTags{}),
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourcePortfolioShare,
			TypeName: "aws_servicecatalog_portfolio_share",
			Name:     "Portfolio Share",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourcePrincipalPortfolioAssociation,
			TypeName: "aws_servicecatalog_principal_portfolio_association",
			Name:     "Principal Portfolio Association",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceProduct,
			TypeName: "aws_servicecatalog_product",
			Name:     "Product",
			Tags:     unique.Make(inttypes.ServicePackageResourceTags{}),
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceProductPortfolioAssociation,
			TypeName: "aws_servicecatalog_product_portfolio_association",
			Name:     "Product Portfolio Association",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceProvisionedProduct,
			TypeName: "aws_servicecatalog_provisioned_product",
			Name:     "Provisioned Product",
			Tags:     unique.Make(inttypes.ServicePackageResourceTags{}),
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceProvisioningArtifact,
			TypeName: "aws_servicecatalog_provisioning_artifact",
			Name:     "Provisioning Artifact",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceServiceAction,
			TypeName: "aws_servicecatalog_service_action",
			Name:     "Service Action",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceTagOption,
			TypeName: "aws_servicecatalog_tag_option",
			Name:     "Tag Option",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceTagOptionResourceAssociation,
			TypeName: "aws_servicecatalog_tag_option_resource_association",
			Name:     "Tag Option Resource Association",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
	}
}
