package github.com/hashicorp/terraform-provider-aws/internal/service/servicecatalog
import (
	"context"
	"fmt"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/servicecatalog"
	awstypes "github.com/aws/aws-sdk-go-v2/service/servicecatalog/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
)
func statusTagOptionResourceAssociation(ctx context.Context, conn *servicecatalog.Client, tagOptionID, resourceID string) retry.StateRefreshFunc {
	return func() (any, string, error) {
		output, err := findTagOptionResourceAssociation(ctx, conn, tagOptionID, resourceID)

		if errs.IsA[*awstypes.ResourceNotFoundException](err) {
			return nil, statusNotFound, &retry.NotFoundError{
				Message: fmt.Sprintf("tag option resource association not found (%s): %s", tagOptionResourceAssociationID(tagOptionID, resourceID), err),
			}
		}

		if err != nil {
			return nil, string(awstypes.StatusFailed), fmt.Errorf("describing tag option resource association: %w", err)
		}

		if output == nil {
			return nil, statusNotFound, &retry.NotFoundError{
				Message: fmt.Sprintf("finding tag option resource association (%s): empty response", tagOptionResourceAssociationID(tagOptionID, resourceID)),
			}
		}

		return output, string(awstypes.StatusAvailable), err
	}
}
