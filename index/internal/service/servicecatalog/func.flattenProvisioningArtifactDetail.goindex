package github.com/hashicorp/terraform-provider-aws/internal/service/servicecatalog
import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/servicecatalog"
	awstypes "github.com/aws/aws-sdk-go-v2/service/servicecatalog/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenProvisioningArtifactDetail(apiObject awstypes.ProvisioningArtifactDetail) map[string]any {
	tfMap := map[string]any{}

	if apiObject.Active != nil {
		tfMap["active"] = aws.ToBool(apiObject.Active)
	}
	if apiObject.CreatedTime != nil {
		tfMap[names.AttrCreatedTime] = aws.ToTime(apiObject.CreatedTime).String()
	}
	if apiObject.Description != nil {
		tfMap[names.AttrDescription] = aws.ToString(apiObject.Description)
	}

	tfMap["guidance"] = string(apiObject.Guidance)

	if apiObject.Id != nil {
		tfMap[names.AttrID] = aws.ToString(apiObject.Id)
	}
	if apiObject.Name != nil {
		tfMap[names.AttrName] = aws.ToString(apiObject.Name)
	}

	tfMap[names.AttrType] = string(apiObject.Type)

	return tfMap
}
