package github.com/hashicorp/terraform-provider-aws/internal/service/servicecatalog
import (
	"context"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/servicecatalog"
	awstypes "github.com/aws/aws-sdk-go-v2/service/servicecatalog/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandServiceActionDefinition(tfMap map[string]any) map[string]string {
	if tfMap == nil {
		return nil
	}

	apiObject := make(map[string]string)

	if v, ok := tfMap["assume_role"].(string); ok && v != "" {
		apiObject[string(awstypes.ServiceActionDefinitionKeyAssumeRole)] = v
	}

	if v, ok := tfMap[names.AttrName].(string); ok && v != "" {
		apiObject[string(awstypes.ServiceActionDefinitionKeyName)] = v
	}

	if v, ok := tfMap[names.AttrParameters].(string); ok && v != "" {
		apiObject[string(awstypes.ServiceActionDefinitionKeyParameters)] = v
	}

	if v, ok := tfMap[names.AttrVersion].(string); ok && v != "" {
		apiObject[string(awstypes.ServiceActionDefinitionKeyVersion)] = v
	}

	return apiObject
}
