package github.com/hashicorp/terraform-provider-aws/internal/service/apigateway
import (
	"context"
	"fmt"
	"log"
	"maps"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/apigateway"
	"github.com/aws/aws-sdk-go-v2/service/apigateway/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func resourceIntegrationResponsePut(ctx context.Context, d *schema.ResourceData, meta any) diag.Diagnostics {
	var diags diag.Diagnostics
	conn := meta.(*conns.AWSClient).APIGatewayClient(ctx)

	input := apigateway.PutIntegrationResponseInput{
		HttpMethod: aws.String(d.Get("http_method").(string)),
		ResourceId: aws.String(d.Get(names.AttrResourceID).(string)),
		RestApiId:  aws.String(d.Get("rest_api_id").(string)),
		StatusCode: aws.String(d.Get(names.AttrStatusCode).(string)),
	}

	if v, ok := d.GetOk("content_handling"); ok {
		input.ContentHandling = types.ContentHandlingStrategy(v.(string))
	}

	if v, ok := d.GetOk("response_parameters"); ok && len(v.(map[string]any)) > 0 {
		input.ResponseParameters = flex.ExpandStringValueMap(v.(map[string]any))
	}

	if v, ok := d.GetOk("response_templates"); ok && len(v.(map[string]any)) > 0 {
		input.ResponseTemplates = flex.ExpandStringValueMap(v.(map[string]any))
	}

	if v, ok := d.GetOk("selection_pattern"); ok {
		input.SelectionPattern = aws.String(v.(string))
	}

	_, err := conn.PutIntegrationResponse(ctx, &input)

	if err != nil {
		return sdkdiag.AppendErrorf(diags, "putting API Gateway Integration Response: %s", err)
	}

	if d.IsNewResource() {
		d.SetId(fmt.Sprintf("agir-%s-%s-%s-%s", d.Get("rest_api_id").(string), d.Get(names.AttrResourceID).(string), d.Get("http_method").(string), d.Get(names.AttrStatusCode).(string)))
	}

	return append(diags, resourceIntegrationResponseRead(ctx, d, meta)...)
}
