package github.com/hashicorp/terraform-provider-aws/internal/service/apigateway
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/service/apigateway"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) FrameworkResources(ctx context.Context) []*inttypes.ServicePackageFrameworkResource {
	return []*inttypes.ServicePackageFrameworkResource{
		{
			Factory:  newAccountResource,
			TypeName: "aws_api_gateway_account",
			Name:     "Account",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newDomainNameAccessAssociationResource,
			TypeName: "aws_api_gateway_domain_name_access_association",
			Name:     "Domain Name Access Association",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
			Identity: inttypes.RegionalARNIdentity(inttypes.WithIdentityDuplicateAttrs(names.AttrID)),
			Import: inttypes.Import{
				WrappedImport: true,
			},
		},
		{
			Factory:  newRestAPIPutResource,
			TypeName: "aws_api_gateway_rest_api_put",
			Name:     "Rest API Put",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
	}
}
