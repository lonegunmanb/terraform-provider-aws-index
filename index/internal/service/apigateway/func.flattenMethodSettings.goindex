package github.com/hashicorp/terraform-provider-aws/internal/service/apigateway
import (
	"context"
	"fmt"
	"log"
	"strconv"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/apigateway"
	"github.com/aws/aws-sdk-go-v2/service/apigateway/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
)
func flattenMethodSettings(apiObject *types.MethodSetting) []any {
	if apiObject == nil {
		return nil
	}

	return []any{
		map[string]any{
			"metrics_enabled":                            apiObject.MetricsEnabled,
			"logging_level":                              apiObject.LoggingLevel,
			"data_trace_enabled":                         apiObject.DataTraceEnabled,
			"throttling_burst_limit":                     apiObject.ThrottlingBurstLimit,
			"throttling_rate_limit":                      apiObject.ThrottlingRateLimit,
			"caching_enabled":                            apiObject.CachingEnabled,
			"cache_ttl_in_seconds":                       apiObject.CacheTtlInSeconds,
			"cache_data_encrypted":                       apiObject.CacheDataEncrypted,
			"require_authorization_for_cache_control":    apiObject.RequireAuthorizationForCacheControl,
			"unauthorized_cache_control_header_strategy": apiObject.UnauthorizedCacheControlHeaderStrategy,
		},
	}
}
