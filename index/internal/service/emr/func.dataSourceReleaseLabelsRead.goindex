package github.com/hashicorp/terraform-provider-aws/internal/service/emr
import (
	"context"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/emr"
	awstypes "github.com/aws/aws-sdk-go-v2/service/emr/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func dataSourceReleaseLabelsRead(ctx context.Context, d *schema.ResourceData, meta any) diag.Diagnostics {
	var diags diag.Diagnostics

	conn := meta.(*conns.AWSClient).EMRClient(ctx)

	input := &emr.ListReleaseLabelsInput{}

	if v, ok := d.GetOk("filters"); ok && len(v.([]any)) > 0 {
		input.Filters = expandReleaseLabelsFilters(v.([]any))
	}

	releaseLabels, err := findReleaseLabels(ctx, conn, input)

	if err != nil {
		return sdkdiag.AppendErrorf(diags, "reading EMR Release Labels: %s", err)
	}

	if len(releaseLabels) == 0 {
		d.SetId(",")
	} else {
		d.SetId(strings.Join(releaseLabels, ","))
	}
	d.Set("release_labels", releaseLabels)

	return diags
}
