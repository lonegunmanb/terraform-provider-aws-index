package github.com/hashicorp/terraform-provider-aws/internal/service/emr
import (
	"bytes"
	"context"
	"fmt"
	"log"
	"net/http"
	"os"
	"slices"
	"strings"
	"time"
	_ "unsafe" // Required for go:linkname

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/emr"
	awstypes "github.com/aws/aws-sdk-go-v2/service/emr/types"
	smithyjson "github.com/aws/smithy-go/encoding/json"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/structure"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tfjson "github.com/hashicorp/terraform-provider-aws/internal/json"
	"github.com/hashicorp/terraform-provider-aws/internal/sdkv2"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandLaunchSpecification(tfMap map[string]any) *awstypes.InstanceFleetProvisioningSpecifications {
	apiObject := &awstypes.InstanceFleetProvisioningSpecifications{}

	if v := tfMap["on_demand_specification"].([]any); len(v) > 0 {
		apiObject.OnDemandSpecification = &awstypes.OnDemandProvisioningSpecification{
			AllocationStrategy: awstypes.OnDemandProvisioningAllocationStrategy(v[0].(map[string]any)["allocation_strategy"].(string)),
		}
	}

	if v := tfMap["spot_specification"].([]any); len(v) > 0 {
		tfMap := v[0].(map[string]any)
		spotProvisioning := &awstypes.SpotProvisioningSpecification{
			TimeoutAction:          awstypes.SpotProvisioningTimeoutAction(tfMap["timeout_action"].(string)),
			TimeoutDurationMinutes: aws.Int32(int32(tfMap["timeout_duration_minutes"].(int))),
		}
		if v, ok := tfMap["block_duration_minutes"]; ok && v != 0 {
			spotProvisioning.BlockDurationMinutes = aws.Int32(int32(v.(int)))
		}
		if v, ok := tfMap["allocation_strategy"]; ok {
			spotProvisioning.AllocationStrategy = awstypes.SpotProvisioningAllocationStrategy(v.(string))
		}

		apiObject.SpotSpecification = spotProvisioning
	}

	return apiObject
}
