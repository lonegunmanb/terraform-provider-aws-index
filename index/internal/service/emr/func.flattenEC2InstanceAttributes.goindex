package github.com/hashicorp/terraform-provider-aws/internal/service/emr
import (
	"bytes"
	"context"
	"fmt"
	"log"
	"net/http"
	"os"
	"slices"
	"strings"
	"time"
	_ "unsafe" // Required for go:linkname

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/emr"
	awstypes "github.com/aws/aws-sdk-go-v2/service/emr/types"
	smithyjson "github.com/aws/smithy-go/encoding/json"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/structure"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tfjson "github.com/hashicorp/terraform-provider-aws/internal/json"
	"github.com/hashicorp/terraform-provider-aws/internal/sdkv2"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenEC2InstanceAttributes(apiObject *awstypes.Ec2InstanceAttributes) []any {
	tfList := make([]any, 0)
	tfMap := map[string]any{}

	if apiObject.Ec2KeyName != nil {
		tfMap["key_name"] = aws.ToString(apiObject.Ec2KeyName)
	}
	if apiObject.Ec2SubnetId != nil {
		tfMap[names.AttrSubnetID] = aws.ToString(apiObject.Ec2SubnetId)
	}
	if len(apiObject.RequestedEc2SubnetIds) > 0 {
		tfMap[names.AttrSubnetIDs] = flex.FlattenStringValueSet(apiObject.RequestedEc2SubnetIds)
	}
	if apiObject.IamInstanceProfile != nil {
		tfMap["instance_profile"] = aws.ToString(apiObject.IamInstanceProfile)
	}
	if apiObject.EmrManagedMasterSecurityGroup != nil {
		tfMap["emr_managed_master_security_group"] = aws.ToString(apiObject.EmrManagedMasterSecurityGroup)
	}
	if apiObject.EmrManagedSlaveSecurityGroup != nil {
		tfMap["emr_managed_slave_security_group"] = aws.ToString(apiObject.EmrManagedSlaveSecurityGroup)
	}

	if len(apiObject.AdditionalMasterSecurityGroups) > 0 {
		tfMap["additional_master_security_groups"] = strings.Join(apiObject.AdditionalMasterSecurityGroups, ",")
	}
	if len(apiObject.AdditionalSlaveSecurityGroups) > 0 {
		tfMap["additional_slave_security_groups"] = strings.Join(apiObject.AdditionalSlaveSecurityGroups, ",")
	}

	if apiObject.ServiceAccessSecurityGroup != nil {
		tfMap["service_access_security_group"] = aws.ToString(apiObject.ServiceAccessSecurityGroup)
	}

	tfList = append(tfList, tfMap)

	return tfList
}
