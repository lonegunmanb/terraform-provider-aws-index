package github.com/hashicorp/terraform-provider-aws/internal/service/appsync
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/service/appsync"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) FrameworkResources(ctx context.Context) []*inttypes.ServicePackageFrameworkResource {
	return []*inttypes.ServicePackageFrameworkResource{
		{
			Factory:  newAPIResource,
			TypeName: "aws_appsync_api",
			Name:     "API",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: "api_arn",
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newChannelNamespaceResource,
			TypeName: "aws_appsync_channel_namespace",
			Name:     "Channel Namespace",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: "channel_namespace_arn",
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newSourceAPIAssociationResource,
			TypeName: "aws_appsync_source_api_association",
			Name:     "Source API Association",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
	}
}
