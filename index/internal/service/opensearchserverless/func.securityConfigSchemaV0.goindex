package github.com/hashicorp/terraform-provider-aws/internal/service/opensearchserverless
import (
	"context"

	awstypes "github.com/aws/aws-sdk-go-v2/service/opensearchserverless/types"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func securityConfigSchemaV0() schema.Schema {
	return schema.Schema{
		Version: 0,
		Attributes: map[string]schema.Attribute{
			names.AttrID: framework.IDAttribute(),
			"config_version": schema.StringAttribute{
				Computed: true,
			},
			names.AttrDescription: schema.StringAttribute{
				Optional: true,
			},
			names.AttrName: schema.StringAttribute{
				Required: true,
			},
			names.AttrType: schema.StringAttribute{
				CustomType: fwtypes.StringEnumType[awstypes.SecurityConfigType](),
				Required:   true,
			},
		},
		Blocks: map[string]schema.Block{
			"saml_options": schema.SingleNestedBlock{ // nosemgrep:ci.avoid-SingleNestedBlock pre-existing, will be converted
				Attributes: map[string]schema.Attribute{
					"group_attribute": schema.StringAttribute{
						Optional: true,
					},
					"metadata": schema.StringAttribute{
						Required: true,
					},
					"session_timeout": schema.Int64Attribute{
						Optional: true,
						Computed: true,
					},
					"user_attribute": schema.StringAttribute{
						Optional: true,
					},
				},
			},
		},
	}
}
