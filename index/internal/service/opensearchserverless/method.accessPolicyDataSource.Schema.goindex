package github.com/hashicorp/terraform-provider-aws/internal/service/opensearchserverless
import (
	"context"

	awstypes "github.com/aws/aws-sdk-go-v2/service/opensearchserverless/types"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	"github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (d *accessPolicyDataSource) Schema(_ context.Context, _ datasource.SchemaRequest, resp *datasource.SchemaResponse) {
	resp.Schema = schema.Schema{
		Attributes: map[string]schema.Attribute{
			names.AttrDescription: schema.StringAttribute{
				Description: "Description of the policy. Typically used to store information about the permissions defined in the policy.",
				Computed:    true,
			},
			names.AttrID: framework.IDAttribute(),
			names.AttrName: schema.StringAttribute{
				Description: "Name of the policy.",
				Required:    true,
				Validators: []validator.String{
					stringvalidator.LengthBetween(3, 32),
				},
			},
			names.AttrPolicy: schema.StringAttribute{
				Description: "JSON policy document to use as the content for the new policy.",
				Computed:    true,
			},
			"policy_version": schema.StringAttribute{
				Description: "Version of the policy.",
				Computed:    true,
			},
			names.AttrType: schema.StringAttribute{
				Description: "Type of access policy. Must be `data`.",
				Required:    true,
				Validators: []validator.String{
					enum.FrameworkValidate[awstypes.AccessPolicyType](),
				},
			},
		},
	}
}
