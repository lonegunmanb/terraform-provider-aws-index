package github.com/hashicorp/terraform-provider-aws/internal/service/opensearchserverless
import (
	"context"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwflex "github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (d *securityConfigDataSource) Schema(ctx context.Context, req datasource.SchemaRequest, resp *datasource.SchemaResponse) {
	resp.Schema = schema.Schema{
		Attributes: map[string]schema.Attribute{
			"config_version": schema.StringAttribute{
				Description: "The version of the security configuration.",
				Computed:    true,
			},
			names.AttrCreatedDate: schema.StringAttribute{
				Description: "The date the configuration was created.",
				Computed:    true,
			},
			names.AttrDescription: schema.StringAttribute{
				Description: "The description of the security configuration.",
				Computed:    true,
			},
			names.AttrID: schema.StringAttribute{
				Description: "The unique identifier of the security configuration.",
				Required:    true,
			},
			"last_modified_date": schema.StringAttribute{
				Description: "The date the configuration was last modified.",
				Computed:    true,
			},
			names.AttrType: schema.StringAttribute{
				Description: "The type of security configuration.",
				Computed:    true,
			},
		},
		Blocks: map[string]schema.Block{
			"saml_options": schema.ListNestedBlock{
				CustomType: fwtypes.NewListNestedObjectTypeOf[samlOptionsData](ctx),
				NestedObject: schema.NestedBlockObject{
					Attributes: map[string]schema.Attribute{
						"group_attribute": schema.StringAttribute{
							Description: "Group attribute for this SAML integration.",
							Computed:    true,
						},
						"metadata": schema.StringAttribute{
							Description: "The XML IdP metadata file generated from your identity provider.",
							Computed:    true,
						},
						"session_timeout": schema.Int64Attribute{
							Description: "Session timeout, in minutes. Minimum is 5 minutes and maximum is 720 minutes (12 hours). Default is 60 minutes.",
							Computed:    true,
						},
						"user_attribute": schema.StringAttribute{
							Description: "User attribute for this SAML integration.",
							Computed:    true,
						},
					},
				},
			},
		},
	}
}
