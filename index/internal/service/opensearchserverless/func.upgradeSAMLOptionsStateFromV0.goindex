package github.com/hashicorp/terraform-provider-aws/internal/service/opensearchserverless
import (
	"context"

	awstypes "github.com/aws/aws-sdk-go-v2/service/opensearchserverless/types"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func upgradeSAMLOptionsStateFromV0(ctx context.Context, old types.Object, diags *diag.Diagnostics) fwtypes.ListNestedObjectValueOf[samlOptionsData] {
	if old.IsNull() {
		return fwtypes.NewListNestedObjectValueOfNull[samlOptionsData](ctx)
	}

	var oldObj samlOptionsData
	diags.Append(old.As(ctx, &oldObj, basetypes.ObjectAsOptions{})...)

	newList := []samlOptionsData{
		{
			GroupAttribute: oldObj.GroupAttribute,
			Metadata:       oldObj.Metadata,
			SessionTimeout: oldObj.SessionTimeout,
			UserAttribute:  oldObj.UserAttribute,
		},
	}

	result, d := fwtypes.NewListNestedObjectValueOfValueSlice(ctx, newList)
	diags.Append(d...)

	return result
}
