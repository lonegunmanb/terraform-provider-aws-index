package github.com/hashicorp/terraform-provider-aws/internal/service/opensearchserverless
import (
	"context"

	awstypes "github.com/aws/aws-sdk-go-v2/service/opensearchserverless/types"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func upgradeSecurityConfigStateFromV0(ctx context.Context, request resource.UpgradeStateRequest, response *resource.UpgradeStateResponse) {
	var securityConfigDataV0 resourceSecurityConfigDataV0
	response.Diagnostics.Append(request.State.Get(ctx, &securityConfigDataV0)...)
	if response.Diagnostics.HasError() {
		return
	}

	securityConfigDataV1 := securityConfigResourceModel{
		ID:            securityConfigDataV0.ID,
		ConfigVersion: securityConfigDataV0.ConfigVersion,
		Description:   securityConfigDataV0.Description,
		Name:          securityConfigDataV0.Name,
		SamlOptions:   upgradeSAMLOptionsStateFromV0(ctx, securityConfigDataV0.SamlOptions, &response.Diagnostics),
		Type:          securityConfigDataV0.Type,
	}

	response.Diagnostics.Append(response.State.Set(ctx, securityConfigDataV1)...)
}
