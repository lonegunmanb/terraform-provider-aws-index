package github.com/hashicorp/terraform-provider-aws/internal/service/opensearchserverless
import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/opensearchserverless"
	"github.com/aws/aws-sdk-go-v2/service/opensearchserverless/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
)
func findLifecyclePolicyByNameAndType(ctx context.Context, conn *opensearchserverless.Client, name, policyType string) (*types.LifecyclePolicyDetail, error) {
	in := &opensearchserverless.BatchGetLifecyclePolicyInput{
		Identifiers: []types.LifecyclePolicyIdentifier{
			{
				Name: aws.String(name),
				Type: types.LifecyclePolicyType(policyType),
			},
		},
	}

	out, err := conn.BatchGetLifecyclePolicy(ctx, in)
	if errs.IsA[*types.ResourceNotFoundException](err) {
		return nil, &retry.NotFoundError{
			LastError:   err,
			LastRequest: in,
		}
	}

	if err != nil {
		return nil, err
	}

	return tfresource.AssertSingleValueResult(out.LifecyclePolicyDetails)
}
