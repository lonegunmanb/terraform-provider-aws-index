package github.com/hashicorp/terraform-provider-aws/internal/service/kafkaconnect
import (
	"context"
	"fmt"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/kafkaconnect"
	awstypes "github.com/aws/aws-sdk-go-v2/service/kafkaconnect/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandAutoScaling(tfMap map[string]any) *awstypes.AutoScaling {
	if tfMap == nil {
		return nil
	}

	apiObject := &awstypes.AutoScaling{}

	if v, ok := tfMap["max_worker_count"].(int); ok && v != 0 {
		apiObject.MaxWorkerCount = int32(v)
	}

	if v, ok := tfMap["mcu_count"].(int); ok && v != 0 {
		apiObject.McuCount = int32(v)
	}

	if v, ok := tfMap["min_worker_count"].(int); ok && v != 0 {
		apiObject.MinWorkerCount = int32(v)
	}

	if v, ok := tfMap["scale_in_policy"].([]any); ok && len(v) > 0 && v[0] != nil {
		apiObject.ScaleInPolicy = expandScaleInPolicy(v[0].(map[string]any))
	}

	if v, ok := tfMap["scale_out_policy"].([]any); ok && len(v) > 0 && v[0] != nil {
		apiObject.ScaleOutPolicy = expandScaleOutPolicy(v[0].(map[string]any))
	}

	return apiObject
}
