package github.com/hashicorp/terraform-provider-aws/internal/service/rolesanywhere
import (
	"context"
	"fmt"
	"log"
	"reflect"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/rolesanywhere"
	awstypes "github.com/aws/aws-sdk-go-v2/service/rolesanywhere/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func resourceTrustAnchorUpdate(ctx context.Context, d *schema.ResourceData, meta any) diag.Diagnostics {
	var diags diag.Diagnostics
	conn := meta.(*conns.AWSClient).RolesAnywhereClient(ctx)

	if d.HasChangesExcept(names.AttrTags, names.AttrTagsAll) {
		input := &rolesanywhere.UpdateTrustAnchorInput{
			TrustAnchorId: aws.String(d.Id()),
			Name:          aws.String(d.Get(names.AttrName).(string)),
			Source:        expandSource(d.Get(names.AttrSource).([]any)),
		}

		log.Printf("[DEBUG] Updating RolesAnywhere Trust Anchor (%s): %#v", d.Id(), input)
		_, err := conn.UpdateTrustAnchor(ctx, input)

		if err != nil {
			return sdkdiag.AppendErrorf(diags, "updating RolesAnywhere Trust Anchor (%s): %s", d.Id(), err)
		}

		if d.HasChange(names.AttrEnabled) {
			_, n := d.GetChange(names.AttrEnabled)
			if n == true {
				if err := enableTrustAnchor(ctx, d.Id(), meta); err != nil {
					return sdkdiag.AppendErrorf(diags, "enabling RolesAnywhere Trust Anchor (%s): %s", d.Id(), err)
				}
			} else {
				if err := disableTrustAnchor(ctx, d.Id(), meta); err != nil {
					return sdkdiag.AppendErrorf(diags, "disabling RolesAnywhere Trust Anchor (%s): %s", d.Id(), err)
				}
			}
		}
	}

	return append(diags, resourceTrustAnchorRead(ctx, d, meta)...)
}
