package github.com/hashicorp/terraform-provider-aws/internal/service/rolesanywhere
import (
	"context"
	"fmt"
	"log"
	"reflect"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/rolesanywhere"
	awstypes "github.com/aws/aws-sdk-go-v2/service/rolesanywhere/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func customizeDiffNotificationSettings(_ context.Context, diff *schema.ResourceDiff, meta any) error {
	oldSet, newSet := diff.GetChange("notification_settings")

	oldSetTyped, okOld := oldSet.(*schema.Set)
	newSetTyped, okNew := newSet.(*schema.Set)

	if !okOld || !okNew {
		return fmt.Errorf("unexpected type for notification_settings: oldSet: %T, newSet: %T", oldSet, newSet)
	}

	oldList := oldSetTyped.List()
	newList := newSetTyped.List()

	for _, obj1 := range oldList {
		found := false
		for _, obj2 := range newList {
			if reflect.DeepEqual(obj1, obj2) {
				found = true
				break
			}
		}
		if !found {
			if object, okNew := obj1.(map[string]any); okNew && object["configured_by"] == configuredByDefault {
				if err := diff.Clear("notification_settings"); err != nil {
					return err
				}
				break
			}
		}
	}

	return nil
}
