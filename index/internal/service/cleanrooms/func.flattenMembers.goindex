package github.com/hashicorp/terraform-provider-aws/internal/service/cleanrooms
import (
	"context"
	"errors"
	"fmt"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cleanrooms"
	"github.com/aws/aws-sdk-go-v2/service/cleanrooms/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenMembers(members []types.MemberSummary, ownerAccount *string) []any {
	flattenedMembers := []any{}
	for _, member := range members {
		if aws.ToString(member.AccountId) != aws.ToString(ownerAccount) {
			memberMap := map[string]any{}
			memberMap[names.AttrStatus] = member.Status
			memberMap[names.AttrAccountID] = member.AccountId
			memberMap[names.AttrDisplayName] = member.DisplayName
			memberMap["member_abilities"] = flattenMemberAbilities(member.Abilities)
			flattenedMembers = append(flattenedMembers, memberMap)
		}
	}
	return flattenedMembers
}
