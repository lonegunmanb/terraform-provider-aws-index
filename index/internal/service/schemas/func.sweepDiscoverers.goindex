package github.com/hashicorp/terraform-provider-aws/internal/service/schemas
import (
	// "fmt"
	"log"
	// "strings"

	// "github.com/aws/aws-sdk-go-v2/aws"
	// "github.com/aws/aws-sdk-go-v2/service/schemas"
	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
	// "github.com/hashicorp/terraform-provider-aws/internal/sweep"
	// "github.com/hashicorp/terraform-provider-aws/internal/sweep/awsv2"
)
func sweepDiscoverers(region string) error {
	log.Printf("[WARN] Skipping EventBridge Schemas Discoverer sweep for %s", region)
	/*
		ctx := sweep.Context(region)
		client, err := sweep.SharedRegionalSweepClient(ctx, region)
		if err != nil {
			return fmt.Errorf("getting client: %w", err)
		}
		conn := client.SchemasClient(ctx)
		input := &schemas.ListDiscoverersInput{}
		sweepResources := make([]sweep.Sweepable, 0)

		pages := schemas.NewListDiscoverersPaginator(conn, input)
		for pages.HasMorePages() {
			page, err := pages.NextPage(ctx)

			if awsv2.SkipSweepError(err) {
				log.Printf("[WARN] Skipping EventBridge Schemas Discoverer sweep for %s: %s", region, err)
				return nil
			}

			if err != nil {
				return fmt.Errorf("error listing EventBridge Schemas Discoverers (%s): %w", region, err)
			}

			for _, v := range page.Discoverers {
				r := resourceDiscoverer()
				d := r.Data(nil)
				d.SetId(aws.ToString(v.DiscovererId))

				sweepResources = append(sweepResources, sweep.NewSweepResource(r, d, client))
			}
		}

		err = sweep.SweepOrchestrator(ctx, sweepResources)

		if err != nil {
			return fmt.Errorf("error sweeping EventBridge Schemas Discoverers (%s): %w", region, err)
		}
	*/
	return nil
}
