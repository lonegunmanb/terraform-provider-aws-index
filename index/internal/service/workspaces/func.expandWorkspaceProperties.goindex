package github.com/hashicorp/terraform-provider-aws/internal/service/workspaces
import (
	"context"
	"fmt"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/workspaces"
	"github.com/aws/aws-sdk-go-v2/service/workspaces/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	itypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandWorkspaceProperties(tfList []any) *types.WorkspaceProperties {
	if len(tfList) == 0 || tfList[0] == nil {
		return nil
	}

	tfMap := tfList[0].(map[string]any)

	apiObject := &types.WorkspaceProperties{
		ComputeTypeName:   types.Compute(tfMap["compute_type_name"].(string)),
		RootVolumeSizeGib: aws.Int32(int32(tfMap["root_volume_size_gib"].(int))),
		RunningMode:       types.RunningMode(tfMap["running_mode"].(string)),
		UserVolumeSizeGib: aws.Int32(int32(tfMap["user_volume_size_gib"].(int))),
	}

	if tfMap["running_mode"].(string) == string(types.RunningModeAutoStop) {
		apiObject.RunningModeAutoStopTimeoutInMinutes = aws.Int32(int32(tfMap["running_mode_auto_stop_timeout_in_minutes"].(int)))
	}

	return apiObject
}
