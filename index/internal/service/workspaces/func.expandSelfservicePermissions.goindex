package github.com/hashicorp/terraform-provider-aws/internal/service/workspaces
import (
	"context"
	"errors"
	"fmt"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/workspaces"
	"github.com/aws/aws-sdk-go-v2/service/workspaces/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	itypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandSelfservicePermissions(tfList []any) *types.SelfservicePermissions {
	if len(tfList) == 0 || tfList[0] == nil {
		return nil
	}

	apiObject := &types.SelfservicePermissions{}
	tfMap := tfList[0].(map[string]any)

	if tfMap["change_compute_type"].(bool) {
		apiObject.ChangeComputeType = types.ReconnectEnumEnabled
	} else {
		apiObject.ChangeComputeType = types.ReconnectEnumDisabled
	}

	if tfMap["increase_volume_size"].(bool) {
		apiObject.IncreaseVolumeSize = types.ReconnectEnumEnabled
	} else {
		apiObject.IncreaseVolumeSize = types.ReconnectEnumDisabled
	}

	if tfMap["rebuild_workspace"].(bool) {
		apiObject.RebuildWorkspace = types.ReconnectEnumEnabled
	} else {
		apiObject.RebuildWorkspace = types.ReconnectEnumDisabled
	}

	if tfMap["restart_workspace"].(bool) {
		apiObject.RestartWorkspace = types.ReconnectEnumEnabled
	} else {
		apiObject.RestartWorkspace = types.ReconnectEnumDisabled
	}

	if tfMap["switch_running_mode"].(bool) {
		apiObject.SwitchRunningMode = types.ReconnectEnumEnabled
	} else {
		apiObject.SwitchRunningMode = types.ReconnectEnumDisabled
	}

	return apiObject
}
