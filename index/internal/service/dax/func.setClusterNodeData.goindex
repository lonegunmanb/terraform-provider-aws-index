package github.com/hashicorp/terraform-provider-aws/internal/service/dax
import (
	"cmp"
	"context"
	"fmt"
	"log"
	"reflect"
	"slices"
	"strings"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/dax"
	awstypes "github.com/aws/aws-sdk-go-v2/service/dax/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func setClusterNodeData(d *schema.ResourceData, c awstypes.Cluster) error {
	sortedNodes := slices.SortedFunc(slices.Values(c.Nodes), func(a, b awstypes.Node) int {
		return cmp.Compare(aws.ToString(a.NodeId), aws.ToString(b.NodeId))
	})

	nodeData := make([]map[string]any, 0, len(sortedNodes))

	for _, node := range sortedNodes {
		nodeData = append(nodeData, map[string]any{
			names.AttrID:               aws.ToString(node.NodeId),
			names.AttrAddress:          aws.ToString(node.Endpoint.Address),
			names.AttrPort:             node.Endpoint.Port,
			names.AttrAvailabilityZone: aws.ToString(node.AvailabilityZone),
		})
	}

	return d.Set("nodes", nodeData)
}
