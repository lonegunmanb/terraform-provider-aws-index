package github.com/hashicorp/terraform-provider-aws/internal/service/appconfig
import (
	"context"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/appconfig"
	awstypes "github.com/aws/aws-sdk-go-v2/service/appconfig/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenActions(apiObjects []awstypes.Action) []any {
	var tfList []any

	for _, apiObject := range apiObjects {
		tfMap := map[string]any{
			names.AttrDescription: aws.ToString(apiObject.Description),
			names.AttrName:        aws.ToString(apiObject.Name),
			names.AttrRoleARN:     aws.ToString(apiObject.RoleArn),
			names.AttrURI:         aws.ToString(apiObject.Uri),
		}

		tfList = append(tfList, tfMap)
	}

	return tfList
}
