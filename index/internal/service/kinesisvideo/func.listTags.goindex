package github.com/hashicorp/terraform-provider-aws/internal/service/kinesisvideo
import (
	"context"
	"fmt"
	"maps"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/kinesisvideo"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/logging"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/types/option"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func listTags(ctx context.Context, conn *kinesisvideo.Client, identifier string, optFns ...func(*kinesisvideo.Options)) (tftags.KeyValueTags, error) {
	input := kinesisvideo.ListTagsForStreamInput{
		StreamARN: aws.String(identifier),
	}

	output := make(map[string]string)

	err := listTagsForStreamPages(ctx, conn, &input, func(page *kinesisvideo.ListTagsForStreamOutput, lastPage bool) bool {
		if page == nil {
			return !lastPage
		}

		maps.Copy(output, page.Tags)

		return !lastPage
	}, optFns...)

	if err != nil {
		return tftags.New(ctx, nil), err
	}

	return keyValueTags(ctx, output), nil
}
