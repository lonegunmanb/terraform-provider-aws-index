package github.com/hashicorp/terraform-provider-aws/internal/service/evidently
import (
	"context"
	"log"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/evidently"
	awstypes "github.com/aws/aws-sdk-go-v2/service/evidently/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandDataDelivery(dataDelivery []any) *awstypes.ProjectDataDeliveryConfig {
	if len(dataDelivery) == 0 || dataDelivery[0] == nil {
		return nil
	}

	tfMap, ok := dataDelivery[0].(map[string]any)
	if !ok {
		return nil
	}

	result := &awstypes.ProjectDataDeliveryConfig{}

	if v, ok := tfMap[names.AttrCloudWatchLogs]; ok && len(v.([]any)) > 0 {
		result.CloudWatchLogs = expandCloudWatchLogs(v.([]any))
	}

	if v, ok := tfMap["s3_destination"]; ok && len(v.([]any)) > 0 {
		result.S3Destination = expandS3Destination(v.([]any))
	}

	return result
}
