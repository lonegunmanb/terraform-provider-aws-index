package github.com/hashicorp/terraform-provider-aws/internal/service/evidently
import (
	"context"
	"errors"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/evidently"
	awstypes "github.com/aws/aws-sdk-go-v2/service/evidently/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
)
func waitFeatureUpdated(ctx context.Context, conn *evidently.Client, id string, timeout time.Duration) (*awstypes.Feature, error) {
	stateConf := &retry.StateChangeConf{
		Pending: enum.Slice(awstypes.FeatureStatusUpdating),
		Target:  enum.Slice(awstypes.FeatureStatusAvailable),
		Refresh: statusFeature(ctx, conn, id),
		Timeout: timeout,
	}

	outputRaw, err := stateConf.WaitForStateContext(ctx)

	if output, ok := outputRaw.(*awstypes.Feature); ok {
		return output, err
	}

	return nil, err
}
