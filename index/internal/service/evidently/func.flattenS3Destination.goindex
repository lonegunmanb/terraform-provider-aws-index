package github.com/hashicorp/terraform-provider-aws/internal/service/evidently
import (
	"context"
	"log"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/evidently"
	awstypes "github.com/aws/aws-sdk-go-v2/service/evidently/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenS3Destination(s3Destination *awstypes.S3Destination) []any {
	if s3Destination == nil || s3Destination.Bucket == nil {
		return []any{}
	}

	values := map[string]any{}

	if s3Destination.Bucket != nil {
		values[names.AttrBucket] = aws.ToString(s3Destination.Bucket)
	}

	if s3Destination.Prefix != nil {
		values[names.AttrPrefix] = aws.ToString(s3Destination.Prefix)
	}

	return []any{values}
}
