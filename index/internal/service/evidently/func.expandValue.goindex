package github.com/hashicorp/terraform-provider-aws/internal/service/evidently
import (
	"context"
	"fmt"
	"log"
	"strconv"
	"strings"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/evidently"
	awstypes "github.com/aws/aws-sdk-go-v2/service/evidently/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/sdkv2/types/nullable"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandValue(value []any) awstypes.VariableValue {
	if len(value) == 0 || value[0] == nil {
		return nil
	}

	tfMap, ok := value[0].(map[string]any)
	if !ok {
		return nil
	}

	var result awstypes.VariableValue

	// Only one of these values can be set at a time
	if val, null, _ := nullable.Bool(tfMap["bool_value"].(string)).ValueBool(); !null {
		result = &awstypes.VariableValueMemberBoolValue{
			Value: val,
		}
	} else if v, null, _ := nullable.Int(tfMap["long_value"].(string)).ValueInt64(); !null {
		result = &awstypes.VariableValueMemberLongValue{
			Value: v,
		}
	} else if v, null, _ := nullable.Float(tfMap["double_value"].(string)).ValueFloat64(); !null {
		result = &awstypes.VariableValueMemberDoubleValue{
			Value: v,
		}
	} else if v, ok := tfMap["string_value"].(string); ok {
		result = &awstypes.VariableValueMemberStringValue{
			Value: v,
		}
	}
	return result
}
