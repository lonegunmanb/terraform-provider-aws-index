package github.com/hashicorp/terraform-provider-aws/internal/service/glue
import (
	"context"
	"fmt"
	"log"
	"strings"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/arn"
	"github.com/aws/aws-sdk-go-v2/service/glue"
	awstypes "github.com/aws/aws-sdk-go-v2/service/glue/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/structure"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandS3Target(cfg map[string]any) awstypes.S3Target {
	target := awstypes.S3Target{
		Path: aws.String(cfg[names.AttrPath].(string)),
	}

	if v, ok := cfg["connection_name"]; ok {
		target.ConnectionName = aws.String(v.(string))
	}

	if v, ok := cfg["exclusions"]; ok {
		target.Exclusions = flex.ExpandStringValueList(v.([]any))
	}

	if v, ok := cfg["sample_size"]; ok && v.(int) > 0 {
		target.SampleSize = aws.Int32(int32(v.(int)))
	}

	if v, ok := cfg["event_queue_arn"]; ok {
		target.EventQueueArn = aws.String(v.(string))
	}

	if v, ok := cfg["dlq_event_queue_arn"]; ok {
		target.DlqEventQueueArn = aws.String(v.(string))
	}

	return target
}
