package github.com/hashicorp/terraform-provider-aws/internal/service/glue
import (
	"context"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/glue"
	awstypes "github.com/aws/aws-sdk-go-v2/service/glue/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/customdiff"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenCSVClassifier(csvClassifier *awstypes.CsvClassifier) []map[string]any {
	if csvClassifier == nil {
		return []map[string]any{}
	}

	m := map[string]any{
		"allow_single_column":        aws.ToBool(csvClassifier.AllowSingleColumn),
		"contains_header":            string(csvClassifier.ContainsHeader),
		"delimiter":                  aws.ToString(csvClassifier.Delimiter),
		"disable_value_trimming":     aws.ToBool(csvClassifier.DisableValueTrimming),
		names.AttrHeader:             csvClassifier.Header,
		"quote_symbol":               aws.ToString(csvClassifier.QuoteSymbol),
		"custom_datatype_configured": aws.ToBool(csvClassifier.CustomDatatypeConfigured),
		"custom_datatypes":           csvClassifier.CustomDatatypes,
		"serde":                      string(csvClassifier.Serde),
	}

	return []map[string]any{m}
}
