package github.com/hashicorp/terraform-provider-aws/internal/service/glue
import (
	"context"
	"fmt"
	"log"
	"strings"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/arn"
	"github.com/aws/aws-sdk-go-v2/service/glue"
	awstypes "github.com/aws/aws-sdk-go-v2/service/glue/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandColumns(columns []any) []awstypes.Column {
	columnSlice := []awstypes.Column{}
	for _, element := range columns {
		elementMap := element.(map[string]any)

		column := awstypes.Column{
			Name: aws.String(elementMap[names.AttrName].(string)),
		}

		if v, ok := elementMap[names.AttrComment]; ok {
			column.Comment = aws.String(v.(string))
		}

		if v, ok := elementMap[names.AttrType]; ok {
			column.Type = aws.String(v.(string))
		}

		if v, ok := elementMap[names.AttrParameters]; ok {
			column.Parameters = flex.ExpandStringValueMap(v.(map[string]any))
		}

		columnSlice = append(columnSlice, column)
	}

	return columnSlice
}
