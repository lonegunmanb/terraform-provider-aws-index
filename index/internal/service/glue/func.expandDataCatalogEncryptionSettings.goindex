package github.com/hashicorp/terraform-provider-aws/internal/service/glue
import (
	"context"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/glue"
	awstypes "github.com/aws/aws-sdk-go-v2/service/glue/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandDataCatalogEncryptionSettings(tfMap map[string]any) *awstypes.DataCatalogEncryptionSettings {
	if tfMap == nil {
		return nil
	}

	apiObject := &awstypes.DataCatalogEncryptionSettings{}

	if v, ok := tfMap["connection_password_encryption"].([]any); ok && len(v) > 0 {
		apiObject.ConnectionPasswordEncryption = expandConnectionPasswordEncryption(v[0].(map[string]any))
	}

	if v, ok := tfMap["encryption_at_rest"].([]any); ok && len(v) > 0 {
		apiObject.EncryptionAtRest = expandEncryptionAtRest(v[0].(map[string]any))
	}

	return apiObject
}
