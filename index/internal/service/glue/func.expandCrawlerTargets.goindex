package github.com/hashicorp/terraform-provider-aws/internal/service/glue
import (
	"context"
	"fmt"
	"log"
	"strings"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/arn"
	"github.com/aws/aws-sdk-go-v2/service/glue"
	awstypes "github.com/aws/aws-sdk-go-v2/service/glue/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/structure"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandCrawlerTargets(d *schema.ResourceData) *awstypes.CrawlerTargets {
	crawlerTargets := &awstypes.CrawlerTargets{}

	log.Print("[DEBUG] Creating crawler target")

	if v, ok := d.GetOk("dynamodb_target"); ok {
		crawlerTargets.DynamoDBTargets = expandDynamoDBTargets(v.([]any))
	}

	if v, ok := d.GetOk("jdbc_target"); ok {
		crawlerTargets.JdbcTargets = expandJDBCTargets(v.([]any))
	}

	if v, ok := d.GetOk("s3_target"); ok {
		crawlerTargets.S3Targets = expandS3Targets(v.([]any))
	}

	if v, ok := d.GetOk("catalog_target"); ok {
		crawlerTargets.CatalogTargets = expandCatalogTargets(v.([]any))
	}

	if v, ok := d.GetOk("mongodb_target"); ok {
		crawlerTargets.MongoDBTargets = expandMongoDBTargets(v.([]any))
	}

	if v, ok := d.GetOk("delta_target"); ok {
		crawlerTargets.DeltaTargets = expandDeltaTargets(v.([]any))
	}

	if v, ok := d.GetOk("hudi_target"); ok {
		crawlerTargets.HudiTargets = expandHudiTargets(v.([]any))
	}

	if v, ok := d.GetOk("iceberg_target"); ok {
		crawlerTargets.IcebergTargets = expandIcebergTargets(v.([]any))
	}

	return crawlerTargets
}
