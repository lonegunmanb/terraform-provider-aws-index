package github.com/hashicorp/terraform-provider-aws/internal/service/glue
import (
	"context"
	"fmt"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/arn"
	"github.com/aws/aws-sdk-go-v2/service/glue"
	awstypes "github.com/aws/aws-sdk-go-v2/service/glue/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandSourceControlDetails(l []any) *awstypes.SourceControlDetails {
	m := l[0].(map[string]any)

	sourceControlDetails := &awstypes.SourceControlDetails{}

	if v, ok := m["auth_token"].(string); ok && v != "" {
		sourceControlDetails.AuthToken = aws.String(v)
	}

	if v, ok := m["folder"].(string); ok && v != "" {
		sourceControlDetails.Folder = aws.String(v)
	}
	if v, ok := m["auth_strategy"].(string); ok && v != "" {
		sourceControlDetails.AuthStrategy = awstypes.SourceControlAuthStrategy(v)
	}
	if v, ok := m["branch"].(string); ok && v != "" {
		sourceControlDetails.Branch = aws.String(v)
	}
	if v, ok := m["last_commit_id"].(string); ok && v != "" {
		sourceControlDetails.LastCommitId = aws.String(v)
	}
	if v, ok := m[names.AttrOwner].(string); ok && v != "" {
		sourceControlDetails.Owner = aws.String(v)
	}
	if v, ok := m["provider"].(string); ok && v != "" {
		sourceControlDetails.Provider = awstypes.SourceControlProvider(v)
	}
	if v, ok := m["repository"].(string); ok && v != "" {
		sourceControlDetails.Repository = aws.String(v)
	}

	return sourceControlDetails
}
