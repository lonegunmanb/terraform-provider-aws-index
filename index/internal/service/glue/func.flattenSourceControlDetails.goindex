package github.com/hashicorp/terraform-provider-aws/internal/service/glue
import (
	"context"
	"fmt"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/arn"
	"github.com/aws/aws-sdk-go-v2/service/glue"
	awstypes "github.com/aws/aws-sdk-go-v2/service/glue/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenSourceControlDetails(sourceControlDetails *awstypes.SourceControlDetails) []map[string]any {
	if sourceControlDetails == nil {
		return []map[string]any{}
	}

	m := map[string]any{
		"auth_strategy":  sourceControlDetails.AuthStrategy,
		"branch":         aws.ToString(sourceControlDetails.Branch),
		"folder":         aws.ToString(sourceControlDetails.Folder),
		"last_commit_id": aws.ToString(sourceControlDetails.LastCommitId),
		names.AttrOwner:  aws.ToString(sourceControlDetails.Owner),
		"provider":       sourceControlDetails.Provider,
		"repository":     aws.ToString(sourceControlDetails.Repository),
	}

	return []map[string]any{m}
}
