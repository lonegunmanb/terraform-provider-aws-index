package github.com/hashicorp/terraform-provider-aws/internal/service/glue
import (
	"context"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/glue"
	awstypes "github.com/aws/aws-sdk-go-v2/service/glue/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/customdiff"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandCSVClassifierCreate(name string, m map[string]any) *awstypes.CreateCsvClassifierRequest {
	csvClassifier := &awstypes.CreateCsvClassifierRequest{
		AllowSingleColumn:    aws.Bool(m["allow_single_column"].(bool)),
		ContainsHeader:       awstypes.CsvHeaderOption(m["contains_header"].(string)),
		Delimiter:            aws.String(m["delimiter"].(string)),
		DisableValueTrimming: aws.Bool(m["disable_value_trimming"].(bool)),
		Name:                 aws.String(name),
	}

	if v, ok := m["quote_symbol"].(string); ok && v != "" {
		csvClassifier.QuoteSymbol = aws.String(v)
	}

	if v, ok := m[names.AttrHeader].([]any); ok {
		csvClassifier.Header = flex.ExpandStringValueList(v)
	}

	if v, ok := m["custom_datatypes"].([]any); ok && len(v) > 0 {
		if confV, confOk := m["custom_datatype_configured"].(bool); confOk {
			csvClassifier.CustomDatatypeConfigured = aws.Bool(confV)
		}
		csvClassifier.CustomDatatypes = flex.ExpandStringValueList(v)
	}

	if v, ok := m["serde"].(string); ok && v != "" {
		csvClassifier.Serde = awstypes.CsvSerdeOption(v)
	}

	return csvClassifier
}
