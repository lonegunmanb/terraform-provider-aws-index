package github.com/hashicorp/terraform-provider-aws/internal/service/glue
import (
	"context"
	"fmt"
	"log"
	"strings"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/arn"
	"github.com/aws/aws-sdk-go-v2/service/glue"
	awstypes "github.com/aws/aws-sdk-go-v2/service/glue/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/structure"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenS3Targets(s3Targets []awstypes.S3Target) []map[string]any {
	result := make([]map[string]any, 0)

	for _, s3Target := range s3Targets {
		attrs := make(map[string]any)
		attrs["exclusions"] = flex.FlattenStringValueList(s3Target.Exclusions)
		attrs[names.AttrPath] = aws.ToString(s3Target.Path)
		attrs["connection_name"] = aws.ToString(s3Target.ConnectionName)

		if s3Target.SampleSize != nil {
			attrs["sample_size"] = aws.ToInt32(s3Target.SampleSize)
		}

		attrs["event_queue_arn"] = aws.ToString(s3Target.EventQueueArn)
		attrs["dlq_event_queue_arn"] = aws.ToString(s3Target.DlqEventQueueArn)

		result = append(result, attrs)
	}
	return result
}
