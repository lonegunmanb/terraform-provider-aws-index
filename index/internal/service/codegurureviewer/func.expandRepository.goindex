package github.com/hashicorp/terraform-provider-aws/internal/service/codegurureviewer
import (
	"context"
	"errors"
	"log"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/codegurureviewer"
	"github.com/aws/aws-sdk-go-v2/service/codegurureviewer/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandRepository(repository []any) *types.Repository {
	if len(repository) == 0 || repository[0] == nil {
		return nil
	}

	tfMap, ok := repository[0].(map[string]any)
	if !ok {
		return nil
	}

	result := &types.Repository{}

	if v, ok := tfMap["bitbucket"]; ok {
		result.Bitbucket = expandThirdPartySourceRepository(v.([]any))
	}
	if v, ok := tfMap["codecommit"]; ok {
		result.CodeCommit = expandCodeCommitRepository(v.([]any))
	}
	if v, ok := tfMap["github_enterprise_server"]; ok {
		result.GitHubEnterpriseServer = expandThirdPartySourceRepository(v.([]any))
	}
	if v, ok := tfMap[names.AttrS3Bucket]; ok {
		result.S3Bucket = expandS3Repository(v.([]any))
	}

	return result
}
