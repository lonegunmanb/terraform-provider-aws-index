package github.com/hashicorp/terraform-provider-aws/internal/service/ivschat
import (
	"context"
	"errors"
	"log"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ivschat"
	"github.com/aws/aws-sdk-go-v2/service/ivschat/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandMessageReviewHandler(vSettings []any) *types.MessageReviewHandler {
	if len(vSettings) == 0 || vSettings[0] == nil {
		return nil
	}

	tfMap := vSettings[0].(map[string]any)

	messageReviewHandler := &types.MessageReviewHandler{}

	if v, ok := tfMap["fallback_result"].(string); ok && v != "" {
		messageReviewHandler.FallbackResult = types.FallbackResult(v)
	}

	if v, ok := tfMap[names.AttrURI].(string); ok {
		messageReviewHandler.Uri = aws.String(v)
	}

	return messageReviewHandler
}
