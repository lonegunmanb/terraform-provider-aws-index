package github.com/hashicorp/terraform-provider-aws/internal/service/ivschat
import (
	"context"
	"errors"
	"log"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ivschat"
	"github.com/aws/aws-sdk-go-v2/service/ivschat/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenDestinationConfiguration(apiObject types.DestinationConfiguration) []any {
	if apiObject == nil {
		return []any{}
	}

	m := map[string]any{}

	switch v := apiObject.(type) {
	case *types.DestinationConfigurationMemberCloudWatchLogs:
		m[names.AttrCloudWatchLogs] = flattenCloudWatchDestinationConfiguration(v.Value)

	case *types.DestinationConfigurationMemberFirehose:
		m["firehose"] = flattenFirehoseDestinationConfiguration(v.Value)

	case *types.DestinationConfigurationMemberS3:
		m["s3"] = flattenS3DestinationConfiguration(v.Value)

	case *types.UnknownUnionMember:
		log.Println("unknown tag:", v.Tag)

	default:
		log.Println("union is nil or unknown type")
	}

	return []any{m}
}
