package github.com/hashicorp/terraform-provider-aws/internal/service/ivschat
import (
	"context"
	"errors"
	"log"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ivschat"
	"github.com/aws/aws-sdk-go-v2/service/ivschat/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandDestinationConfiguration(vSettings []any) types.DestinationConfiguration {
	if len(vSettings) == 0 || vSettings[0] == nil {
		return nil
	}

	tfMap := vSettings[0].(map[string]any)

	if v, ok := tfMap[names.AttrCloudWatchLogs].([]any); ok && len(v) > 0 {
		return &types.DestinationConfigurationMemberCloudWatchLogs{
			Value: *expandCloudWatchLogsDestinationConfiguration(v),
		}
	} else if v, ok := tfMap["firehose"].([]any); ok && len(v) > 0 {
		return &types.DestinationConfigurationMemberFirehose{
			Value: *expandFirehouseDestinationConfiguration(v),
		}
	} else if v, ok := tfMap["s3"].([]any); ok && len(v) > 0 {
		return &types.DestinationConfigurationMemberS3{
			Value: *expandS3DestinationConfiguration(v),
		}
	} else {
		return nil
	}
}
