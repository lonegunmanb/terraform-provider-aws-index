package github.com/hashicorp/terraform-provider-aws/internal/service/cloudcontrol
import (
	"context"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func dataSourceResourceRead(ctx context.Context, d *schema.ResourceData, meta any) diag.Diagnostics {
	var diags diag.Diagnostics

	conn := meta.(*conns.AWSClient).CloudControlClient(ctx)

	identifier := d.Get(names.AttrIdentifier).(string)
	typeName := d.Get("type_name").(string)
	resourceDescription, err := findResourceByFourPartKey(ctx, conn,
		identifier,
		typeName,
		d.Get("type_version_id").(string),
		d.Get(names.AttrRoleARN).(string),
	)

	if err != nil {
		return sdkdiag.AppendErrorf(diags, "reading Cloud Control API (%s) Resource (%s): %s", typeName, identifier, err)
	}

	d.SetId(aws.ToString(resourceDescription.Identifier))
	d.Set(names.AttrProperties, resourceDescription.Properties)

	return diags
}
