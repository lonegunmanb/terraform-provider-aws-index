package github.com/hashicorp/terraform-provider-aws/internal/service/s3control
import (
	"fmt"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/s3control"
	"github.com/hashicorp/aws-sdk-go-base/v2/endpoints"
	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep/awsv2"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep/framework"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func sweepStorageLensConfigurations(region string) error {
	ctx := sweep.Context(region)
	if region == endpoints.UsGovEast1RegionID || region == endpoints.UsGovWest1RegionID {
		log.Printf("[WARN] Skipping S3 Storage Lens Configuration sweep for region: %s", region)
		return nil
	}
	client, err := sweep.SharedRegionalSweepClient(ctx, region)
	if err != nil {
		return fmt.Errorf("error getting client: %s", err)
	}
	conn := client.S3ControlClient(ctx)
	accountID := client.AccountID(ctx)
	input := &s3control.ListStorageLensConfigurationsInput{
		AccountId: aws.String(accountID),
	}
	sweepResources := make([]sweep.Sweepable, 0)

	pages := s3control.NewListStorageLensConfigurationsPaginator(conn, input)
	for pages.HasMorePages() {
		page, err := pages.NextPage(ctx)

		if awsv2.SkipSweepError(err) {
			log.Printf("[WARN] Skipping S3 Storage Lens Configuration sweep for %s: %s", region, err)
			return nil
		}

		if err != nil {
			return fmt.Errorf("error listing S3 Storage Lens Configurations (%s): %w", region, err)
		}

		for _, v := range page.StorageLensConfigurationList {
			configID := aws.ToString(v.Id)

			if configID == "default-account-dashboard" {
				continue
			}

			r := resourceStorageLensConfiguration()
			d := r.Data(nil)
			d.SetId(StorageLensConfigurationCreateResourceID(accountID, configID))

			sweepResources = append(sweepResources, sweep.NewSweepResource(r, d, client))
		}
	}

	err = sweep.SweepOrchestrator(ctx, sweepResources)

	if err != nil {
		return fmt.Errorf("error sweeping S3 Storage Lens Configurations (%s): %w", region, err)
	}

	return nil
}
