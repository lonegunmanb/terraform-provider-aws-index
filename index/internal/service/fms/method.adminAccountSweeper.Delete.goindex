package github.com/hashicorp/terraform-provider-aws/internal/service/fms
import (
	"context"
	"fmt"
	"regexp"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/fms"
	awstypes "github.com/aws/aws-sdk-go-v2/service/fms/types"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep/awsv2"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep/sdk"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (aas adminAccountSweeper) Delete(ctx context.Context, optFns ...tfresource.OptionsFunc) error {
	err := aas.sweepable.Delete(ctx, optFns...)
	if err != nil && strings.Contains(err.Error(), "AccessDeniedException") {
		tflog.Warn(ctx, "Skipping resource", map[string]any{
			"attr.account_id": aas.d.Get(names.AttrAccountID),
			"error":           err.Error(),
		})
		return nil
	}
	if err != nil && errs.Must(regexp.MatchString(`InvalidOperationException: This operation is not supported in the '[-a-z0-9]+' region`, err.Error())) { // nosemgrep: ci.avoid-errs-Must
		tflog.Warn(ctx, "Skipping resource", map[string]any{
			"attr.account_id": aas.d.Get(names.AttrAccountID),
			"error":           err.Error(),
		})
		return nil
	}
	return err
}
