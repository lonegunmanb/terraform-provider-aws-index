package github.com/hashicorp/terraform-provider-aws/internal/service/fms
import (
	"context"
	"log"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/fms"
	awstypes "github.com/aws/aws-sdk-go-v2/service/fms/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/structure"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandNetworkACLEntrySet(tfMap map[string]any) *awstypes.NetworkAclEntrySet {
	if tfMap == nil {
		return nil
	}

	apiObject := &awstypes.NetworkAclEntrySet{}

	if v, ok := tfMap["first_entry"].(*schema.Set); ok && v.Len() > 0 {
		apiObject.FirstEntries = expandNetworkACLEntries(v.List())
	}

	if v, ok := tfMap["force_remediate_for_first_entries"].(bool); ok {
		apiObject.ForceRemediateForFirstEntries = aws.Bool(v)
	}

	if v, ok := tfMap["force_remediate_for_last_entries"].(bool); ok {
		apiObject.ForceRemediateForLastEntries = aws.Bool(v)
	}

	if v, ok := tfMap["last_entry"].(*schema.Set); ok && v.Len() > 0 {
		apiObject.LastEntries = expandNetworkACLEntries(v.List())
	}

	return apiObject
}
