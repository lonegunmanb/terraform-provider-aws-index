package github.com/hashicorp/terraform-provider-aws/internal/service/fms
import (
	"context"
	"log"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/fms"
	awstypes "github.com/aws/aws-sdk-go-v2/service/fms/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/structure"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandPolicyOption(tfMap map[string]any) *awstypes.PolicyOption {
	if tfMap == nil {
		return nil
	}

	apiObject := &awstypes.PolicyOption{}

	if v, ok := tfMap["network_acl_common_policy"].([]any); ok && len(v) > 0 && v[0] != nil {
		apiObject.NetworkAclCommonPolicy = expandNetworkACLCommonPolicy(v[0].(map[string]any))
	}

	if v, ok := tfMap["network_firewall_policy"].([]any); ok && len(v) > 0 && v[0] != nil {
		apiObject.NetworkFirewallPolicy = expandNetworkFirewallPolicy(v[0].(map[string]any))
	}

	if v, ok := tfMap["third_party_firewall_policy"].([]any); ok && len(v) > 0 && v[0] != nil {
		apiObject.ThirdPartyFirewallPolicy = expandThirdPartyFirewallPolicy(v[0].(map[string]any))
	}

	return apiObject
}
