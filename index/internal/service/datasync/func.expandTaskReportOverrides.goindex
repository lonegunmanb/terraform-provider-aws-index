package github.com/hashicorp/terraform-provider-aws/internal/service/datasync
import (
	"context"
	"fmt"
	"log"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/datasync"
	awstypes "github.com/aws/aws-sdk-go-v2/service/datasync/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandTaskReportOverrides(l []any) *awstypes.ReportOverrides {
	var overrides = &awstypes.ReportOverrides{}

	if len(l) == 0 || l[0] == nil {
		return overrides
	}

	m := l[0].(map[string]any)

	deleteOverride := m["deleted_override"].(string)
	if deleteOverride != "" {
		overrides.Deleted = &awstypes.ReportOverride{
			ReportLevel: awstypes.ReportLevel(deleteOverride),
		}
	}

	skippedOverride := m["skipped_override"].(string)
	if skippedOverride != "" {
		overrides.Skipped = &awstypes.ReportOverride{
			ReportLevel: awstypes.ReportLevel(skippedOverride),
		}
	}

	transferredOverride := m["transferred_override"].(string)
	if transferredOverride != "" {
		overrides.Transferred = &awstypes.ReportOverride{
			ReportLevel: awstypes.ReportLevel(transferredOverride),
		}
	}

	verifiedOverride := m["verified_override"].(string)
	if verifiedOverride != "" {
		overrides.Verified = &awstypes.ReportOverride{
			ReportLevel: awstypes.ReportLevel(verifiedOverride),
		}
	}

	return overrides
}
