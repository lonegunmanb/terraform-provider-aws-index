package github.com/hashicorp/terraform-provider-aws/internal/service/datasync
import (
	"context"
	"fmt"
	"log"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/datasync"
	awstypes "github.com/aws/aws-sdk-go-v2/service/datasync/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenOptions(options *awstypes.Options) []any {
	if options == nil {
		return []any{}
	}

	m := map[string]any{
		"atime":                          string(options.Atime),
		"bytes_per_second":               aws.ToInt64(options.BytesPerSecond),
		"gid":                            string(options.Gid),
		"log_level":                      string(options.LogLevel),
		"mtime":                          string(options.Mtime),
		"object_tags":                    string(options.ObjectTags),
		"overwrite_mode":                 string(options.OverwriteMode),
		"posix_permissions":              string(options.PosixPermissions),
		"preserve_deleted_files":         string(options.PreserveDeletedFiles),
		"preserve_devices":               string(options.PreserveDevices),
		"security_descriptor_copy_flags": string(options.SecurityDescriptorCopyFlags),
		"task_queueing":                  string(options.TaskQueueing),
		"transfer_mode":                  string(options.TransferMode),
		"uid":                            string(options.Uid),
		"verify_mode":                    string(options.VerifyMode),
	}

	return []any{m}
}
