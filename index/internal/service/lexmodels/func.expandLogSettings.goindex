package github.com/hashicorp/terraform-provider-aws/internal/service/lexmodels
import (
	"context"
	"fmt"
	"log"
	"strings"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/arn"
	"github.com/aws/aws-sdk-go-v2/service/lexmodelbuildingservice"
	awstypes "github.com/aws/aws-sdk-go-v2/service/lexmodelbuildingservice/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandLogSettings(rawValues []any) ([]awstypes.LogSettingsRequest, error) {
	requests := make([]awstypes.LogSettingsRequest, 0, len(rawValues))

	for _, rawValue := range rawValues {
		value, ok := rawValue.(map[string]any)
		if !ok {
			continue
		}
		destination := value[names.AttrDestination].(string)
		request := awstypes.LogSettingsRequest{
			Destination: awstypes.Destination(destination),
			LogType:     awstypes.LogType(value["log_type"].(string)),
			ResourceArn: aws.String(value[names.AttrResourceARN].(string)),
		}

		if v, ok := value[names.AttrKMSKeyARN]; ok && v != "" {
			if destination != string(awstypes.DestinationS3) {
				return nil, fmt.Errorf("`kms_key_arn` cannot be specified when `destination` is %q", destination)
			}
			request.KmsKeyArn = aws.String(value[names.AttrKMSKeyARN].(string))
		}

		requests = append(requests, request)
	}

	return requests, nil
}
