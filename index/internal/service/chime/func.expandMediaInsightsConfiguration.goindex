package github.com/hashicorp/terraform-provider-aws/internal/service/chime
import (
	"context"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/chimesdkvoice"
	awstypes "github.com/aws/aws-sdk-go-v2/service/chimesdkvoice/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
)
func expandMediaInsightsConfiguration(tfList []any) *awstypes.MediaInsightsConfiguration {
	if len(tfList) == 0 {
		return nil
	}
	tfMap := tfList[0].(map[string]any)

	mediaInsightsConfiguration := &awstypes.MediaInsightsConfiguration{}
	if v, ok := tfMap["disabled"]; ok {
		mediaInsightsConfiguration.Disabled = aws.Bool(v.(bool))
	}
	if v, ok := tfMap["configuration_arn"]; ok {
		mediaInsightsConfiguration.ConfigurationArn = aws.String(v.(string))
	}
	return mediaInsightsConfiguration
}
