package github.com/hashicorp/terraform-provider-aws/internal/service/connect
import (
	"context"

	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/sdkv2"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func dataSourceUserHierarchyStructure() *schema.Resource {
	return &schema.Resource{
		ReadWithoutTimeout: dataSourceUserHierarchyStructureRead,

		SchemaFunc: func() map[string]*schema.Schema {
			return map[string]*schema.Schema{
				"hierarchy_structure": {
					Type:     schema.TypeList,
					Computed: true,
					Elem: &schema.Resource{
						Schema: map[string]*schema.Schema{
							"level_one":   sdkv2.ComputedOnlyFromSchema(hierarchyStructureLevelSchema()),
							"level_two":   sdkv2.ComputedOnlyFromSchema(hierarchyStructureLevelSchema()),
							"level_three": sdkv2.ComputedOnlyFromSchema(hierarchyStructureLevelSchema()),
							"level_four":  sdkv2.ComputedOnlyFromSchema(hierarchyStructureLevelSchema()),
							"level_five":  sdkv2.ComputedOnlyFromSchema(hierarchyStructureLevelSchema()),
						},
					},
				},
				names.AttrInstanceID: {
					Type:         schema.TypeString,
					Required:     true,
					ValidateFunc: validation.StringLenBetween(1, 100),
				},
			}
		},
	}
}
