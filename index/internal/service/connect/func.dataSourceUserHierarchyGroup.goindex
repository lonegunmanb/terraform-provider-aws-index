package github.com/hashicorp/terraform-provider-aws/internal/service/connect
import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/connect"
	awstypes "github.com/aws/aws-sdk-go-v2/service/connect/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func dataSourceUserHierarchyGroup() *schema.Resource {
	return &schema.Resource{
		ReadWithoutTimeout: dataSourceUserHierarchyGroupRead,

		SchemaFunc: func() map[string]*schema.Schema {
			return map[string]*schema.Schema{
				names.AttrARN: {
					Type:     schema.TypeString,
					Computed: true,
				},
				"hierarchy_group_id": {
					Type:         schema.TypeString,
					Optional:     true,
					Computed:     true,
					ExactlyOneOf: []string{"hierarchy_group_id", names.AttrName},
				},
				"hierarchy_path": {
					Type:     schema.TypeList,
					Computed: true,
					Elem: &schema.Resource{
						Schema: map[string]*schema.Schema{
							"level_one":   hierarchyPathLevelSchema(),
							"level_two":   hierarchyPathLevelSchema(),
							"level_three": hierarchyPathLevelSchema(),
							"level_four":  hierarchyPathLevelSchema(),
							"level_five":  hierarchyPathLevelSchema(),
						},
					},
				},
				names.AttrInstanceID: {
					Type:         schema.TypeString,
					Required:     true,
					ValidateFunc: validation.StringLenBetween(1, 100),
				},
				"level_id": {
					Type:     schema.TypeString,
					Computed: true,
				},
				names.AttrName: {
					Type:         schema.TypeString,
					Optional:     true,
					Computed:     true,
					ExactlyOneOf: []string{names.AttrName, "hierarchy_group_id"},
				},
				// parent_group_id is not returned by DescribeUserHierarchyGroup
				// "parent_group_id": {
				// 	Type:     schema.TypeString,
				// 	Computed: true,
				// },
				names.AttrTags: tftags.TagsSchemaComputed(),
			}
		},
	}
}
