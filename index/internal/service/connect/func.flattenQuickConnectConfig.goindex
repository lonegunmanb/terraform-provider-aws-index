package github.com/hashicorp/terraform-provider-aws/internal/service/connect
import (
	"context"
	"fmt"
	"log"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/connect"
	awstypes "github.com/aws/aws-sdk-go-v2/service/connect/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenQuickConnectConfig(apiObject *awstypes.QuickConnectConfig) []any {
	if apiObject == nil {
		return []any{}
	}

	quickConnectType := apiObject.QuickConnectType
	tfMap := map[string]any{
		"quick_connect_type": quickConnectType,
	}

	switch quickConnectType {
	case awstypes.QuickConnectTypePhoneNumber:
		tfMap["phone_config"] = []any{map[string]any{
			"phone_number": aws.ToString(apiObject.PhoneConfig.PhoneNumber),
		}}

	case awstypes.QuickConnectTypeQueue:
		tfMap["queue_config"] = []any{map[string]any{
			"contact_flow_id": aws.ToString(apiObject.QueueConfig.ContactFlowId),
			"queue_id":        aws.ToString(apiObject.QueueConfig.QueueId),
		}}

	case awstypes.QuickConnectTypeUser:
		tfMap["user_config"] = []any{map[string]any{
			"contact_flow_id": aws.ToString(apiObject.UserConfig.ContactFlowId),
			"user_id":         aws.ToString(apiObject.UserConfig.UserId),
		}}

	default:
		log.Printf("[ERR] quick_connect_type is invalid")
		return nil
	}

	return []any{tfMap}
}
