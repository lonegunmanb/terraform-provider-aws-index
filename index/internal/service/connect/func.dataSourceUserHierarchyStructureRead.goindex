package github.com/hashicorp/terraform-provider-aws/internal/service/connect
import (
	"context"

	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/sdkv2"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func dataSourceUserHierarchyStructureRead(ctx context.Context, d *schema.ResourceData, meta any) diag.Diagnostics {
	var diags diag.Diagnostics
	conn := meta.(*conns.AWSClient).ConnectClient(ctx)

	instanceID := d.Get(names.AttrInstanceID).(string)
	hierarchyStructure, err := findUserHierarchyStructureByID(ctx, conn, instanceID)

	if err != nil {
		return sdkdiag.AppendErrorf(diags, "reading Connect User Hierarchy Structure (%s): %s", instanceID, err)
	}

	d.SetId(instanceID)
	if err := d.Set("hierarchy_structure", flattenHierarchyStructure(hierarchyStructure)); err != nil {
		return sdkdiag.AppendErrorf(diags, "setting hierarchy_structure: %s", err)
	}

	return diags
}
