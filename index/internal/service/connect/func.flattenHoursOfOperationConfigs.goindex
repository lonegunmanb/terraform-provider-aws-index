package github.com/hashicorp/terraform-provider-aws/internal/service/connect
import (
	"context"
	"fmt"
	"log"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/connect"
	awstypes "github.com/aws/aws-sdk-go-v2/service/connect/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenHoursOfOperationConfigs(apiObjects []awstypes.HoursOfOperationConfig) []any {
	tfList := []any{}

	for _, apiObject := range apiObjects {
		tfMap := map[string]any{
			"day": apiObject.Day,
		}

		if v := apiObject.EndTime; v != nil {
			tfMap["end_time"] = []any{map[string]any{
				"hours":   aws.ToInt32(v.Hours),
				"minutes": aws.ToInt32(v.Minutes),
			}}
		}

		if v := apiObject.StartTime; v != nil {
			tfMap[names.AttrStartTime] = []any{map[string]any{
				"hours":   aws.ToInt32(v.Hours),
				"minutes": aws.ToInt32(v.Minutes),
			}}
		}

		tfList = append(tfList, tfMap)
	}

	return tfList
}
