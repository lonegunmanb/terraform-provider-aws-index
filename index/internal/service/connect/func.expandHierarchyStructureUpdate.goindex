package github.com/hashicorp/terraform-provider-aws/internal/service/connect
import (
	"context"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/connect"
	awstypes "github.com/aws/aws-sdk-go-v2/service/connect/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandHierarchyStructureUpdate(tfList []any) *awstypes.HierarchyStructureUpdate {
	if len(tfList) == 0 {
		return &awstypes.HierarchyStructureUpdate{}
	}

	tfMap, ok := tfList[0].(map[string]any)
	if !ok {
		return nil
	}

	apiObject := &awstypes.HierarchyStructureUpdate{
		LevelOne:   expandHierarchyLevelUpdate(tfMap["level_one"].([]any)),
		LevelTwo:   expandHierarchyLevelUpdate(tfMap["level_two"].([]any)),
		LevelThree: expandHierarchyLevelUpdate(tfMap["level_three"].([]any)),
		LevelFour:  expandHierarchyLevelUpdate(tfMap["level_four"].([]any)),
		LevelFive:  expandHierarchyLevelUpdate(tfMap["level_five"].([]any)),
	}

	return apiObject
}
