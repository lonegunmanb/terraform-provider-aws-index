package github.com/hashicorp/terraform-provider-aws/internal/service/connect
import (
	"context"

	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func dataSourceLambdaFunctionAssociationRead(ctx context.Context, d *schema.ResourceData, meta any) diag.Diagnostics {
	var diags diag.Diagnostics
	conn := meta.(*conns.AWSClient).ConnectClient(ctx)

	functionARN := d.Get(names.AttrFunctionARN).(string)
	instanceID := d.Get(names.AttrInstanceID).(string)
	_, err := findLambdaFunctionAssociationByTwoPartKey(ctx, conn, instanceID, functionARN)

	if err != nil {
		return sdkdiag.AppendErrorf(diags, "reading Connect Lambda Function Association: %s", err)
	}

	d.SetId(meta.(*conns.AWSClient).Region(ctx))
	d.Set(names.AttrFunctionARN, functionARN)
	d.Set(names.AttrInstanceID, instanceID)

	return diags
}
