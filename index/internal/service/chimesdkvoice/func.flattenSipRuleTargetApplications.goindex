package github.com/hashicorp/terraform-provider-aws/internal/service/chimesdkvoice
import (
	"context"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/chimesdkvoice"
	awstypes "github.com/aws/aws-sdk-go-v2/service/chimesdkvoice/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenSipRuleTargetApplications(apiObject []awstypes.SipRuleTargetApplication) []any {
	var rawSipRuleTargetApplications []any

	for _, e := range apiObject {
		rawTargetApplication := map[string]any{
			"sip_media_application_id": aws.ToString(e.SipMediaApplicationId),
			names.AttrPriority:         e.Priority,
			"aws_region":               aws.ToString(e.AwsRegion),
		}

		rawSipRuleTargetApplications = append(rawSipRuleTargetApplications, rawTargetApplication)
	}
	return rawSipRuleTargetApplications
}
