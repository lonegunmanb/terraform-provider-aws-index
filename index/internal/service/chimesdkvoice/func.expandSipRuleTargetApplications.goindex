package github.com/hashicorp/terraform-provider-aws/internal/service/chimesdkvoice
import (
	"context"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/chimesdkvoice"
	awstypes "github.com/aws/aws-sdk-go-v2/service/chimesdkvoice/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandSipRuleTargetApplications(data []any) []awstypes.SipRuleTargetApplication {
	var targetApplications []awstypes.SipRuleTargetApplication

	for _, rItem := range data {
		item := rItem.(map[string]any)
		application := awstypes.SipRuleTargetApplication{
			SipMediaApplicationId: aws.String(item["sip_media_application_id"].(string)),
			Priority:              aws.Int32(int32(item[names.AttrPriority].(int))),
			AwsRegion:             aws.String(item["aws_region"].(string)),
		}

		targetApplications = append(targetApplications, application)
	}

	return targetApplications
}
