package github.com/hashicorp/terraform-provider-aws/internal/service/chimesdkvoice
import (
	"context"
	"errors"
	"log"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/chimesdkvoice"
	awstypes "github.com/aws/aws-sdk-go-v2/service/chimesdkvoice/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func resourceVoiceProfileDomainUpdate(ctx context.Context, d *schema.ResourceData, meta any) diag.Diagnostics {
	var diags diag.Diagnostics

	conn := meta.(*conns.AWSClient).ChimeSDKVoiceClient(ctx)

	if d.HasChanges(names.AttrName, names.AttrDescription) {
		in := &chimesdkvoice.UpdateVoiceProfileDomainInput{
			VoiceProfileDomainId: aws.String(d.Id()),
			Name:                 aws.String(d.Get(names.AttrName).(string)),
		}

		if v, ok := d.GetOk(names.AttrDescription); ok {
			in.Description = aws.String(v.(string))
		}

		_, err := conn.UpdateVoiceProfileDomain(ctx, in)
		if err != nil {
			return create.AppendDiagError(diags, names.ChimeSDKMediaPipelines, create.ErrActionUpdating, ResNameVoiceProfileDomain, d.Id(), err)
		}

		return append(diags, resourceVoiceProfileDomainRead(ctx, d, meta)...)
	}

	return diags
}
