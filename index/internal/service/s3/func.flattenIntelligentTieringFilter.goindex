package github.com/hashicorp/terraform-provider-aws/internal/service/s3
import (
	"context"
	"fmt"
	"log"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/s3"
	"github.com/aws/aws-sdk-go-v2/service/s3/types"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenIntelligentTieringFilter(ctx context.Context, apiObject *types.IntelligentTieringFilter) map[string]any {
	if apiObject == nil {
		return nil
	}

	tfMap := map[string]any{}

	if apiObject.And == nil {
		if v := apiObject.Prefix; v != nil {
			tfMap[names.AttrPrefix] = aws.ToString(v)
		}

		if v := apiObject.Tag; v != nil {
			tfMap[names.AttrTags] = keyValueTags(ctx, []types.Tag{*v}).Map()
		}
	} else {
		apiObject := apiObject.And

		if v := apiObject.Prefix; v != nil {
			tfMap[names.AttrPrefix] = aws.ToString(v)
		}

		if v := apiObject.Tags; v != nil {
			tfMap[names.AttrTags] = keyValueTags(ctx, v).Map()
		}
	}

	return tfMap
}
