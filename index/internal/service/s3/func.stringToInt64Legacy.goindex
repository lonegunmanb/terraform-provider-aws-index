package github.com/hashicorp/terraform-provider-aws/internal/service/s3
import (
	"context"
	"fmt"
	"strconv"

	awstypes "github.com/aws/aws-sdk-go-v2/service/s3/types"
	"github.com/hashicorp/terraform-plugin-framework-timeouts/resource/timeouts"
	"github.com/hashicorp/terraform-plugin-framework-timetypes/timetypes"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/int64default"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwflex "github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func stringToInt64Legacy(_ context.Context, s types.String, diags *diag.Diagnostics) types.Int64 {
	if s.ValueString() == "" {
		return types.Int64Null()
	}

	v, err := strconv.ParseInt(s.ValueString(), 10, 64)
	if err != nil {
		diags.AddError(
			"Conversion Error",
			fmt.Sprintf("When upgrading state, failed to read a string as an integer value.\n"+
				"Value: %q\nError: %s",
				s.ValueString(),
				err.Error(),
			),
		)
		return types.Int64Unknown()
	}
	return types.Int64Value(v)
}
