package github.com/hashicorp/terraform-provider-aws/internal/service/s3
import (
	"context"
	"fmt"
	"strings"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/s3"
	"github.com/aws/aws-sdk-go-v2/service/s3/types"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep/awsv2"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep/framework"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep/sdk"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (os objectSweeper) Delete(ctx context.Context, optFns ...tfresource.OptionsFunc) error {
	// Delete everything including locked objects.
	tflog.Info(ctx, "Emptying S3 General Purpose Bucket")
	n, err := emptyBucket(ctx, os.conn, os.bucket, os.locked)
	if err != nil {
		return fmt.Errorf("deleting S3 Bucket (%s) objects: %w", os.bucket, err)
	}
	tflog.Info(ctx, "Deleted Objects from S3 General Purpose Bucket", map[string]any{
		"object_count": n,
	})
	return nil
}
