package github.com/hashicorp/terraform-provider-aws/internal/service/s3
import (
	"context"
	"fmt"
	"log"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/s3"
	"github.com/aws/aws-sdk-go-v2/service/s3/types"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandStorageClassAnalysis(l []any) *types.StorageClassAnalysis {
	result := &types.StorageClassAnalysis{}

	if len(l) == 0 || l[0] == nil {
		return result
	}

	m := l[0].(map[string]any)
	if v, ok := m["data_export"]; ok {
		dataExport := &types.StorageClassAnalysisDataExport{}
		result.DataExport = dataExport

		foo := v.([]any)
		if len(foo) != 0 && foo[0] != nil {
			bar := foo[0].(map[string]any)
			if v, ok := bar["output_schema_version"]; ok {
				dataExport.OutputSchemaVersion = types.StorageClassAnalysisSchemaVersion(v.(string))
			}

			dataExport.Destination = expandAnalyticsExportDestination(bar[names.AttrDestination].([]any))
		}
	}

	return result
}
