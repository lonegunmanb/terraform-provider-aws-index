package github.com/hashicorp/terraform-provider-aws/internal/service/s3
import (
	"context"
	"encoding/json"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/s3"
	"github.com/aws/aws-sdk-go-v2/service/s3/types"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/structure"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func removeNilOrEmptyProtocol(data map[string]any) map[string]any {
	withoutNil := make(map[string]any)

	for k, v := range data {
		if v == nil {
			continue
		}

		switch v := v.(type) {
		case map[string]any:
			withoutNil[k] = removeNilOrEmptyProtocol(v)
		case string:
			// With AWS SDK for Go v2 Protocol changed type from *string to types.Protocol.
			// An empty ("") value is equivalent to nil.
			if k == "Protocol" && v == "" {
				continue
			}
			withoutNil[k] = v
		default:
			withoutNil[k] = v
		}
	}

	return withoutNil
}
