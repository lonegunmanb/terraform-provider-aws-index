package github.com/hashicorp/terraform-provider-aws/internal/service/s3
import (
	"context"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/s3"
	"github.com/aws/aws-sdk-go-v2/service/s3/types"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandReplicationRuleFilter(ctx context.Context, tfList []any) *types.ReplicationRuleFilter {
	if len(tfList) == 0 || tfList[0] == nil {
		return &types.ReplicationRuleFilter{}
	}

	tfMap := tfList[0].(map[string]any)
	var apiObject *types.ReplicationRuleFilter

	if v, ok := tfMap["and"].([]any); ok && len(v) > 0 && v[0] != nil {
		apiObject = &types.ReplicationRuleFilter{
			And: expandReplicationRuleAndOperator(ctx, v),
		}
	}

	if v, ok := tfMap["tag"].([]any); ok && len(v) > 0 && v[0] != nil {
		apiObject = &types.ReplicationRuleFilter{
			Tag: expandTag(v[0].(map[string]any)),
		}
	}

	// Per AWS S3 API, "A Filter must have exactly one of Prefix, Tag, or And specified";
	// Specifying more than one of the listed parameters results in a MalformedXML error.
	// If a filter is specified as filter { prefix = "" } in Terraform, we should send the prefix value
	// in the API request even if it is an empty value, else Terraform will report non-empty plans.
	// Reference: https://github.com/hashicorp/terraform-provider-aws/issues/23487
	if v, ok := tfMap[names.AttrPrefix].(string); ok && apiObject == nil {
		apiObject = &types.ReplicationRuleFilter{
			Prefix: aws.String(v),
		}
	}

	return apiObject
}
