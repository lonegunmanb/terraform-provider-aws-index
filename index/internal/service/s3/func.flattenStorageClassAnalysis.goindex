package github.com/hashicorp/terraform-provider-aws/internal/service/s3
import (
	"context"
	"fmt"
	"log"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/s3"
	"github.com/aws/aws-sdk-go-v2/service/s3/types"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenStorageClassAnalysis(storageClassAnalysis *types.StorageClassAnalysis) []map[string]any {
	if storageClassAnalysis == nil || storageClassAnalysis.DataExport == nil {
		return []map[string]any{}
	}

	dataExport := storageClassAnalysis.DataExport
	de := map[string]any{
		"output_schema_version": dataExport.OutputSchemaVersion,
	}
	if dataExport.Destination != nil {
		de[names.AttrDestination] = flattenAnalyticsExportDestination(dataExport.Destination)
	}
	result := map[string]any{
		"data_export": []any{de},
	}

	return []map[string]any{result}
}
