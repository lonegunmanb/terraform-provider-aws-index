package github.com/hashicorp/terraform-provider-aws/internal/service/s3
import (
	"fmt"
	"strings"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws/arn"
)
func parseObjectARN(s string) (objectARN, error) {
	arn, err := arn.Parse(s)
	if err != nil {
		return objectARN{}, err
	}

	result := objectARN{
		ARN: arn,
	}

	if strings.HasPrefix(arn.Resource, "accesspoint/") {
		re := regexache.MustCompile(`^(arn:[^:]+:[^:]+:[^:]*:[^:]*:accesspoint/[^/]+)/(.+)$`)
		m := re.FindStringSubmatch(s)
		if len(m) == 3 {
			result.Bucket = m[1]
			result.Key = m[2]
			return result, nil
		}
	}

	parts := strings.SplitN(arn.Resource, "/", 2)
	if len(parts) != 2 {
		return objectARN{}, fmt.Errorf("S3 Object ARN: unexpected resource section: %s", arn.Resource)
	}
	result.Bucket = parts[0]
	result.Key = parts[1]

	return result, nil
}
