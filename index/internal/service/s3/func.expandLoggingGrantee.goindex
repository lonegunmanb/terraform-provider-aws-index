package github.com/hashicorp/terraform-provider-aws/internal/service/s3
import (
	"context"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/s3"
	"github.com/aws/aws-sdk-go-v2/service/s3/types"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandLoggingGrantee(l []any) *types.Grantee {
	if len(l) == 0 || l[0] == nil {
		return nil
	}

	tfMap, ok := l[0].(map[string]any)
	if !ok {
		return nil
	}

	grantee := &types.Grantee{}

	if v, ok := tfMap[names.AttrDisplayName].(string); ok && v != "" {
		grantee.DisplayName = aws.String(v)
	}

	if v, ok := tfMap["email_address"].(string); ok && v != "" {
		grantee.EmailAddress = aws.String(v)
	}

	if v, ok := tfMap[names.AttrID].(string); ok && v != "" {
		grantee.ID = aws.String(v)
	}

	if v, ok := tfMap[names.AttrType].(string); ok && v != "" {
		grantee.Type = types.Type(v)
	}

	if v, ok := tfMap[names.AttrURI].(string); ok && v != "" {
		grantee.URI = aws.String(v)
	}

	return grantee
}
