package github.com/hashicorp/terraform-provider-aws/internal/service/emrserverless
import (
	"context"
	"errors"
	"log"
	"strings"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/emrserverless"
	"github.com/aws/aws-sdk-go-v2/service/emrserverless/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/retry"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandCloudWatchLoggingConfiguration(tfMap map[string]any) *types.CloudWatchLoggingConfiguration {
	if tfMap == nil {
		return nil
	}

	apiObject := &types.CloudWatchLoggingConfiguration{}

	if v, ok := tfMap[names.AttrEnabled].(bool); ok {
		apiObject.Enabled = aws.Bool(v)
	}

	if v, ok := tfMap[names.AttrLogGroupName].(string); ok && v != "" {
		apiObject.LogGroupName = aws.String(v)
	}

	if v, ok := tfMap["log_stream_name_prefix"].(string); ok && v != "" {
		apiObject.LogStreamNamePrefix = aws.String(v)
	}

	if v, ok := tfMap["encryption_key_arn"].(string); ok && v != "" {
		apiObject.EncryptionKeyArn = aws.String(v)
	}

	if v, ok := tfMap["log_types"].(*schema.Set); ok && v.Len() > 0 {
		apiObject.LogTypes = expandLogTypes(v.List())
	}

	return apiObject
}
