package github.com/hashicorp/terraform-provider-aws/internal/service/emrserverless
import (
	"context"
	"errors"
	"log"
	"strings"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/emrserverless"
	"github.com/aws/aws-sdk-go-v2/service/emrserverless/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/retry"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandMonitoringConfiguration(tfMap map[string]any) *types.MonitoringConfiguration {
	if tfMap == nil {
		return nil
	}

	apiObject := &types.MonitoringConfiguration{}

	if v, ok := tfMap["cloudwatch_logging_configuration"].([]any); ok && len(v) > 0 {
		apiObject.CloudWatchLoggingConfiguration = expandCloudWatchLoggingConfiguration(v[0].(map[string]any))
	}

	if v, ok := tfMap["s3_monitoring_configuration"].([]any); ok && len(v) > 0 {
		apiObject.S3MonitoringConfiguration = expandS3MonitoringConfiguration(v[0].(map[string]any))
	}

	if v, ok := tfMap["managed_persistence_monitoring_configuration"].([]any); ok && len(v) > 0 {
		apiObject.ManagedPersistenceMonitoringConfiguration = expandManagedPersistenceMonitoringConfiguration(v[0].(map[string]any))
	}

	if v, ok := tfMap["prometheus_monitoring_configuration"].([]any); ok && len(v) > 0 {
		apiObject.PrometheusMonitoringConfiguration = expandPrometheusMonitoringConfiguration(v[0].(map[string]any))
	}

	return apiObject
}
