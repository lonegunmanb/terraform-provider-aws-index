package github.com/hashicorp/terraform-provider-aws/internal/service/route53recoveryreadiness
import (
	"context"
	"fmt"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/route53recoveryreadiness"
	awstypes "github.com/aws/aws-sdk-go-v2/service/route53recoveryreadiness/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandResourceSetTargetResource(trs []any) *awstypes.TargetResource {
	if len(trs) == 0 {
		return nil
	}
	tresource := &awstypes.TargetResource{}
	for _, tr := range trs {
		if tr == nil {
			return nil
		}
		tr := tr.(map[string]any)
		if v, ok := tr["nlb_resource"]; ok && len(v.([]any)) > 0 {
			tresource.NLBResource = expandResourceSetNLBResource(v.([]any))
		}
		if v, ok := tr["r53_resource"]; ok && len(v.([]any)) > 0 {
			tresource.R53Resource = expandResourceSetR53ResourceRecord(v.([]any))
		}
	}
	return tresource
}
