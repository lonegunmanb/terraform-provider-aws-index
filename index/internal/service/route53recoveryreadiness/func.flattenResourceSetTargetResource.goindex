package github.com/hashicorp/terraform-provider-aws/internal/service/route53recoveryreadiness
import (
	"context"
	"fmt"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/route53recoveryreadiness"
	awstypes "github.com/aws/aws-sdk-go-v2/service/route53recoveryreadiness/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenResourceSetTargetResource(tresource *awstypes.TargetResource) []map[string]any {
	if tresource == nil {
		return nil
	}

	tr := make(map[string]any)
	tr["nlb_resource"] = flattenResourceSetNLBResource(tresource.NLBResource)
	tr["r53_resource"] = flattenResourceSetR53ResourceRecord(tresource.R53Resource)
	result := []map[string]any{tr}
	return result
}
