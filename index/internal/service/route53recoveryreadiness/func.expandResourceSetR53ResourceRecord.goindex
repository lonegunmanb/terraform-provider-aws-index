package github.com/hashicorp/terraform-provider-aws/internal/service/route53recoveryreadiness
import (
	"context"
	"fmt"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/route53recoveryreadiness"
	awstypes "github.com/aws/aws-sdk-go-v2/service/route53recoveryreadiness/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandResourceSetR53ResourceRecord(r53rs []any) *awstypes.R53ResourceRecord {
	r53resource := &awstypes.R53ResourceRecord{}
	for _, r53r := range r53rs {
		r53r := r53r.(map[string]any)
		if v, ok := r53r[names.AttrDomainName]; ok && v.(string) != "" {
			r53resource.DomainName = aws.String(v.(string))
		}
		if v, ok := r53r["record_set_id"]; ok {
			r53resource.RecordSetId = aws.String(v.(string))
		}
	}
	return r53resource
}
