package github.com/hashicorp/terraform-provider-aws/internal/service/opensearch
import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/opensearch"
	awstypes "github.com/aws/aws-sdk-go-v2/service/opensearch/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
)
func domainConfigStatus(ctx context.Context, conn *opensearch.Client, name string) retry.StateRefreshFunc {
	return func() (any, string, error) {
		out, err := conn.DescribeDomainConfig(ctx, &opensearch.DescribeDomainConfigInput{
			DomainName: aws.String(name),
		})

		if errs.IsA[*awstypes.ResourceNotFoundException](err) {
			// if first return value is nil, WaitForState treats as not found - here not found is treated differently
			return "not nil", configStatusNotFound, nil
		}

		if err != nil {
			return nil, configStatusUnknown, err
		}

		return out, configStatusExists, nil
	}
}
