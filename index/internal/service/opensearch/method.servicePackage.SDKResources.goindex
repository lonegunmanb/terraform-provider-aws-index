package github.com/hashicorp/terraform-provider-aws/internal/service/opensearch
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/service/opensearch"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) SDKResources(ctx context.Context) []*inttypes.ServicePackageSDKResource {
	return []*inttypes.ServicePackageSDKResource{
		{
			Factory:  resourceDomain,
			TypeName: "aws_opensearch_domain",
			Name:     "Domain",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrID,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceDomainPolicy,
			TypeName: "aws_opensearch_domain_policy",
			Name:     "Domain Policy",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceDomainSAMLOptions,
			TypeName: "aws_opensearch_domain_saml_options",
			Name:     "Domain SAML Options",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceInboundConnectionAccepter,
			TypeName: "aws_opensearch_inbound_connection_accepter",
			Name:     "Inbound Connection Accepter",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceOutboundConnection,
			TypeName: "aws_opensearch_outbound_connection",
			Name:     "Outbound Connection",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourcePackage,
			TypeName: "aws_opensearch_package",
			Name:     "Package",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourcePackageAssociation,
			TypeName: "aws_opensearch_package_association",
			Name:     "Package Association",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceVPCEndpoint,
			TypeName: "aws_opensearch_vpc_endpoint",
			Name:     "VPC Endpoint",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
	}
}
