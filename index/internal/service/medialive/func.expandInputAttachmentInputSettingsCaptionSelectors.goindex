package github.com/hashicorp/terraform-provider-aws/internal/service/medialive
import (
	"context"
	"errors"
	"fmt"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/medialive"
	"github.com/aws/aws-sdk-go-v2/service/medialive/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandInputAttachmentInputSettingsCaptionSelectors(tfList []any) []types.CaptionSelector {
	if len(tfList) == 0 {
		return nil
	}

	var out []types.CaptionSelector
	for _, v := range tfList {
		m, ok := v.(map[string]any)
		if !ok {
			continue
		}

		var o types.CaptionSelector
		if v, ok := m[names.AttrName].(string); ok && v != "" {
			o.Name = aws.String(v)
		}
		if v, ok := m[names.AttrLanguageCode].(string); ok && v != "" {
			o.LanguageCode = aws.String(v)
		}
		if v, ok := m["selector_settings"].([]any); ok && len(v) > 0 {
			o.SelectorSettings = expandInputAttachmentInputSettingsCaptionSelectorsSelectorSettings(v)
		}

		out = append(out, o)
	}

	return out
}
