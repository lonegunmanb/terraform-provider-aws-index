package github.com/hashicorp/terraform-provider-aws/internal/service/medialive
import (
	"context"
	"errors"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/medialive"
	"github.com/aws/aws-sdk-go-v2/service/medialive/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandMultiplexSettings(tfList []any) *types.MultiplexSettings {
	if len(tfList) == 0 {
		return nil
	}

	m := tfList[0].(map[string]any)

	s := types.MultiplexSettings{}

	if v, ok := m["transport_stream_bitrate"]; ok {
		s.TransportStreamBitrate = aws.Int32(int32(v.(int)))
	}
	if v, ok := m["transport_stream_id"]; ok {
		s.TransportStreamId = aws.Int32(int32(v.(int)))
	}
	if val, ok := m["maximum_video_buffer_delay_milliseconds"]; ok {
		s.MaximumVideoBufferDelayMilliseconds = aws.Int32(int32(val.(int)))
	}
	if val, ok := m["transport_stream_reserved_bitrate"]; ok {
		s.TransportStreamReservedBitrate = aws.Int32(int32(val.(int)))
	}

	return &s
}
