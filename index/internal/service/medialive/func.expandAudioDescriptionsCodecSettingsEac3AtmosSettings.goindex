package github.com/hashicorp/terraform-provider-aws/internal/service/medialive
import (
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/medialive/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandAudioDescriptionsCodecSettingsEac3AtmosSettings(tfList []any) *types.Eac3AtmosSettings {
	if len(tfList) == 0 {
		return nil
	}

	m := tfList[0].(map[string]any)

	var out types.Eac3AtmosSettings
	if v, ok := m["bitrate"].(float32); ok && v != 0.0 {
		out.Bitrate = aws.Float64(float64(v))
	}
	if v, ok := m["coding_mode"].(string); ok && v != "" {
		out.CodingMode = types.Eac3AtmosCodingMode(v)
	}
	if v, ok := m["dialnorm"].(int); ok && v != 0 {
		out.Dialnorm = aws.Int32(int32(v))
	}
	if v, ok := m["drc_line"].(string); ok && v != "" {
		out.DrcLine = types.Eac3AtmosDrcLine(v)
	}
	if v, ok := m["drc_rf"].(string); ok && v != "" {
		out.DrcRf = types.Eac3AtmosDrcRf(v)
	}
	if v, ok := m["height_trim"].(float32); ok && v != 0.0 {
		out.HeightTrim = aws.Float64(float64(v))
	}
	if v, ok := m["surround_trim"].(float32); ok && v != 0.0 {
		out.SurroundTrim = aws.Float64(float64(v))
	}

	return &out
}
