package github.com/hashicorp/terraform-provider-aws/internal/service/medialive
import (
	"context"
	"errors"
	"fmt"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/medialive"
	"github.com/aws/aws-sdk-go-v2/service/medialive/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandNetworkInputSettingsHLSInputSettings(tfList []any) *types.HlsInputSettings {
	if tfList == nil {
		return nil
	}

	m := tfList[0].(map[string]any)

	var out types.HlsInputSettings
	if v, ok := m["bandwidth"].(int); ok && v != 0 {
		out.Bandwidth = aws.Int32(int32(v))
	}
	if v, ok := m["buffer_segments"].(int); ok && v != 0 {
		out.BufferSegments = aws.Int32(int32(v))
	}
	if v, ok := m["retries"].(int); ok && v != 0 {
		out.Retries = aws.Int32(int32(v))
	}
	if v, ok := m["retry_interval"].(int); ok && v != 0 {
		out.RetryInterval = aws.Int32(int32(v))
	}
	if v, ok := m["scte35_source"].(string); ok && v != "" {
		out.Scte35Source = types.HlsScte35SourceType(v)
	}

	return &out
}
