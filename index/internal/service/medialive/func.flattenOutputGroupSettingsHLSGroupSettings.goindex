package github.com/hashicorp/terraform-provider-aws/internal/service/medialive
import (
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/medialive/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenOutputGroupSettingsHLSGroupSettings(in *types.HlsGroupSettings) []any {
	if in == nil {
		return nil
	}

	m := map[string]any{
		names.AttrDestination:          flattenDestination(in.Destination),
		"ad_markers":                   flattenHLSAdMarkers(in.AdMarkers),
		"base_url_content":             aws.ToString(in.BaseUrlContent),
		"base_url_content1":            aws.ToString(in.BaseUrlContent1),
		"base_url_manifest":            aws.ToString(in.BaseUrlManifest),
		"base_url_manifest1":           aws.ToString(in.BaseUrlManifest1),
		"caption_language_mappings":    flattenHLSCaptionLanguageMappings(in.CaptionLanguageMappings),
		"caption_language_setting":     string(in.CaptionLanguageSetting),
		"client_cache":                 string(in.ClientCache),
		"codec_specification":          string(in.CodecSpecification),
		"constant_iv":                  aws.ToString(in.ConstantIv),
		"directory_structure":          string(in.DirectoryStructure),
		"discontinuity_tags":           string(in.DiscontinuityTags),
		"encryption_type":              string(in.EncryptionType),
		"hls_cdn_settings":             flattenHLSCDNSettings(in.HlsCdnSettings),
		"hls_id3_segment_tagging":      string(in.HlsId3SegmentTagging),
		"iframe_only_playlists":        string(in.IFrameOnlyPlaylists),
		"incomplete_segment_behavior":  string(in.IncompleteSegmentBehavior),
		"index_n_segments":             int(aws.ToInt32(in.IndexNSegments)),
		"input_loss_action":            string(in.InputLossAction),
		"iv_in_manifest":               string(in.IvInManifest),
		"iv_source":                    string(in.IvSource),
		"keep_segments":                int(aws.ToInt32(in.KeepSegments)),
		"key_format":                   aws.ToString(in.KeyFormat),
		"key_format_versions":          aws.ToString(in.KeyFormatVersions),
		"key_provider_settings":        flattenHLSKeyProviderSettings(in.KeyProviderSettings),
		"manifest_compression":         string(in.ManifestCompression),
		"manifest_duration_format":     string(in.ManifestDurationFormat),
		"min_segment_length":           int(aws.ToInt32(in.MinSegmentLength)),
		names.AttrMode:                 string(in.Mode),
		"output_selection":             string(in.OutputSelection),
		"program_date_time":            string(in.ProgramDateTime),
		"program_date_time_clock":      string(in.ProgramDateTimeClock),
		"program_date_time_period":     int(aws.ToInt32(in.ProgramDateTimePeriod)),
		"redundant_manifest":           string(in.RedundantManifest),
		"segment_length":               int(aws.ToInt32(in.SegmentLength)),
		"segments_per_subdirectory":    int(aws.ToInt32(in.SegmentsPerSubdirectory)),
		"stream_inf_resolution":        string(in.StreamInfResolution),
		"timed_metadata_id3_frame":     string(in.TimedMetadataId3Frame),
		"timed_metadata_id3_period":    int(aws.ToInt32(in.TimedMetadataId3Period)),
		"timestamp_delta_milliseconds": int(aws.ToInt32(in.TimestampDeltaMilliseconds)),
		"ts_file_mode":                 string(in.TsFileMode),
	}

	return []any{m}
}
