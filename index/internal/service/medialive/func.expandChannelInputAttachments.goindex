package github.com/hashicorp/terraform-provider-aws/internal/service/medialive
import (
	"context"
	"errors"
	"fmt"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/medialive"
	"github.com/aws/aws-sdk-go-v2/service/medialive/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandChannelInputAttachments(tfList []any) []types.InputAttachment {
	var attachments []types.InputAttachment
	for _, v := range tfList {
		m, ok := v.(map[string]any)
		if !ok {
			continue
		}

		var a types.InputAttachment
		if v, ok := m["input_attachment_name"].(string); ok {
			a.InputAttachmentName = aws.String(v)
		}
		if v, ok := m["input_id"].(string); ok {
			a.InputId = aws.String(v)
		}
		if v, ok := m["input_settings"].([]any); ok && len(v) > 0 {
			a.InputSettings = expandInputAttachmentInputSettings(v)
		}
		if v, ok := m["automatic_input_failover_settings"].([]any); ok && len(v) > 0 {
			a.AutomaticInputFailoverSettings = expandInputAttachmentAutomaticInputFailoverSettings(v)
		}

		attachments = append(attachments, a)
	}

	return attachments
}
