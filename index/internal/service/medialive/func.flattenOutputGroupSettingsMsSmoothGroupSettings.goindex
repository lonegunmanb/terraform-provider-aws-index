package github.com/hashicorp/terraform-provider-aws/internal/service/medialive
import (
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/medialive/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenOutputGroupSettingsMsSmoothGroupSettings(in *types.MsSmoothGroupSettings) []any {
	if in == nil {
		return nil
	}

	m := map[string]any{
		names.AttrDestination:         flattenDestination(in.Destination),
		"acquisition_point_id":        aws.ToString(in.AcquisitionPointId),
		"audio_only_timecode_control": string(in.AudioOnlyTimecodeControl),
		"certificate_mode":            string(in.CertificateMode),
		"connection_retry_interval":   int(aws.ToInt32(in.ConnectionRetryInterval)),
		"event_id":                    aws.ToString(in.EventId),
		"event_id_mode":               string(in.EventIdMode),
		"event_stop_behavior":         string(in.EventStopBehavior),
		"filecache_duration":          int(aws.ToInt32(in.FilecacheDuration)),
		"fragment_length":             int(aws.ToInt32(in.FragmentLength)),
		"input_loss_action":           string(in.InputLossAction),
		"num_retries":                 int(aws.ToInt32(in.NumRetries)),
		"restart_delay":               int(aws.ToInt32(in.RestartDelay)),
		"segmentation_mode":           string(in.SegmentationMode),
		"send_delay_ms":               int(aws.ToInt32(in.SendDelayMs)),
		"sparse_track_type":           string(in.SparseTrackType),
		"stream_manifest_behavior":    string(in.StreamManifestBehavior),
		"timestamp_offset":            aws.ToString(in.TimestampOffset),
		"timestamp_offset_mode":       string(in.TimestampOffsetMode),
	}

	return []any{m}
}
