package github.com/hashicorp/terraform-provider-aws/internal/service/medialive
import (
	"context"

	awstypes "github.com/aws/aws-sdk-go-v2/service/medialive/types"
	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwflex "github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (d *inputDataSource) Schema(ctx context.Context, req datasource.SchemaRequest, resp *datasource.SchemaResponse) {
	resp.Schema = schema.Schema{
		Attributes: map[string]schema.Attribute{
			names.AttrARN: framework.ARNAttributeComputedOnly(),
			"attached_channels": schema.ListAttribute{
				CustomType: fwtypes.ListOfStringType,
				Computed:   true,
			},
			"destinations": framework.DataSourceComputedListOfObjectAttribute[dsDestination](ctx),
			names.AttrID: schema.StringAttribute{
				Required: true,
			},
			"input_class": schema.StringAttribute{
				CustomType: fwtypes.StringEnumType[awstypes.InputClass](),
				Computed:   true,
			},
			"input_devices": framework.DataSourceComputedListOfObjectAttribute[dsInputDevice](ctx),
			"input_partner_ids": schema.ListAttribute{
				CustomType: fwtypes.ListOfStringType,
				Computed:   true,
			},
			"input_source_type": schema.StringAttribute{
				CustomType: fwtypes.StringEnumType[awstypes.InputSourceType](),
				Computed:   true,
			},
			"media_connect_flows": framework.DataSourceComputedListOfObjectAttribute[dsMediaConnectFlow](ctx),
			names.AttrName: schema.StringAttribute{
				Computed: true,
			},
			names.AttrRoleARN: schema.StringAttribute{
				Computed: true,
			},
			names.AttrSecurityGroups: schema.ListAttribute{
				CustomType: fwtypes.ListOfStringType,
				Computed:   true,
			},
			"sources": framework.DataSourceComputedListOfObjectAttribute[dsInputSource](ctx),
			names.AttrState: schema.StringAttribute{
				CustomType: fwtypes.StringEnumType[awstypes.InputState](),
				Computed:   true,
			},
			names.AttrTags: tftags.TagsAttributeComputedOnly(),
			names.AttrType: schema.StringAttribute{
				CustomType: fwtypes.StringEnumType[awstypes.InputType](),
				Computed:   true,
			},
		},
	}
}
