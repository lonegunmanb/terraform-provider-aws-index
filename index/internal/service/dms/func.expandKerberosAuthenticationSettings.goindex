package github.com/hashicorp/terraform-provider-aws/internal/service/dms
import (
	"context"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	dms "github.com/aws/aws-sdk-go-v2/service/databasemigrationservice"
	awstypes "github.com/aws/aws-sdk-go-v2/service/databasemigrationservice/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/retry"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandKerberosAuthenticationSettings(tfList []any) *awstypes.KerberosAuthenticationSettings {
	if len(tfList) == 0 {
		return nil
	}

	var apiObject awstypes.KerberosAuthenticationSettings

	for _, tfMapRaw := range tfList {
		tfMap, ok := tfMapRaw.(map[string]any)

		if !ok {
			continue
		}

		if v, ok := tfMap["key_cache_secret_iam_arn"].(string); ok && v != "" {
			apiObject.KeyCacheSecretIamArn = aws.String(v)
		}
		if v, ok := tfMap["key_cache_secret_id"].(string); ok && v != "" {
			apiObject.KeyCacheSecretId = aws.String(v)
		}
		if v, ok := tfMap["krb5_file_contents"].(string); ok && v != "" {
			apiObject.Krb5FileContents = aws.String(v)
		}
	}

	return &apiObject
}
