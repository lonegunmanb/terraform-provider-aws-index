package github.com/hashicorp/terraform-provider-aws/internal/service/docdb
import (
	"fmt"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/docdb/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenParameters(list []awstypes.Parameter, parameterList []any) []map[string]any {
	result := make([]map[string]any, 0, len(list))
	for _, i := range list {
		if i.ParameterValue != nil {
			name := aws.ToString(i.ParameterName)

			// Check if any non-user parameters are specified in the configuration.
			parameterFound := false
			for _, configParameter := range parameterList {
				if configParameter.(map[string]any)[names.AttrName] == name {
					parameterFound = true
				}
			}

			// Skip parameters that are not user defined or specified in the configuration.
			if aws.ToString(i.Source) != "user" && !parameterFound {
				continue
			}

			result = append(result, map[string]any{
				"apply_method":  string(i.ApplyMethod),
				names.AttrName:  aws.ToString(i.ParameterName),
				names.AttrValue: aws.ToString(i.ParameterValue),
			})
		}
	}
	return result
}
