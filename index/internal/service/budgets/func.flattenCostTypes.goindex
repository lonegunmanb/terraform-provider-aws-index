package github.com/hashicorp/terraform-provider-aws/internal/service/budgets
import (
	"context"
	"errors"
	"fmt"
	"log"
	"strconv"
	"strings"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/arn"
	"github.com/aws/aws-sdk-go-v2/service/budgets"
	awstypes "github.com/aws/aws-sdk-go-v2/service/budgets/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
	"github.com/shopspring/decimal"
)
func flattenCostTypes(costTypes *awstypes.CostTypes) []map[string]any {
	if costTypes == nil {
		return []map[string]any{}
	}

	m := map[string]any{
		"include_credit":             aws.ToBool(costTypes.IncludeCredit),
		"include_discount":           aws.ToBool(costTypes.IncludeDiscount),
		"include_other_subscription": aws.ToBool(costTypes.IncludeOtherSubscription),
		"include_recurring":          aws.ToBool(costTypes.IncludeRecurring),
		"include_refund":             aws.ToBool(costTypes.IncludeRefund),
		"include_subscription":       aws.ToBool(costTypes.IncludeSubscription),
		"include_support":            aws.ToBool(costTypes.IncludeSupport),
		"include_tax":                aws.ToBool(costTypes.IncludeTax),
		"include_upfront":            aws.ToBool(costTypes.IncludeUpfront),
		"use_amortized":              aws.ToBool(costTypes.UseAmortized),
		"use_blended":                aws.ToBool(costTypes.UseBlended),
	}
	return []map[string]any{m}
}
