package github.com/hashicorp/terraform-provider-aws/internal/service/dynamodb
import (
	"context"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/dynamodb"
	awstypes "github.com/aws/aws-sdk-go-v2/service/dynamodb/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandIncrementalExportSpecification(d any) *awstypes.IncrementalExportSpecification {
	if d.([]any) == nil || len(d.([]any)) == 0 {
		return nil
	}

	dMap := d.([]any)[0].(map[string]any)

	spec := &awstypes.IncrementalExportSpecification{}

	if s, ok := dMap["export_from_time"].(string); ok && s != "" {
		v, _ := time.Parse(time.RFC3339, s)
		spec.ExportFromTime = aws.Time(v)
	}

	if s, ok := dMap["export_to_time"].(string); ok && s != "" {
		v, _ := time.Parse(time.RFC3339, s)
		spec.ExportToTime = aws.Time(v)
	}

	if v, ok := dMap["export_view_type"].(string); ok && v != "" {
		spec.ExportViewType = awstypes.ExportViewType(v)
	}

	return spec
}
