package github.com/hashicorp/terraform-provider-aws/internal/service/dynamodb
import (
	"context"
	"fmt"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/dynamodb"
	awstypes "github.com/aws/aws-sdk-go-v2/service/dynamodb/types"
	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep/awsv2"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep/sdk"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
)
func sweepTables(region string) error {
	ctx := sweep.Context(region)
	client, err := sweep.SharedRegionalSweepClient(ctx, region)
	if err != nil {
		return fmt.Errorf("getting client: %w", err)
	}
	conn := client.DynamoDBClient(ctx)
	input := &dynamodb.ListTablesInput{}
	sweepResources := make([]sweep.Sweepable, 0)

	pages := dynamodb.NewListTablesPaginator(conn, input)
	for pages.HasMorePages() {
		page, err := pages.NextPage(ctx)

		if awsv2.SkipSweepError(err) {
			log.Printf("[WARN] Skipping DynamoDB Table sweep for %s: %s", region, err)
			return nil
		}

		if err != nil {
			return fmt.Errorf("error listing DynamoDB Tables (%s): %w", region, err)
		}

		for _, v := range page.TableNames {
			input := dynamodb.UpdateTableInput{
				DeletionProtectionEnabled: aws.Bool(false),
				TableName:                 aws.String(v),
			}
			_, err := conn.UpdateTable(ctx, &input)

			if err != nil {
				log.Printf("[WARN] DynamoDB Table (%s): %s", v, err)
			}

			r := resourceTable()
			d := r.Data(nil)
			d.SetId(v)
			// Refresh replicas.
			if err := sdk.ReadResource(ctx, r, d, client); err != nil {
				log.Printf("[WARN] Skipping DynamoDB Table %s: %s", v, err)
				continue
			}
			if d.Id() == "" {
				continue
			}

			sweepResources = append(sweepResources, sweep.NewSweepResource(r, d, client))
		}
	}

	err = sweep.SweepOrchestrator(ctx, sweepResources)

	if err != nil {
		return fmt.Errorf("error sweeping DynamoDB Tables (%s): %w", region, err)
	}

	return nil
}
