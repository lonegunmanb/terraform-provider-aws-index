package github.com/hashicorp/terraform-provider-aws/internal/service/dynamodb
import (
	"context"
	"time"

	"github.com/aws/aws-sdk-go-v2/service/dynamodb"
	awstypes "github.com/aws/aws-sdk-go-v2/service/dynamodb/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
)
func waitTableWarmThroughputActive(ctx context.Context, conn *dynamodb.Client, tableName string, timeout time.Duration) error {
	stateConf := &retry.StateChangeConf{
		Pending: enum.Slice(awstypes.TableStatusCreating, awstypes.TableStatusUpdating),
		Target:  enum.Slice(awstypes.TableStatusActive),
		Refresh: statusTableWarmThroughput(ctx, conn, tableName),
		Timeout: max(createTableTimeout, timeout),
	}

	_, err := stateConf.WaitForStateContext(ctx)

	return err
}
