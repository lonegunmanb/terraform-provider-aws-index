package github.com/hashicorp/terraform-provider-aws/internal/service/dynamodb
import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/dynamodb"
	awstypes "github.com/aws/aws-sdk-go-v2/service/dynamodb/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
)
func findTableByName(ctx context.Context, conn *dynamodb.Client, name string, optFns ...func(*dynamodb.Options)) (*awstypes.TableDescription, error) {
	input := &dynamodb.DescribeTableInput{
		TableName: aws.String(name),
	}

	output, err := conn.DescribeTable(ctx, input, optFns...)

	if errs.IsA[*awstypes.ResourceNotFoundException](err) {
		return nil, &retry.NotFoundError{
			LastError:   err,
			LastRequest: input,
		}
	}

	if err != nil {
		return nil, err
	}

	if output == nil || output.Table == nil {
		return nil, tfresource.NewEmptyResultError(input)
	}

	return output.Table, nil
}
