package github.com/hashicorp/terraform-provider-aws/internal/service/pipes
import (
	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/pipes/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenPipeTargetParameters(apiObject *types.PipeTargetParameters) map[string]any {
	if apiObject == nil {
		return nil
	}

	tfMap := map[string]any{}

	if v := apiObject.BatchJobParameters; v != nil {
		tfMap["batch_job_parameters"] = []any{flattenPipeTargetBatchJobParameters(v)}
	}

	if v := apiObject.CloudWatchLogsParameters; v != nil {
		tfMap["cloudwatch_logs_parameters"] = []any{flattenPipeTargetCloudWatchLogsParameters(v)}
	}

	if v := apiObject.EcsTaskParameters; v != nil {
		tfMap["ecs_task_parameters"] = []any{flattenPipeTargetECSTaskParameters(v)}
	}

	if v := apiObject.EventBridgeEventBusParameters; v != nil {
		tfMap["eventbridge_event_bus_parameters"] = []any{flattenPipeTargetEventBridgeEventBusParameters(v)}
	}

	if v := apiObject.HttpParameters; v != nil {
		tfMap["http_parameters"] = []any{flattenPipeTargetHTTPParameters(v)}
	}

	if v := apiObject.InputTemplate; v != nil {
		tfMap["input_template"] = aws.ToString(v)
	}

	if v := apiObject.KinesisStreamParameters; v != nil {
		tfMap["kinesis_stream_parameters"] = []any{flattenPipeTargetKinesisStreamParameters(v)}
	}

	if v := apiObject.LambdaFunctionParameters; v != nil {
		tfMap["lambda_function_parameters"] = []any{flattenPipeTargetLambdaFunctionParameters(v)}
	}

	if v := apiObject.RedshiftDataParameters; v != nil {
		tfMap["redshift_data_parameters"] = []any{flattenPipeTargetRedshiftDataParameters(v)}
	}

	if v := apiObject.SageMakerPipelineParameters; v != nil {
		tfMap["sagemaker_pipeline_parameters"] = []any{flattenPipeTargetSageMakerPipelineParameters(v)}
	}

	if v := apiObject.SqsQueueParameters; v != nil {
		tfMap["sqs_queue_parameters"] = []any{flattenPipeTargetSQSQueueParameters(v)}
	}

	if v := apiObject.StepFunctionStateMachineParameters; v != nil {
		tfMap["step_function_state_machine_parameters"] = []any{flattenPipeTargetStateMachineParameters(v)}
	}

	return tfMap
}
