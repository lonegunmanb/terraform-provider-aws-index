package github.com/hashicorp/terraform-provider-aws/internal/service/pipes
import (
	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/pipes/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandECSTaskOverride(tfMap map[string]any) *types.EcsTaskOverride {
	if tfMap == nil {
		return nil
	}

	apiObject := &types.EcsTaskOverride{}

	if v, ok := tfMap["container_override"].([]any); ok && len(v) > 0 {
		apiObject.ContainerOverrides = expandECSContainerOverrides(v)
	}

	if v, ok := tfMap["cpu"].(string); ok && v != "" {
		apiObject.Cpu = aws.String(v)
	}

	if v, ok := tfMap["ephemeral_storage"].([]any); ok && len(v) > 0 && v[0] != nil {
		apiObject.EphemeralStorage = expandECSEphemeralStorage(v[0].(map[string]any))
	}

	if v, ok := tfMap[names.AttrExecutionRoleARN].(string); ok && v != "" {
		apiObject.ExecutionRoleArn = aws.String(v)
	}

	if v, ok := tfMap["inference_accelerator_override"].([]any); ok && len(v) > 0 {
		apiObject.InferenceAcceleratorOverrides = expandECSInferenceAcceleratorOverrides(v)
	}

	if v, ok := tfMap["memory"].(string); ok && v != "" {
		apiObject.Memory = aws.String(v)
	}

	if v, ok := tfMap["task_role_arn"].(string); ok && v != "" {
		apiObject.TaskRoleArn = aws.String(v)
	}

	return apiObject
}
