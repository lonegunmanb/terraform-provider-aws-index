package github.com/hashicorp/terraform-provider-aws/internal/service/pipes
import (
	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/pipes/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandPipeTargetBatchJobParameters(tfMap map[string]any) *types.PipeTargetBatchJobParameters {
	if tfMap == nil {
		return nil
	}

	apiObject := &types.PipeTargetBatchJobParameters{}

	if v, ok := tfMap["array_properties"].([]any); ok && len(v) > 0 && v[0] != nil {
		apiObject.ArrayProperties = expandBatchArrayProperties(v[0].(map[string]any))
	}

	if v, ok := tfMap["container_overrides"].([]any); ok && len(v) > 0 && v[0] != nil {
		apiObject.ContainerOverrides = expandBatchContainerOverrides(v[0].(map[string]any))
	}

	if v, ok := tfMap["depends_on"].([]any); ok && len(v) > 0 {
		apiObject.DependsOn = expandBatchJobDependencies(v)
	}

	if v, ok := tfMap["job_definition"].(string); ok && v != "" {
		apiObject.JobDefinition = aws.String(v)
	}

	if v, ok := tfMap["job_name"].(string); ok && v != "" {
		apiObject.JobName = aws.String(v)
	}

	if v, ok := tfMap[names.AttrParameters].(map[string]any); ok && len(v) > 0 {
		apiObject.Parameters = flex.ExpandStringValueMap(v)
	}

	if v, ok := tfMap["retry_strategy"].([]any); ok && len(v) > 0 && v[0] != nil {
		apiObject.RetryStrategy = expandBatchRetryStrategy(v[0].(map[string]any))
	}

	return apiObject
}
