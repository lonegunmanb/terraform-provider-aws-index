package github.com/hashicorp/terraform-provider-aws/internal/service/pipes
import (
	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/pipes/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenPipeTargetBatchJobParameters(apiObject *types.PipeTargetBatchJobParameters) map[string]any {
	if apiObject == nil {
		return nil
	}

	tfMap := map[string]any{}

	if v := apiObject.ArrayProperties; v != nil {
		tfMap["array_properties"] = []any{flattenBatchArrayProperties(v)}
	}

	if v := apiObject.ContainerOverrides; v != nil {
		tfMap["container_overrides"] = []any{flattenBatchContainerOverrides(v)}
	}

	if v := apiObject.DependsOn; v != nil {
		tfMap["depends_on"] = flattenBatchJobDependencies(v)
	}

	if v := apiObject.JobDefinition; v != nil {
		tfMap["job_definition"] = aws.ToString(v)
	}

	if v := apiObject.JobName; v != nil {
		tfMap["job_name"] = aws.ToString(v)
	}

	if v := apiObject.Parameters; v != nil {
		tfMap[names.AttrParameters] = v
	}

	if v := apiObject.RetryStrategy; v != nil {
		tfMap["retry_strategy"] = []any{flattenBatchRetryStrategy(v)}
	}

	return tfMap
}
