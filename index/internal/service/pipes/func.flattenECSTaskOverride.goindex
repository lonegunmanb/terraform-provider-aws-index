package github.com/hashicorp/terraform-provider-aws/internal/service/pipes
import (
	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/pipes/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenECSTaskOverride(apiObject *types.EcsTaskOverride) map[string]any {
	if apiObject == nil {
		return nil
	}

	tfMap := map[string]any{}

	if v := apiObject.ContainerOverrides; v != nil {
		tfMap["container_override"] = flattenECSContainerOverrides(v)
	}

	if v := apiObject.Cpu; v != nil {
		tfMap["cpu"] = aws.ToString(v)
	}

	if v := apiObject.EphemeralStorage; v != nil {
		tfMap["ephemeral_storage"] = []any{flattenECSEphemeralStorage(v)}
	}

	if v := apiObject.ExecutionRoleArn; v != nil {
		tfMap[names.AttrExecutionRoleARN] = aws.ToString(v)
	}

	if v := apiObject.InferenceAcceleratorOverrides; v != nil {
		tfMap["inference_accelerator_override"] = flattenECSInferenceAcceleratorOverrides(v)
	}

	if v := apiObject.Memory; v != nil {
		tfMap["memory"] = aws.ToString(v)
	}

	if v := apiObject.TaskRoleArn; v != nil {
		tfMap["task_role_arn"] = aws.ToString(v)
	}

	return tfMap
}
