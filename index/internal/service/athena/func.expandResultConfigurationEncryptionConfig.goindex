package github.com/hashicorp/terraform-provider-aws/internal/service/athena
import (
	"bytes"
	"context"
	"fmt"
	"log"
	"strings"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/athena"
	"github.com/aws/aws-sdk-go-v2/service/athena/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandResultConfigurationEncryptionConfig(config []any) *types.EncryptionConfiguration {
	if len(config) == 0 {
		return nil
	}

	data := config[0].(map[string]any)

	encryptionConfig := &types.EncryptionConfiguration{
		EncryptionOption: types.EncryptionOption(data["encryption_option"].(string)),
	}

	if v, ok := data[names.AttrKMSKey].(string); ok && v != "" {
		encryptionConfig.KmsKey = aws.String(v)
	}

	return encryptionConfig
}
