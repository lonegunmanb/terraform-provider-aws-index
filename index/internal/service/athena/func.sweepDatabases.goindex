package github.com/hashicorp/terraform-provider-aws/internal/service/athena
import (
	"context"
	"fmt"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/athena"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep/awsv2"
	"github.com/hashicorp/terraform-provider-aws/internal/sweep/framework"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func sweepDatabases(ctx context.Context, client *conns.AWSClient) ([]sweep.Sweepable, error) {
	conn := client.AthenaClient(ctx)
	var sweepResources []sweep.Sweepable

	input := athena.ListDataCatalogsInput{}
	pages := athena.NewListDataCatalogsPaginator(conn, &input)
	for pages.HasMorePages() {
		page, err := pages.NextPage(ctx)
		if err != nil {
			return nil, err
		}

		for _, v := range page.DataCatalogsSummary {
			catalogName := aws.ToString(v.CatalogName)
			input := &athena.ListDatabasesInput{
				CatalogName: aws.String(catalogName),
			}

			pages := athena.NewListDatabasesPaginator(conn, input)
			for pages.HasMorePages() {
				page, err := pages.NextPage(ctx)

				if err != nil {
					tflog.Warn(ctx, "Skipping resource", map[string]any{
						"error":        err.Error(),
						"catalog_name": catalogName,
					})
					break
				}

				for _, v := range page.DatabaseList {
					name := aws.ToString(v.Name)

					if name == "default" {
						log.Printf("[INFO] Skipping Athena Database %s", name)
						continue
					}

					r := resourceDatabase()
					d := r.Data(nil)
					d.SetId(name)
					d.Set(names.AttrForceDestroy, true)

					sweepResources = append(sweepResources, sweep.NewSweepResource(r, d, client))
				}
			}
		}
	}

	return sweepResources, nil
}
