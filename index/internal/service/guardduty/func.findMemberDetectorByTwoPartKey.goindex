package github.com/hashicorp/terraform-provider-aws/internal/service/guardduty
import (
	"context"
	"errors"
	"fmt"
	"slices"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/guardduty"
	awstypes "github.com/aws/aws-sdk-go-v2/service/guardduty/types"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/fwdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwflex "github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	fwvalidators "github.com/hashicorp/terraform-provider-aws/internal/framework/validators"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func findMemberDetectorByTwoPartKey(ctx context.Context, client *guardduty.Client, detectorID, accountID string) (*awstypes.MemberDataSourceConfiguration, error) {
	input := guardduty.GetMemberDetectorsInput{
		DetectorId: aws.String(detectorID),
		AccountIds: []string{accountID},
	}

	detector, unprocessedAccounts, err := findMemberDetector(ctx, client, &input)

	if err != nil {
		return nil, err
	}

	if i := slices.IndexFunc(unprocessedAccounts, func(v awstypes.UnprocessedAccount) bool { return aws.ToString(v.AccountId) == accountID }); i >= 0 {
		return nil, errors.New(aws.ToString(unprocessedAccounts[i].Result))
	}

	return detector, nil
}
