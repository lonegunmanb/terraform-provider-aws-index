package github.com/hashicorp/terraform-provider-aws/internal/service/cloudfront
import (
	"context"
	"fmt"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cloudfront"
	awstypes "github.com/aws/aws-sdk-go-v2/service/cloudfront/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenCustomErrorResponse(apiObject *awstypes.CustomErrorResponse) map[string]any {
	if apiObject == nil {
		return nil
	}

	tfMap := make(map[string]any)
	tfMap["error_code"] = aws.ToInt32(apiObject.ErrorCode)

	if apiObject.ErrorCachingMinTTL != nil {
		tfMap["error_caching_min_ttl"] = aws.ToInt64(apiObject.ErrorCachingMinTTL)
	}

	if apiObject.ResponseCode != nil {
		tfMap["response_code"] = flex.StringToIntValue(apiObject.ResponseCode)
	}

	if apiObject.ResponsePagePath != nil {
		tfMap["response_page_path"] = aws.ToString(apiObject.ResponsePagePath)
	}

	return tfMap
}
