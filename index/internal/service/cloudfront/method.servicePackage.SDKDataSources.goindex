package github.com/hashicorp/terraform-provider-aws/internal/service/cloudfront
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/service/cloudfront"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) SDKDataSources(ctx context.Context) []*inttypes.ServicePackageSDKDataSource {
	return []*inttypes.ServicePackageSDKDataSource{
		{
			Factory:  dataSourceCachePolicy,
			TypeName: "aws_cloudfront_cache_policy",
			Name:     "Cache Policy",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  dataSourceDistribution,
			TypeName: "aws_cloudfront_distribution",
			Name:     "Distribution",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  dataSourceFunction,
			TypeName: "aws_cloudfront_function",
			Name:     "Function",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  dataSourceLogDeliveryCanonicalUserID,
			TypeName: "aws_cloudfront_log_delivery_canonical_user_id",
			Name:     "Log Delivery Canonical User ID",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  dataSourceOriginAccessIdentities,
			TypeName: "aws_cloudfront_origin_access_identities",
			Name:     "Origin Access Identities",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  dataSourceOriginAccessIdentity,
			TypeName: "aws_cloudfront_origin_access_identity",
			Name:     "Origin Access Identity",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  dataSourceOriginRequestPolicy,
			TypeName: "aws_cloudfront_origin_request_policy",
			Name:     "Origin Request Policy",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  dataSourceRealtimeLogConfig,
			TypeName: "aws_cloudfront_realtime_log_config",
			Name:     "Real-time Log Config",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  dataSourceResponseHeadersPolicy,
			TypeName: "aws_cloudfront_response_headers_policy",
			Name:     "Response Headers Policy",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
	}
}
