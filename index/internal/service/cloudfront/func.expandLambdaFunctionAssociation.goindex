package github.com/hashicorp/terraform-provider-aws/internal/service/cloudfront
import (
	"context"
	"fmt"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cloudfront"
	awstypes "github.com/aws/aws-sdk-go-v2/service/cloudfront/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandLambdaFunctionAssociation(tfMap map[string]any) *awstypes.LambdaFunctionAssociation {
	if tfMap == nil {
		return nil
	}

	apiObject := &awstypes.LambdaFunctionAssociation{}

	if v, ok := tfMap["event_type"]; ok {
		apiObject.EventType = awstypes.EventType(v.(string))
	}

	if v, ok := tfMap["include_body"]; ok {
		apiObject.IncludeBody = aws.Bool(v.(bool))
	}

	if v, ok := tfMap["lambda_arn"]; ok {
		apiObject.LambdaFunctionARN = aws.String(v.(string))
	}

	return apiObject
}
