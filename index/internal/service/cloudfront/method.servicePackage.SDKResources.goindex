package github.com/hashicorp/terraform-provider-aws/internal/service/cloudfront
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/service/cloudfront"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) SDKResources(ctx context.Context) []*inttypes.ServicePackageSDKResource {
	return []*inttypes.ServicePackageSDKResource{
		{
			Factory:  resourceCachePolicy,
			TypeName: "aws_cloudfront_cache_policy",
			Name:     "Cache Policy",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  resourceDistribution,
			TypeName: "aws_cloudfront_distribution",
			Name:     "Distribution",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  resourceFieldLevelEncryptionConfig,
			TypeName: "aws_cloudfront_field_level_encryption_config",
			Name:     "Field-level Encryption Config",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  resourceFieldLevelEncryptionProfile,
			TypeName: "aws_cloudfront_field_level_encryption_profile",
			Name:     "Field-level Encryption Profile",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  resourceFunction,
			TypeName: "aws_cloudfront_function",
			Name:     "Function",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  resourceKeyGroup,
			TypeName: "aws_cloudfront_key_group",
			Name:     "Key Group",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  resourceMonitoringSubscription,
			TypeName: "aws_cloudfront_monitoring_subscription",
			Name:     "Monitoring Subscription",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  resourceOriginAccessControl,
			TypeName: "aws_cloudfront_origin_access_control",
			Name:     "Origin Access Control",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  resourceOriginAccessIdentity,
			TypeName: "aws_cloudfront_origin_access_identity",
			Name:     "Origin Access Identity",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  resourceOriginRequestPolicy,
			TypeName: "aws_cloudfront_origin_request_policy",
			Name:     "Origin Request Policy",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  resourcePublicKey,
			TypeName: "aws_cloudfront_public_key",
			Name:     "Public Key",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  resourceRealtimeLogConfig,
			TypeName: "aws_cloudfront_realtime_log_config",
			Name:     "Real-time Log Config",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
			Identity: inttypes.GlobalARNIdentity(inttypes.WithIdentityDuplicateAttrs(names.AttrID)),
			Import: inttypes.Import{
				WrappedImport: true,
			},
		},
		{
			Factory:  resourceResponseHeadersPolicy,
			TypeName: "aws_cloudfront_response_headers_policy",
			Name:     "Response Headers Policy",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
	}
}
