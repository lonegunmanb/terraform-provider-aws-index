package github.com/hashicorp/terraform-provider-aws/internal/service/lightsail
import (
	"context"
	"fmt"
	"strings"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/lightsail"
	"github.com/aws/aws-sdk-go-v2/service/lightsail/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/customdiff"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func updateAddOn(ctx context.Context, conn *lightsail.Client, name string, oldAddOnsRaw any, newAddOnsRaw any) diag.Diagnostics {
	var diags diag.Diagnostics

	oldAddOns := expandAddOnRequest(oldAddOnsRaw.([]any))
	newAddOns := expandAddOnRequest(newAddOnsRaw.([]any))
	oldAddOnStatus := expandAddOnEnabled(oldAddOnsRaw.([]any))
	newAddonStatus := expandAddOnEnabled(newAddOnsRaw.([]any))

	if (oldAddOnStatus && newAddonStatus) || !newAddonStatus {
		in := lightsail.DisableAddOnInput{
			ResourceName: aws.String(name),
			AddOnType:    oldAddOns.AddOnType,
		}

		out, err := conn.DisableAddOn(ctx, &in)

		if err != nil {
			return create.AppendDiagError(diags, names.Lightsail, string(types.OperationTypeDisableAddOn), ResInstance, name, err)
		}

		diag := expandOperations(ctx, conn, out.Operations, types.OperationTypeDisableAddOn, ResInstance, name)

		if diag != nil {
			return diag
		}
	}

	if newAddonStatus {
		in := lightsail.EnableAddOnInput{
			ResourceName: aws.String(name),
			AddOnRequest: newAddOns,
		}

		out, err := conn.EnableAddOn(ctx, &in)

		if err != nil {
			return create.AppendDiagError(diags, names.Lightsail, string(types.OperationTypeEnableAddOn), ResInstance, name, err)
		}

		diag := expandOperations(ctx, conn, out.Operations, types.OperationTypeEnableAddOn, ResInstance, name)

		if diag != nil {
			return diag
		}
	}

	return diags
}
