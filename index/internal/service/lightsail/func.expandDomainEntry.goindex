package github.com/hashicorp/terraform-provider-aws/internal/service/lightsail
import (
	"context"
	"fmt"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/lightsail"
	"github.com/aws/aws-sdk-go-v2/service/lightsail/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandDomainEntry(id string) (*types.DomainEntry, error) {
	partCount := flex.ResourceIdPartCount(id)

	var name string
	var domainName string
	var recordType string
	var recordTarget string

	if partCount == 1 {
		idParts := strings.Split(id, "_")
		idLength := len(idParts)
		var index int

		if idLength == 5 {
			index = 1
			name = "_" + idParts[index+0]
		} else {
			index = 0
			name = idParts[index+0]
		}

		domainName = idParts[index+1]
		recordType = idParts[index+2]
		recordTarget = idParts[index+3]
	} else {
		idParts, err := flex.ExpandResourceId(id, DomainEntryIdPartsCount, true)

		if err != nil {
			return nil, err
		}
		name = idParts[0]
		domainName = idParts[1]
		recordType = idParts[2]
		recordTarget = idParts[3]
	}
	entry := &types.DomainEntry{
		Name:   aws.String(expandDomainEntryName(name, domainName)),
		Type:   aws.String(recordType),
		Target: aws.String(recordTarget),
	}

	return entry, nil
}
