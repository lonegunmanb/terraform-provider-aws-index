package github.com/hashicorp/terraform-provider-aws/internal/service/lightsail
import (
	"context"
	"errors"
	"log"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/lightsail"
	"github.com/aws/aws-sdk-go-v2/service/lightsail/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenCacheSettings(apiObject *types.CacheSettings) map[string]any {
	if apiObject == nil {
		return nil
	}

	m := map[string]any{}

	if v := apiObject.AllowedHTTPMethods; v != nil {
		m["allowed_http_methods"] = aws.ToString(v)
	}

	if v := apiObject.CachedHTTPMethods; v != nil {
		m["cached_http_methods"] = aws.ToString(v)
	}

	if v := apiObject.DefaultTTL; v != nil {
		m["default_ttl"] = int(aws.ToInt64(v))
	}

	if v := apiObject.ForwardedCookies; v != nil {
		m["forwarded_cookies"] = []any{flattenCookieObject(v)}
	}

	if v := apiObject.ForwardedHeaders; v != nil {
		m["forwarded_headers"] = []any{flattenHeaderObject(v)}
	}

	if v := apiObject.ForwardedQueryStrings; v != nil {
		m["forwarded_query_strings"] = []any{flattenQueryStringObject(v)}
	}

	if v := apiObject.MaximumTTL; v != nil {
		m["maximum_ttl"] = int(aws.ToInt64(v))
	}

	if v := apiObject.MinimumTTL; v != nil {
		m["minimum_ttl"] = int(aws.ToInt64(v))
	}

	return m
}
