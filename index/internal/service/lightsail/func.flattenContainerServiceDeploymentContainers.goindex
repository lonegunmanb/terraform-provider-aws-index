package github.com/hashicorp/terraform-provider-aws/internal/service/lightsail
import (
	"context"
	"fmt"
	"log"
	"reflect"
	"strconv"
	"strings"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/lightsail"
	"github.com/aws/aws-sdk-go-v2/service/lightsail/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenContainerServiceDeploymentContainers(containers map[string]types.Container) []any {
	if len(containers) == 0 {
		return nil
	}

	var rawContainers []any
	for containerName, container := range containers {
		rawContainer := map[string]any{
			"container_name":      containerName,
			"image":               aws.ToString(container.Image),
			"command":             container.Command,
			names.AttrEnvironment: container.Environment,
			"ports":               container.Ports,
		}

		rawContainers = append(rawContainers, rawContainer)
	}

	return rawContainers
}
