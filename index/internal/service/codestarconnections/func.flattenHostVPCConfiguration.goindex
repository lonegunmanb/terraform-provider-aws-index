package github.com/hashicorp/terraform-provider-aws/internal/service/codestarconnections
import (
	"context"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/codestarconnections"
	"github.com/aws/aws-sdk-go-v2/service/codestarconnections/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenHostVPCConfiguration(vpcConfig *types.VpcConfiguration) []any {
	if vpcConfig == nil {
		return []any{}
	}

	m := map[string]any{
		names.AttrSecurityGroupIDs: vpcConfig.SecurityGroupIds,
		names.AttrSubnetIDs:        vpcConfig.SubnetIds,
		names.AttrVPCID:            aws.ToString(vpcConfig.VpcId),
	}

	if vpcConfig.TlsCertificate != nil {
		m["tls_certificate"] = aws.ToString(vpcConfig.TlsCertificate)
	}

	return []any{m}
}
