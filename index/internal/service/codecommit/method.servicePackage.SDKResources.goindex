package github.com/hashicorp/terraform-provider-aws/internal/service/codecommit
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/service/codecommit"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) SDKResources(ctx context.Context) []*inttypes.ServicePackageSDKResource {
	return []*inttypes.ServicePackageSDKResource{
		{
			Factory:  resourceApprovalRuleTemplate,
			TypeName: "aws_codecommit_approval_rule_template",
			Name:     "Approval Rule Template",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceApprovalRuleTemplateAssociation,
			TypeName: "aws_codecommit_approval_rule_template_association",
			Name:     "Approval Rule Template Association",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceRepository,
			TypeName: "aws_codecommit_repository",
			Name:     "Repository",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceTrigger,
			TypeName: "aws_codecommit_trigger",
			Name:     "Trigger",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
	}
}
