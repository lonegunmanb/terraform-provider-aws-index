package github.com/hashicorp/terraform-provider-aws/internal/service/events
import (
	"context"
	"errors"
	"fmt"
	"log"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/eventbridge"
	"github.com/aws/aws-sdk-go-v2/service/eventbridge/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandCreateConnectionAPIKeyAuthRequestParameters(tfList []any) *types.CreateConnectionApiKeyAuthRequestParameters {
	if len(tfList) == 0 {
		return nil
	}

	apiObject := &types.CreateConnectionApiKeyAuthRequestParameters{}
	for _, item := range tfList {
		if item == nil {
			continue
		}

		tfMap := item.(map[string]any)
		if v, ok := tfMap[names.AttrKey].(string); ok && v != "" {
			apiObject.ApiKeyName = aws.String(v)
		}
		if v, ok := tfMap[names.AttrValue].(string); ok && v != "" {
			apiObject.ApiKeyValue = aws.String(v)
		}
	}

	return apiObject
}
