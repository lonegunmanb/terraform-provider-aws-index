package github.com/hashicorp/terraform-provider-aws/internal/service/events
import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/eventbridge"
	"github.com/aws/aws-sdk-go-v2/service/eventbridge/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func findEventSources(ctx context.Context, conn *eventbridge.Client, input *eventbridge.ListEventSourcesInput) ([]types.EventSource, error) { // nosemgrep:ci.events-in-func-name
	var output []types.EventSource

	err := listEventSourcesPages(ctx, conn, input, func(page *eventbridge.ListEventSourcesOutput, lastPage bool) bool {
		if page == nil {
			return !lastPage
		}

		output = append(output, page.EventSources...)

		return !lastPage
	})

	if err != nil {
		return nil, err
	}

	return output, nil
}
