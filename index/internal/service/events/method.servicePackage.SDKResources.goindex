package github.com/hashicorp/terraform-provider-aws/internal/service/events
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/service/eventbridge"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) SDKResources(ctx context.Context) []*inttypes.ServicePackageSDKResource {
	return []*inttypes.ServicePackageSDKResource{
		{
			Factory:  resourceAPIDestination,
			TypeName: "aws_cloudwatch_event_api_destination",
			Name:     "API Destination",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceArchive,
			TypeName: "aws_cloudwatch_event_archive",
			Name:     "Archive",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceBus,
			TypeName: "aws_cloudwatch_event_bus",
			Name:     "Event Bus",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceBusPolicy,
			TypeName: "aws_cloudwatch_event_bus_policy",
			Name:     "Event Bus Policy",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceConnection,
			TypeName: "aws_cloudwatch_event_connection",
			Name:     "Connection",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceEndpoint,
			TypeName: "aws_cloudwatch_event_endpoint",
			Name:     "Global Endpoint",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourcePermission,
			TypeName: "aws_cloudwatch_event_permission",
			Name:     "Permission",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceRule,
			TypeName: "aws_cloudwatch_event_rule",
			Name:     "Rule",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
			Identity: inttypes.RegionalSingleParameterIdentity(names.AttrName),
			Import: inttypes.SDKv2Import{
				WrappedImport: true,
			},
		},
		{
			Factory:  resourceTarget,
			TypeName: "aws_cloudwatch_event_target",
			Name:     "Target",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
			Identity: inttypes.RegionalParameterizedIdentity([]inttypes.IdentityAttribute{
				inttypes.StringIdentityAttribute("event_bus_name", true),
				inttypes.StringIdentityAttribute(names.AttrRule, true),
				inttypes.StringIdentityAttribute("target_id", true),
			}),
			Import: inttypes.SDKv2Import{
				WrappedImport: true,
				ImportID:      targetImportID{},
			},
		},
	}
}
