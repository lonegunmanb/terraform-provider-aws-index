package github.com/hashicorp/terraform-provider-aws/internal/service/events
import (
	"context"
	"strconv"

	"github.com/aws/aws-sdk-go-v2/service/eventbridge"
	"github.com/hashicorp/terraform-plugin-framework-timetypes/timetypes"
	"github.com/hashicorp/terraform-plugin-framework/action"
	"github.com/hashicorp/terraform-plugin-framework/action/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwflex "github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (a *putEventsAction) Schema(ctx context.Context, req action.SchemaRequest, resp *action.SchemaResponse) {
	resp.Schema = schema.Schema{
		Description: "Sends custom events to Amazon EventBridge so that they can be matched to rules.",
		Blocks: map[string]schema.Block{
			"entry": schema.ListNestedBlock{
				Description: "The entry that defines an event in your system.",
				CustomType:  fwtypes.NewListNestedObjectTypeOf[putEventEntryModel](ctx),
				NestedObject: schema.NestedBlockObject{
					Attributes: map[string]schema.Attribute{
						"detail": schema.StringAttribute{
							Description: "A valid JSON string. There is no other schema imposed.",
							Optional:    true,
						},
						"detail_type": schema.StringAttribute{
							Description: "Free-form string used to decide what fields to expect in the event detail.",
							Optional:    true,
						},
						"event_bus_name": schema.StringAttribute{
							Description: "The name or ARN of the event bus to receive the event.",
							Optional:    true,
						},
						names.AttrResources: schema.ListAttribute{
							Description: "AWS resources, identified by Amazon Resource Name (ARN), which the event primarily concerns.",
							CustomType:  fwtypes.ListOfStringType,
							Optional:    true,
						},
						names.AttrSource: schema.StringAttribute{
							Description: "The source of the event.",
							Required:    true,
						},
						"time": schema.StringAttribute{
							Description: "The time stamp of the event, per RFC3339.",
							Optional:    true,
							CustomType:  timetypes.RFC3339Type{},
						},
					},
				},
			},
		},
	}
}
