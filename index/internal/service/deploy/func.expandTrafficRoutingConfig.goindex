package github.com/hashicorp/terraform-provider-aws/internal/service/deploy
import (
	"context"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/arn"
	"github.com/aws/aws-sdk-go-v2/service/codedeploy"
	"github.com/aws/aws-sdk-go-v2/service/codedeploy/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandTrafficRoutingConfig(d *schema.ResourceData) *types.TrafficRoutingConfig {
	v, ok := d.GetOk("traffic_routing_config")
	if !ok {
		return nil
	}

	tfMap := v.([]any)[0].(map[string]any)
	apiObject := &types.TrafficRoutingConfig{}

	if v, ok := tfMap["time_based_canary"]; ok && len(v.([]any)) > 0 {
		apiObject.TimeBasedCanary = expandTimeBasedCanary(v.([]any)[0].(map[string]any))
	}
	if v, ok := tfMap["time_based_linear"]; ok && len(v.([]any)) > 0 {
		apiObject.TimeBasedLinear = expandTimeBasedLinear(v.([]any)[0].(map[string]any))
	}
	if v, ok := tfMap[names.AttrType]; ok {
		apiObject.Type = types.TrafficRoutingType(v.(string))
	}

	return apiObject
}
