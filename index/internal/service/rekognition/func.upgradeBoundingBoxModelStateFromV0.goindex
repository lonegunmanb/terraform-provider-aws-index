package github.com/hashicorp/terraform-provider-aws/internal/service/rekognition
import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework-timeouts/resource/timeouts"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/float64default"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func upgradeBoundingBoxModelStateFromV0(ctx context.Context, old fwtypes.ObjectValueOf[boundingBoxModel], diags *diag.Diagnostics) fwtypes.ListNestedObjectValueOf[boundingBoxModel] {
	if old.IsNull() {
		return fwtypes.NewListNestedObjectValueOfNull[boundingBoxModel](ctx)
	}

	var oldObj boundingBoxModel
	diags.Append(old.As(ctx, &oldObj, basetypes.ObjectAsOptions{})...)

	newObj := []boundingBoxModel{
		{
			Height: oldObj.Height,
			Left:   oldObj.Left,
			Top:    oldObj.Top,
			Width:  oldObj.Width,
		},
	}

	result, d := fwtypes.NewListNestedObjectValueOfValueSlice(ctx, newObj)
	diags.Append(d...)

	return result
}
