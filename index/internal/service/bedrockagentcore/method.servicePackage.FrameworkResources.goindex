package github.com/hashicorp/terraform-provider-aws/internal/service/bedrockagentcore
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/bedrockagentcorecontrol"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) FrameworkResources(ctx context.Context) []*inttypes.ServicePackageFrameworkResource {
	return []*inttypes.ServicePackageFrameworkResource{
		{
			Factory:  newAgentRuntimeResource,
			TypeName: "aws_bedrockagentcore_agent_runtime",
			Name:     "Agent Runtime",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: "agent_runtime_arn",
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newAgentRuntimeEndpointResource,
			TypeName: "aws_bedrockagentcore_agent_runtime_endpoint",
			Name:     "Agent Runtime Endpoint",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: "agent_runtime_endpoint_arn",
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newAPIKeyCredentialProviderResource,
			TypeName: "aws_bedrockagentcore_api_key_credential_provider",
			Name:     "Api Key Credential Provider",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newBrowserResource,
			TypeName: "aws_bedrockagentcore_browser",
			Name:     "Browser",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: "browser_arn",
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newCodeInterpreterResource,
			TypeName: "aws_bedrockagentcore_code_interpreter",
			Name:     "Code Interpreter",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: "code_interpreter_arn",
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newGatewayResource,
			TypeName: "aws_bedrockagentcore_gateway",
			Name:     "Gateway",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: "gateway_arn",
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newGatewayTargetResource,
			TypeName: "aws_bedrockagentcore_gateway_target",
			Name:     "Gateway Target",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newMemoryResource,
			TypeName: "aws_bedrockagentcore_memory",
			Name:     "Memory",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newResourceMemoryStrategy,
			TypeName: "aws_bedrockagentcore_memory_strategy",
			Name:     "Memory Strategy",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newOAuth2CredentialProviderResource,
			TypeName: "aws_bedrockagentcore_oauth2_credential_provider",
			Name:     "OAuth2 Credential Provider",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newTokenVaultCMKResource,
			TypeName: "aws_bedrockagentcore_token_vault_cmk",
			Name:     "Token Vault CMK",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newWorkloadIdentityResource,
			TypeName: "aws_bedrockagentcore_workload_identity",
			Name:     "Workload Identity",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
	}
}
