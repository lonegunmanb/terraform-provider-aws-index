package github.com/hashicorp/terraform-provider-aws/internal/service/bedrockagentcore
import (
	"context"
	"fmt"

	"github.com/YakDriver/regexache"
	"github.com/YakDriver/smarterr"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/bedrockagentcorecontrol"
	awstypes "github.com/aws/aws-sdk-go-v2/service/bedrockagentcorecontrol/types"
	"github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
	"github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/path"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/listplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	sdkretry "github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/fwdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwflex "github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/smerr"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (m *oauth2ProviderConfigModel) clientCredentials(ctx context.Context) (oauth2ClientCredentialsModel, diag.Diagnostics) {
	var diags diag.Diagnostics

	switch {
	case !m.CustomOAuth2ProviderConfig.IsNull():
		v, d := m.CustomOAuth2ProviderConfig.ToPtr(ctx)
		diags.Append(d...)
		if diags.HasError() {
			return inttypes.Zero[oauth2ClientCredentialsModel](), diags
		}
		return v.oauth2ClientCredentialsModel, diags

	case !m.GithubOAuth2ProviderConfig.IsNull():
		v, d := m.GithubOAuth2ProviderConfig.ToPtr(ctx)
		diags.Append(d...)
		if diags.HasError() {
			return inttypes.Zero[oauth2ClientCredentialsModel](), diags
		}
		return v.oauth2ClientCredentialsModel, diags

	case !m.GoogleOAuth2ProviderConfig.IsNull():
		v, d := m.GoogleOAuth2ProviderConfig.ToPtr(ctx)
		diags.Append(d...)
		if diags.HasError() {
			return inttypes.Zero[oauth2ClientCredentialsModel](), diags
		}
		return v.oauth2ClientCredentialsModel, diags

	case !m.MicrosoftOAuth2ProviderConfig.IsNull():
		v, d := m.MicrosoftOAuth2ProviderConfig.ToPtr(ctx)
		diags.Append(d...)
		if diags.HasError() {
			return inttypes.Zero[oauth2ClientCredentialsModel](), diags
		}
		return v.oauth2ClientCredentialsModel, diags

	case !m.SalesforceOAuth2ProviderConfig.IsNull():
		v, d := m.SalesforceOAuth2ProviderConfig.ToPtr(ctx)
		diags.Append(d...)
		if diags.HasError() {
			return inttypes.Zero[oauth2ClientCredentialsModel](), diags
		}
		return v.oauth2ClientCredentialsModel, diags

	case !m.SlackOAuth2ProviderConfig.IsNull():
		v, d := m.SlackOAuth2ProviderConfig.ToPtr(ctx)
		diags.Append(d...)
		if diags.HasError() {
			return inttypes.Zero[oauth2ClientCredentialsModel](), diags
		}
		return v.oauth2ClientCredentialsModel, diags
	}

	return inttypes.Zero[oauth2ClientCredentialsModel](), diags
}
