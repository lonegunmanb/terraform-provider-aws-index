package github.com/hashicorp/terraform-provider-aws/internal/service/bedrockagentcore
import (
	"context"
	"fmt"
	"reflect"
	"strings"
	"time"

	"github.com/YakDriver/smarterr"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/bedrockagentcorecontrol"
	awstypes "github.com/aws/aws-sdk-go-v2/service/bedrockagentcorecontrol/types"
	"github.com/hashicorp/terraform-plugin-framework-timeouts/resource/timeouts"
	"github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/path"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	sdkid "github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/fwdiag"
	intflex "github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwflex "github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/retry"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	"github.com/hashicorp/terraform-provider-aws/internal/smerr"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (m CustomConfigurationModel) expandToModifyStrategyConfiguration(ctx context.Context) (result *awstypes.ModifyStrategyConfiguration, diags diag.Diagnostics) {
	result = &awstypes.ModifyStrategyConfiguration{}

	var consolidation, extraction *OverrideDetailsModel
	var d diag.Diagnostics

	if !m.Consolidation.IsNull() {
		consolidation, d = m.Consolidation.ToPtr(ctx)
		smerr.EnrichAppend(ctx, &diags, d)
		if diags.HasError() {
			return nil, diags
		}
	}
	if !m.Extraction.IsNull() {
		extraction, d = m.Extraction.ToPtr(ctx)
		smerr.EnrichAppend(ctx, &diags, d)
		if diags.HasError() {
			return nil, diags
		}
	}

	switch m.Type.ValueEnum() {
	case awstypes.OverrideTypeSemanticOverride:
		if consolidation != nil {
			var consolidationInput awstypes.CustomConsolidationConfigurationInputMemberSemanticConsolidationOverride
			smerr.EnrichAppend(ctx, &diags, fwflex.Expand(ctx, consolidation, &consolidationInput.Value))
			if diags.HasError() {
				return nil, diags
			}
			result.Consolidation = &awstypes.ModifyConsolidationConfigurationMemberCustomConsolidationConfiguration{
				Value: &consolidationInput,
			}
		}

		if extraction != nil {
			var extractionInput awstypes.CustomExtractionConfigurationInputMemberSemanticExtractionOverride
			smerr.EnrichAppend(ctx, &diags, fwflex.Expand(ctx, extraction, &extractionInput.Value))
			if diags.HasError() {
				return nil, diags
			}
			result.Extraction = &awstypes.ModifyExtractionConfigurationMemberCustomExtractionConfiguration{
				Value: &extractionInput,
			}
		}

	case awstypes.OverrideTypeSummaryOverride:
		if consolidation != nil {
			var consolidationInput awstypes.CustomConsolidationConfigurationInputMemberSummaryConsolidationOverride
			smerr.EnrichAppend(ctx, &diags, fwflex.Expand(ctx, consolidation, &consolidationInput.Value))
			if diags.HasError() {
				return nil, diags
			}
			result.Consolidation = &awstypes.ModifyConsolidationConfigurationMemberCustomConsolidationConfiguration{
				Value: &consolidationInput,
			}
		}

		// Note: AWS SDK doesn't have SummaryExtractionOverride - only Semantic and UserPreference
		// So we skip extraction for SummaryOverride since there's no corresponding AWS type
		// This is likely an AWS API design choice where Summary strategy doesn't have extraction customization

	case awstypes.OverrideTypeUserPreferenceOverride:
		if consolidation != nil {
			var consolidationInput awstypes.CustomConsolidationConfigurationInputMemberUserPreferenceConsolidationOverride
			smerr.EnrichAppend(ctx, &diags, fwflex.Expand(ctx, consolidation, &consolidationInput.Value))
			if diags.HasError() {
				return nil, diags
			}
			result.Consolidation = &awstypes.ModifyConsolidationConfigurationMemberCustomConsolidationConfiguration{
				Value: &consolidationInput,
			}
		}

		if extraction != nil {
			var extractionInput awstypes.CustomExtractionConfigurationInputMemberUserPreferenceExtractionOverride
			smerr.EnrichAppend(ctx, &diags, fwflex.Expand(ctx, extraction, &extractionInput.Value))
			if diags.HasError() {
				return nil, diags
			}
			result.Extraction = &awstypes.ModifyExtractionConfigurationMemberCustomExtractionConfiguration{
				Value: &extractionInput,
			}
		}
	default:
		diags.AddError(
			"Unsupported Type",
			fmt.Sprintf("override type (modify strategy configuration): %q", m.Type.ValueString()),
		)
		return nil, diags
	}
	return result, diags
}
