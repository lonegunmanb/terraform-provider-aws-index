package github.com/hashicorp/terraform-provider-aws/internal/service/elbv2
import (
	"cmp"
	"context"
	"fmt"
	"log"
	"slices"
	"strconv"
	"strings"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/elasticloadbalancingv2"
	awstypes "github.com/aws/aws-sdk-go-v2/service/elasticloadbalancingv2/types"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/go-cty/cty"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/customdiff"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tfmaps "github.com/hashicorp/terraform-provider-aws/internal/maps"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenListenerActionAuthenticateCognitoConfig(apiObject *awstypes.AuthenticateCognitoActionConfig) []any {
	if apiObject == nil {
		return []any{}
	}

	tfMap := map[string]any{}

	if apiObject.AuthenticationRequestExtraParams != nil {
		tfMap["authentication_request_extra_params"] = apiObject.AuthenticationRequestExtraParams
	}
	if string(apiObject.OnUnauthenticatedRequest) != "" {
		tfMap["on_unauthenticated_request"] = apiObject.OnUnauthenticatedRequest
	}
	if apiObject.Scope != nil {
		tfMap[names.AttrScope] = aws.ToString(apiObject.Scope)
	}
	if apiObject.SessionCookieName != nil {
		tfMap["session_cookie_name"] = aws.ToString(apiObject.SessionCookieName)
	}
	if apiObject.SessionTimeout != nil {
		tfMap["session_timeout"] = aws.ToInt64(apiObject.SessionTimeout)
	}
	if apiObject.UserPoolArn != nil {
		tfMap["user_pool_arn"] = aws.ToString(apiObject.UserPoolArn)
	}
	if apiObject.UserPoolClientId != nil {
		tfMap["user_pool_client_id"] = aws.ToString(apiObject.UserPoolClientId)
	}
	if apiObject.UserPoolDomain != nil {
		tfMap["user_pool_domain"] = aws.ToString(apiObject.UserPoolDomain)
	}

	return []any{tfMap}
}
