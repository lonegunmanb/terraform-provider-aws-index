package github.com/hashicorp/terraform-provider-aws/internal/service/elbv2
import (
	"context"
	"fmt"
	"log"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/elasticloadbalancingv2"
	awstypes "github.com/aws/aws-sdk-go-v2/service/elasticloadbalancingv2/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func findListenerCertificateByTwoPartKey(ctx context.Context, conn *elasticloadbalancingv2.Client, listenerARN, certificateARN string) (*awstypes.Certificate, error) {
	input := &elasticloadbalancingv2.DescribeListenerCertificatesInput{
		ListenerArn: aws.String(listenerARN),
		PageSize:    aws.Int32(400),
	}

	return findListenerCertificate(ctx, conn, input, func(v *awstypes.Certificate) bool {
		return !aws.ToBool(v.IsDefault) && aws.ToString(v.CertificateArn) == certificateARN
	})
}
