package github.com/hashicorp/terraform-provider-aws/internal/service/elbv2
import (
	"context"
	"fmt"
	"log"
	"slices"
	"strconv"
	"strings"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/elasticloadbalancingv2"
	awstypes "github.com/aws/aws-sdk-go-v2/service/elasticloadbalancingv2/types"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/go-cty/cty"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/customdiff"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/sdkv2/types/nullable"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (m targetGroupAttributeMap) expand(d *schema.ResourceData, targetType awstypes.TargetTypeEnum, update bool) []awstypes.TargetGroupAttribute {
	var apiObjects []awstypes.TargetGroupAttribute

	for tfAttributeName, attributeInfo := range m {
		if update && !d.HasChange(tfAttributeName) {
			continue
		}

		if !slices.Contains(attributeInfo.targetTypesSupported, targetType) {
			continue
		}

		switch v, nt, k := d.Get(tfAttributeName), attributeInfo.tfNullableType, aws.String(attributeInfo.apiAttributeKey); nt {
		case schema.TypeBool:
			v := v.(string)
			if v, null, _ := nullable.Bool(v).ValueBool(); !null {
				apiObjects = append(apiObjects, awstypes.TargetGroupAttribute{
					Key:   k,
					Value: flex.BoolValueToString(v),
				})
			}
		case schema.TypeInt:
			v := v.(string)
			if v, null, _ := nullable.Int(v).ValueInt64(); !null {
				apiObjects = append(apiObjects, awstypes.TargetGroupAttribute{
					Key:   k,
					Value: flex.Int64ValueToString(v),
				})
			}
		default:
			switch attributeInfo.tfType {
			case schema.TypeBool:
				if v := v.(bool); v || update {
					apiObjects = append(apiObjects, awstypes.TargetGroupAttribute{
						Key:   k,
						Value: flex.BoolValueToString(v),
					})
				}
			case schema.TypeInt:
				if v := v.(int); v > 0 || update {
					apiObjects = append(apiObjects, awstypes.TargetGroupAttribute{
						Key:   k,
						Value: flex.IntValueToString(v),
					})
				}
			case schema.TypeString:
				if v := v.(string); v != "" || update {
					apiObjects = append(apiObjects, awstypes.TargetGroupAttribute{
						Key:   k,
						Value: aws.String(v),
					})
				}
			}
		}
	}

	return apiObjects
}
