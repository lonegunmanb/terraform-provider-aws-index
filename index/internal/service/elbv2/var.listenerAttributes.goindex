package github.com/hashicorp/terraform-provider-aws/internal/service/elbv2
import (
	"cmp"
	"context"
	"fmt"
	"log"
	"slices"
	"strconv"
	"strings"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/elasticloadbalancingv2"
	awstypes "github.com/aws/aws-sdk-go-v2/service/elasticloadbalancingv2/types"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/go-cty/cty"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/customdiff"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tfmaps "github.com/hashicorp/terraform-provider-aws/internal/maps"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
var listenerAttributes = listenerAttributeMap(map[string]listenerAttributeInfo{
	// Attribute only supported on TCP and GENEVE listeners.
	"tcp_idle_timeout_seconds": {
		apiAttributeKey:        "tcp.idle_timeout.seconds",
		listenerTypesSupported: []awstypes.ProtocolEnum{awstypes.ProtocolEnumTcp, awstypes.ProtocolEnumGeneve},
		tfType:                 schema.TypeInt,
	},
	// Attributes only supported on HTTPS listeners.
	"routing_http_request_x_amzn_mtls_clientcert_header_name": {
		apiAttributeKey:        "routing.http.request.x_amzn_mtls_clientcert.header_name",
		listenerTypesSupported: []awstypes.ProtocolEnum{awstypes.ProtocolEnumHttps},
		tfType:                 schema.TypeString,
	},
	"routing_http_request_x_amzn_mtls_clientcert_issuer_header_name": {
		apiAttributeKey:        "routing.http.request.x_amzn_mtls_clientcert_issuer.header_name",
		listenerTypesSupported: []awstypes.ProtocolEnum{awstypes.ProtocolEnumHttps},
		tfType:                 schema.TypeString,
	},
	"routing_http_request_x_amzn_mtls_clientcert_leaf_header_name": {
		apiAttributeKey:        "routing.http.request.x_amzn_mtls_clientcert_leaf.header_name",
		listenerTypesSupported: []awstypes.ProtocolEnum{awstypes.ProtocolEnumHttps},
		tfType:                 schema.TypeString,
	},
	"routing_http_request_x_amzn_mtls_clientcert_serial_number_header_name": {
		apiAttributeKey:        "routing.http.request.x_amzn_mtls_clientcert_serial_number.header_name",
		listenerTypesSupported: []awstypes.ProtocolEnum{awstypes.ProtocolEnumHttps},
		tfType:                 schema.TypeString,
	},
	"routing_http_request_x_amzn_mtls_clientcert_subject_header_name": {
		apiAttributeKey:        "routing.http.request.x_amzn_mtls_clientcert_subject.header_name",
		listenerTypesSupported: []awstypes.ProtocolEnum{awstypes.ProtocolEnumHttps},
		tfType:                 schema.TypeString,
	},
	"routing_http_request_x_amzn_mtls_clientcert_validity_header_name": {
		apiAttributeKey:        "routing.http.request.x_amzn_mtls_clientcert_validity.header_name",
		listenerTypesSupported: []awstypes.ProtocolEnum{awstypes.ProtocolEnumHttps},
		tfType:                 schema.TypeString,
	},
	"routing_http_request_x_amzn_tls_cipher_suite_header_name": {
		apiAttributeKey:        "routing.http.request.x_amzn_tls_cipher_suite.header_name",
		listenerTypesSupported: []awstypes.ProtocolEnum{awstypes.ProtocolEnumHttps},
		tfType:                 schema.TypeString,
	},
	"routing_http_request_x_amzn_tls_version_header_name": {
		apiAttributeKey:        "routing.http.request.x_amzn_tls_version.header_name",
		listenerTypesSupported: []awstypes.ProtocolEnum{awstypes.ProtocolEnumHttps},
		tfType:                 schema.TypeString,
	},
	// Attributes only supported on HTTPS and HTTPS listeners.
	"routing_http_response_access_control_allow_credentials_header_value": {
		apiAttributeKey:        "routing.http.response.access_control_allow_credentials.header_value",
		listenerTypesSupported: []awstypes.ProtocolEnum{awstypes.ProtocolEnumHttp, awstypes.ProtocolEnumHttps},
		tfType:                 schema.TypeString,
	},
	"routing_http_response_access_control_allow_headers_header_value": {
		apiAttributeKey:        "routing.http.response.access_control_allow_headers.header_value",
		listenerTypesSupported: []awstypes.ProtocolEnum{awstypes.ProtocolEnumHttp, awstypes.ProtocolEnumHttps},
		tfType:                 schema.TypeString,
	},
	"routing_http_response_access_control_allow_methods_header_value": {
		apiAttributeKey:        "routing.http.response.access_control_allow_methods.header_value",
		listenerTypesSupported: []awstypes.ProtocolEnum{awstypes.ProtocolEnumHttp, awstypes.ProtocolEnumHttps},
		tfType:                 schema.TypeString,
	},
	"routing_http_response_access_control_allow_origin_header_value": {
		apiAttributeKey:        "routing.http.response.access_control_allow_origin.header_value",
		listenerTypesSupported: []awstypes.ProtocolEnum{awstypes.ProtocolEnumHttp, awstypes.ProtocolEnumHttps},
		tfType:                 schema.TypeString,
	},
	"routing_http_response_access_control_expose_headers_header_value": {
		apiAttributeKey:        "routing.http.response.access_control_expose_headers.header_value",
		listenerTypesSupported: []awstypes.ProtocolEnum{awstypes.ProtocolEnumHttp, awstypes.ProtocolEnumHttps},
		tfType:                 schema.TypeString,
	},
	"routing_http_response_access_control_max_age_header_value": {
		apiAttributeKey:        "routing.http.response.access_control_max_age.header_value",
		listenerTypesSupported: []awstypes.ProtocolEnum{awstypes.ProtocolEnumHttp, awstypes.ProtocolEnumHttps},
		tfType:                 schema.TypeString,
	},
	"routing_http_response_content_security_policy_header_value": {
		apiAttributeKey:        "routing.http.response.content_security_policy.header_value",
		listenerTypesSupported: []awstypes.ProtocolEnum{awstypes.ProtocolEnumHttp, awstypes.ProtocolEnumHttps},
		tfType:                 schema.TypeString,
	},
	"routing_http_response_server_enabled": {
		apiAttributeKey:        "routing.http.response.server.enabled",
		listenerTypesSupported: []awstypes.ProtocolEnum{awstypes.ProtocolEnumHttp, awstypes.ProtocolEnumHttps},
		tfType:                 schema.TypeBool,
	},
	"routing_http_response_strict_transport_security_header_value": {
		apiAttributeKey:        "routing.http.response.strict_transport_security.header_value",
		listenerTypesSupported: []awstypes.ProtocolEnum{awstypes.ProtocolEnumHttp, awstypes.ProtocolEnumHttps},
		tfType:                 schema.TypeString,
	},
	"routing_http_response_x_content_type_options_header_value": {
		apiAttributeKey:        "routing.http.response.x_content_type_options.header_value",
		listenerTypesSupported: []awstypes.ProtocolEnum{awstypes.ProtocolEnumHttp, awstypes.ProtocolEnumHttps},
		tfType:                 schema.TypeString,
	},
	"routing_http_response_x_frame_options_header_value": {
		apiAttributeKey:        "routing.http.response.x_frame_options.header_value",
		listenerTypesSupported: []awstypes.ProtocolEnum{awstypes.ProtocolEnumHttp, awstypes.ProtocolEnumHttps},
		tfType:                 schema.TypeString,
	},
})
