package github.com/hashicorp/terraform-provider-aws/internal/service/elbv2
import (
	"context"
	"fmt"
	"strconv"

	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/elasticloadbalancingv2/types"
	"github.com/hashicorp/terraform-plugin-framework-validators/datasourcevalidator"
	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/path"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	"github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (d *listenerRuleDataSource) Schema(ctx context.Context, req datasource.SchemaRequest, resp *datasource.SchemaResponse) {
	resp.Schema = schema.Schema{
		Attributes: map[string]schema.Attribute{
			names.AttrARN: schema.StringAttribute{
				CustomType: fwtypes.ARNType,
				Optional:   true,
				Computed:   true,
			},
			"listener_arn": schema.StringAttribute{
				CustomType: fwtypes.ARNType,
				Optional:   true,
				Computed:   true,
			},
			names.AttrPriority: schema.Int32Attribute{
				Optional: true,
				Computed: true,
			},
			names.AttrTags: tftags.TagsAttributeComputedOnly(),
		},
		Blocks: map[string]schema.Block{
			names.AttrAction: schema.ListNestedBlock{
				CustomType: fwtypes.NewListNestedObjectTypeOf[actionModel](ctx),
				NestedObject: schema.NestedBlockObject{
					Attributes: map[string]schema.Attribute{
						"order": schema.Int32Attribute{
							Computed: true,
						},
						names.AttrType: schema.StringAttribute{
							Computed: true,
						},
					},
					Blocks: map[string]schema.Block{
						"authenticate_cognito": schema.ListNestedBlock{
							CustomType: fwtypes.NewListNestedObjectTypeOf[authenticateCognitoActionConfigModel](ctx),
							NestedObject: schema.NestedBlockObject{
								Attributes: map[string]schema.Attribute{
									"authentication_request_extra_params": schema.MapAttribute{
										ElementType: types.StringType,
										Computed:    true,
									},
									"on_unauthenticated_request": schema.StringAttribute{
										Computed: true,
									},
									names.AttrScope: schema.StringAttribute{
										Computed: true,
									},
									"session_cookie_name": schema.StringAttribute{
										Computed: true,
									},
									"session_timeout": schema.Int64Attribute{
										Computed: true,
									},
									"user_pool_arn": schema.StringAttribute{
										Computed: true,
									},
									"user_pool_client_id": schema.StringAttribute{
										Computed: true,
									},
									"user_pool_domain": schema.StringAttribute{
										Computed: true,
									},
								},
							},
						},
						"authenticate_oidc": schema.ListNestedBlock{
							CustomType: fwtypes.NewListNestedObjectTypeOf[authenticateOIDCActionConfigModel](ctx),
							NestedObject: schema.NestedBlockObject{
								Attributes: map[string]schema.Attribute{
									"authentication_request_extra_params": schema.MapAttribute{
										ElementType: types.StringType,
										Computed:    true,
									},
									"authorization_endpoint": schema.StringAttribute{
										Computed: true,
									},
									names.AttrClientID: schema.StringAttribute{
										Computed: true,
									},
									names.AttrIssuer: schema.StringAttribute{
										Computed: true,
									},
									"on_unauthenticated_request": schema.StringAttribute{
										Computed: true,
									},
									names.AttrScope: schema.StringAttribute{
										Computed: true,
									},
									"session_cookie_name": schema.StringAttribute{
										Computed: true,
									},
									"session_timeout": schema.Int64Attribute{
										Computed: true,
									},
									"token_endpoint": schema.StringAttribute{
										Computed: true,
									},
									"user_info_endpoint": schema.StringAttribute{
										Computed: true,
									},
								},
							},
						},
						"fixed_response": schema.ListNestedBlock{
							CustomType: fwtypes.NewListNestedObjectTypeOf[fixedResponseActionConfigModel](ctx),
							NestedObject: schema.NestedBlockObject{
								Attributes: map[string]schema.Attribute{
									names.AttrContentType: schema.StringAttribute{
										Computed: true,
									},
									"message_body": schema.StringAttribute{
										Computed: true,
									},
									names.AttrStatusCode: schema.StringAttribute{
										Computed: true,
									},
								},
							},
						},
						"forward": schema.ListNestedBlock{
							CustomType: fwtypes.NewListNestedObjectTypeOf[forwardActionConfigModel](ctx),
							NestedObject: schema.NestedBlockObject{
								Blocks: map[string]schema.Block{
									"stickiness": schema.ListNestedBlock{
										CustomType: fwtypes.NewListNestedObjectTypeOf[targetGroupStickinessConfigModel](ctx),
										NestedObject: schema.NestedBlockObject{
											Attributes: map[string]schema.Attribute{
												names.AttrDuration: schema.Int32Attribute{
													Computed: true,
												},
												names.AttrEnabled: schema.BoolAttribute{
													Computed: true,
												},
											},
										},
									},
									"target_group": schema.SetNestedBlock{
										CustomType: fwtypes.NewSetNestedObjectTypeOf[targetGroupTupleModel](ctx),
										NestedObject: schema.NestedBlockObject{
											Attributes: map[string]schema.Attribute{
												names.AttrARN: schema.StringAttribute{
													Computed: true,
												},
												names.AttrWeight: schema.Int32Attribute{
													Computed: true,
												},
											},
										},
									},
								},
							},
						},
						"redirect": schema.ListNestedBlock{
							CustomType: fwtypes.NewListNestedObjectTypeOf[redirectActionConfigModel](ctx),
							NestedObject: schema.NestedBlockObject{
								Attributes: map[string]schema.Attribute{
									"host": schema.StringAttribute{
										Computed: true,
									},
									names.AttrPath: schema.StringAttribute{
										Computed: true,
									},
									names.AttrPort: schema.StringAttribute{
										Computed: true,
									},
									names.AttrProtocol: schema.StringAttribute{
										Computed: true,
									},
									"query": schema.StringAttribute{
										Computed: true,
									},
									names.AttrStatusCode: schema.StringAttribute{
										Computed: true,
									},
								},
							},
						},
					},
				},
			},
			names.AttrCondition: schema.SetNestedBlock{
				CustomType: fwtypes.NewSetNestedObjectTypeOf[ruleConditionModel](ctx),
				NestedObject: schema.NestedBlockObject{
					Blocks: map[string]schema.Block{
						"host_header": schema.ListNestedBlock{
							CustomType: fwtypes.NewListNestedObjectTypeOf[hostHeaderConfigModel](ctx),
							NestedObject: schema.NestedBlockObject{
								Attributes: map[string]schema.Attribute{
									"regex_values": schema.SetAttribute{
										ElementType: types.StringType,
										Computed:    true,
									},
									names.AttrValues: schema.SetAttribute{
										ElementType: types.StringType,
										Computed:    true,
									},
								},
							},
						},
						"http_header": schema.ListNestedBlock{
							CustomType: fwtypes.NewListNestedObjectTypeOf[httpHeaderConfigModel](ctx),
							NestedObject: schema.NestedBlockObject{
								Attributes: map[string]schema.Attribute{
									"http_header_name": schema.StringAttribute{
										Computed: true,
									},
									"regex_values": schema.SetAttribute{
										ElementType: types.StringType,
										Computed:    true,
									},
									names.AttrValues: schema.SetAttribute{
										ElementType: types.StringType,
										Computed:    true,
									},
								},
							},
						},
						"http_request_method": schema.ListNestedBlock{
							CustomType: fwtypes.NewListNestedObjectTypeOf[httpRquestMethodConfigModel](ctx),
							NestedObject: schema.NestedBlockObject{
								Attributes: map[string]schema.Attribute{
									names.AttrValues: schema.SetAttribute{
										ElementType: types.StringType,
										Computed:    true,
									},
								},
							},
						},
						"path_pattern": schema.ListNestedBlock{
							CustomType: fwtypes.NewListNestedObjectTypeOf[pathPatternConfigModel](ctx),
							NestedObject: schema.NestedBlockObject{
								Attributes: map[string]schema.Attribute{
									"regex_values": schema.SetAttribute{
										ElementType: types.StringType,
										Computed:    true,
									},
									names.AttrValues: schema.SetAttribute{
										ElementType: types.StringType,
										Computed:    true,
									},
								},
							},
						},
						"query_string": schema.ListNestedBlock{
							CustomType: fwtypes.NewListNestedObjectTypeOf[queryStringConfigModel](ctx),
							NestedObject: schema.NestedBlockObject{
								Blocks: map[string]schema.Block{
									names.AttrValues: schema.SetNestedBlock{
										CustomType: fwtypes.NewSetNestedObjectTypeOf[queryStringKeyValuePairModel](ctx),
										NestedObject: schema.NestedBlockObject{
											Attributes: map[string]schema.Attribute{
												names.AttrKey: schema.StringAttribute{
													Computed: true,
												},
												names.AttrValue: schema.StringAttribute{
													Computed: true,
												},
											},
										},
									},
								},
							},
						},
						"source_ip": schema.ListNestedBlock{
							CustomType: fwtypes.NewListNestedObjectTypeOf[sourceIPConfigModel](ctx),
							NestedObject: schema.NestedBlockObject{
								Attributes: map[string]schema.Attribute{
									names.AttrValues: schema.SetAttribute{
										ElementType: types.StringType,
										Computed:    true,
									},
								},
							},
						},
					},
				},
			},
			"transform": schema.SetNestedBlock{
				CustomType: fwtypes.NewSetNestedObjectTypeOf[transformModel](ctx),
				NestedObject: schema.NestedBlockObject{
					Attributes: map[string]schema.Attribute{
						names.AttrType: schema.StringAttribute{
							Computed: true,
						},
					},
					Blocks: map[string]schema.Block{
						"host_header_rewrite_config": schema.ListNestedBlock{
							CustomType: fwtypes.NewListNestedObjectTypeOf[hostHeaderRewriteConfigModel](ctx),
							NestedObject: schema.NestedBlockObject{
								Blocks: map[string]schema.Block{
									"rewrite": transformRewriteConfigDataSourceSchema(ctx),
								},
							},
						},
						"url_rewrite_config": schema.ListNestedBlock{
							CustomType: fwtypes.NewListNestedObjectTypeOf[urlRewriteConfigModel](ctx),
							NestedObject: schema.NestedBlockObject{
								Blocks: map[string]schema.Block{
									"rewrite": transformRewriteConfigDataSourceSchema(ctx),
								},
							},
						},
					},
				},
			},
		},
	}
}
