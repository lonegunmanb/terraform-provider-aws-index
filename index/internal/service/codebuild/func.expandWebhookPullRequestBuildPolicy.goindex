package github.com/hashicorp/terraform-provider-aws/internal/service/codebuild
import (
	"context"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/codebuild"
	"github.com/aws/aws-sdk-go-v2/service/codebuild/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandWebhookPullRequestBuildPolicy(tfMap map[string]any) *types.PullRequestBuildPolicy {
	if tfMap == nil {
		return nil
	}

	apiObject := &types.PullRequestBuildPolicy{
		RequiresCommentApproval: types.PullRequestBuildCommentApproval(tfMap["requires_comment_approval"].(string)),
	}

	if apiObject.RequiresCommentApproval != types.PullRequestBuildCommentApprovalDisabled {
		if v, ok := tfMap["approver_roles"]; ok && v.(*schema.Set).Len() > 0 {
			var roles []types.PullRequestBuildApproverRole
			for _, role := range v.(*schema.Set).List() {
				if role != nil {
					roles = append(roles, types.PullRequestBuildApproverRole(role.(string)))
				}
			}
			if len(roles) > 0 {
				apiObject.ApproverRoles = roles
			}
		}
	}

	return apiObject
}
