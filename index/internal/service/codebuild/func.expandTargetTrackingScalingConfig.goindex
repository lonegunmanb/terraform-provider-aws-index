package github.com/hashicorp/terraform-provider-aws/internal/service/codebuild
import (
	"context"
	"errors"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/codebuild"
	"github.com/aws/aws-sdk-go-v2/service/codebuild/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandTargetTrackingScalingConfig(tfMap map[string]any) *types.TargetTrackingScalingConfiguration {
	if tfMap == nil {
		return nil
	}

	apiObject := &types.TargetTrackingScalingConfiguration{}

	if v, ok := tfMap["metric_type"].(string); ok {
		apiObject.MetricType = types.FleetScalingMetricType(v)
	}

	if v, ok := tfMap["target_value"].(float64); ok {
		apiObject.TargetValue = aws.Float64(v)
	}

	return apiObject
}
