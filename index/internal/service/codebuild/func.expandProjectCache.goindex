package github.com/hashicorp/terraform-provider-aws/internal/service/codebuild
import (
	"bytes"
	"context"
	"fmt"
	"log"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/codebuild"
	"github.com/aws/aws-sdk-go-v2/service/codebuild/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/customdiff"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandProjectCache(tfMap map[string]any) *types.ProjectCache {
	if tfMap == nil {
		return nil
	}

	cacheType := types.CacheType(tfMap[names.AttrType].(string))
	apiObject := &types.ProjectCache{
		Type: cacheType,
	}

	if v, ok := tfMap[names.AttrLocation]; ok {
		apiObject.Location = aws.String(v.(string))
	}

	if cacheType == types.CacheTypeLocal {
		if v, ok := tfMap["modes"].([]any); ok && len(v) > 0 {
			apiObject.Modes = flex.ExpandStringyValueList[types.CacheMode](v)
		}
	}

	return apiObject
}
