package github.com/hashicorp/terraform-provider-aws/internal/service/codebuild
import (
	"context"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/codebuild"
	"github.com/aws/aws-sdk-go-v2/service/codebuild/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandWebhookFilter(tfMap map[string]any) *types.WebhookFilter {
	if tfMap == nil {
		return nil
	}

	apiObject := &types.WebhookFilter{}

	if v, ok := tfMap["exclude_matched_pattern"].(bool); ok {
		apiObject.ExcludeMatchedPattern = aws.Bool(v)
	}

	if v, ok := tfMap["pattern"].(string); ok && v != "" {
		apiObject.Pattern = aws.String(v)
	}

	if v, ok := tfMap[names.AttrType].(string); ok && v != "" {
		apiObject.Type = types.WebhookFilterType(v)
	}

	return apiObject
}
