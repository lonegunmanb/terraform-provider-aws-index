package github.com/hashicorp/terraform-provider-aws/internal/service/codebuild
import (
	"bytes"
	"context"
	"fmt"
	"log"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/codebuild"
	"github.com/aws/aws-sdk-go-v2/service/codebuild/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/customdiff"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func resourceProjectArtifactsHash(v any) int {
	var buf bytes.Buffer
	tfMap := v.(map[string]any)

	if v, ok := tfMap["artifact_identifier"]; ok {
		fmt.Fprintf(&buf, "%s-", v.(string))
	}

	if v, ok := tfMap["bucket_owner_access"]; ok {
		fmt.Fprintf(&buf, "%s-", v.(string))
	}

	if v, ok := tfMap["encryption_disabled"]; ok {
		fmt.Fprintf(&buf, "%t-", v.(bool))
	}

	if v, ok := tfMap[names.AttrLocation]; ok {
		fmt.Fprintf(&buf, "%s-", v.(string))
	}

	if v, ok := tfMap["namespace_type"]; ok {
		fmt.Fprintf(&buf, "%s-", v.(string))
	}

	if v, ok := tfMap["override_artifact_name"]; ok {
		fmt.Fprintf(&buf, "%t-", v.(bool))
	}

	if v, ok := tfMap["packaging"]; ok {
		fmt.Fprintf(&buf, "%s-", v.(string))
	}

	if v, ok := tfMap[names.AttrPath]; ok {
		fmt.Fprintf(&buf, "%s-", v.(string))
	}

	if v, ok := tfMap[names.AttrType]; ok {
		fmt.Fprintf(&buf, "%s-", v.(string))
	}

	return create.StringHashcode(buf.String())
}
