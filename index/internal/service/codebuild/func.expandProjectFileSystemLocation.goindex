package github.com/hashicorp/terraform-provider-aws/internal/service/codebuild
import (
	"bytes"
	"context"
	"fmt"
	"log"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/codebuild"
	"github.com/aws/aws-sdk-go-v2/service/codebuild/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/customdiff"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandProjectFileSystemLocation(tfMap map[string]any) *types.ProjectFileSystemLocation {
	if tfMap == nil {
		return nil
	}

	apiObject := &types.ProjectFileSystemLocation{
		Type: types.FileSystemType(tfMap[names.AttrType].(string)),
	}

	if tfMap[names.AttrIdentifier].(string) != "" {
		apiObject.Identifier = aws.String(tfMap[names.AttrIdentifier].(string))
	}

	if tfMap[names.AttrLocation].(string) != "" {
		apiObject.Location = aws.String(tfMap[names.AttrLocation].(string))
	}

	if tfMap["mount_options"].(string) != "" {
		apiObject.MountOptions = aws.String(tfMap["mount_options"].(string))
	}

	if tfMap["mount_point"].(string) != "" {
		apiObject.MountPoint = aws.String(tfMap["mount_point"].(string))
	}

	return apiObject
}
