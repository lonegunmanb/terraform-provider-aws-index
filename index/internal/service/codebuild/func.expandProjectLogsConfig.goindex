package github.com/hashicorp/terraform-provider-aws/internal/service/codebuild
import (
	"bytes"
	"context"
	"fmt"
	"log"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/codebuild"
	"github.com/aws/aws-sdk-go-v2/service/codebuild/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/customdiff"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandProjectLogsConfig(v any) *types.LogsConfig {
	apiObject := &types.LogsConfig{}

	if v, ok := v.([]any); ok && len(v) > 0 && v[0] != nil {
		if tfMap := v[0].(map[string]any); tfMap != nil {
			if v, ok := tfMap[names.AttrCloudWatchLogs].([]any); ok && len(v) > 0 && v[0] != nil {
				apiObject.CloudWatchLogs = expandCloudWatchLogsConfig(v[0].(map[string]any))
			}

			if v, ok := tfMap["s3_logs"].([]any); ok && len(v) > 0 && v[0] != nil {
				apiObject.S3Logs = expandS3LogsConfig(v[0].(map[string]any))
			}
		}
	}

	if apiObject.CloudWatchLogs == nil {
		apiObject.CloudWatchLogs = &types.CloudWatchLogsConfig{
			Status: types.LogsConfigStatusTypeEnabled,
		}
	}

	if apiObject.S3Logs == nil {
		apiObject.S3Logs = &types.S3LogsConfig{
			Status: types.LogsConfigStatusTypeDisabled,
		}
	}

	return apiObject
}
