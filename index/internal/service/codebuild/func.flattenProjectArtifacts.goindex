package github.com/hashicorp/terraform-provider-aws/internal/service/codebuild
import (
	"bytes"
	"context"
	"fmt"
	"log"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/codebuild"
	"github.com/aws/aws-sdk-go-v2/service/codebuild/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/customdiff"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenProjectArtifacts(apiObject *types.ProjectArtifacts) map[string]any {
	if apiObject == nil {
		return nil
	}

	tfMap := map[string]any{
		"bucket_owner_access": apiObject.BucketOwnerAccess,
		"namespace_type":      apiObject.NamespaceType,
		"packaging":           apiObject.Packaging,
		names.AttrType:        apiObject.Type,
	}

	if apiObject.ArtifactIdentifier != nil {
		tfMap["artifact_identifier"] = aws.ToString(apiObject.ArtifactIdentifier)
	}

	if apiObject.EncryptionDisabled != nil {
		tfMap["encryption_disabled"] = aws.ToBool(apiObject.EncryptionDisabled)
	}

	if apiObject.Location != nil {
		tfMap[names.AttrLocation] = aws.ToString(apiObject.Location)
	}

	if apiObject.OverrideArtifactName != nil {
		tfMap["override_artifact_name"] = aws.ToBool(apiObject.OverrideArtifactName)
	}

	if apiObject.Name != nil {
		tfMap[names.AttrName] = aws.ToString(apiObject.Name)
	}

	if apiObject.Path != nil {
		tfMap[names.AttrPath] = aws.ToString(apiObject.Path)
	}

	return tfMap
}
