package github.com/hashicorp/terraform-provider-aws/internal/service/appstream
import (
	"context"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/appstream"
	awstypes "github.com/aws/aws-sdk-go-v2/service/appstream/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandCertificateBasedAuthProperties(tfList []any) *awstypes.CertificateBasedAuthProperties {
	if len(tfList) == 0 {
		return nil
	}

	attr := tfList[0].(map[string]any)

	apiObject := &awstypes.CertificateBasedAuthProperties{}

	if v, ok := attr["certificate_authority_arn"].(string); ok && v != "" {
		apiObject.CertificateAuthorityArn = aws.String(v)
	}

	if v, ok := attr[names.AttrStatus].(string); ok && v != "" {
		apiObject.Status = awstypes.CertificateBasedAuthStatus(v)
	}

	return apiObject
}
