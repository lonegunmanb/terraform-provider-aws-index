package github.com/hashicorp/terraform-provider-aws/internal/service/appstream
import (
	"context"
	"errors"
	"fmt"
	"log"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/appstream"
	awstypes "github.com/aws/aws-sdk-go-v2/service/appstream/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func resourceUserStackAssociationCreate(ctx context.Context, d *schema.ResourceData, meta any) diag.Diagnostics {
	var diags diag.Diagnostics
	conn := meta.(*conns.AWSClient).AppStreamClient(ctx)

	userName, authType, stackName := d.Get(names.AttrUserName).(string), awstypes.AuthenticationType(d.Get("authentication_type").(string)), d.Get("stack_name").(string)
	id := userStackAssociationCreateResourceID(userName, authType, stackName)
	userStackAssociation := awstypes.UserStackAssociation{
		AuthenticationType: authType,
		StackName:          aws.String(stackName),
		UserName:           aws.String(userName),
	}

	if v, ok := d.GetOk("send_email_notification"); ok {
		userStackAssociation.SendEmailNotification = aws.Bool(v.(bool))
	}

	input := appstream.BatchAssociateUserStackInput{
		UserStackAssociations: []awstypes.UserStackAssociation{userStackAssociation},
	}
	output, err := conn.BatchAssociateUserStack(ctx, &input)

	if err == nil {
		err = userStackAssociationsError(output.Errors)
	}

	if err != nil {
		return sdkdiag.AppendErrorf(diags, "creating AppStream User Stack Association (%s): %s", id, err)
	}

	d.SetId(id)

	return append(diags, resourceUserStackAssociationRead(ctx, d, meta)...)
}
