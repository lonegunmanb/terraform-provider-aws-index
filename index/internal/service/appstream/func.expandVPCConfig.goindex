package github.com/hashicorp/terraform-provider-aws/internal/service/appstream
import (
	"context"
	"errors"
	"fmt"
	"log"
	"reflect"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/appstream"
	awstypes "github.com/aws/aws-sdk-go-v2/service/appstream/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	itypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandVPCConfig(tfList []any) *awstypes.VpcConfig {
	if len(tfList) == 0 {
		return nil
	}

	apiObject := &awstypes.VpcConfig{}

	tfMap := tfList[0].(map[string]any)

	if v, ok := tfMap[names.AttrSecurityGroupIDs]; ok {
		apiObject.SecurityGroupIds = flex.ExpandStringValueList(v.([]any))
	}

	if v, ok := tfMap[names.AttrSubnetIDs]; ok {
		apiObject.SubnetIds = flex.ExpandStringValueList(v.([]any))
	}

	if itypes.IsZero(apiObject) {
		return nil
	}

	return apiObject
}
