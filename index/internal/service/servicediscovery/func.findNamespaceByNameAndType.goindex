package github.com/hashicorp/terraform-provider-aws/internal/service/servicediscovery
import (
	"context"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/servicediscovery"
	awstypes "github.com/aws/aws-sdk-go-v2/service/servicediscovery/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func findNamespaceByNameAndType(ctx context.Context, conn *servicediscovery.Client, name string, nsType awstypes.NamespaceType) (*awstypes.NamespaceSummary, error) {
	input := &servicediscovery.ListNamespacesInput{
		Filters: []awstypes.NamespaceFilter{namespaceTypeFilter(nsType)},
	}

	return findNamespace(ctx, conn, input, func(v *awstypes.NamespaceSummary) bool {
		return aws.ToString(v.Name) == name
	})
}
