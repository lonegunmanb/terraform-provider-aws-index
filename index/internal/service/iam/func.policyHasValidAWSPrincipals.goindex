package github.com/hashicorp/terraform-provider-aws/internal/service/iam
import (
	"encoding/json"
	"fmt"
	"slices"
	"strconv"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws/arn"
	"github.com/jmespath/go-jmespath"
)
func policyHasValidAWSPrincipals(policy string) (bool, error) { // nosemgrep:ci.aws-in-func-name
	var policyData any
	err := json.Unmarshal([]byte(policy), &policyData)
	if err != nil {
		return false, fmt.Errorf("parsing policy: %w", err)
	}

	result, err := jmespath.Search("Statement[*].Principal.AWS", policyData)
	if err != nil {
		return false, fmt.Errorf("parsing policy: %w", err)
	}

	principals, ok := result.([]any)
	if !ok {
		return false, fmt.Errorf(`parsing policy: unexpected result: (%[1]T) "%[1]v"`, result)
	}

	for _, principal := range principals {
		switch x := principal.(type) {
		case string:
			if !isValidPolicyAWSPrincipal(x) {
				return false, nil
			}
		case []string:
			for _, s := range x {
				if !isValidPolicyAWSPrincipal(s) {
					return false, nil
				}
			}
		}
	}

	return true, nil
}
