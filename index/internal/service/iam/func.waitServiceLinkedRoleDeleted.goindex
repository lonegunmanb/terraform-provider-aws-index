package github.com/hashicorp/terraform-provider-aws/internal/service/iam
import (
	"context"
	"errors"
	"fmt"
	"log"
	"strings"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/arn"
	"github.com/aws/aws-sdk-go-v2/service/iam"
	awstypes "github.com/aws/aws-sdk-go-v2/service/iam/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func waitServiceLinkedRoleDeleted(ctx context.Context, conn *iam.Client, id string) error {
	stateConf := &retry.StateChangeConf{
		Pending: enum.Slice(awstypes.DeletionTaskStatusTypeInProgress, awstypes.DeletionTaskStatusTypeNotStarted),
		Target:  enum.Slice(awstypes.DeletionTaskStatusTypeSucceeded),
		Refresh: statusServiceLinkedRoleDeletion(ctx, conn, id),
		Timeout: 5 * time.Minute,
		Delay:   10 * time.Second,
	}

	outputRaw, err := stateConf.WaitForStateContext(ctx)

	if output, ok := outputRaw.(*iam.GetServiceLinkedRoleDeletionStatusOutput); ok {
		if reason := output.Reason; reason != nil {
			var errs []error

			for _, v := range reason.RoleUsageList {
				errs = append(errs, fmt.Errorf("%s: %s", aws.ToString(v.Region), strings.Join(v.Resources, ", ")))
			}

			tfresource.SetLastError(err, fmt.Errorf("%s: %w", aws.ToString(reason.Reason), errors.Join(errs...)))
		}

		return err
	}

	return err
}
