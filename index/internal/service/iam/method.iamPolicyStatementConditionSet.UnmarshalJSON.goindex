package github.com/hashicorp/terraform-provider-aws/internal/service/iam
import (
	"encoding/json"
	"fmt"
	"slices"
	"strconv"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws/arn"
	"github.com/jmespath/go-jmespath"
)
func (cs *iamPolicyStatementConditionSet) UnmarshalJSON(b []byte) error {
	var out iamPolicyStatementConditionSet

	var data map[string]map[string]any
	if err := json.Unmarshal(b, &data); err != nil {
		return err
	}

	for test_key, test_value := range data {
		for var_key, var_values := range test_value {
			switch var_values := var_values.(type) {
			case string:
				out = append(out, iamPolicyStatementCondition{Test: test_key, Variable: var_key, Values: []string{var_values}})
			case bool:
				out = append(out, iamPolicyStatementCondition{Test: test_key, Variable: var_key, Values: strconv.FormatBool(var_values)})
			case []any:
				values := []string{}
				for _, v := range var_values {
					values = append(values, v.(string))
				}
				out = append(out, iamPolicyStatementCondition{Test: test_key, Variable: var_key, Values: values})
			}
		}
	}

	*cs = out
	return nil
}
