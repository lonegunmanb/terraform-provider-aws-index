package github.com/hashicorp/terraform-provider-aws/internal/service/iam
import (
	"context"
	"errors"
	"fmt"
	"log"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/iam"
	awstypes "github.com/aws/aws-sdk-go-v2/service/iam/types"
	"github.com/hashicorp/aws-sdk-go-base/v2/tfawserr"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func deleteUserGroupMemberships(ctx context.Context, conn *iam.Client, user string) error {
	input := &iam.ListGroupsForUserInput{
		UserName: aws.String(user),
	}
	var groupNames []string

	pages := iam.NewListGroupsForUserPaginator(conn, input)
	for pages.HasMorePages() {
		page, err := pages.NextPage(ctx)
		if err != nil {
			return fmt.Errorf("listing IAM User (%s) groups: %w", user, err)
		}

		for _, v := range page.Groups {
			groupNames = append(groupNames, aws.ToString(v.GroupName))
		}
	}

	for _, groupName := range groupNames {
		// use iam group membership func to remove user from all groups
		log.Printf("[DEBUG] Removing IAM User %s from IAM Group %s", user, groupName)
		if err := removeUsersFromGroup(ctx, conn, []string{user}, groupName); err != nil {
			return err
		}
	}

	return nil
}
