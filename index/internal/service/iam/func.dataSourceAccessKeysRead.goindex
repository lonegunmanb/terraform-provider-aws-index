package github.com/hashicorp/terraform-provider-aws/internal/service/iam
import (
	"context"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/iam/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func dataSourceAccessKeysRead(ctx context.Context, d *schema.ResourceData, meta any) diag.Diagnostics {
	var diags diag.Diagnostics

	conn := meta.(*conns.AWSClient).IAMClient(ctx)

	username := d.Get("user").(string)
	output, err := findAccessKeysByUser(ctx, conn, username)

	if err != nil {
		return sdkdiag.AppendErrorf(diags, "reading IAM Access Keys (%s): %s", username, err)
	}

	d.SetId(username)
	if err := d.Set("access_keys", flattenAccessKeys(output)); err != nil {
		return sdkdiag.AppendErrorf(diags, "setting access_keys: %s", err)
	}

	return diags
}
