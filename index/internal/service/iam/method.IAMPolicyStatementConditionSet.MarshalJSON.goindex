package github.com/hashicorp/terraform-provider-aws/internal/service/iam
import (
	"encoding/json"
	"fmt"
	"slices"
	"strconv"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws/arn"
	"github.com/jmespath/go-jmespath"
)
func (cs IAMPolicyStatementConditionSet) MarshalJSON() ([]byte, error) {
	raw := map[string]map[string]any{}

	for _, c := range cs {
		if _, ok := raw[c.Test]; !ok {
			raw[c.Test] = map[string]any{}
		}
		if _, ok := raw[c.Test][c.Variable]; !ok {
			raw[c.Test][c.Variable] = []string{}
		}
		switch i := c.Values.(type) {
		case []string:
			// order matters with values so not sorting here
			raw[c.Test][c.Variable] = append(raw[c.Test][c.Variable].([]string), i...)
		case string:
			raw[c.Test][c.Variable] = append(raw[c.Test][c.Variable].([]string), i)
		default:
			return nil, fmt.Errorf("Unsupported data type for IAMPolicyStatementConditionSet: %s", i)
		}
	}

	// flatten entries with a single item to match AWS IAM syntax
	for k1 := range raw {
		for k2 := range raw[k1] {
			items := raw[k1][k2].([]string)
			if len(items) == 1 {
				raw[k1][k2] = items[0]
			}
		}
	}

	return json.Marshal(&raw)
}
