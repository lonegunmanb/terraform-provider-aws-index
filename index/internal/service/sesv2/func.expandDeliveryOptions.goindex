package github.com/hashicorp/terraform-provider-aws/internal/service/sesv2
import (
	"context"
	"fmt"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/sesv2"
	"github.com/aws/aws-sdk-go-v2/service/sesv2/types"
	"github.com/hashicorp/go-cty/cty"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandDeliveryOptions(tfMap map[string]any) *types.DeliveryOptions {
	if tfMap == nil {
		return nil
	}

	apiObject := &types.DeliveryOptions{}

	if v, ok := tfMap["max_delivery_seconds"].(int); ok && v != 0 {
		apiObject.MaxDeliverySeconds = aws.Int64(int64(v))
	}

	if v, ok := tfMap["sending_pool_name"].(string); ok && v != "" {
		apiObject.SendingPoolName = aws.String(v)
	}

	if v, ok := tfMap["tls_policy"].(string); ok && v != "" {
		apiObject.TlsPolicy = types.TlsPolicy(v)
	}

	return apiObject
}
