package github.com/hashicorp/terraform-provider-aws/internal/service/sesv2
import (
	"context"
	"errors"
	"fmt"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/sesv2"
	"github.com/aws/aws-sdk-go-v2/service/sesv2/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandDKIMSigningAttributes(tfMap map[string]any) *types.DkimSigningAttributes {
	if tfMap == nil {
		return nil
	}

	a := &types.DkimSigningAttributes{}

	if v, ok := tfMap["domain_signing_private_key"].(string); ok && v != "" {
		a.DomainSigningPrivateKey = aws.String(v)
	}

	if v, ok := tfMap["domain_signing_selector"].(string); ok && v != "" {
		a.DomainSigningSelector = aws.String(v)
	}

	if v, ok := tfMap["next_signing_key_length"].(string); ok && v != "" {
		a.NextSigningKeyLength = types.DkimSigningKeyLength(v)
	}

	return a
}
