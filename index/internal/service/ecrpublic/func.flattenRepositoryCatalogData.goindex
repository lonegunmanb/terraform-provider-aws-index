package github.com/hashicorp/terraform-provider-aws/internal/service/ecrpublic
import (
	"context"
	"fmt"
	"log"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ecrpublic"
	awstypes "github.com/aws/aws-sdk-go-v2/service/ecrpublic/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	itypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenRepositoryCatalogData(apiObject *ecrpublic.GetRepositoryCatalogDataOutput) map[string]any {
	if apiObject == nil {
		return nil
	}

	catalogData := apiObject.CatalogData

	tfMap := map[string]any{}

	if v := catalogData.AboutText; v != nil {
		tfMap["about_text"] = aws.ToString(v)
	}

	if v := catalogData.Architectures; v != nil {
		tfMap["architectures"] = v
	}

	if v := catalogData.Description; v != nil {
		tfMap[names.AttrDescription] = aws.ToString(v)
	}

	if v := catalogData.OperatingSystems; v != nil {
		tfMap["operating_systems"] = v
	}

	if v := catalogData.UsageText; v != nil {
		tfMap["usage_text"] = aws.ToString(v)
	}

	return tfMap
}
