package github.com/hashicorp/terraform-provider-aws/internal/service/cloudformation
import (
	"context"
	"fmt"
	"log"
	"strings"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cloudformation"
	awstypes "github.com/aws/aws-sdk-go-v2/service/cloudformation/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	sdkid "github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func resourceStackInstancesRead(ctx context.Context, d *schema.ResourceData, meta any) diag.Diagnostics {
	var diags diag.Diagnostics

	// Dramatic simplification of the ID from stack_set_instance removing regions and accounts. The upside
	// is simplicity. The downside is that we hoover up all stack instances for the stack set.
	parts, err := flex.ExpandResourceId(d.Id(), stackInstancesResourceIDPartCount, true)
	if err != nil {
		return create.AppendDiagError(diags, names.CloudFormation, create.ErrActionExpandingResourceId, ResNameStackInstances, d.Id(), err)
	}

	stackSetName, callAs, deployedByOU := parts[0], parts[1], parts[2]
	d.Set("stack_set_name", stackSetName)

	if callAs == "" {
		callAs = d.Get("call_as").(string)
	}

	stackInstances, err := findStackInstancesByNameCallAs(ctx, meta, stackSetName, callAs, deployedByOU == "OU", flex.ExpandStringValueSet(d.Get(AttrAccounts).(*schema.Set)), flex.ExpandStringValueSet(d.Get(AttrRegions).(*schema.Set)))
	if !d.IsNewResource() && tfresource.NotFound(err) {
		log.Printf("[WARN] CloudFormation Stack Instances (%s) not found, removing from state", d.Id())
		d.SetId("")
		return diags
	}

	if err != nil {
		return create.AppendDiagError(diags, names.CloudFormation, create.ErrActionReading, ResNameStackInstances, d.Id(), err)
	}

	if len(stackInstances.OUs) > 0 {
		d.Set("deployment_targets", replaceOrganizationalUnitIDs(d.Get("deployment_targets").([]any), stackInstances.OUs))
	}

	d.Set(AttrAccounts, flex.FlattenStringValueList(stackInstances.Accounts))
	d.Set(AttrRegions, flex.FlattenStringValueList(stackInstances.Regions))
	d.Set("stack_instance_summaries", flattenStackInstancesSummaries(stackInstances.Summaries))
	d.Set("stack_set_id", stackInstances.StackSetID)

	if err := d.Set("parameter_overrides", flattenAllParameters(stackInstances.ParameterOverrides)); err != nil {
		return create.AppendDiagError(diags, names.CloudFormation, create.ErrActionReading, ResNameStackInstances, d.Id(), err)
	}

	return diags
}
