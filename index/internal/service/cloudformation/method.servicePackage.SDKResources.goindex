package github.com/hashicorp/terraform-provider-aws/internal/service/cloudformation
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cloudformation"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) SDKResources(ctx context.Context) []*inttypes.ServicePackageSDKResource {
	return []*inttypes.ServicePackageSDKResource{
		{
			Factory:  resourceStack,
			TypeName: "aws_cloudformation_stack",
			Name:     "Stack",
			Tags:     unique.Make(inttypes.ServicePackageResourceTags{}),
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceStackInstances,
			TypeName: "aws_cloudformation_stack_instances",
			Name:     "Stack Instances",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceStackSet,
			TypeName: "aws_cloudformation_stack_set",
			Name:     "Stack Set",
			Tags:     unique.Make(inttypes.ServicePackageResourceTags{}),
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceStackSetInstance,
			TypeName: "aws_cloudformation_stack_set_instance",
			Name:     "Stack Set Instance",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  resourceType,
			TypeName: "aws_cloudformation_type",
			Name:     "Type",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
	}
}
