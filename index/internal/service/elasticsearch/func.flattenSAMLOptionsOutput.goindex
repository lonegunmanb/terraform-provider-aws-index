package github.com/hashicorp/terraform-provider-aws/internal/service/elasticsearch
import (
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/elasticsearchservice/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenSAMLOptionsOutput(d *schema.ResourceData, apiObject *awstypes.SAMLOptionsOutput) []any {
	if apiObject == nil {
		return nil
	}

	tfMap := map[string]any{
		names.AttrEnabled: aws.ToBool(apiObject.Enabled),
		"idp":             flattenSAMLIdp(apiObject.Idp),
	}

	tfMap["roles_key"] = aws.ToString(apiObject.RolesKey)
	tfMap["session_timeout_minutes"] = aws.ToInt32(apiObject.SessionTimeoutMinutes)
	tfMap["subject_key"] = aws.ToString(apiObject.SubjectKey)

	// samlOptions.master_backend_role and samlOptions.master_user_name will be added to the
	// all_access role in kibana's security manager.  These values cannot be read or
	// modified by the elasticsearch API.  So, we ignore it on read and let persist
	// the value already in the state.
	tfMap["master_backend_role"] = d.Get("saml_options.0.master_backend_role").(string)
	tfMap["master_user_name"] = d.Get("saml_options.0.master_user_name").(string)

	return []any{tfMap}
}
