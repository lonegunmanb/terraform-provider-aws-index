package github.com/hashicorp/terraform-provider-aws/internal/service/elasticsearch
import (
	"context"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	elasticsearch "github.com/aws/aws-sdk-go-v2/service/elasticsearchservice"
	awstypes "github.com/aws/aws-sdk-go-v2/service/elasticsearchservice/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func findDomainSAMLOptionByDomainName(ctx context.Context, conn *elasticsearch.Client, name string) (*awstypes.SAMLOptionsOutput, error) {
	output, err := findDomainByName(ctx, conn, name)

	if err != nil {
		return nil, err
	}

	if output.AdvancedSecurityOptions == nil || output.AdvancedSecurityOptions.SAMLOptions == nil {
		return nil, tfresource.NewEmptyResultError(name)
	}

	return output.AdvancedSecurityOptions.SAMLOptions, nil
}
