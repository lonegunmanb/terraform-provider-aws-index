package github.com/hashicorp/terraform-provider-aws/internal/service/backup
import (
	"context"
	"fmt"
	"maps"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/backup"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/logging"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/types/option"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func listTags(ctx context.Context, conn *backup.Client, identifier string, optFns ...func(*backup.Options)) (tftags.KeyValueTags, error) {
	input := backup.ListTagsInput{
		ResourceArn: aws.String(identifier),
	}

	output := make(map[string]string)

	pages := backup.NewListTagsPaginator(conn, &input)
	for pages.HasMorePages() {
		page, err := pages.NextPage(ctx, optFns...)

		if err != nil {
			return tftags.New(ctx, nil), err
		}

		maps.Copy(output, page.Tags)
	}

	return keyValueTags(ctx, output), nil
}
