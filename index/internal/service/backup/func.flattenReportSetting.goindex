package github.com/hashicorp/terraform-provider-aws/internal/service/backup
import (
	"context"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/backup"
	awstypes "github.com/aws/aws-sdk-go-v2/service/backup/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	sdkid "github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenReportSetting(apiObject *awstypes.ReportSetting) []any {
	if apiObject == nil {
		return []any{}
	}

	tfMap := map[string]any{
		"report_template": aws.ToString(apiObject.ReportTemplate),
	}

	if len(apiObject.Accounts) > 0 {
		tfMap["accounts"] = apiObject.Accounts
	}

	if len(apiObject.FrameworkArns) > 0 {
		tfMap["framework_arns"] = apiObject.FrameworkArns
	}

	tfMap["number_of_frameworks"] = apiObject.NumberOfFrameworks

	if len(apiObject.OrganizationUnits) > 0 {
		tfMap["organization_units"] = apiObject.OrganizationUnits
	}

	if len(apiObject.Regions) > 0 {
		tfMap["regions"] = apiObject.Regions
	}

	return []any{tfMap}
}
