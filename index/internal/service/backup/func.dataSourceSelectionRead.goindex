package github.com/hashicorp/terraform-provider-aws/internal/service/backup
import (
	"context"

	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func dataSourceSelectionRead(ctx context.Context, d *schema.ResourceData, meta any) diag.Diagnostics {
	var diags diag.Diagnostics
	conn := meta.(*conns.AWSClient).BackupClient(ctx)

	planID, selectionID := d.Get("plan_id").(string), d.Get("selection_id").(string)
	output, err := findSelectionByTwoPartKey(ctx, conn, planID, selectionID)

	if err != nil {
		return sdkdiag.AppendErrorf(diags, "reading Backup Selection (%s): %s", selectionID, err)
	}

	d.SetId(selectionID)
	d.Set(names.AttrIAMRoleARN, output.IamRoleArn)
	d.Set(names.AttrName, output.SelectionName)
	d.Set(names.AttrResources, output.Resources)

	return diags
}
