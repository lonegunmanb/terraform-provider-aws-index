package github.com/hashicorp/terraform-provider-aws/internal/service/backup
import (
	"context"
	"fmt"
	"strings"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/backup"
	awstypes "github.com/aws/aws-sdk-go-v2/service/backup/types"
	"github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
	"github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
	"github.com/hashicorp/terraform-plugin-framework-validators/resourcevalidator"
	"github.com/hashicorp/terraform-plugin-framework-validators/setvalidator"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/path"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/int64planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/mapplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/setplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	sdkid "github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/fwdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwflex "github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/framework/validators"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (r *restoreTestingSelectionResource) Create(ctx context.Context, request resource.CreateRequest, response *resource.CreateResponse) {
	var data restoreTestingSelectionResourceModel
	response.Diagnostics.Append(request.Plan.Get(ctx, &data)...)
	if response.Diagnostics.HasError() {
		return
	}

	conn := r.Meta().BackupClient(ctx)

	restoreTestingPlanName := data.RestoreTestingPlanName.ValueString()
	name := data.RestoreTestingSelectionName.ValueString()
	input := &backup.CreateRestoreTestingSelectionInput{
		CreatorRequestId:        aws.String(sdkid.UniqueId()),
		RestoreTestingPlanName:  aws.String(restoreTestingPlanName),
		RestoreTestingSelection: &awstypes.RestoreTestingSelectionForCreate{},
	}
	response.Diagnostics.Append(fwflex.Expand(ctx, data, input.RestoreTestingSelection)...)
	if response.Diagnostics.HasError() {
		return
	}

	_, err := conn.CreateRestoreTestingSelection(ctx, input)

	if err != nil {
		response.Diagnostics.AddError(fmt.Sprintf("creating Backup Restore Testing Selection (%s)", name), err.Error())

		return
	}

	// Set values for unknowns.
	restoreTestingSelection, err := findRestoreTestingSelectionByTwoPartKey(ctx, conn, restoreTestingPlanName, name)

	if err != nil {
		response.Diagnostics.AddError(fmt.Sprintf("reading Backup Restore Testing Selection (%s)", name), err.Error())

		return
	}

	if v := restoreTestingSelection.ProtectedResourceConditions; v != nil {
		// The default is
		//
		// "ProtectedResourceConditions": {
		// 	"StringEquals": [],
		// 	"StringNotEquals": []
		// },
		if len(v.StringEquals) == 0 {
			v.StringEquals = nil
		}
		if len(v.StringNotEquals) == 0 {
			v.StringNotEquals = nil
		}
		if v.StringEquals == nil && v.StringNotEquals == nil {
			restoreTestingSelection.ProtectedResourceConditions = nil
		}
	}

	response.Diagnostics.Append(fwflex.Flatten(ctx, restoreTestingSelection, &data)...)
	if response.Diagnostics.HasError() {
		return
	}

	response.Diagnostics.Append(response.State.Set(ctx, &data)...)
}
