package github.com/hashicorp/terraform-provider-aws/internal/service/backup
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/backup"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) FrameworkResources(ctx context.Context) []*inttypes.ServicePackageFrameworkResource {
	return []*inttypes.ServicePackageFrameworkResource{
		{
			Factory:  newLogicallyAirGappedVaultResource,
			TypeName: "aws_backup_logically_air_gapped_vault",
			Name:     "Logically Air Gapped Vault",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newRestoreTestingPlanResource,
			TypeName: "aws_backup_restore_testing_plan",
			Name:     "Restore Testing Plan",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newRestoreTestingSelectionResource,
			TypeName: "aws_backup_restore_testing_selection",
			Name:     "Restore Testing Plan Selection",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
	}
}
