package github.com/hashicorp/terraform-provider-aws/internal/service/backup
import (
	"context"
	"fmt"
	"log"
	"strings"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/backup"
	awstypes "github.com/aws/aws-sdk-go-v2/service/backup/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandConditions(tfList []any) *awstypes.Conditions {
	apiObject := &awstypes.Conditions{}

	for _, tfMapRaw := range tfList {
		tfMap := tfMapRaw.(map[string]any)

		if v := expandConditionParameters(tfMap["string_equals"].(*schema.Set).List()); len(v) > 0 {
			apiObject.StringEquals = v
		}
		if v := expandConditionParameters(tfMap["string_not_equals"].(*schema.Set).List()); len(v) > 0 {
			apiObject.StringNotEquals = v
		}
		if v := expandConditionParameters(tfMap["string_like"].(*schema.Set).List()); len(v) > 0 {
			apiObject.StringLike = v
		}
		if v := expandConditionParameters(tfMap["string_not_like"].(*schema.Set).List()); len(v) > 0 {
			apiObject.StringNotLike = v
		}
	}

	return apiObject
}
