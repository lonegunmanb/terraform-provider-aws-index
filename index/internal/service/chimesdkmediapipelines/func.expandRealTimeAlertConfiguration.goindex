package github.com/hashicorp/terraform-provider-aws/internal/service/chimesdkmediapipelines
import (
	"context"
	"errors"
	"log"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/chimesdkmediapipelines"
	awstypes "github.com/aws/aws-sdk-go-v2/service/chimesdkmediapipelines/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandRealTimeAlertConfiguration(inputConfiguration map[string]any) (*awstypes.RealTimeAlertConfiguration, error) {
	apiConfiguration := &awstypes.RealTimeAlertConfiguration{
		Disabled: inputConfiguration["disabled"].(bool),
	}
	if inputRules, ok := inputConfiguration["rules"].([]any); ok && len(inputRules) > 0 {
		rules := make([]awstypes.RealTimeAlertRule, 0, len(inputRules))
		for _, inputRule := range inputRules {
			rule, err := expandRealTimeAlertRule(inputRule)
			if err != nil {
				return apiConfiguration, err
			}
			rules = append(rules, rule)
		}
		apiConfiguration.Rules = rules
	}
	return apiConfiguration, nil
}
