package github.com/hashicorp/terraform-provider-aws/internal/service/transfer
import (
	"context"
	"log"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/transfer"
	awstypes "github.com/aws/aws-sdk-go-v2/service/transfer/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenAs2ConnectorConfig(apiObject *awstypes.As2ConnectorConfig) []any {
	if apiObject == nil {
		return nil
	}

	tfMap := map[string]any{
		"compression":           apiObject.Compression,
		"encryption_algorithm":  apiObject.EncryptionAlgorithm,
		"mdn_response":          apiObject.MdnResponse,
		"mdn_signing_algorithm": apiObject.MdnSigningAlgorithm,
		"signing_algorithm":     apiObject.SigningAlgorithm,
	}

	if v := apiObject.LocalProfileId; v != nil {
		tfMap["local_profile_id"] = aws.ToString(v)
	}

	if v := apiObject.MessageSubject; v != nil {
		tfMap["message_subject"] = aws.ToString(v)
	}

	if v := apiObject.PartnerProfileId; v != nil {
		tfMap["partner_profile_id"] = aws.ToString(v)
	}

	return []any{tfMap}
}
