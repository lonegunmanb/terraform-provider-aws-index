package github.com/hashicorp/terraform-provider-aws/internal/service/cloudsearch
import (
	"context"
	"fmt"
	"log"
	"strconv"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cloudsearch"
	"github.com/aws/aws-sdk-go-v2/service/cloudsearch/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func defineIndexFields(ctx context.Context, conn *cloudsearch.Client, domainName string, tfList []any) error {
	// Define index fields with source fields after those without.
	for _, defineWhenSourceFieldsConfigured := range []bool{false, true} {
		for _, tfMapRaw := range tfList {
			tfMap, ok := tfMapRaw.(map[string]any)

			if !ok {
				continue
			}

			apiObject, sourceFieldsConfigured, err := expandIndexField(tfMap)

			if err != nil {
				return err
			}

			if apiObject == nil {
				continue
			}

			if sourceFieldsConfigured && !defineWhenSourceFieldsConfigured {
				continue
			}

			if !sourceFieldsConfigured && defineWhenSourceFieldsConfigured {
				continue
			}

			input := &cloudsearch.DefineIndexFieldInput{
				DomainName: aws.String(domainName),
				IndexField: apiObject,
			}

			_, err = conn.DefineIndexField(ctx, input)

			if err != nil {
				return fmt.Errorf("defining CloudSearch Domain (%s) index field (%s): %w", domainName, aws.ToString(apiObject.IndexFieldName), err)
			}
		}
	}

	return nil
}
