package github.com/hashicorp/terraform-provider-aws/internal/service/lakeformation
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/lakeformation"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) FrameworkResources(ctx context.Context) []*inttypes.ServicePackageFrameworkResource {
	return []*inttypes.ServicePackageFrameworkResource{
		{
			Factory:  newDataCellsFilterResource,
			TypeName: "aws_lakeformation_data_cells_filter",
			Name:     "Data Cells Filter",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newLFTagExpressionResource,
			TypeName: "aws_lakeformation_lf_tag_expression",
			Name:     "LF Tag Expression",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newOptInResource,
			TypeName: "aws_lakeformation_opt_in",
			Name:     "Opt In",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newResourceLFTagResource,
			TypeName: "aws_lakeformation_resource_lf_tag",
			Name:     "Resource LF Tag",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
	}
}
