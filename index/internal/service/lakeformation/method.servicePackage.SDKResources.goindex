package github.com/hashicorp/terraform-provider-aws/internal/service/lakeformation
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/lakeformation"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) SDKResources(ctx context.Context) []*inttypes.ServicePackageSDKResource {
	return []*inttypes.ServicePackageSDKResource{
		{
			Factory:  ResourceDataLakeSettings,
			TypeName: "aws_lakeformation_data_lake_settings",
			Name:     "Data Lake Settings",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  ResourceLFTag,
			TypeName: "aws_lakeformation_lf_tag",
			Name:     "LF Tag",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  ResourcePermissions,
			TypeName: "aws_lakeformation_permissions",
			Name:     "Permissions",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  ResourceResource,
			TypeName: "aws_lakeformation_resource",
			Name:     "Resource",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  ResourceResourceLFTags,
			TypeName: "aws_lakeformation_resource_lf_tags",
			Name:     "Resource LF Tags",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
	}
}
