package github.com/hashicorp/terraform-provider-aws/internal/service/notifications
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/service/notifications"
	"github.com/hashicorp/aws-sdk-go-base/v2/endpoints"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) FrameworkResources(ctx context.Context) []*inttypes.ServicePackageFrameworkResource {
	return []*inttypes.ServicePackageFrameworkResource{
		{
			Factory:  newChannelAssociationResource,
			TypeName: "aws_notifications_channel_association",
			Name:     "Channel Association",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  newEventRuleResource,
			TypeName: "aws_notifications_event_rule",
			Name:     "Event Rule",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  newNotificationConfigurationResource,
			TypeName: "aws_notifications_notification_configuration",
			Name:     "Notification Configuration",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region: unique.Make(inttypes.ResourceRegionDisabled()),
		},
		{
			Factory:  newNotificationHubResource,
			TypeName: "aws_notifications_notification_hub",
			Name:     "Notification Hub",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
	}
}
