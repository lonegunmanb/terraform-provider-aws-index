package github.com/hashicorp/terraform-provider-aws/internal/service/signer
import (
	"context"
	"errors"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/signer"
	"github.com/aws/aws-sdk-go-v2/service/signer/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandS3Destination(tfList []any) *types.S3Destination {
	if tfList == nil {
		return nil
	}

	tfMap, ok := tfList[0].(map[string]any)
	if !ok {
		return nil
	}

	apiObject := &types.S3Destination{}

	if _, ok := tfMap[names.AttrBucket]; ok {
		apiObject.BucketName = aws.String(tfMap[names.AttrBucket].(string))
	}

	if _, ok := tfMap[names.AttrPrefix]; ok {
		apiObject.Prefix = aws.String(tfMap[names.AttrPrefix].(string))
	}

	return apiObject
}
