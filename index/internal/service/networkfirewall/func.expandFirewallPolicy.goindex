package github.com/hashicorp/terraform-provider-aws/internal/service/networkfirewall
import (
	"context"
	"log"
	"strconv"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/networkfirewall"
	awstypes "github.com/aws/aws-sdk-go-v2/service/networkfirewall/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/customdiff"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	"github.com/hashicorp/terraform-provider-aws/internal/sdkv2/types/nullable"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandFirewallPolicy(tfList []any) *awstypes.FirewallPolicy {
	if len(tfList) == 0 || tfList[0] == nil {
		return nil
	}

	tfMap := tfList[0].(map[string]any)
	apiObject := &awstypes.FirewallPolicy{
		StatelessDefaultActions:         flex.ExpandStringValueSet(tfMap["stateless_default_actions"].(*schema.Set)),
		StatelessFragmentDefaultActions: flex.ExpandStringValueSet(tfMap["stateless_fragment_default_actions"].(*schema.Set)),
	}

	if v, ok := tfMap["policy_variables"]; ok && len(v.([]any)) > 0 && v.([]any)[0] != nil {
		apiObject.PolicyVariables = expandPolicyVariables(v.([]any)[0].(map[string]any))
	}

	if v, ok := tfMap["stateful_default_actions"].(*schema.Set); ok && v.Len() > 0 {
		apiObject.StatefulDefaultActions = flex.ExpandStringValueSet(v)
	}

	if v, ok := tfMap["stateful_engine_options"].([]any); ok && len(v) > 0 {
		apiObject.StatefulEngineOptions = expandStatefulEngineOptions(v)
	}

	if v, ok := tfMap["stateful_rule_group_reference"].(*schema.Set); ok && v.Len() > 0 {
		apiObject.StatefulRuleGroupReferences = expandStatefulRuleGroupReferences(v.List())
	}

	if v, ok := tfMap["stateless_custom_action"].(*schema.Set); ok && v.Len() > 0 {
		apiObject.StatelessCustomActions = expandCustomActions(v.List())
	}

	if v, ok := tfMap["stateless_rule_group_reference"].(*schema.Set); ok && v.Len() > 0 {
		apiObject.StatelessRuleGroupReferences = expandStatelessRuleGroupReferences(v.List())
	}

	if v, ok := tfMap["tls_inspection_configuration_arn"].(string); ok && v != "" {
		apiObject.TLSInspectionConfigurationArn = aws.String(v)
	}

	return apiObject
}
