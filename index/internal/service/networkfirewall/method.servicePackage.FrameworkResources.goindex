package github.com/hashicorp/terraform-provider-aws/internal/service/networkfirewall
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/networkfirewall"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) FrameworkResources(ctx context.Context) []*inttypes.ServicePackageFrameworkResource {
	return []*inttypes.ServicePackageFrameworkResource{
		{
			Factory:  newFirewallTransitGatewayAttachmentAccepterResource,
			TypeName: "aws_networkfirewall_firewall_transit_gateway_attachment_accepter",
			Name:     "Firewall Transit Gateway Attachment Accepter",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newTLSInspectionConfigurationResource,
			TypeName: "aws_networkfirewall_tls_inspection_configuration",
			Name:     "TLS Inspection Configuration",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			}),
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
			Identity: inttypes.RegionalARNIdentity(inttypes.WithIdentityDuplicateAttrs(names.AttrID)),
			Import: inttypes.FrameworkImport{
				WrappedImport: true,
			},
		},
		{
			Factory:  newVPCEndpointAssociationResource,
			TypeName: "aws_networkfirewall_vpc_endpoint_association",
			Name:     "VPC Endpoint Association",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: "vpc_endpoint_association_arn",
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
	}
}
