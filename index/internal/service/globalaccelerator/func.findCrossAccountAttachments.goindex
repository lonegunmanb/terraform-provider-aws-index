package github.com/hashicorp/terraform-provider-aws/internal/service/globalaccelerator
import (
	"context"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/arn"
	"github.com/aws/aws-sdk-go-v2/service/globalaccelerator"
	awstypes "github.com/aws/aws-sdk-go-v2/service/globalaccelerator/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func findCrossAccountAttachments(ctx context.Context, conn *globalaccelerator.Client, endpointDescriptions []awstypes.EndpointDescription) (map[string]string, error) {
	crossAccountAttachments := map[string]string{}

	accounts := map[string]bool{}
	for _, endpointDescription := range endpointDescriptions {
		arn, err := arn.Parse(aws.ToString(endpointDescription.EndpointId))
		if err != nil {
			continue // Not an ARN => not a cross-account resource.
		}

		accountID := arn.AccountID
		if accounts[accountID] {
			continue
		}
		accounts[accountID] = true

		input := &globalaccelerator.ListCrossAccountResourcesInput{
			ResourceOwnerAwsAccountId: aws.String(accountID),
		}
		crossAccountResources, err := findCrossAccountResources(ctx, conn, input)
		if err != nil {
			return nil, err
		}

		for _, crossAccountResource := range crossAccountResources {
			crossAccountAttachments[aws.ToString(crossAccountResource.EndpointId)] = aws.ToString(crossAccountResource.AttachmentArn)
		}
	}

	return crossAccountAttachments, nil
}
