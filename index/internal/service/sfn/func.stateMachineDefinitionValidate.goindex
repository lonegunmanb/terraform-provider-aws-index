package github.com/hashicorp/terraform-provider-aws/internal/service/sfn
import (
	"context"
	"errors"
	"fmt"
	"log"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/sfn"
	awstypes "github.com/aws/aws-sdk-go-v2/service/sfn/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/customdiff"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/sdkv2"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func stateMachineDefinitionValidate(ctx context.Context, d *schema.ResourceDiff, meta any) error {
	conn := meta.(*conns.AWSClient).SFNClient(ctx)

	if d.HasChange("definition") {
		definition := d.Get("definition").(string)
		if definition == "" {
			return nil
		}

		input := &sfn.ValidateStateMachineDefinitionInput{
			Definition: aws.String(definition),
			Type:       awstypes.StateMachineType(d.Get(names.AttrType).(string)),
		}

		output, err := conn.ValidateStateMachineDefinition(ctx, input)

		if err != nil {
			return fmt.Errorf("validating Step Functions State Machine definition: %w", err)
		}

		if result := output.Result; result != awstypes.ValidateStateMachineDefinitionResultCodeOk {
			errs := tfslices.ApplyToAll(output.Diagnostics, func(v awstypes.ValidateStateMachineDefinitionDiagnostic) error {
				return fmt.Errorf("%s (%s): %s", v.Severity, aws.ToString(v.Code), aws.ToString(v.Message))
			})

			return fmt.Errorf("invalid Step Functions State Machine definition: %w", errors.Join(errs...))
		}
	}

	return nil
}
