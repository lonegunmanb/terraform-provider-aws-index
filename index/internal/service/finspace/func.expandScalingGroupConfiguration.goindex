package github.com/hashicorp/terraform-provider-aws/internal/service/finspace
import (
	"context"
	"errors"
	"fmt"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/finspace"
	"github.com/aws/aws-sdk-go-v2/service/finspace/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandScalingGroupConfiguration(tfList []any) *types.KxScalingGroupConfiguration {
	if len(tfList) == 0 || tfList[0] == nil {
		return nil
	}

	tfMap := tfList[0].(map[string]any)

	a := &types.KxScalingGroupConfiguration{}

	if v, ok := tfMap["scaling_group_name"].(string); ok && v != "" {
		a.ScalingGroupName = aws.String(v)
	}

	if v, ok := tfMap["node_count"].(int); ok && v != 0 {
		a.NodeCount = aws.Int32(int32(v))
	}

	if v, ok := tfMap["memory_limit"].(int); ok && v != 0 {
		a.MemoryLimit = aws.Int32(int32(v))
	}

	if v, ok := tfMap["cpu"].(float64); ok && v != 0 {
		a.Cpu = aws.Float64(v)
	}

	if v, ok := tfMap["memory_reservation"].(int); ok && v != 0 {
		a.MemoryReservation = aws.Int32(int32(v))
	}

	return a
}
