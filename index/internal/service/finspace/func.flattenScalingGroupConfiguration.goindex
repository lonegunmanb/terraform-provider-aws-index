package github.com/hashicorp/terraform-provider-aws/internal/service/finspace
import (
	"context"
	"errors"
	"fmt"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/finspace"
	"github.com/aws/aws-sdk-go-v2/service/finspace/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenScalingGroupConfiguration(apiObject *types.KxScalingGroupConfiguration) []any {
	if apiObject == nil {
		return nil
	}

	m := map[string]any{}

	if v := apiObject.ScalingGroupName; v != nil {
		m["scaling_group_name"] = aws.ToString(v)
	}

	if v := apiObject.NodeCount; v != nil {
		m["node_count"] = aws.ToInt32(v)
	}

	if v := apiObject.MemoryLimit; v != nil {
		m["memory_limit"] = aws.ToInt32(v)
	}

	if v := apiObject.Cpu; v != nil {
		m["cpu"] = aws.ToFloat64(v)
	}

	if v := apiObject.MemoryReservation; v != nil {
		m["memory_reservation"] = aws.ToInt32(v)
	}

	return []any{m}
}
