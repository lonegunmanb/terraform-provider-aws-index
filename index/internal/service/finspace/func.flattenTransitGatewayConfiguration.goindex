package github.com/hashicorp/terraform-provider-aws/internal/service/finspace
import (
	"context"
	"errors"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/finspace"
	"github.com/aws/aws-sdk-go-v2/service/finspace/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenTransitGatewayConfiguration(apiObject *types.TransitGatewayConfiguration) []any {
	if apiObject == nil {
		return nil
	}

	m := map[string]any{}

	if v := apiObject.TransitGatewayID; v != nil {
		m[names.AttrTransitGatewayID] = aws.ToString(v)
	}

	if v := apiObject.RoutableCIDRSpace; v != nil {
		m["routable_cidr_space"] = aws.ToString(v)
	}

	if v := apiObject.AttachmentNetworkAclConfiguration; v != nil {
		m["attachment_network_acl_configuration"] = flattenAttachmentNetworkACLConfigurations(v)
	}

	return []any{m}
}
