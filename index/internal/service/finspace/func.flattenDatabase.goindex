package github.com/hashicorp/terraform-provider-aws/internal/service/finspace
import (
	"context"
	"errors"
	"fmt"
	"log"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/finspace"
	"github.com/aws/aws-sdk-go-v2/service/finspace/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenDatabase(apiObject *types.KxDatabaseConfiguration) map[string]any {
	if apiObject == nil {
		return nil
	}

	m := map[string]any{}

	if v := apiObject.DatabaseName; v != nil {
		m[names.AttrDatabaseName] = aws.ToString(v)
	}

	if v := apiObject.DataviewName; v != nil {
		m["dataview_name"] = aws.ToString(v)
	}

	if v := apiObject.CacheConfigurations; v != nil {
		m["cache_configurations"] = flattenCacheConfigurations(v)
	}

	if v := apiObject.ChangesetId; v != nil {
		m["changeset_id"] = aws.ToString(v)
	}

	return m
}
