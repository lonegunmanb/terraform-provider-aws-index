package github.com/hashicorp/terraform-provider-aws/internal/service/devopsguru
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/devopsguru"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) FrameworkResources(ctx context.Context) []*inttypes.ServicePackageFrameworkResource {
	return []*inttypes.ServicePackageFrameworkResource{
		{
			Factory:  newEventSourcesConfigResource,
			TypeName: "aws_devopsguru_event_sources_config",
			Name:     "Event Sources Config",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
			Identity: inttypes.RegionalSingletonIdentity(inttypes.WithIdentityDuplicateAttrs(names.AttrID)),
			Import: inttypes.FrameworkImport{
				WrappedImport: true,
			},
		},
		{
			Factory:  newNotificationChannelResource,
			TypeName: "aws_devopsguru_notification_channel",
			Name:     "Notification Channel",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newResourceCollectionResource,
			TypeName: "aws_devopsguru_resource_collection",
			Name:     "Resource Collection",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  newServiceIntegrationResource,
			TypeName: "aws_devopsguru_service_integration",
			Name:     "Service Integration",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
			Identity: inttypes.RegionalSingletonIdentity(inttypes.WithIdentityDuplicateAttrs(names.AttrID)),
			Import: inttypes.FrameworkImport{
				WrappedImport: true,
			},
		},
	}
}
