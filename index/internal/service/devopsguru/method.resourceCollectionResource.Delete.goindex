package github.com/hashicorp/terraform-provider-aws/internal/service/devopsguru
import (
	"context"
	"errors"

	"github.com/aws/aws-sdk-go-v2/service/devopsguru"
	awstypes "github.com/aws/aws-sdk-go-v2/service/devopsguru/types"
	"github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/listplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-provider-aws/internal/create"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	"github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (r *resourceCollectionResource) Delete(ctx context.Context, req resource.DeleteRequest, resp *resource.DeleteResponse) {
	conn := r.Meta().DevOpsGuruClient(ctx)

	var state resourceCollectionResourceModel
	resp.Diagnostics.Append(req.State.Get(ctx, &state)...)
	if resp.Diagnostics.HasError() {
		return
	}

	rc := &awstypes.UpdateResourceCollectionFilter{}
	resp.Diagnostics.Append(flex.Expand(ctx, state, rc)...)
	if resp.Diagnostics.HasError() {
		return
	}

	if !state.Tags.IsNull() {
		// Fields named "Tags" are currently hardcoded to be ignored by AutoFlex. Expanding state.Tags
		// into the request structs Tags field is a temporary workaround until the AutoFlex
		// options implementation can be merged.
		//
		// Ref: https://github.com/hashicorp/terraform-provider-aws/pull/36437
		resp.Diagnostics.Append(flex.Expand(ctx, state.Tags, &rc.Tags)...)
		if resp.Diagnostics.HasError() {
			return
		}
	}

	in := &devopsguru.UpdateResourceCollectionInput{
		Action:             awstypes.UpdateResourceCollectionActionRemove,
		ResourceCollection: rc,
	}

	_, err := conn.UpdateResourceCollection(ctx, in)
	if err != nil {
		if errs.IsA[*awstypes.ResourceNotFoundException](err) {
			return
		}
		resp.Diagnostics.AddError(
			create.ProblemStandardMessage(names.DevOpsGuru, create.ErrActionDeleting, ResNameResourceCollection, state.ID.String(), err),
			err.Error(),
		)
		return
	}
}
