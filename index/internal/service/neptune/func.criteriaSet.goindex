package github.com/hashicorp/terraform-provider-aws/internal/service/neptune
import (
	"context"
	"sort"

	"github.com/YakDriver/go-version"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/neptune"
	awstypes "github.com/aws/aws-sdk-go-v2/service/neptune/types"
	"github.com/hashicorp/go-cty/cty"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func criteriaSet(d *schema.ResourceData, args []string) bool {
	for _, arg := range args {
		val := d.GetRawConfig().GetAttr(arg)

		switch {
		case val.CanIterateElements():
			if !val.IsNull() && val.IsKnown() && val.LengthInt() > 0 {
				return true
			}
		case val.Equals(cty.True) == cty.True:
			return true

		case val.Type() == cty.String && !val.IsNull() && val.IsKnown():
			return true
		}
	}

	return false
}
