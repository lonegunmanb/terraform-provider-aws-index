package github.com/hashicorp/terraform-provider-aws/internal/service/route53resolver
import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	awstypes "github.com/aws/aws-sdk-go-v2/service/route53resolver/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func flattenFirewallRule(apiObject awstypes.FirewallRule) map[string]any {
	tfMap := map[string]any{
		names.AttrAction:          apiObject.Action,
		"block_override_dns_type": apiObject.BlockOverrideDnsType,
		"block_response":          apiObject.BlockResponse,
	}

	if apiObject.BlockOverrideDomain != nil {
		tfMap["block_override_domain"] = aws.ToString(apiObject.BlockOverrideDomain)
	}
	if apiObject.BlockOverrideTtl != nil {
		tfMap["block_override_ttl"] = aws.ToInt32(apiObject.BlockOverrideTtl)
	}
	if apiObject.CreationTime != nil {
		tfMap[names.AttrCreationTime] = aws.ToString(apiObject.CreationTime)
	}
	if apiObject.CreatorRequestId != nil {
		tfMap["creator_request_id"] = aws.ToString(apiObject.CreatorRequestId)
	}
	if apiObject.FirewallDomainListId != nil {
		tfMap["firewall_domain_list_id"] = aws.ToString(apiObject.FirewallDomainListId)
	}
	if apiObject.FirewallRuleGroupId != nil {
		tfMap["firewall_rule_group_id"] = aws.ToString(apiObject.FirewallRuleGroupId)
	}
	if apiObject.ModificationTime != nil {
		tfMap["modification_time"] = aws.ToString(apiObject.ModificationTime)
	}
	if apiObject.Name != nil {
		tfMap[names.AttrName] = aws.ToString(apiObject.Name)
	}
	if apiObject.Priority != nil {
		tfMap[names.AttrPriority] = aws.ToInt32(apiObject.Priority)
	}
	return tfMap
}
