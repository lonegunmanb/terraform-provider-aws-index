package github.com/hashicorp/terraform-provider-aws/internal/service/route53resolver
import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func dataSourceFirewallDomainListRead(ctx context.Context, d *schema.ResourceData, meta any) diag.Diagnostics {
	var diags diag.Diagnostics
	conn := meta.(*conns.AWSClient).Route53ResolverClient(ctx)

	id := d.Get("firewall_domain_list_id").(string)
	firewallDomainList, err := findFirewallDomainListByID(ctx, conn, id)

	if err != nil {
		return sdkdiag.AppendErrorf(diags, "reading Route53 Resolver Firewall Domain List (%s): %s", id, err)
	}

	d.SetId(aws.ToString(firewallDomainList.Id))
	d.Set(names.AttrARN, firewallDomainList.Arn)
	d.Set(names.AttrCreationTime, firewallDomainList.CreationTime)
	d.Set("creator_request_id", firewallDomainList.CreatorRequestId)
	d.Set("domain_count", firewallDomainList.DomainCount)
	d.Set("firewall_domain_list_id", firewallDomainList.Id)
	d.Set(names.AttrName, firewallDomainList.Name)
	d.Set("managed_owner_name", firewallDomainList.ManagedOwnerName)
	d.Set("modification_time", firewallDomainList.ModificationTime)
	d.Set(names.AttrStatus, firewallDomainList.Status)
	d.Set(names.AttrStatusMessage, firewallDomainList.StatusMessage)

	return diags
}
