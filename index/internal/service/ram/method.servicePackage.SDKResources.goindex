package github.com/hashicorp/terraform-provider-aws/internal/service/ram
import (
	"context"
	"unique"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ram"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (p *servicePackage) SDKResources(ctx context.Context) []*inttypes.ServicePackageSDKResource {
	return []*inttypes.ServicePackageSDKResource{
		{
			Factory:  resourcePrincipalAssociation,
			TypeName: "aws_ram_principal_association",
			Name:     "Principal Association",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceResourceAssociation,
			TypeName: "aws_ram_resource_association",
			Name:     "Resource Association",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceResourceShare,
			TypeName: "aws_ram_resource_share",
			Name:     "Resource Share",
			Tags: unique.Make(inttypes.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrID,
			}),
			Region: unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceResourceShareAccepter,
			TypeName: "aws_ram_resource_share_accepter",
			Name:     "Resource Share Accepter",
			Region:   unique.Make(inttypes.ResourceRegionDefault()),
		},
		{
			Factory:  resourceSharingWithOrganization,
			TypeName: "aws_ram_sharing_with_organization",
			Name:     "Sharing With Organization",
			Region:   unique.Make(inttypes.ResourceRegionDisabled()),
		},
	}
}
