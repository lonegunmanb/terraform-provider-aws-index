package github.com/hashicorp/terraform-provider-aws/internal/service/apprunner
import (
	"context"
	"fmt"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/apprunner"
	awstypes "github.com/aws/aws-sdk-go-v2/service/apprunner/types"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/fwdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	"github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	fwtypes "github.com/hashicorp/terraform-provider-aws/internal/framework/types"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func (r *defaultAutoScalingConfigurationVersionResource) Update(ctx context.Context, request resource.UpdateRequest, response *resource.UpdateResponse) {
	var new defaultAutoScalingConfigurationVersionResourceModel
	response.Diagnostics.Append(request.Plan.Get(ctx, &new)...)
	if response.Diagnostics.HasError() {
		return
	}

	conn := r.Meta().AppRunnerClient(ctx)

	if err := putDefaultAutoScalingConfiguration(ctx, conn, new.AutoScalingConfigurationARN.ValueString()); err != nil {
		response.Diagnostics.AddError("updating App Runner Default AutoScaling Configuration Version", err.Error())

		return
	}

	response.Diagnostics.Append(response.State.Set(ctx, &new)...)
}
