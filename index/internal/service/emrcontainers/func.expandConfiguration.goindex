package github.com/hashicorp/terraform-provider-aws/internal/service/emrcontainers
import (
	"context"
	"log"
	"time"

	"github.com/YakDriver/regexache"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/emrcontainers"
	awstypes "github.com/aws/aws-sdk-go-v2/service/emrcontainers/types"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/id"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/sdkdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/flex"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/internal/tfresource"
	"github.com/hashicorp/terraform-provider-aws/internal/verify"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func expandConfiguration(tfMap map[string]any) awstypes.Configuration {
	apiObject := awstypes.Configuration{}

	if v, ok := tfMap["classification"].(string); ok && v != "" {
		apiObject.Classification = aws.String(v)
	}

	if v, ok := tfMap["configurations"].([]any); ok && len(v) > 0 {
		apiObject.Configurations = expandConfigurations(v)
	}

	if v, ok := tfMap[names.AttrProperties].(map[string]any); ok && len(v) > 0 {
		apiObject.Properties = flex.ExpandStringValueMap(v)
	}

	return apiObject
}
