package github.com/hashicorp/terraform-provider-aws/internal/retry
import (
	"context"
	"errors"
	"slices"
	"time"

	"github.com/hashicorp/terraform-provider-aws/internal/backoff"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	"github.com/hashicorp/terraform-provider-aws/internal/vcr"
	"gopkg.in/dnaeon/go-vcr.v4/pkg/recorder"
)
type StateChangeConfOf[T any, S ~string] struct {
	Delay          time.Duration            // Wait this time before starting checks
	Pending        []S                      // States that are "allowed" and will continue trying
	Refresh        StateRefreshFuncOf[T, S] // Refreshes the current state
	Target         []S                      // Target state
	Timeout        time.Duration            // The amount of time to wait before timeout
	MinTimeout     time.Duration            // Smallest time to wait before refreshes
	PollInterval   time.Duration            // Override MinTimeout/backoff and only poll this often
	NotFoundChecks int                      // Number of times to allow not found (nil result from Refresh)

	// This is to work around inconsistent APIs
	ContinuousTargetOccurence int // Number of times the Target state has to occur continuously
}
