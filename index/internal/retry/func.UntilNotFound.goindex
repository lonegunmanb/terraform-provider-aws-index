package github.com/hashicorp/terraform-provider-aws/internal/retry
import (
	"context"
	"errors"
	"time"

	"github.com/hashicorp/terraform-provider-aws/internal/backoff"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
)
func (o operation[T]) UntilNotFound() operation[T] {
	predicate := func(_ T, err error) (bool, error) {
		if err == nil {
			return true, nil
		}

		if NotFound(err) { // nosemgrep:ci.semgrep.errors.notfound-without-err-checks
			return false, nil
		}

		return false, err
	}

	transform := func(err error) error {
		if errors.Is(err, inttypes.ErrDeadlineExceeded) || errors.Is(err, context.DeadlineExceeded) {
			return ErrFoundResource
		}

		return err
	}

	return o.If(predicate).withTransformRunError(transform)
}
