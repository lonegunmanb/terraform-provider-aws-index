package github.com/hashicorp/terraform-provider-aws/internal/retry
import (
	"context"
	"errors"
	"time"

	"github.com/hashicorp/terraform-provider-aws/internal/backoff"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
)
func (op opFunc[T]) UntilNotFound() runFunc[T] {
	predicate := func(_ T, err error) (bool, error) {
		if err == nil {
			return true, nil
		}

		if NotFound(err) { // nosemgrep:ci.semgrep.errors.notfound-without-err-checks
			return false, nil
		}

		return false, err
	}

	return func(ctx context.Context, timeout time.Duration, opts ...backoff.Option) (T, error) {
		t, err := op.If(predicate)(ctx, timeout, opts...)

		if TimedOut(err) {
			return t, ErrFoundResource
		}

		return t, err
	}
}
