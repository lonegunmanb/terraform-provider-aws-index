package github.com/hashicorp/terraform-provider-aws/internal/types
import (
	"context"
	"slices"
	"unique"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/ephemeral"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/tfsdk"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func RegionalParameterizedIdentity(attributes []IdentityAttribute, opts ...IdentityOptsFunc) Identity {
	baseAttributes := []IdentityAttribute{
		StringIdentityAttribute("account_id", false),
		StringIdentityAttribute("region", false),
	}
	baseAttributes = slices.Grow(baseAttributes, len(attributes))
	identity := Identity{
		Attributes: append(baseAttributes, attributes...),
	}
	if len(attributes) == 1 {
		identity.IDAttrShadowsAttr = attributes[0].Name()
	}

	for _, opt := range opts {
		opt(&identity)
	}

	return identity
}
