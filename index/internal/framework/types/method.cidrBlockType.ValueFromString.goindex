package github.com/hashicorp/terraform-provider-aws/internal/framework/types
import (
	"context"
	"fmt"

	"github.com/hashicorp/terraform-plugin-framework/attr"
	"github.com/hashicorp/terraform-plugin-framework/attr/xattr"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
	"github.com/hashicorp/terraform-plugin-go/tftypes"
	itypes "github.com/hashicorp/terraform-provider-aws/internal/types"
)
func (t cidrBlockType) ValueFromString(_ context.Context, in types.String) (basetypes.StringValuable, diag.Diagnostics) {
	var diags diag.Diagnostics

	if in.IsNull() {
		return CIDRBlockNull(), diags
	}
	if in.IsUnknown() {
		return CIDRBlockUnknown(), diags
	}

	valueString := in.ValueString()
	if err := itypes.ValidateCIDRBlock(valueString); err != nil {
		return CIDRBlockUnknown(), diags // Must not return validation errors
	}

	return CIDRBlockValue(valueString), diags
}
