package github.com/hashicorp/terraform-provider-aws/internal/framework/types
import (
	"context"
	"fmt"

	"github.com/hashicorp/terraform-plugin-framework/attr"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
	"github.com/hashicorp/terraform-plugin-go/tftypes"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/fwdiag"
)
func (v SetNestedObjectValueOf[T]) SetSemanticEquals(ctx context.Context, newValuable basetypes.SetValuable) (bool, diag.Diagnostics) {
	var diags diag.Diagnostics

	// returning false will fall back to framework defined semantic equality checks
	if v.semanticEqualityFunc == nil {
		return false, diags
	}

	newValue, ok := newValuable.(SetNestedObjectValueOf[T])
	if !ok {
		diags.AddError(
			"SetSemanticEquals",
			fmt.Sprintf("unexpected value type of %T", newValuable),
		)
		return false, diags
	}

	return v.semanticEqualityFunc(ctx, v, newValue)
}
