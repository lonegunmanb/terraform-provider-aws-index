package github.com/hashicorp/terraform-provider-aws/internal/framework/types
import (
	"context"
	"fmt"
	"slices"

	"github.com/hashicorp/terraform-plugin-framework/attr"
	"github.com/hashicorp/terraform-plugin-framework/attr/xattr"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/path"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
	"github.com/hashicorp/terraform-plugin-go/tftypes"
	"github.com/hashicorp/terraform-provider-aws/internal/enum"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/fwdiag"
)
func validateStringEnumSlice[T enum.Valueser[T]](ctx context.Context, path path.Path, values []attr.Value) diag.Diagnostics {
	var diags diag.Diagnostics
	for index, enumVal := range values {
		val, ok := enumVal.(StringEnum[T])
		if !ok {
			diags.AddAttributeError(
				path,
				"Invalid String Enum Type",
				fmt.Sprintf("Expected type: %v, got: %v", StringEnum[T]{}.Type(ctx), enumVal.Type(ctx)),
			)

			return diags
		}

		if val.IsNull() || val.IsUnknown() {
			continue
		}

		if !slices.Contains(val.ValueEnum().Values(), val.ValueEnum()) {
			parentPath := fmt.Sprintf("%v[%d]", path, index)
			diags.AddAttributeError(
				path,
				"Invalid String Enum Value",
				fmt.Sprintf("Value [%s] at attribute %v is not a valid enum value. Valid values are: %s",
					val.ValueString(), parentPath, val.ValueEnum().Values()),
			)
		}
	}
	return diags
}
