package github.com/hashicorp/terraform-provider-aws/internal/provider/sdkv2/importer
import (
	"context"
	"fmt"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func RegionalSingleParameterized(ctx context.Context, rd *schema.ResourceData, attrName string, client AWSClient) error {
	if rd.Id() != "" {
		importID := rd.Id()
		if attrName != names.AttrID {
			rd.Set(attrName, importID)
		}

		return nil
	}

	identity, err := rd.Identity()
	if err != nil {
		return err
	}

	if err := validateAccountID(identity, client.AccountID(ctx)); err != nil {
		return err
	}

	if err := setRegion(ctx, identity, rd, client); err != nil {
		return err
	}

	valRaw, ok := identity.GetOk(attrName)
	if !ok {
		return fmt.Errorf("identity attribute %q is required", attrName)
	}
	val, ok := valRaw.(string)
	if !ok {
		return fmt.Errorf("identity attribute %q: expected string, got %T", attrName, valRaw)
	}
	setAttribute(rd, attrName, val)

	if attrName != names.AttrID {
		rd.SetId(val)
	}

	return nil
}
