package github.com/hashicorp/terraform-provider-aws/internal/provider
import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/providerserver"
	"github.com/hashicorp/terraform-plugin-go/tfprotov5"
	"github.com/hashicorp/terraform-plugin-mux/tf5muxserver"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/internal"
	"github.com/hashicorp/terraform-provider-aws/internal/provider/framework"
	"github.com/hashicorp/terraform-provider-aws/internal/provider/sdkv2"
)
func ProtoV5ProviderServerFactory(ctx context.Context) (func() tfprotov5.ProviderServer, *schema.Provider, error) {
	internal.RegisterSmarterrFS()

	primary, err := sdkv2.NewProvider(ctx)

	if err != nil {
		return nil, nil, err
	}

	secondary, err := framework.NewProvider(ctx, primary)

	if err != nil {
		return nil, nil, err
	}

	servers := []func() tfprotov5.ProviderServer{
		primary.GRPCProvider,
		providerserver.NewProtocol5(secondary),
	}

	muxServer, err := tf5muxserver.NewMuxServer(ctx, servers...)

	if err != nil {
		return nil, nil, err
	}

	return muxServer.ProviderServer, primary, nil
}
