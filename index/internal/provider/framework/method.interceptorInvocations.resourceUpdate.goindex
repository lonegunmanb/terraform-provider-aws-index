package github.com/hashicorp/terraform-provider-aws/internal/provider/framework
import (
	"context"
	"slices"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/ephemeral"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	tfslices "github.com/hashicorp/terraform-provider-aws/internal/slices"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
)
func (s interceptorInvocations) resourceUpdate() []interceptorFunc[resource.UpdateRequest, resource.UpdateResponse] {
	return tfslices.ApplyToAll(tfslices.Filter(s, func(e any) bool {
		_, ok := e.(resourceCRUDInterceptor)
		return ok
	}), func(e any) interceptorFunc[resource.UpdateRequest, resource.UpdateResponse] {
		return e.(resourceCRUDInterceptor).update
	})
}
