package github.com/hashicorp/terraform-provider-aws/internal/provider/framework
import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/action"
	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/ephemeral"
	"github.com/hashicorp/terraform-plugin-framework/list"
	"github.com/hashicorp/terraform-plugin-framework/path"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/errs/fwdiag"
	"github.com/hashicorp/terraform-provider-aws/internal/framework"
	fwflex "github.com/hashicorp/terraform-provider-aws/internal/framework/flex"
	tfiter "github.com/hashicorp/terraform-provider-aws/internal/iter"
	"github.com/hashicorp/terraform-provider-aws/internal/logging"
	"github.com/hashicorp/terraform-provider-aws/internal/provider/framework/identity"
	"github.com/hashicorp/terraform-provider-aws/internal/provider/framework/importer"
	"github.com/hashicorp/terraform-provider-aws/internal/provider/framework/listresource"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	inttypes "github.com/hashicorp/terraform-provider-aws/internal/types"
	tfunique "github.com/hashicorp/terraform-provider-aws/internal/unique"
	"github.com/hashicorp/terraform-provider-aws/names"
)
func newWrappedListResourceFramework(spec *inttypes.ServicePackageFrameworkListResource, servicePackageName string) list.ListResourceWithConfigure {
	var interceptors interceptorInvocations

	var isRegionOverrideEnabled bool
	if regionSpec := spec.Region; !tfunique.IsHandleNil(regionSpec) && regionSpec.Value().IsOverrideEnabled {
		isRegionOverrideEnabled = true
	}

	if isRegionOverrideEnabled {
		interceptors = append(interceptors, listResourceInjectRegionAttribute())
		// TODO: validate region in partition, needs tweaked error message
	}

	inner := spec.Factory()

	if v, ok := inner.(framework.Identityer); ok {
		v.SetIdentitySpec(spec.Identity)
	}

	if v, ok := inner.(framework.Lister); ok {
		if isRegionOverrideEnabled {
			v.AppendResultInterceptor(listresource.SetRegionInterceptor())
		}

		v.AppendResultInterceptor(listresource.IdentityInterceptor(spec.Identity.Attributes))

		if !tfunique.IsHandleNil(spec.Tags) {
			v.AppendResultInterceptor(listresource.TagsInterceptor(spec.Tags))
		}
	}

	return &wrappedListResourceFramework{
		inner:              inner,
		servicePackageName: servicePackageName,
		spec:               spec,
		interceptors:       interceptors,
	}
}
