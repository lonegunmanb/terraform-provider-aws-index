package github.com/hashicorp/terraform-provider-aws/internal/tags
import (
	"context"
	"fmt"

	"github.com/hashicorp/terraform-plugin-framework/attr"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
	"github.com/hashicorp/terraform-plugin-go/tftypes"
)
func (v Map) MapSemanticEquals(ctx context.Context, oValuable basetypes.MapValuable) (bool, diag.Diagnostics) {
	var diags diag.Diagnostics

	o, ok := oValuable.(Map)
	if !ok {
		return false, diags
	}

	elements := v.Elements()
	oElements := o.Elements()

	if len(elements) != len(oElements) {
		return false, diags
	}

	for k, v := range elements {
		ov := oElements[k]

		if ov == nil {
			return false, diags
		}

		if v.IsNull() {
			if !ov.IsUnknown() && !ov.IsNull() {
				sv := ov.(types.String)
				s := sv.ValueString()
				if s != "" {
					return false, diags
				}
			}
		} else if ov.IsNull() {
			if !v.IsUnknown() && !v.IsNull() {
				sv := v.(types.String)
				s := sv.ValueString()
				if s != "" {
					return false, diags
				}
			}
		} else if !v.Equal(ov) {
			return false, diags
		}
	}

	return true, diags
}
